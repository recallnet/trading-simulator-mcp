{"result":[{"scriptId":"3","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9162,"endOffset":9233,"count":89}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9238,"endOffset":9287,"count":487}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9292,"endOffset":9337,"count":76}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10902,"endOffset":10969,"count":77}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":11627,"endOffset":11655,"count":549}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":11799,"endOffset":11827,"count":1}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":11956,"endOffset":11984,"count":226}],"isBlockCoverage":false},{"functionName":"SafeWeakSet","ranges":[{"startOffset":12128,"endOffset":12156,"count":1}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12408,"endOffset":12464,"count":2}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":12617,"endOffset":12655,"count":82}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14944,"endOffset":15500,"count":27}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14979,"endOffset":15499,"count":27}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15370,"endOffset":15479,"count":30}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15842,"endOffset":16295,"count":38}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15877,"endOffset":16294,"count":38}],"isBlockCoverage":false},{"functionName":"onFulfilled","ranges":[{"startOffset":16009,"endOffset":16086,"count":38}],"isBlockCoverage":false},{"functionName":"hardenRegExp","ranges":[{"startOffset":19268,"endOffset":21375,"count":3}],"isBlockCoverage":false}]},{"scriptId":"4","url":"node:internal/per_context/domexception","functions":[{"functionName":"DOMException","ranges":[{"startOffset":1102,"endOffset":1728,"count":1}],"isBlockCoverage":false}]},{"scriptId":"5","url":"node:internal/per_context/messageport","functions":[{"functionName":"","ranges":[{"startOffset":407,"endOffset":993,"count":2}],"isBlockCoverage":false}]},{"scriptId":"6","url":"node:internal/bootstrap/realm","functions":[{"functionName":"binding","ranges":[{"startOffset":4681,"endOffset":5523,"count":1}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":6003,"endOffset":6265,"count":99}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6531,"endOffset":6685,"count":222}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9498,"endOffset":9573,"count":284}],"isBlockCoverage":false},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9584,"endOffset":9678,"count":990}],"isBlockCoverage":false},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9689,"endOffset":10034,"count":671}],"isBlockCoverage":false},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10297,"endOffset":10406,"count":1}],"isBlockCoverage":false},{"functionName":"getSchemeOnlyModuleNames","ranges":[{"startOffset":10417,"endOffset":10492,"count":1}],"isBlockCoverage":false},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10564,"endOffset":11227,"count":138}],"isBlockCoverage":false},{"functionName":"getESMFacade","ranges":[{"startOffset":11231,"endOffset":11865,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11602,"endOffset":11705,"count":5}],"isBlockCoverage":false},{"functionName":"syncExports","ranges":[{"startOffset":12161,"endOffset":12505,"count":5}],"isBlockCoverage":false},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12509,"endOffset":13331,"count":1060}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13526,"endOffset":13891,"count":926}],"isBlockCoverage":false}]},{"scriptId":"7","url":"node:internal/errors","functions":[{"functionName":"defaultPrepareStackTrace","ranges":[{"startOffset":2323,"endOffset":2790,"count":1}],"isBlockCoverage":false},{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2792,"endOffset":2883,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTraceCallback","ranges":[{"startOffset":3709,"endOffset":4840,"count":1}],"isBlockCoverage":false},{"functionName":"ErrorPrepareStackTrace","ranges":[{"startOffset":4905,"endOffset":5004,"count":1}],"isBlockCoverage":false},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":6863,"endOffset":7370,"count":3}],"isBlockCoverage":false},{"functionName":"HideStackFramesError","ranges":[{"startOffset":11466,"endOffset":11730,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12941,"endOffset":13622,"count":1}],"isBlockCoverage":false},{"functionName":"NodeError","ranges":[{"startOffset":12972,"endOffset":13255,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13402,"endOffset":13458,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13468,"endOffset":13523,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":13533,"endOffset":13614,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":14678,"endOffset":14975,"count":7}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":14711,"endOffset":14917,"count":6392}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":16360,"endOffset":17122,"count":1}],"isBlockCoverage":false},{"functionName":"AbortError","ranges":[{"startOffset":27006,"endOffset":27315,"count":1}],"isBlockCoverage":false},{"functionName":"determineSpecificType","ranges":[{"startOffset":27883,"endOffset":29514,"count":1}],"isBlockCoverage":false},{"functionName":"formatList","ranges":[{"startOffset":29836,"endOffset":30217,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44709,"endOffset":46830,"count":1}],"isBlockCoverage":false}]},{"scriptId":"8","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":419}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3830,"endOffset":3880,"count":91}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3886,"endOffset":3944,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4086,"endOffset":4122,"count":3}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4128,"endOffset":4547,"count":3}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6488,"endOffset":6741,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8527,"endOffset":8689,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8791,"endOffset":8987,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13174,"endOffset":13224,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14332,"endOffset":14368,"count":270}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15238,"endOffset":15273,"count":20}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4385,"endOffset":4410,"count":1}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5890,"endOffset":6231,"count":308}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":6337,"endOffset":7383,"count":51}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":8125,"endOffset":8431,"count":51}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":9006,"endOffset":9187,"count":257}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":9808,"endOffset":9974,"count":51}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":9976,"endOffset":10143,"count":51}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":11292,"endOffset":12031,"count":51}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":12888,"endOffset":13093,"count":14}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":13095,"endOffset":13166,"count":64}],"isBlockCoverage":false},{"functionName":"processImmediate","ranges":[{"startOffset":13480,"endOffset":15563,"count":257}],"isBlockCoverage":false},{"functionName":"processTimers","ranges":[{"startOffset":15568,"endOffset":16058,"count":1}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":19028,"endOffset":19350,"count":257}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":19354,"endOffset":19620,"count":257}],"isBlockCoverage":false}]},{"scriptId":"11","url":"node:internal/async_hooks","functions":[{"functionName":"useDomainTrampoline","ranges":[{"startOffset":5108,"endOffset":5162,"count":1}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":14549,"endOffset":14619,"count":397}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14994,"endOffset":15284,"count":397}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":16096,"endOffset":16159,"count":1829}],"isBlockCoverage":false},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16161,"endOffset":16220,"count":345}],"isBlockCoverage":false},{"functionName":"initHooksExist","ranges":[{"startOffset":16222,"endOffset":16277,"count":397}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16338,"endOffset":16399,"count":396}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16890,"endOffset":17066,"count":346}],"isBlockCoverage":false},{"functionName":"emitAfterScript","ranges":[{"startOffset":17069,"endOffset":17189,"count":345}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17534,"endOffset":18104,"count":346}],"isBlockCoverage":false},{"functionName":"popAsyncContext","ranges":[{"startOffset":18169,"endOffset":18780,"count":345}],"isBlockCoverage":false}]},{"scriptId":"12","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1087,"endOffset":1146,"count":241}],"isBlockCoverage":false},{"functionName":"parseFileMode","ranges":[{"startOffset":1881,"endOffset":2192,"count":9}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2438,"endOffset":2819,"count":9}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3063,"endOffset":3526,"count":17}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3757,"endOffset":4189,"count":9}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4381,"endOffset":4493,"count":3249}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4735,"endOffset":5181,"count":37}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5369,"endOffset":5702,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5513,"endOffset":5574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5898,"endOffset":6012,"count":13}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6594,"endOffset":7613,"count":345}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8567,"endOffset":8845,"count":15}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11213,"endOffset":11443,"count":34}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11548,"endOffset":11860,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12692,"endOffset":12909,"count":265}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13109,"endOffset":13225,"count":624}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14978,"endOffset":15188,"count":2}],"isBlockCoverage":false}]},{"scriptId":"13","url":"node:internal/util","functions":[{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2422,"endOffset":3071,"count":19}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2521,"endOffset":2531,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2568,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":3820,"endOffset":4874,"count":19}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4184,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5144,"endOffset":5218,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5397,"endOffset":5528,"count":234}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":7941,"endOffset":8097,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7992,"endOffset":8094,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":9072,"endOffset":9393,"count":1}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":10940,"endOffset":12995,"count":22}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":11680,"endOffset":12393,"count":0}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":16400,"endOffset":16620,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":17119,"endOffset":18052,"count":2}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17338,"endOffset":17481,"count":7}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17584,"endOffset":17780,"count":7}],"isBlockCoverage":false},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":18054,"endOffset":18954,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18266,"endOffset":18502,"count":10}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18607,"endOffset":18678,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":18956,"endOffset":19056,"count":2}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":20251,"endOffset":20441,"count":650}],"isBlockCoverage":false},{"functionName":"getLazy","ranges":[{"startOffset":22308,"endOffset":22520,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22389,"endOffset":22517,"count":1327}],"isBlockCoverage":false},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":22645,"endOffset":23322,"count":1}],"isBlockCoverage":false},{"functionName":"guessHandleType","ranges":[{"startOffset":23395,"endOffset":23492,"count":3}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23514,"endOffset":24100,"count":20}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":23631,"endOffset":23698,"count":20}],"isBlockCoverage":false},{"functionName":"incRef","ranges":[{"startOffset":23702,"endOffset":23920,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":23924,"endOffset":24052,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24056,"endOffset":24098,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":495,"endOffset":582,"count":1216}],"isBlockCoverage":false},{"functionName":"getCLIOptionsInfoFromBinding","ranges":[{"startOffset":584,"endOffset":669,"count":1}],"isBlockCoverage":false},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":671,"endOffset":766,"count":6}],"isBlockCoverage":false},{"functionName":"refreshOptions","ranges":[{"startOffset":768,"endOffset":824,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":826,"endOffset":914,"count":1216}],"isBlockCoverage":false}]},{"scriptId":"15","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":527}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":7}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/linkedlist","functions":[{"functionName":"remove","ranges":[{"startOffset":260,"endOffset":487,"count":102}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":543,"endOffset":995,"count":51}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":997,"endOffset":1057,"count":51}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":692,"endOffset":875,"count":51}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":879,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1646,"endOffset":2134,"count":51}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2138,"endOffset":2468,"count":51}],"isBlockCoverage":false}]},{"scriptId":"18","url":"node:internal/util/inspect","functions":[{"functionName":"get","ranges":[{"startOffset":11199,"endOffset":11244,"count":1}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":17234,"endOffset":17280,"count":2}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":52730,"endOffset":53518,"count":2}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":72722,"endOffset":72803,"count":1}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":72805,"endOffset":72997,"count":67}],"isBlockCoverage":false},{"functionName":"formatNumberNoColor","ranges":[{"startOffset":72999,"endOffset":73181,"count":2}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":73367,"endOffset":77391,"count":68}],"isBlockCoverage":false}]},{"scriptId":"19","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":832,"endOffset":1305,"count":1}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1199,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1287,"endOffset":1298,"count":13}],"isBlockCoverage":false},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":1379,"endOffset":1718,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1733,"endOffset":1741,"count":2000}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1862,"endOffset":2426,"count":12}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2051,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2646,"endOffset":3672,"count":12}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2677,"endOffset":2773,"count":12}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2788,"endOffset":3182,"count":12}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3212,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3300,"endOffset":3495,"count":12}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3566,"endOffset":3600,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTimerFlagsAreUpdated","ranges":[{"startOffset":9662,"endOffset":9815,"count":1043}],"isBlockCoverage":false},{"functionName":"internalStartTimer","ranges":[{"startOffset":9855,"endOffset":10164,"count":521}],"isBlockCoverage":false},{"functionName":"internalEndTimer","ranges":[{"startOffset":10202,"endOffset":10530,"count":522}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":10918,"endOffset":11416,"count":1}],"isBlockCoverage":false},{"functionName":"startTimer","ranges":[{"startOffset":11475,"endOffset":11625,"count":1}],"isBlockCoverage":false}]},{"scriptId":"21","url":"node:internal/async_context_frame","functions":[{"functionName":"current","ranges":[{"startOffset":1224,"endOffset":1236,"count":398}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1246,"endOffset":1259,"count":345}],"isBlockCoverage":false},{"functionName":"exchange","ranges":[{"startOffset":1269,"endOffset":1287,"count":346}],"isBlockCoverage":false}]},{"scriptId":"22","url":"node:events","functions":[{"functionName":"EventEmitter","ranges":[{"startOffset":6589,"endOffset":6658,"count":10}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8109,"endOffset":8187,"count":204}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8295,"endOffset":8343,"count":147}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9985,"endOffset":10653,"count":10}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12026,"endOffset":12141,"count":4}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12144,"endOffset":12293,"count":18}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13450,"endOffset":15753,"count":467}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15756,"endOffset":17672,"count":116}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17850,"endOffset":17942,"count":113}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":18229,"endOffset":18332,"count":3}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":18335,"endOffset":18599,"count":4}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":18601,"endOffset":18842,"count":12}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":19033,"endOffset":19159,"count":12}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":19769,"endOffset":21075,"count":76}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":22795,"endOffset":23190,"count":85}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":23380,"endOffset":23447,"count":85}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":24386,"endOffset":25091,"count":126}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":25343,"endOffset":25816,"count":137}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:internal/events/abort_listener","functions":[{"functionName":"addAbortListener","ranges":[{"startOffset":388,"endOffset":1270,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":770,"endOffset":786,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":1098,"endOffset":1164,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1206,"endOffset":1262,"count":1}],"isBlockCoverage":false}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":3929,"endOffset":4117,"count":2}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4133,"endOffset":4255,"count":28}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6755,"endOffset":7192,"count":27}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8213,"endOffset":8241,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8499,"endOffset":9464,"count":27}],"isBlockCoverage":false},{"functionName":"allocUnsafe","ranges":[{"startOffset":11734,"endOffset":11836,"count":19}],"isBlockCoverage":false},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12077,"endOffset":12193,"count":14}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":12514,"endOffset":12846,"count":19}],"isBlockCoverage":false},{"functionName":"fromStringFast","ranges":[{"startOffset":12848,"endOffset":13500,"count":27}],"isBlockCoverage":false},{"functionName":"createFromString","ranges":[{"startOffset":13502,"endOffset":13747,"count":14}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13749,"endOffset":14109,"count":27}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":15551,"endOffset":15605,"count":5}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15973,"endOffset":16124,"count":233}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":16190,"endOffset":17337,"count":14}],"isBlockCoverage":false},{"functionName":"base64ByteLength","ranges":[{"startOffset":17340,"endOffset":17608,"count":24}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17743,"endOffset":17807,"count":2}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17820,"endOffset":17866,"count":40}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17881,"endOffset":17977,"count":28}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19685,"endOffset":19736,"count":24}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19749,"endOffset":19815,"count":25}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":21135,"endOffset":22959,"count":65}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":24586,"endOffset":25201,"count":42}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":28580,"endOffset":29888,"count":28}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":29917,"endOffset":30034,"count":28}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":33963,"endOffset":34397,"count":16}],"isBlockCoverage":false},{"functionName":"subarray","ranges":[{"startOffset":34427,"endOffset":34730,"count":15}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":34758,"endOffset":34824,"count":1}],"isBlockCoverage":false}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26383,"endOffset":26483,"count":78}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30208,"endOffset":30514,"count":2}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":30673,"endOffset":30922,"count":2}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31508,"endOffset":31644,"count":20}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":31899,"endOffset":31971,"count":1}],"isBlockCoverage":false}]},{"scriptId":"26","url":"node:internal/worker/js_transferable","functions":[{"functionName":"markTransferMode","ranges":[{"startOffset":2587,"endOffset":2985,"count":328}],"isBlockCoverage":false}]},{"scriptId":"27","url":"node:internal/process/per_thread","functions":[{"functionName":"exit","ranges":[{"startOffset":4758,"endOffset":5754,"count":1}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7947,"endOffset":12102,"count":1}],"isBlockCoverage":false},{"functionName":"isAccepted","ranges":[{"startOffset":8583,"endOffset":8995,"count":31}],"isBlockCoverage":false},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9503,"endOffset":9565,"count":242}],"isBlockCoverage":false},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":9875,"endOffset":9951,"count":1}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":9957,"endOffset":10026,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10032,"endOffset":10105,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10111,"endOffset":10163,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10169,"endOffset":10984,"count":2}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":10990,"endOffset":11155,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11161,"endOffset":11338,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11344,"endOffset":11405,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11411,"endOffset":11574,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12292,"endOffset":12622,"count":1}],"isBlockCoverage":false}]},{"scriptId":"28","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1196,"endOffset":1282,"count":144}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1582,"endOffset":2706,"count":65}],"isBlockCoverage":false},{"functionName":"nextTick","ranges":[{"startOffset":2850,"endOffset":3780,"count":89}],"isBlockCoverage":false}]},{"scriptId":"29","url":"node:internal/process/promises","functions":[{"functionName":"","ranges":[{"startOffset":1335,"endOffset":1447,"count":10}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1482,"endOffset":1637,"count":2}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":4165,"endOffset":4255,"count":65}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":4664,"endOffset":5347,"count":2}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":6776,"endOffset":7037,"count":1}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":7075,"endOffset":7656,"count":1}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":11428,"endOffset":11979,"count":1}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":12152,"endOffset":13663,"count":64}],"isBlockCoverage":false}]},{"scriptId":"30","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3130,"endOffset":3182,"count":334}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":3186,"endOffset":3253,"count":89}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3257,"endOffset":3344,"count":89}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3348,"endOffset":3563,"count":167}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":3683,"endOffset":3730,"count":167}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3734,"endOffset":3998,"count":89}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":4002,"endOffset":4257,"count":167}],"isBlockCoverage":false}]},{"scriptId":"31","url":"node:async_hooks","functions":[{"functionName":"AsyncHook","ranges":[{"startOffset":1594,"endOffset":2428,"count":1}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":4470,"endOffset":4527,"count":1}],"isBlockCoverage":false}]},{"scriptId":"32","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1886,"endOffset":1911,"count":1}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2207,"endOffset":3391,"count":51}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":4093,"endOffset":4762,"count":51}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":5082,"endOffset":5440,"count":184}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":7384,"endOffset":7949,"count":257}],"isBlockCoverage":false}]},{"scriptId":"33","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":945,"endOffset":1275,"count":1}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":5207,"endOffset":5308,"count":1}],"isBlockCoverage":false}]},{"scriptId":"34","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":2043,"endOffset":2120,"count":3061}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":2355,"endOffset":4303,"count":156}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35624,"endOffset":35643,"count":6}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":35768,"endOffset":36872,"count":1202}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":36938,"endOffset":37551,"count":154}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":37618,"endOffset":37774,"count":415}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":37843,"endOffset":38207,"count":9}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":38297,"endOffset":40657,"count":2}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":40723,"endOffset":40799,"count":1140}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":40865,"endOffset":41541,"count":765}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":41637,"endOffset":44067,"count":195}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":44133,"endOffset":45776,"count":7}],"isBlockCoverage":false}]},{"scriptId":"35","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3595,"endOffset":4367,"count":325}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4146,"endOffset":4211,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4215,"endOffset":4290,"count":106}],"isBlockCoverage":false},{"functionName":"get hasHash","ranges":[{"startOffset":4294,"endOffset":4365,"count":106}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7237,"endOffset":20533,"count":3}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsContext","ranges":[{"startOffset":7347,"endOffset":7394,"count":0}],"isBlockCoverage":false},{"functionName":"getURLSearchParamsList","ranges":[{"startOffset":7425,"endOffset":7451,"count":0}],"isBlockCoverage":false},{"functionName":"setURLSearchParams","ranges":[{"startOffset":7478,"endOffset":7637,"count":0}],"isBlockCoverage":false},{"functionName":"URLSearchParams","ranges":[{"startOffset":7906,"endOffset":12043,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12047,"endOffset":13220,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":13224,"endOffset":13414,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":13418,"endOffset":13908,"count":11}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":13912,"endOffset":14775,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14779,"endOffset":15232,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":15236,"endOffset":15723,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":15727,"endOffset":16360,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16364,"endOffset":17492,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":17496,"endOffset":18853,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":19015,"endOffset":19222,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":19226,"endOffset":19744,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":19798,"endOffset":19996,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":20000,"endOffset":20202,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":20334,"endOffset":20531,"count":3}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":21864,"endOffset":21989,"count":520}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22326,"endOffset":33392,"count":325}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":22446,"endOffset":22934,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":22943,"endOffset":23450,"count":325}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":23461,"endOffset":23703,"count":62}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23707,"endOffset":24427,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":24431,"endOffset":24765,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":24769,"endOffset":24880,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":24884,"endOffset":25323,"count":308}],"isBlockCoverage":false},{"functionName":"#updateContext","ranges":[{"startOffset":25571,"endOffset":27216,"count":288}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":27220,"endOffset":27405,"count":60}],"isBlockCoverage":false},{"functionName":"get href","ranges":[{"startOffset":27409,"endOffset":27594,"count":248}],"isBlockCoverage":false},{"functionName":"set href","ranges":[{"startOffset":27598,"endOffset":27817,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":27835,"endOffset":28704,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":28708,"endOffset":28812,"count":106}],"isBlockCoverage":false},{"functionName":"set protocol","ranges":[{"startOffset":28816,"endOffset":28989,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":28993,"endOffset":29220,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":29224,"endOffset":29397,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":29401,"endOffset":29624,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":29628,"endOffset":29801,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":29805,"endOffset":30236,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":30240,"endOffset":30405,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":30409,"endOffset":30691,"count":45}],"isBlockCoverage":false},{"functionName":"set hostname","ranges":[{"startOffset":30695,"endOffset":30868,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":30872,"endOffset":30980,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":30984,"endOffset":31149,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":31153,"endOffset":31445,"count":106}],"isBlockCoverage":false},{"functionName":"set pathname","ranges":[{"startOffset":31449,"endOffset":31622,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":31626,"endOffset":31823,"count":0}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":31827,"endOffset":32031,"count":0}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":32049,"endOffset":32407,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":32411,"endOffset":32626,"count":0}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":32630,"endOffset":32795,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":32799,"endOffset":32982,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":32993,"endOffset":33390,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":38663,"endOffset":39223,"count":3}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":42695,"endOffset":43216,"count":45}],"isBlockCoverage":false},{"functionName":"fileURLToPath","ranges":[{"startOffset":43218,"endOffset":43630,"count":59}],"isBlockCoverage":false},{"functionName":"encodePathChars","ranges":[{"startOffset":44443,"endOffset":45292,"count":83}],"isBlockCoverage":false},{"functionName":"pathToFileURL","ranges":[{"startOffset":45294,"endOffset":47805,"count":83}],"isBlockCoverage":false},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":47807,"endOffset":47944,"count":500}],"isBlockCoverage":false}]},{"scriptId":"36","url":"node:internal/querystring","functions":[{"functionName":"encodeStr","ranges":[{"startOffset":1534,"endOffset":3253,"count":22}],"isBlockCoverage":false}]},{"scriptId":"38","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":810,"endOffset":906,"count":3}],"isBlockCoverage":false},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":1364,"endOffset":2688,"count":5}],"isBlockCoverage":false},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":2992,"endOffset":3679,"count":5}],"isBlockCoverage":false}]},{"scriptId":"39","url":"node:internal/process/warning","functions":[{"functionName":"lazyOption","ranges":[{"startOffset":705,"endOffset":1100,"count":1}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":1201,"endOffset":1323,"count":1}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1769,"endOffset":1840,"count":1}],"isBlockCoverage":false},{"functionName":"onWarning","ranges":[{"startOffset":1866,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":3535,"endOffset":4908,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4812,"endOffset":4850,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":5042,"endOffset":5785,"count":1}],"isBlockCoverage":false}]},{"scriptId":"40","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":704,"endOffset":832,"count":1}],"isBlockCoverage":false},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1607,"endOffset":1670,"count":63}],"isBlockCoverage":false},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1757,"endOffset":2261,"count":1}],"isBlockCoverage":false},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2579,"endOffset":3179,"count":62}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":4607,"endOffset":6153,"count":62}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":7207,"endOffset":7628,"count":62}],"isBlockCoverage":false},{"functionName":"lineLengths","ranges":[{"startOffset":7818,"endOffset":8614,"count":5}],"isBlockCoverage":false},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":8766,"endOffset":9046,"count":37}],"isBlockCoverage":false},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":9140,"endOffset":9811,"count":25}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":10083,"endOffset":10487,"count":62}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10161,"endOffset":10344,"count":72}],"isBlockCoverage":false}]},{"scriptId":"41","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1460,"endOffset":1485,"count":1}],"isBlockCoverage":false},{"functionName":"toRealPath","ranges":[{"startOffset":1954,"endOffset":2086,"count":236}],"isBlockCoverage":false},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":2202,"endOffset":2693,"count":1}],"isBlockCoverage":false},{"functionName":"getCjsConditions","ranges":[{"startOffset":2760,"endOffset":2887,"count":18}],"isBlockCoverage":false},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":3114,"endOffset":3494,"count":138}],"isBlockCoverage":false},{"functionName":"lazyModule","ranges":[{"startOffset":3587,"endOffset":3700,"count":188}],"isBlockCoverage":false},{"functionName":"makeRequireFunction","ranges":[{"startOffset":3923,"endOffset":5001,"count":188}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":4118,"endOffset":4176,"count":513}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4357,"endOffset":4503,"count":2}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":4648,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":5213,"endOffset":5368,"count":4}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":7870,"endOffset":8373,"count":66}],"isBlockCoverage":false},{"functionName":"urlToFilename","ranges":[{"startOffset":8444,"endOffset":8582,"count":2}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":13645,"endOffset":13761,"count":28}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":14243,"endOffset":14664,"count":34}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":14909,"endOffset":15176,"count":22}],"isBlockCoverage":false},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":15545,"endOffset":15619,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":15623,"endOffset":15700,"count":188}],"isBlockCoverage":false},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":15704,"endOffset":15778,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserESMExecution","ranges":[{"startOffset":15782,"endOffset":15859,"count":5}],"isBlockCoverage":false}]},{"scriptId":"42","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5129,"endOffset":5389,"count":3634}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":7328,"endOffset":7470,"count":4}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":10015,"endOffset":10217,"count":5}],"isBlockCoverage":false},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10219,"endOffset":10530,"count":5}],"isBlockCoverage":false},{"functionName":"tryReadSync","ranges":[{"startOffset":10532,"endOffset":10787,"count":5}],"isBlockCoverage":false},{"functionName":"readFileSync","ranges":[{"startOffset":11011,"endOffset":12621,"count":238}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":13139,"endOffset":13186,"count":7}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":14104,"endOffset":14266,"count":7}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":17834,"endOffset":18887,"count":5}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":22769,"endOffset":23902,"count":2}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":33764,"endOffset":34362,"count":1}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":37710,"endOffset":38189,"count":9}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":41332,"endOffset":41902,"count":1}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":42117,"endOffset":42413,"count":6}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":48573,"endOffset":48644,"count":1}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":60199,"endOffset":61436,"count":3}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":67573,"endOffset":67783,"count":291}],"isBlockCoverage":false},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":67788,"endOffset":68075,"count":208}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":68481,"endOffset":68556,"count":3019}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":68730,"endOffset":72421,"count":236}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":80317,"endOffset":80508,"count":4}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":83624,"endOffset":83692,"count":1}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":83749,"endOffset":83819,"count":1}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":84011,"endOffset":84087,"count":1}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":84152,"endOffset":84230,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":84925,"endOffset":85021,"count":1}],"isBlockCoverage":false}]},{"scriptId":"44","url":"node:internal/encoding","functions":[{"functionName":"validateDecoder","ranges":[{"startOffset":1415,"endOffset":1540,"count":14}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9337,"endOffset":9516,"count":2}],"isBlockCoverage":false},{"functionName":"TextDecoder","ranges":[{"startOffset":11074,"endOffset":11957,"count":2}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":12234,"endOffset":12765,"count":14}],"isBlockCoverage":false}]},{"scriptId":"45","url":"node:internal/webidl","functions":[{"functionName":"DOMString","ranges":[{"startOffset":4651,"endOffset":4781,"count":264}],"isBlockCoverage":false}]},{"scriptId":"48","url":"node:util","functions":[{"functionName":"inherits","ranges":[{"startOffset":7972,"endOffset":8610,"count":15}],"isBlockCoverage":false}]},{"scriptId":"50","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3584,"endOffset":3784,"count":473}],"isBlockCoverage":false},{"functionName":"Dirent","ranges":[{"startOffset":3803,"endOffset":3934,"count":5}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":3938,"endOffset":3999,"count":2}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":4003,"endOffset":4060,"count":5}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":5518,"endOffset":6633,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6076,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":6635,"endOffset":7416,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6935,"endOffset":7100,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7418,"endOffset":8044,"count":486}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8102,"endOffset":8635,"count":2}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":9376,"endOffset":9683,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9719,"endOffset":9776,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9808,"endOffset":9865,"count":4}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10464,"endOffset":10546,"count":28}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":11033,"endOffset":11144,"count":4}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11272,"endOffset":11337,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11343,"endOffset":11448,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11537,"endOffset":11602,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11608,"endOffset":11713,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11802,"endOffset":11867,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11873,"endOffset":11978,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12071,"endOffset":12144,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":12150,"endOffset":12259,"count":1}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":13331,"endOffset":13721,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13918,"endOffset":14148,"count":8}],"isBlockCoverage":false},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14266,"endOffset":15345,"count":7}],"isBlockCoverage":false},{"functionName":"stringToFlags","ranges":[{"startOffset":15747,"endOffset":17003,"count":241}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17980,"endOffset":18443,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18502,"endOffset":18987,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19030,"endOffset":19742,"count":500}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19787,"endOffset":19922,"count":264}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19965,"endOffset":20086,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25520,"endOffset":25725,"count":1}],"isBlockCoverage":false}]},{"scriptId":"51","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":332,"endOffset":576,"count":368}],"isBlockCoverage":false}]},{"scriptId":"54","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1663,"endOffset":1763,"count":67}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5567,"endOffset":6212,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5776,"endOffset":5871,"count":198}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5883,"endOffset":5913,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6043,"endOffset":6142,"count":3}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6154,"endOffset":6184,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7722,"endOffset":9194,"count":67}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9289,"endOffset":9699,"count":67}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9792,"endOffset":9972,"count":66}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10065,"endOffset":10245,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10403,"endOffset":11221,"count":67}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11486,"endOffset":11573,"count":66}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":11579,"endOffset":11667,"count":1}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":19002,"endOffset":19992,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19887,"endOffset":19988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"node:internal/event_target","functions":[{"functionName":"isEvent","ranges":[{"startOffset":2221,"endOffset":2293,"count":254}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2307,"endOffset":7167,"count":127}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":2611,"endOffset":3089,"count":127}],"isBlockCoverage":false},{"functionName":"initEvent","ranges":[{"startOffset":3198,"endOffset":3484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3488,"endOffset":4003,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":4007,"endOffset":4366,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":4370,"endOffset":4494,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":4535,"endOffset":4646,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":4687,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":4880,"endOffset":4995,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":5031,"endOffset":5138,"count":127}],"isBlockCoverage":false},{"functionName":"get cancelable","ranges":[{"startOffset":5175,"endOffset":5293,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":5330,"endOffset":5480,"count":127}],"isBlockCoverage":false},{"functionName":"get timeStamp","ranges":[{"startOffset":5516,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":5850,"endOffset":5997,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":6034,"endOffset":6181,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":6218,"endOffset":6330,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":6367,"endOffset":6481,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":6517,"endOffset":6674,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":6711,"endOffset":6839,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":6876,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":7038,"endOffset":7165,"count":0}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":10827,"endOffset":12291,"count":263}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12118,"endOffset":12248,"count":0}],"isBlockCoverage":false},{"functionName":"get once","ranges":[{"startOffset":12295,"endOffset":12355,"count":3}],"isBlockCoverage":false},{"functionName":"get capture","ranges":[{"startOffset":12358,"endOffset":12424,"count":1}],"isBlockCoverage":false},{"functionName":"get passive","ranges":[{"startOffset":12427,"endOffset":12493,"count":2}],"isBlockCoverage":false},{"functionName":"get isNodeStyleListener","ranges":[{"startOffset":12496,"endOffset":12576,"count":6}],"isBlockCoverage":false},{"functionName":"get weak","ranges":[{"startOffset":12579,"endOffset":12639,"count":267}],"isBlockCoverage":false},{"functionName":"get removed","ranges":[{"startOffset":12739,"endOffset":12805,"count":3}],"isBlockCoverage":false},{"functionName":"set removed","ranges":[{"startOffset":12808,"endOffset":12925,"count":264}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":13100,"endOffset":13357,"count":1}],"isBlockCoverage":false},{"functionName":"initEventTarget","ranges":[{"startOffset":13361,"endOffset":13580,"count":131}],"isBlockCoverage":false},{"functionName":"EventTarget","ranges":[{"startOffset":13823,"endOffset":13869,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13873,"endOffset":14729,"count":263}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14732,"endOffset":14783,"count":1}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":15172,"endOffset":17890,"count":263}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16517,"endOffset":16591,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":18048,"endOffset":18889,"count":1}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":19556,"endOffset":20017,"count":127}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20021,"endOffset":22317,"count":129}],"isBlockCoverage":false},{"functionName":"createEvent","ranges":[{"startOffset":20089,"endOffset":20289,"count":1}],"isBlockCoverage":false},{"functionName":"iterationCondition","ranges":[{"startOffset":20672,"endOffset":20837,"count":6}],"isBlockCoverage":false},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":23122,"endOffset":23185,"count":129}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":25127,"endOffset":25332,"count":262}],"isBlockCoverage":false},{"functionName":"validateEventListener","ranges":[{"startOffset":27197,"endOffset":27569,"count":264}],"isBlockCoverage":false},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":27571,"endOffset":28129,"count":263}],"isBlockCoverage":false},{"functionName":"isEventTarget","ranges":[{"startOffset":28434,"endOffset":28510,"count":391}],"isBlockCoverage":false},{"functionName":"isNodeEventTarget","ranges":[{"startOffset":28512,"endOffset":28596,"count":262}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":28598,"endOffset":28912,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28744,"endOffset":28904,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":29408,"endOffset":30874,"count":6}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29568,"endOffset":29704,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29803,"endOffset":30641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"node:internal/perf/utils","functions":[{"functionName":"getTimeOriginTimestamp","ranges":[{"startOffset":614,"endOffset":728,"count":1}],"isBlockCoverage":false}]},{"scriptId":"59","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1428,"endOffset":3030,"count":2}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2845,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"refreshStdoutOnSigWinch","ranges":[{"startOffset":3513,"endOffset":3576,"count":4}],"isBlockCoverage":false},{"functionName":"refreshStderrOnSigWinch","ranges":[{"startOffset":3578,"endOffset":3641,"count":4}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3643,"endOffset":3734,"count":3}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3736,"endOffset":4428,"count":13}],"isBlockCoverage":false},{"functionName":"cleanupStdout","ranges":[{"startOffset":4094,"endOffset":4272,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4430,"endOffset":5121,"count":49}],"isBlockCoverage":false},{"functionName":"cleanupStderr","ranges":[{"startOffset":4787,"endOffset":4965,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5123,"endOffset":7598,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":6462,"endOffset":6471,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7068,"endOffset":7110,"count":0}],"isBlockCoverage":false},{"functionName":"onpause","ranges":[{"startOffset":7116,"endOffset":7356,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupStdin","ranges":[{"startOffset":7371,"endOffset":7444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":433,"endOffset":504,"count":12}],"isBlockCoverage":false},{"functionName":"throwIfBuildingSnapshot","ranges":[{"startOffset":627,"endOffset":758,"count":1}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":831,"endOffset":1004,"count":1}],"isBlockCoverage":false}]},{"scriptId":"61","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":10}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":908,"count":10}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":910,"endOffset":1105,"count":2}],"isBlockCoverage":false}]},{"scriptId":"62","url":"node:url","functions":[{"functionName":"pathToFileURL","ranges":[{"startOffset":32085,"endOffset":32199,"count":3}],"isBlockCoverage":false}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":4647,"endOffset":4690,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5466,"endOffset":5525,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5614,"endOffset":5652,"count":1}],"isBlockCoverage":false},{"functionName":"wrapModuleLoad","ranges":[{"startOffset":5887,"endOffset":6314,"count":522}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":6452,"endOffset":6922,"count":1139}],"isBlockCoverage":false},{"functionName":"updateChildren","ranges":[{"startOffset":7413,"endOffset":7615,"count":394}],"isBlockCoverage":false},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":7732,"endOffset":7888,"count":712}],"isBlockCoverage":false},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":8072,"endOffset":8311,"count":31}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8258,"endOffset":8300,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":8402,"endOffset":8665,"count":197}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":9178,"endOffset":9289,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9782,"endOffset":9810,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9939,"endOffset":9975,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10614,"endOffset":10639,"count":1}],"isBlockCoverage":false},{"functionName":"initializeCJS","ranges":[{"startOffset":11359,"endOffset":12341,"count":1}],"isBlockCoverage":false},{"functionName":"tryPackage","ranges":[{"startOffset":13225,"endOffset":14423,"count":72}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":14784,"endOffset":15047,"count":524}],"isBlockCoverage":false},{"functionName":"tryExtensions","ranges":[{"startOffset":15312,"endOffset":15532,"count":262}],"isBlockCoverage":false},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":15716,"endOffset":16192,"count":194}],"isBlockCoverage":false},{"functionName":"trySelfParentPath","ranges":[{"startOffset":16315,"endOffset":16608,"count":272}],"isBlockCoverage":false},{"functionName":"trySelf","ranges":[{"startOffset":16816,"endOffset":17762,"count":272}],"isBlockCoverage":false},{"functionName":"resolveExports","ranges":[{"startOffset":18110,"endOffset":18928,"count":263}],"isBlockCoverage":false},{"functionName":"getDefaultExtensions","ranges":[{"startOffset":18990,"endOffset":20152,"count":201}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19431,"endOffset":19569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19738,"endOffset":19816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20076,"endOffset":20148,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20445,"endOffset":24525,"count":273}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26602,"endOffset":27790,"count":58}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27925,"endOffset":29212,"count":274}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":30668,"endOffset":31668,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32334,"endOffset":36212,"count":522}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36674,"endOffset":39813,"count":397}],"isBlockCoverage":false},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":40240,"endOffset":40821,"count":18}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41470,"endOffset":42335,"count":194}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42539,"endOffset":42840,"count":520}],"isBlockCoverage":false},{"functionName":"wrapSafe","ranges":[{"startOffset":46589,"endOffset":48180,"count":188}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48581,"endOffset":50957,"count":188}],"isBlockCoverage":false},{"functionName":"getMaybeCachedSource","ranges":[{"startOffset":51211,"endOffset":51616,"count":189}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54277,"endOffset":55868,"count":189}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56050,"endOffset":56297,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56479,"endOffset":56616,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58320,"endOffset":59285,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59419,"endOffset":60007,"count":1}],"isBlockCoverage":false}]},{"scriptId":"64","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"deserializePackageJSON","ranges":[{"startOffset":481,"endOffset":1961,"count":644}],"isBlockCoverage":false},{"functionName":"requiresJSONParse","ranges":[{"startOffset":1264,"endOffset":1338,"count":357}],"isBlockCoverage":false},{"functionName":"get imports","ranges":[{"startOffset":1517,"endOffset":1732,"count":0}],"isBlockCoverage":false},{"functionName":"get exports","ranges":[{"startOffset":1738,"endOffset":1953,"count":357}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2237,"endOffset":2662,"count":190}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":2875,"endOffset":3008,"count":190}],"isBlockCoverage":false},{"functionName":"getNearestParentPackageJSON","ranges":[{"startOffset":3333,"endOffset":3830,"count":454}],"isBlockCoverage":false}]},{"scriptId":"65","url":"node:diagnostics_channel","functions":[{"functionName":"set","ranges":[{"startOffset":880,"endOffset":997,"count":20}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1001,"endOffset":1049,"count":20}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3759,"endOffset":3900,"count":20}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4368,"endOffset":4412,"count":2637}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4559,"endOffset":4825,"count":20}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5383,"endOffset":5908,"count":15}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":5935,"endOffset":6208,"count":3}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6212,"endOffset":6427,"count":527}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":6920,"endOffset":7431,"count":522}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7130,"endOffset":7425,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7435,"endOffset":8621,"count":5}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":7638,"endOffset":7897,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7903,"endOffset":8128,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8166,"endOffset":8615,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9722,"endOffset":9810,"count":3}],"isBlockCoverage":false}]},{"scriptId":"66","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":1284,"endOffset":1390,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1785,"endOffset":2273,"count":1}],"isBlockCoverage":false},{"functionName":"defaultImportModuleDynamicallyForScript","ranges":[{"startOffset":7855,"endOffset":8163,"count":4}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":8796,"endOffset":10273,"count":4}],"isBlockCoverage":false},{"functionName":"initializeESM","ranges":[{"startOffset":10585,"endOffset":10971,"count":1}],"isBlockCoverage":false},{"functionName":"forceDefaultLoader","ranges":[{"startOffset":11099,"endOffset":11162,"count":1}],"isBlockCoverage":false},{"functionName":"compileSourceTextModule","ranges":[{"startOffset":12707,"endOffset":13168,"count":20}],"isBlockCoverage":false}]},{"scriptId":"67","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1085,"endOffset":1269,"count":1}],"isBlockCoverage":false},{"functionName":"prepareExecution","ranges":[{"startOffset":2449,"endOffset":4549,"count":1}],"isBlockCoverage":false},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4551,"endOffset":5286,"count":1}],"isBlockCoverage":false},{"functionName":"setupUserModules","ranges":[{"startOffset":5288,"endOffset":6036,"count":1}],"isBlockCoverage":false},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6038,"endOffset":6094,"count":1}],"isBlockCoverage":false},{"functionName":"patchProcessObject","ranges":[{"startOffset":6521,"endOffset":8886,"count":1}],"isBlockCoverage":false},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":8888,"endOffset":9169,"count":13}],"isBlockCoverage":false},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9171,"endOffset":9691,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9575,"endOffset":9677,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":9766,"endOffset":10095,"count":1}],"isBlockCoverage":false},{"functionName":"setupEventsource","ranges":[{"startOffset":10163,"endOffset":10288,"count":1}],"isBlockCoverage":false},{"functionName":"setupNavigator","ranges":[{"startOffset":10392,"endOffset":10793,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":10897,"endOffset":11849,"count":1}],"isBlockCoverage":false},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":11223,"endOffset":11399,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":11700,"endOffset":11799,"count":0}],"isBlockCoverage":false},{"functionName":"setupSQLite","ranges":[{"startOffset":11851,"endOffset":12056,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebStorage","ranges":[{"startOffset":12058,"endOffset":12463,"count":1}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":12465,"endOffset":12986,"count":1}],"isBlockCoverage":false},{"functionName":"setupCustomEvent","ranges":[{"startOffset":13092,"endOffset":13369,"count":1}],"isBlockCoverage":false},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":13371,"endOffset":13596,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReport","ranges":[{"startOffset":13598,"endOffset":13847,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13743,"endOffset":13838,"count":1}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":13849,"endOffset":14080,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":14142,"endOffset":14330,"count":1}],"isBlockCoverage":false},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":14332,"endOffset":15066,"count":1}],"isBlockCoverage":false},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":14640,"endOffset":14794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14986,"endOffset":15058,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":15068,"endOffset":15327,"count":1}],"isBlockCoverage":false},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":15329,"endOffset":15911,"count":1}],"isBlockCoverage":false},{"functionName":"setupNetworkInspection","ranges":[{"startOffset":15913,"endOffset":16226,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDeprecations","ranges":[{"startOffset":16421,"endOffset":18323,"count":1}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":18325,"endOffset":18842,"count":1}],"isBlockCoverage":false},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":18844,"endOffset":19114,"count":1}],"isBlockCoverage":false},{"functionName":"initializePermission","ranges":[{"startOffset":19116,"endOffset":21113,"count":1}],"isBlockCoverage":false},{"functionName":"binding","ranges":[{"startOffset":19282,"endOffset":19369,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20945,"endOffset":21105,"count":6}],"isBlockCoverage":false},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":21115,"endOffset":21236,"count":1}],"isBlockCoverage":false},{"functionName":"initializeESMLoader","ranges":[{"startOffset":21238,"endOffset":21821,"count":1}],"isBlockCoverage":false},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":21823,"endOffset":22021,"count":1}],"isBlockCoverage":false},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":22023,"endOffset":22210,"count":1}],"isBlockCoverage":false},{"functionName":"loadPreloadModules","ranges":[{"startOffset":22317,"endOffset":22665,"count":1}],"isBlockCoverage":false},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":22667,"endOffset":22761,"count":1}],"isBlockCoverage":false}]},{"scriptId":"69","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":718,"endOffset":1821,"count":1}],"isBlockCoverage":false},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":1982,"endOffset":3503,"count":1}],"isBlockCoverage":false},{"functionName":"asyncRunEntryPointWithESMLoader","ranges":[{"startOffset":3578,"endOffset":4309,"count":2}],"isBlockCoverage":false},{"functionName":"runEntryPointWithESMLoader","ranges":[{"startOffset":4693,"endOffset":5106,"count":1}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":5874,"endOffset":6989,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6742,"endOffset":6981,"count":1}],"isBlockCoverage":false}]},{"scriptId":"70","url":"node:internal/dns/utils","functions":[{"functionName":"initializeDns","ranges":[{"startOffset":5465,"endOffset":5946,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5886,"endOffset":5942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3731,"endOffset":3834,"count":14}],"isBlockCoverage":false}]},{"scriptId":"73","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1367,"count":1}],"isBlockCoverage":false}]},{"scriptId":"74","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35249,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":1552,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1836,"endOffset":1957,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":2119,"endOffset":2241,"count":28}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3014,"endOffset":27962,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":4069,"endOffset":4146,"count":1}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5686,"endOffset":5930,"count":1},{"startOffset":5871,"endOffset":5926,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":5934,"endOffset":6559,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForImport","ranges":[{"startOffset":7186,"endOffset":7438,"count":35}],"isBlockCoverage":true},{"functionName":"getModuleJobForRequireInImportedCJS","ranges":[{"startOffset":7938,"endOffset":8195,"count":0}],"isBlockCoverage":false},{"functionName":"#getJobFromResolveResult","ranges":[{"startOffset":8777,"endOffset":9253,"count":35},{"startOffset":9113,"endOffset":9232,"count":27}],"isBlockCoverage":true},{"functionName":"importSyncForRequire","ranges":[{"startOffset":9788,"endOffset":11762,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForRequire","ranges":[{"startOffset":12186,"endOffset":15496,"count":0}],"isBlockCoverage":false},{"functionName":"#translate","ranges":[{"startOffset":16066,"endOffset":16366,"count":27},{"startOffset":16225,"endOffset":16288,"count":0}],"isBlockCoverage":true},{"functionName":"loadAndTranslateForRequireInImportedCJS","ranges":[{"startOffset":16783,"endOffset":17703,"count":0}],"isBlockCoverage":false},{"functionName":"loadAndTranslate","ranges":[{"startOffset":18065,"endOffset":18242,"count":27}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":19054,"endOffset":20031,"count":27},{"startOffset":19303,"endOffset":19408,"count":0},{"startOffset":19536,"endOffset":19576,"count":1},{"startOffset":19631,"endOffset":19646,"count":0},{"startOffset":19648,"endOffset":19702,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":20493,"endOffset":20893,"count":5}],"isBlockCoverage":true},{"functionName":"onImport.tracePromise.__proto__","ranges":[{"startOffset":20603,"endOffset":20816,"count":5}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":20959,"endOffset":21506,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":22232,"endOffset":22553,"count":35},{"startOffset":22470,"endOffset":22552,"count":0}],"isBlockCoverage":true},{"functionName":"#cachedDefaultResolve","ranges":[{"startOffset":22915,"endOffset":23362,"count":0}],"isBlockCoverage":false},{"functionName":"#resolveAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":23787,"endOffset":24084,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":24795,"endOffset":24976,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":25188,"endOffset":25528,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":25843,"endOffset":26074,"count":27},{"startOffset":25961,"endOffset":26073,"count":0}],"isBlockCoverage":true},{"functionName":"#loadAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":26434,"endOffset":26702,"count":0}],"isBlockCoverage":false},{"functionName":"#loadSync","ranges":[{"startOffset":27246,"endOffset":27339,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":27343,"endOffset":27494,"count":27},{"startOffset":27401,"endOffset":27490,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":27498,"endOffset":27833,"count":0}],"isBlockCoverage":false},{"functionName":"forceLoadHooks","ranges":[{"startOffset":27894,"endOffset":27960,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28045,"endOffset":30643,"count":1}],"isBlockCoverage":false},{"functionName":"CustomizedModuleLoader","ranges":[{"startOffset":28174,"endOffset":28214,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":28891,"endOffset":29080,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":29539,"endOffset":29710,"count":35}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":29714,"endOffset":29986,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":30270,"endOffset":30367,"count":27}],"isBlockCoverage":true},{"functionName":"loadSync","ranges":[{"startOffset":30370,"endOffset":30470,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":30474,"endOffset":30583,"count":0}],"isBlockCoverage":false},{"functionName":"forceLoadHooks","ranges":[{"startOffset":30587,"endOffset":30641,"count":1}],"isBlockCoverage":true},{"functionName":"createModuleLoader","ranges":[{"startOffset":31027,"endOffset":32651,"count":1}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":31509,"endOffset":32004,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31859,"endOffset":31965,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32324,"endOffset":32412,"count":1}],"isBlockCoverage":true},{"functionName":"getHooksProxy","ranges":[{"startOffset":32764,"endOffset":32940,"count":1}],"isBlockCoverage":true},{"functionName":"getOrInitializeCascadedLoader","ranges":[{"startOffset":33442,"endOffset":33554,"count":5}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":34796,"endOffset":35141,"count":0}],"isBlockCoverage":false}]},{"scriptId":"75","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3875,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1301,"endOffset":1342,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1763,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"handleInvalidType","ranges":[{"startOffset":3379,"endOffset":3802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"node:internal/modules/esm/hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22892,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1557,"endOffset":1582,"count":1}],"isBlockCoverage":true},{"functionName":"emitImportAssertionWarning","ranges":[{"startOffset":1656,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"defineImportAssertionAlias","ranges":[{"startOffset":1887,"endOffset":2256,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2646,"endOffset":12984,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13207,"endOffset":19219,"count":1}],"isBlockCoverage":false},{"functionName":"HooksProxy","ranges":[{"startOffset":13862,"endOffset":14431,"count":1}],"isBlockCoverage":true},{"functionName":"waitForWorker","ranges":[{"startOffset":14435,"endOffset":14992,"count":63},{"startOffset":14477,"endOffset":14988,"count":1},{"startOffset":14819,"endOffset":14830,"count":0}],"isBlockCoverage":true},{"functionName":"makeAsyncRequest","ranges":[{"startOffset":15253,"endOffset":17222,"count":62},{"startOffset":15642,"endOffset":15713,"count":0},{"startOffset":15905,"endOffset":16455,"count":17},{"startOffset":16482,"endOffset":16839,"count":169},{"startOffset":16995,"endOffset":17116,"count":17}],"isBlockCoverage":true},{"functionName":"makeSyncRequest","ranges":[{"startOffset":17473,"endOffset":18461,"count":0}],"isBlockCoverage":false},{"functionName":"#unwrapMessage","ranges":[{"startOffset":18465,"endOffset":19003,"count":63},{"startOffset":18544,"endOffset":18587,"count":0},{"startOffset":18663,"endOffset":18967,"count":0}],"isBlockCoverage":true},{"functionName":"status.status","ranges":[{"startOffset":18571,"endOffset":18579,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":19112,"endOffset":19217,"count":0}],"isBlockCoverage":false},{"functionName":"pluckHooks","ranges":[{"startOffset":19542,"endOffset":20103,"count":0}],"isBlockCoverage":false},{"functionName":"nextHookFactory","ranges":[{"startOffset":21156,"endOffset":22833,"count":0}],"isBlockCoverage":false}]},{"scriptId":"77","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":882,"count":1}],"isBlockCoverage":false}]},{"scriptId":"78","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16398,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2514,"endOffset":2539,"count":1}],"isBlockCoverage":true},{"functionName":"process.chdir","ranges":[{"startOffset":2956,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":3040,"endOffset":3187,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3189,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3262,"endOffset":3412,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3452,"endOffset":9182,"count":1},{"startOffset":3772,"endOffset":3824,"count":0},{"startOffset":3862,"endOffset":3974,"count":0},{"startOffset":4083,"endOffset":5113,"count":0},{"startOffset":5168,"endOffset":5191,"count":0},{"startOffset":5193,"endOffset":5369,"count":0},{"startOffset":5432,"endOffset":5628,"count":0},{"startOffset":5671,"endOffset":5778,"count":0},{"startOffset":6032,"endOffset":6037,"count":0},{"startOffset":6236,"endOffset":6243,"count":0},{"startOffset":6374,"endOffset":6458,"count":0},{"startOffset":6501,"endOffset":6634,"count":0},{"startOffset":7082,"endOffset":7136,"count":0},{"startOffset":7902,"endOffset":8008,"count":0},{"startOffset":8424,"endOffset":8452,"count":0},{"startOffset":9102,"endOffset":9178,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5301,"endOffset":5353,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.<computed>.onexit","ranges":[{"startOffset":6662,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6839,"endOffset":6871,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8109,"endOffset":8202,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8156,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9020,"endOffset":9054,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9186,"endOffset":9860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9864,"endOffset":9960,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9964,"endOffset":10133,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10137,"endOffset":11030,"count":2},{"startOffset":10195,"endOffset":10296,"count":1},{"startOffset":10303,"endOffset":10395,"count":0},{"startOffset":10402,"endOffset":10487,"count":0},{"startOffset":10494,"endOffset":10778,"count":1},{"startOffset":10785,"endOffset":10955,"count":0},{"startOffset":10961,"endOffset":11029,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10674,"endOffset":10752,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11034,"endOffset":11502,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11506,"endOffset":11651,"count":62},{"startOffset":11565,"endOffset":11572,"count":0}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":11655,"endOffset":12489,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12493,"endOffset":12599,"count":17},{"startOffset":12533,"endOffset":12540,"count":0}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":12603,"endOffset":12715,"count":18},{"startOffset":12645,"endOffset":12652,"count":0}],"isBlockCoverage":true},{"functionName":"get threadId","ranges":[{"startOffset":12719,"endOffset":12818,"count":2},{"startOffset":12768,"endOffset":12778,"count":0}],"isBlockCoverage":true},{"functionName":"get stdin","ranges":[{"startOffset":12822,"endOffset":12880,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":12884,"endOffset":12944,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":12948,"endOffset":13008,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":13012,"endOffset":13148,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":13152,"endOffset":13659,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":13852,"endOffset":13931,"count":1}],"isBlockCoverage":true},{"functionName":"receiveMessageSync","ranges":[{"startOffset":13935,"endOffset":14013,"count":1}],"isBlockCoverage":true},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":14017,"endOffset":14339,"count":2}],"isBlockCoverage":true},{"functionName":"parseResourceLimits","ranges":[{"startOffset":14413,"endOffset":15027,"count":1},{"startOffset":14550,"endOffset":14565,"count":0},{"startOffset":14578,"endOffset":15026,"count":0}],"isBlockCoverage":true},{"functionName":"makeResourceLimits","ranges":[{"startOffset":15029,"endOffset":15316,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":15318,"endOffset":16121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":153,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":448,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13887,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageEvent","ranges":[{"startOffset":2407,"endOffset":2585,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3893,"endOffset":3976,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4143,"endOffset":4461,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":4600,"endOffset":4743,"count":129}],"isBlockCoverage":true},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":5045,"endOffset":5084,"count":126}],"isBlockCoverage":true},{"functionName":"onclose","ranges":[{"startOffset":5157,"endOffset":5230,"count":126}],"isBlockCoverage":true},{"functionName":"MessagePort.close","ranges":[{"startOffset":5411,"endOffset":5546,"count":62},{"startOffset":5462,"endOffset":5485,"count":0}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":5679,"endOffset":6307,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":6314,"endOffset":7677,"count":130}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6675,"endOffset":6770,"count":2},{"startOffset":6720,"endOffset":6766,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6809,"endOffset":6907,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7009,"endOffset":7154,"count":4},{"startOffset":7069,"endOffset":7091,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7265,"endOffset":7412,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":7418,"endOffset":7559,"count":3}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":7563,"endOffset":7675,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":7727,"endOffset":8076,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7905,"endOffset":8070,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":8080,"endOffset":8386,"count":3},{"startOffset":8150,"endOffset":8268,"count":0}],"isBlockCoverage":true},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":8437,"endOffset":8586,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":8590,"endOffset":8966,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":8970,"endOffset":9150,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9154,"endOffset":9401,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":9405,"endOffset":9675,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":9677,"endOffset":9857,"count":170},{"startOffset":9816,"endOffset":9833,"count":107},{"startOffset":9833,"endOffset":9856,"count":63}],"isBlockCoverage":true},{"functionName":"onMessageEvent","ranges":[{"startOffset":9859,"endOffset":9954,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":9956,"endOffset":10042,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":10129,"endOffset":10643,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10647,"endOffset":11060,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":11096,"endOffset":11225,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":11262,"endOffset":11660,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11728,"endOffset":12159,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12442,"endOffset":12609,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":12894,"endOffset":13065,"count":0}],"isBlockCoverage":false},{"functionName":"markAsUncloneable","ranges":[{"startOffset":13346,"endOffset":13529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5095,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2552,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3214,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4400,"endOffset":4432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4530,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4664,"endOffset":4705,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4886,"endOffset":5093,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10140,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":971,"endOffset":1551,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1553,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4658,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":4808,"endOffset":5136,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5138,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5282,"endOffset":5652,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5654,"endOffset":5981,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6197,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6315,"endOffset":7757,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":7759,"endOffset":8188,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8190,"endOffset":8384,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8386,"endOffset":8708,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":8710,"endOffset":9258,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9260,"endOffset":9930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13787,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1691,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2294,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2555,"endOffset":2680,"count":3},{"startOffset":2636,"endOffset":2678,"count":0}],"isBlockCoverage":true},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3262,"endOffset":3662,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3922,"endOffset":4393,"count":1},{"startOffset":4032,"endOffset":4082,"count":0},{"startOffset":4339,"endOffset":4389,"count":0}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":4430,"endOffset":4513,"count":2}],"isBlockCoverage":true},{"functionName":"get reason","ranges":[{"startOffset":4546,"endOffset":4625,"count":1}],"isBlockCoverage":true},{"functionName":"throwIfAborted","ranges":[{"startOffset":4629,"endOffset":4745,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4749,"endOffset":4878,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4956,"endOffset":5116,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":5194,"endOffset":5474,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":5561,"endOffset":7029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7033,"endOffset":7801,"count":1},{"startOffset":7262,"endOffset":7291,"count":0},{"startOffset":7337,"endOffset":7364,"count":0},{"startOffset":7365,"endOffset":7389,"count":0},{"startOffset":7390,"endOffset":7406,"count":0},{"startOffset":7407,"endOffset":7428,"count":0},{"startOffset":7430,"endOffset":7797,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7805,"endOffset":8159,"count":1},{"startOffset":7998,"endOffset":8027,"count":0},{"startOffset":8073,"endOffset":8092,"count":0},{"startOffset":8093,"endOffset":8106,"count":0},{"startOffset":8108,"endOffset":8155,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8163,"endOffset":8770,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8774,"endOffset":9026,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9030,"endOffset":9478,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":9482,"endOffset":9582,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":9627,"endOffset":9635,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":10005,"endOffset":11283,"count":1},{"startOffset":10111,"endOffset":10118,"count":0},{"startOffset":10497,"endOffset":10506,"count":0},{"startOffset":11189,"endOffset":11281,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10507,"endOffset":10957,"count":0}],"isBlockCoverage":false},{"functionName":"runAbort","ranges":[{"startOffset":11337,"endOffset":11465,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11489,"endOffset":12167,"count":1}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":11542,"endOffset":11641,"count":1}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":11684,"endOffset":11843,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11847,"endOffset":11974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11985,"endOffset":12165,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":12315,"endOffset":12526,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":12598,"endOffset":12687,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":12781,"endOffset":13338,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8484,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":883,"endOffset":978,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":992,"endOffset":1000,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1003,"endOffset":7053,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7055,"endOffset":7964,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7966,"endOffset":8424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5511,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":592,"endOffset":5509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12488,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1056,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1487,"endOffset":1815,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1817,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2105,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2281,"endOffset":3325,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3327,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3927,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4022,"endOffset":10609,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10611,"endOffset":12441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7355,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":488,"endOffset":799,"count":4},{"startOffset":532,"endOffset":797,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":909,"endOffset":1786,"count":2},{"startOffset":1078,"endOffset":1082,"count":0},{"startOffset":1183,"endOffset":1260,"count":0},{"startOffset":1621,"endOffset":1728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1647,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1788,"endOffset":2412,"count":2},{"startOffset":2373,"endOffset":2410,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1848,"endOffset":2317,"count":2},{"startOffset":1890,"endOffset":1911,"count":0},{"startOffset":2160,"endOffset":2182,"count":0},{"startOffset":2197,"endOffset":2257,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2414,"endOffset":2501,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2503,"endOffset":2823,"count":2},{"startOffset":2792,"endOffset":2821,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2825,"endOffset":3172,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3174,"endOffset":3864,"count":5}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3866,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5007,"endOffset":5423,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5425,"endOffset":6164,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6166,"endOffset":6262,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6264,"endOffset":6324,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6326,"endOffset":6446,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6481,"endOffset":7263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6588,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2350,"endOffset":4313,"count":5},{"startOffset":2414,"endOffset":2441,"count":0},{"startOffset":3128,"endOffset":3264,"count":1},{"startOffset":3302,"endOffset":3477,"count":0},{"startOffset":3529,"endOffset":3555,"count":0},{"startOffset":3608,"endOffset":3636,"count":0},{"startOffset":3690,"endOffset":3720,"count":0},{"startOffset":3775,"endOffset":3807,"count":0},{"startOffset":3860,"endOffset":3888,"count":0},{"startOffset":3945,"endOffset":3981,"count":0},{"startOffset":4013,"endOffset":4050,"count":0},{"startOffset":4054,"endOffset":4096,"count":0},{"startOffset":4160,"endOffset":4311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4194,"endOffset":4305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5461,"endOffset":5673,"count":16},{"startOffset":5559,"endOffset":5590,"count":0},{"startOffset":5634,"endOffset":5666,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5679,"endOffset":5940,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6014,"endOffset":6178,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6197,"endOffset":6315,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6333,"endOffset":6422,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6455,"endOffset":6586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3251,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":130,"endOffset":178,"count":7}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":292,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2127,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2396,"endOffset":3203,"count":2},{"startOffset":2655,"endOffset":3018,"count":0},{"startOffset":3024,"endOffset":3201,"count":0}],"isBlockCoverage":true}]},{"scriptId":"90","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51304,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1880,"endOffset":1905,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2867,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3771,"endOffset":3993,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3846,"endOffset":3890,"count":24}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3896,"endOffset":3985,"count":43},{"startOffset":3926,"endOffset":3946,"count":9},{"startOffset":3946,"endOffset":3979,"count":34}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6167,"endOffset":6255,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6261,"endOffset":6427,"count":5},{"startOffset":6291,"endOffset":6371,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6504,"endOffset":6604,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6610,"endOffset":6840,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6909,"endOffset":6997,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7003,"endOffset":7169,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7239,"endOffset":7329,"count":1},{"startOffset":7293,"endOffset":7315,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7335,"endOffset":7504,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7573,"endOffset":7676,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7682,"endOffset":7949,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":7962,"endOffset":9928,"count":7},{"startOffset":8334,"endOffset":8346,"count":5},{"startOffset":8352,"endOffset":8380,"count":0},{"startOffset":8397,"endOffset":8427,"count":5},{"startOffset":8433,"endOffset":8461,"count":0},{"startOffset":8636,"endOffset":8708,"count":5},{"startOffset":8709,"endOffset":8745,"count":2},{"startOffset":8904,"endOffset":8934,"count":5},{"startOffset":8936,"endOffset":8964,"count":5},{"startOffset":9053,"endOffset":9085,"count":5},{"startOffset":9087,"endOffset":9117,"count":0},{"startOffset":9347,"endOffset":9364,"count":5},{"startOffset":9396,"endOffset":9425,"count":0},{"startOffset":9426,"endOffset":9456,"count":0},{"startOffset":9505,"endOffset":9664,"count":0},{"startOffset":9815,"endOffset":9825,"count":5},{"startOffset":9827,"endOffset":9926,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":9972,"endOffset":10089,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10092,"endOffset":11126,"count":2},{"startOffset":10160,"endOffset":10189,"count":0},{"startOffset":10627,"endOffset":10958,"count":0},{"startOffset":11022,"endOffset":11124,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11056,"endOffset":11118,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":11263,"endOffset":11295,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11346,"endOffset":11384,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11428,"endOffset":11684,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":11913,"endOffset":12182,"count":16},{"startOffset":12113,"endOffset":12179,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":12278,"endOffset":12545,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12549,"endOffset":13615,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":13617,"endOffset":13857,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":13859,"endOffset":14192,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14194,"endOffset":15586,"count":16},{"startOffset":14288,"endOffset":14374,"count":1},{"startOffset":14374,"endOffset":14409,"count":15},{"startOffset":14409,"endOffset":14574,"count":1},{"startOffset":14435,"endOffset":14459,"count":0},{"startOffset":14574,"endOffset":14927,"count":14},{"startOffset":14633,"endOffset":14927,"count":0},{"startOffset":14927,"endOffset":14962,"count":15},{"startOffset":14964,"endOffset":15067,"count":0},{"startOffset":15067,"endOffset":15107,"count":15},{"startOffset":15107,"endOffset":15191,"count":0},{"startOffset":15191,"endOffset":15248,"count":15},{"startOffset":15248,"endOffset":15271,"count":0},{"startOffset":15271,"endOffset":15342,"count":15},{"startOffset":15342,"endOffset":15354,"count":0},{"startOffset":15356,"endOffset":15513,"count":0},{"startOffset":15513,"endOffset":15585,"count":15}],"isBlockCoverage":true},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":15588,"endOffset":16185,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16187,"endOffset":16517,"count":15},{"startOffset":16492,"endOffset":16513,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":16519,"endOffset":17463,"count":15},{"startOffset":16834,"endOffset":16880,"count":0},{"startOffset":17003,"endOffset":17429,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":17495,"endOffset":17650,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":17714,"endOffset":18284,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18345,"endOffset":18696,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":18809,"endOffset":19290,"count":23},{"startOffset":18857,"endOffset":18914,"count":4},{"startOffset":18920,"endOffset":18929,"count":20},{"startOffset":18929,"endOffset":18977,"count":3},{"startOffset":18977,"endOffset":18986,"count":0},{"startOffset":18986,"endOffset":19189,"count":3},{"startOffset":19114,"endOffset":19160,"count":0},{"startOffset":19189,"endOffset":19283,"count":0},{"startOffset":19284,"endOffset":19287,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":19387,"endOffset":24062,"count":23},{"startOffset":19571,"endOffset":19589,"count":4},{"startOffset":19589,"endOffset":19656,"count":19},{"startOffset":19620,"endOffset":19656,"count":0},{"startOffset":19821,"endOffset":19870,"count":0},{"startOffset":19891,"endOffset":19926,"count":4},{"startOffset":20112,"endOffset":20158,"count":19},{"startOffset":20159,"endOffset":20311,"count":15},{"startOffset":20242,"endOffset":20268,"count":0},{"startOffset":20313,"endOffset":20490,"count":0},{"startOffset":20634,"endOffset":20709,"count":2},{"startOffset":20709,"endOffset":22004,"count":21},{"startOffset":22004,"endOffset":22045,"count":0},{"startOffset":22047,"endOffset":22432,"count":21},{"startOffset":22432,"endOffset":22510,"count":3},{"startOffset":22510,"endOffset":23134,"count":18},{"startOffset":22819,"endOffset":22871,"count":0},{"startOffset":23098,"endOffset":23130,"count":0},{"startOffset":23134,"endOffset":23164,"count":21},{"startOffset":23164,"endOffset":23189,"count":0},{"startOffset":23189,"endOffset":23328,"count":21},{"startOffset":23309,"endOffset":23312,"count":0},{"startOffset":23328,"endOffset":23510,"count":0},{"startOffset":23510,"endOffset":23896,"count":21},{"startOffset":23833,"endOffset":23866,"count":3},{"startOffset":23874,"endOffset":23892,"count":0},{"startOffset":23896,"endOffset":23917,"count":21},{"startOffset":23917,"endOffset":23975,"count":0},{"startOffset":23977,"endOffset":24045,"count":0},{"startOffset":24045,"endOffset":24061,"count":21}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":24065,"endOffset":25019,"count":1},{"startOffset":24163,"endOffset":24170,"count":0},{"startOffset":24222,"endOffset":24244,"count":0},{"startOffset":24268,"endOffset":24447,"count":0},{"startOffset":24513,"endOffset":24715,"count":0}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":25220,"endOffset":25551,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":25553,"endOffset":26225,"count":1},{"startOffset":26144,"endOffset":26186,"count":0},{"startOffset":26187,"endOffset":26202,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":26575,"endOffset":26782,"count":15}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":26784,"endOffset":28613,"count":15},{"startOffset":28327,"endOffset":28396,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":28884,"endOffset":28950,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":28979,"endOffset":33489,"count":2},{"startOffset":29096,"endOffset":29320,"count":0},{"startOffset":29440,"endOffset":29465,"count":0},{"startOffset":29508,"endOffset":29548,"count":1},{"startOffset":29573,"endOffset":29580,"count":0},{"startOffset":29638,"endOffset":29662,"count":0},{"startOffset":33360,"endOffset":33378,"count":0},{"startOffset":33422,"endOffset":33471,"count":0}],"isBlockCoverage":true},{"functionName":"onunpipe","ranges":[{"startOffset":29732,"endOffset":29958,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":29962,"endOffset":30020,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":30065,"endOffset":30957,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":30961,"endOffset":31963,"count":0}],"isBlockCoverage":false},{"functionName":"ondata","ranges":[{"startOffset":31993,"endOffset":32153,"count":1},{"startOffset":32127,"endOffset":32149,"count":0}],"isBlockCoverage":true},{"functionName":"onerror","ranges":[{"startOffset":32275,"endOffset":32686,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":32866,"endOffset":32949,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":32983,"endOffset":33088,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":33125,"endOffset":33191,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":33492,"endOffset":34169,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":34200,"endOffset":34901,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":35027,"endOffset":36036,"count":22},{"startOffset":35159,"endOffset":35588,"count":3},{"startOffset":35388,"endOffset":35408,"count":0},{"startOffset":35588,"endOffset":36019,"count":19},{"startOffset":35617,"endOffset":36019,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":36131,"endOffset":36838,"count":67},{"startOffset":36331,"endOffset":36717,"count":0},{"startOffset":36741,"endOffset":36776,"count":0},{"startOffset":36778,"endOffset":36821,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":36941,"endOffset":37535,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":37538,"endOffset":38240,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":38242,"endOffset":38330,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":38484,"endOffset":38989,"count":3},{"startOffset":38836,"endOffset":38883,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":38992,"endOffset":39165,"count":3}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":39167,"endOffset":39481,"count":3},{"startOffset":39294,"endOffset":39319,"count":2},{"startOffset":39464,"endOffset":39479,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":39510,"endOffset":39822,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":39825,"endOffset":39976,"count":4},{"startOffset":39973,"endOffset":39974,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":40160,"endOffset":41181,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":41226,"endOffset":41278,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":41311,"endOffset":41454,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":41457,"endOffset":41706,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":41708,"endOffset":42784,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43003,"endOffset":43392,"count":2},{"startOffset":43326,"endOffset":43341,"count":1},{"startOffset":43342,"endOffset":43360,"count":1},{"startOffset":43361,"endOffset":43385,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":43398,"endOffset":43528,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43610,"endOffset":43674,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43756,"endOffset":43964,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44052,"endOffset":44118,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44199,"endOffset":44259,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44341,"endOffset":44401,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44412,"endOffset":44521,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44597,"endOffset":44651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44731,"endOffset":44819,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44897,"endOffset":44982,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45051,"endOffset":45135,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45180,"endOffset":45264,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45335,"endOffset":45422,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45428,"endOffset":45717,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45792,"endOffset":45880,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46021,"endOffset":46066,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46146,"endOffset":46204,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46210,"endOffset":46371,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":46677,"endOffset":49129,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":49131,"endOffset":49357,"count":2}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":49359,"endOffset":50252,"count":2},{"startOffset":49545,"endOffset":49566,"count":1},{"startOffset":49568,"endOffset":50250,"count":1},{"startOffset":49742,"endOffset":50246,"count":0}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":50254,"endOffset":50414,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.from","ranges":[{"startOffset":50432,"endOffset":50501,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":50566,"endOffset":50730,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":50751,"endOffset":50885,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":50905,"endOffset":51039,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":51058,"endOffset":51302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1734,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":563,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":757,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1113,"endOffset":1732,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":395,"endOffset":562,"count":10},{"startOffset":493,"endOffset":516,"count":0},{"startOffset":553,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":564,"endOffset":694,"count":9},{"startOffset":631,"endOffset":663,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":696,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":909,"endOffset":1342,"count":10},{"startOffset":1056,"endOffset":1268,"count":3},{"startOffset":1100,"endOffset":1237,"count":0},{"startOffset":1268,"endOffset":1341,"count":7}],"isBlockCoverage":true}]},{"scriptId":"93","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5141,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2172,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"StringDecoder","ranges":[{"startOffset":2633,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3155,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3817,"endOffset":4008,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4219,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4514,"endOffset":4727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4819,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4975,"endOffset":5090,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4321,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":4296,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33592,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2779,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3852,"endOffset":4074,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3927,"endOffset":3971,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3977,"endOffset":4066,"count":50},{"startOffset":4007,"endOffset":4027,"count":5},{"startOffset":4027,"endOffset":4060,"count":45}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7038,"endOffset":7116,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7122,"endOffset":7288,"count":5},{"startOffset":7152,"endOffset":7232,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7358,"endOffset":7458,"count":17},{"startOffset":7409,"endOffset":7443,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7464,"endOffset":7737,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7814,"endOffset":7914,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7920,"endOffset":8150,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8291,"endOffset":8368,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8374,"endOffset":8538,"count":156},{"startOffset":8439,"endOffset":8482,"count":69},{"startOffset":8482,"endOffset":8532,"count":87}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8725,"endOffset":8825,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8831,"endOffset":9028,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9098,"endOffset":9176,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9182,"endOffset":9349,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9362,"endOffset":11644,"count":5},{"startOffset":9630,"endOffset":9658,"count":0},{"startOffset":9711,"endOffset":9739,"count":0},{"startOffset":10030,"endOffset":10066,"count":0},{"startOffset":10120,"endOffset":10151,"count":0},{"startOffset":10409,"endOffset":10439,"count":0},{"startOffset":10696,"endOffset":10702,"count":0},{"startOffset":10734,"endOffset":10763,"count":0},{"startOffset":10764,"endOffset":10794,"count":0},{"startOffset":10843,"endOffset":11052,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":11646,"endOffset":11810,"count":5}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":11848,"endOffset":11977,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12073,"endOffset":12184,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12233,"endOffset":12419,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12422,"endOffset":13528,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":13610,"endOffset":13814,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":13915,"endOffset":13983,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":13986,"endOffset":15384,"count":87},{"startOffset":14090,"endOffset":14117,"count":69},{"startOffset":14119,"endOffset":14138,"count":18},{"startOffset":14162,"endOffset":14207,"count":0},{"startOffset":14346,"endOffset":14369,"count":0},{"startOffset":14376,"endOffset":14496,"count":0},{"startOffset":14533,"endOffset":14675,"count":86},{"startOffset":14585,"endOffset":14669,"count":0},{"startOffset":14675,"endOffset":14995,"count":1},{"startOffset":14744,"endOffset":14995,"count":0},{"startOffset":15051,"endOffset":15100,"count":0},{"startOffset":15146,"endOffset":15196,"count":0},{"startOffset":15209,"endOffset":15300,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15413,"endOffset":15604,"count":87},{"startOffset":15468,"endOffset":15501,"count":69},{"startOffset":15503,"endOffset":15548,"count":69}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":15633,"endOffset":15731,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":15762,"endOffset":16000,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16043,"endOffset":16368,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":16558,"endOffset":17762,"count":87},{"startOffset":16675,"endOffset":16678,"count":0},{"startOffset":16809,"endOffset":17216,"count":0},{"startOffset":17276,"endOffset":17315,"count":69},{"startOffset":17506,"endOffset":17527,"count":0},{"startOffset":17542,"endOffset":17580,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":17764,"endOffset":18201,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":18203,"endOffset":18588,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":18590,"endOffset":21196,"count":87},{"startOffset":18707,"endOffset":18781,"count":0},{"startOffset":18875,"endOffset":18897,"count":69},{"startOffset":18898,"endOffset":18903,"count":18},{"startOffset":19046,"endOffset":19660,"count":0},{"startOffset":19711,"endOffset":19752,"count":0},{"startOffset":19829,"endOffset":19850,"count":0},{"startOffset":20214,"endOffset":20565,"count":18},{"startOffset":20284,"endOffset":20404,"count":0},{"startOffset":20488,"endOffset":20547,"count":0},{"startOffset":20565,"endOffset":21131,"count":69},{"startOffset":20619,"endOffset":20680,"count":8},{"startOffset":20682,"endOffset":20740,"count":8},{"startOffset":20740,"endOffset":21131,"count":61},{"startOffset":20988,"endOffset":21131,"count":0},{"startOffset":21137,"endOffset":21190,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21198,"endOffset":21385,"count":61}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":21387,"endOffset":21895,"count":61},{"startOffset":21565,"endOffset":21586,"count":0},{"startOffset":21605,"endOffset":21670,"count":0},{"startOffset":21694,"endOffset":21736,"count":69},{"startOffset":21736,"endOffset":21780,"count":60},{"startOffset":21780,"endOffset":21809,"count":0},{"startOffset":21809,"endOffset":21850,"count":60},{"startOffset":21850,"endOffset":21893,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":21967,"endOffset":22518,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":22584,"endOffset":24254,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":24284,"endOffset":24453,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":24517,"endOffset":26157,"count":1},{"startOffset":24622,"endOffset":24682,"count":0},{"startOffset":24724,"endOffset":24769,"count":0},{"startOffset":24804,"endOffset":24911,"count":0},{"startOffset":24979,"endOffset":25025,"count":0},{"startOffset":25038,"endOffset":25064,"count":0},{"startOffset":25538,"endOffset":25732,"count":0},{"startOffset":25766,"endOffset":26139,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":26160,"endOffset":26589,"count":2}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":26591,"endOffset":27223,"count":1},{"startOffset":26675,"endOffset":26756,"count":0},{"startOffset":26789,"endOffset":26897,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":27225,"endOffset":27749,"count":1},{"startOffset":27322,"endOffset":27339,"count":0},{"startOffset":27567,"endOffset":27622,"count":0},{"startOffset":27656,"endOffset":27747,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27521,"endOffset":27558,"count":1}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":27751,"endOffset":28250,"count":1},{"startOffset":27883,"endOffset":28244,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27955,"endOffset":28117,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":28252,"endOffset":28895,"count":1},{"startOffset":28800,"endOffset":28828,"count":0}],"isBlockCoverage":true},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":28897,"endOffset":29215,"count":1},{"startOffset":29002,"endOffset":29214,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":29299,"endOffset":29402,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29450,"endOffset":29556,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29562,"endOffset":29812,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29859,"endOffset":30262,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":30268,"endOffset":30402,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30457,"endOffset":30575,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30632,"endOffset":30752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30805,"endOffset":30900,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30952,"endOffset":31068,"count":1},{"startOffset":31054,"endOffset":31061,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31124,"endOffset":31277,"count":2},{"startOffset":31263,"endOffset":31270,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31337,"endOffset":31426,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31479,"endOffset":31572,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31625,"endOffset":31707,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31776,"endOffset":31873,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31932,"endOffset":32189,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":32267,"endOffset":32547,"count":2},{"startOffset":32412,"endOffset":32449,"count":0},{"startOffset":32451,"endOffset":32498,"count":0}],"isBlockCoverage":true},{"functionName":"Writable._destroy","ranges":[{"startOffset":32635,"endOffset":32667,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":32718,"endOffset":32756,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":32821,"endOffset":32985,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":33006,"endOffset":33140,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":33160,"endOffset":33267,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33311,"endOffset":33590,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7123,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5500,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5502,"endOffset":5946,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5948,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6101,"endOffset":6196,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6228,"endOffset":6965,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6996,"endOffset":7121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"node:internal/streams/duplexpair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":251,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"duplexPair","ranges":[{"startOffset":1138,"endOffset":1343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"node:internal/worker/messaging","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6666,"count":1}],"isBlockCoverage":false},{"functionName":"handleMessageFromThread","ranges":[{"startOffset":1559,"endOffset":2594,"count":1},{"startOffset":2153,"endOffset":2307,"count":0},{"startOffset":2312,"endOffset":2588,"count":0}],"isBlockCoverage":true},{"functionName":"handleMessageFromMainThread","ranges":[{"startOffset":2596,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"sendMessageToWorker","ranges":[{"startOffset":2820,"endOffset":3617,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageFromWorker","ranges":[{"startOffset":3619,"endOffset":4177,"count":0}],"isBlockCoverage":false},{"functionName":"createMainThreadPort","ranges":[{"startOffset":4179,"endOffset":4728,"count":1},{"startOffset":4604,"endOffset":4692,"count":0}],"isBlockCoverage":true},{"functionName":"destroyMainThreadPort","ranges":[{"startOffset":4730,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"setupMainThreadPort","ranges":[{"startOffset":5026,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"postMessageToThread","ranges":[{"startOffset":5221,"endOffset":6547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5707,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1037,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2143,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2581,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2721,"endOffset":2891,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2908,"endOffset":4203,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4205,"endOffset":4426,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4445,"endOffset":5650,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41233,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2488,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3634,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":4893,"endOffset":5974,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7107,"endOffset":7825,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":8609,"endOffset":10069,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":10483,"endOffset":10694,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11090,"endOffset":11285,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":11923,"endOffset":12306,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":12762,"endOffset":13140,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":14496,"endOffset":17249,"count":18},{"startOffset":14665,"endOffset":14676,"count":0},{"startOffset":14677,"endOffset":14713,"count":0},{"startOffset":14715,"endOffset":14799,"count":0},{"startOffset":14849,"endOffset":15406,"count":0},{"startOffset":15498,"endOffset":16108,"count":0},{"startOffset":16327,"endOffset":16411,"count":0},{"startOffset":16455,"endOffset":17248,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15181,"endOffset":15194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15707,"endOffset":15720,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15853,"endOffset":15866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16590,"endOffset":16603,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16830,"endOffset":16843,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17183,"endOffset":17196,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":17441,"endOffset":17585,"count":55},{"startOffset":17537,"endOffset":17582,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":18380,"endOffset":20598,"count":51},{"startOffset":18573,"endOffset":18727,"count":18},{"startOffset":18727,"endOffset":20481,"count":33},{"startOffset":18759,"endOffset":19573,"count":8},{"startOffset":18790,"endOffset":18816,"count":0},{"startOffset":19136,"endOffset":19284,"count":0},{"startOffset":19324,"endOffset":19351,"count":0},{"startOffset":19386,"endOffset":19443,"count":0},{"startOffset":19477,"endOffset":19573,"count":0},{"startOffset":19573,"endOffset":20481,"count":25},{"startOffset":19726,"endOffset":19954,"count":55},{"startOffset":19784,"endOffset":19948,"count":0},{"startOffset":19997,"endOffset":20406,"count":50},{"startOffset":20054,"endOffset":20076,"count":43},{"startOffset":20078,"endOffset":20400,"count":25},{"startOffset":20349,"endOffset":20362,"count":0},{"startOffset":20406,"endOffset":20481,"count":0},{"startOffset":20481,"endOffset":20597,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":20882,"endOffset":21825,"count":18},{"startOffset":21014,"endOffset":21030,"count":0},{"startOffset":21086,"endOffset":21103,"count":0},{"startOffset":21243,"endOffset":21794,"count":39},{"startOffset":21353,"endOffset":21410,"count":18},{"startOffset":21410,"endOffset":21790,"count":21},{"startOffset":21466,"endOffset":21790,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":22322,"endOffset":24893,"count":18},{"startOffset":22526,"endOffset":22563,"count":2},{"startOffset":22965,"endOffset":23039,"count":0},{"startOffset":23070,"endOffset":24892,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":25267,"endOffset":25822,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":26309,"endOffset":28784,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":28949,"endOffset":30007,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":30331,"endOffset":32351,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":32462,"endOffset":32572,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":32691,"endOffset":32970,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":33119,"endOffset":33310,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":33673,"endOffset":34955,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":35155,"endOffset":36981,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":37121,"endOffset":37394,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":37900,"endOffset":40065,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":40328,"endOffset":40941,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9428,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":854,"endOffset":885,"count":0}],"isBlockCoverage":false},{"functionName":"detectModuleFormat","ranges":[{"startOffset":1053,"endOffset":1294,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1355,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1846,"endOffset":2205,"count":0}],"isBlockCoverage":false},{"functionName":"underNodeModules","ranges":[{"startOffset":2435,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"warnTypelessPackageJsonFile","ranges":[{"startOffset":2699,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":3467,"endOffset":8570,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":8715,"endOffset":8950,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":9095,"endOffset":9318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1947,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":840,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1548,"endOffset":1853,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"node:internal/modules/esm/shared_constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":false}]},{"scriptId":"106","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2416,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":760,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":1813,"endOffset":2368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5045,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1540,"endOffset":1646,"count":19}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1648,"endOffset":2117,"count":1},{"startOffset":1724,"endOffset":1759,"count":0},{"startOffset":1796,"endOffset":1825,"count":0},{"startOffset":1907,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2266,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2483,"endOffset":3449,"count":2},{"startOffset":2552,"endOffset":2579,"count":0},{"startOffset":2616,"endOffset":2645,"count":0},{"startOffset":2727,"endOffset":2772,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3740,"endOffset":4167,"count":8},{"startOffset":3902,"endOffset":3985,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4223,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4400,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4582,"endOffset":4721,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4763,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4938,"endOffset":4988,"count":1}],"isBlockCoverage":true}]},{"scriptId":"108","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":69427,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1645,"endOffset":1670,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4205,"endOffset":4213,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4686,"endOffset":4780,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4782,"endOffset":5165,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5168,"endOffset":5306,"count":10},{"startOffset":5263,"endOffset":5281,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5309,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5593,"endOffset":5697,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5920,"endOffset":6321,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6323,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6400,"endOffset":6516,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6518,"endOffset":6621,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6623,"endOffset":6810,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7304,"endOffset":8030,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":8102,"endOffset":8705,"count":5},{"startOffset":8458,"endOffset":8699,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8707,"endOffset":9047,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8826,"endOffset":9039,"count":2},{"startOffset":8928,"endOffset":9033,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9299,"endOffset":13926,"count":7},{"startOffset":9359,"endOffset":9386,"count":2},{"startOffset":9386,"endOffset":9412,"count":5},{"startOffset":9414,"endOffset":9543,"count":0},{"startOffset":9543,"endOffset":9861,"count":5},{"startOffset":9613,"endOffset":9861,"count":0},{"startOffset":9861,"endOffset":9905,"count":5},{"startOffset":9923,"endOffset":10119,"count":0},{"startOffset":10119,"endOffset":10681,"count":5},{"startOffset":10681,"endOffset":10707,"count":0},{"startOffset":10707,"endOffset":11221,"count":5},{"startOffset":11221,"endOffset":12469,"count":0},{"startOffset":12469,"endOffset":12555,"count":5},{"startOffset":12556,"endOffset":12633,"count":0},{"startOffset":12634,"endOffset":12680,"count":0},{"startOffset":12682,"endOffset":12897,"count":0},{"startOffset":12897,"endOffset":13430,"count":5},{"startOffset":13432,"endOffset":13697,"count":4},{"startOffset":13465,"endOffset":13634,"count":0},{"startOffset":13666,"endOffset":13693,"count":1},{"startOffset":13697,"endOffset":13721,"count":5},{"startOffset":13721,"endOffset":13773,"count":0},{"startOffset":13773,"endOffset":13925,"count":5}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14099,"endOffset":14229,"count":102},{"startOffset":14201,"endOffset":14223,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14349,"endOffset":14972,"count":1},{"startOffset":14466,"endOffset":14567,"count":0},{"startOffset":14594,"endOffset":14606,"count":0},{"startOffset":14884,"endOffset":14896,"count":0},{"startOffset":14923,"endOffset":14970,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14540,"endOffset":14561,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":14975,"endOffset":15121,"count":1}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15328,"endOffset":15836,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":15918,"endOffset":16422,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16456,"endOffset":16833,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":16869,"endOffset":17475,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17506,"endOffset":17550,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17636,"endOffset":17680,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17760,"endOffset":17816,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17927,"endOffset":18242,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18331,"endOffset":18411,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18499,"endOffset":18544,"count":15}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":18552,"endOffset":18802,"count":1},{"startOffset":18752,"endOffset":18800,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":18894,"endOffset":19213,"count":15},{"startOffset":19057,"endOffset":19149,"count":0},{"startOffset":19182,"endOffset":19211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19124,"endOffset":19143,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19240,"endOffset":19396,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19434,"endOffset":19784,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":19812,"endOffset":20129,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20159,"endOffset":20343,"count":1},{"startOffset":20192,"endOffset":20211,"count":0},{"startOffset":20212,"endOffset":20227,"count":0},{"startOffset":20228,"endOffset":20258,"count":0},{"startOffset":20260,"endOffset":20289,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":20371,"endOffset":20557,"count":18},{"startOffset":20405,"endOffset":20424,"count":0},{"startOffset":20425,"endOffset":20440,"count":0},{"startOffset":20441,"endOffset":20471,"count":0},{"startOffset":20473,"endOffset":20502,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":20604,"endOffset":20703,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":20737,"endOffset":20884,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":20916,"endOffset":22430,"count":2},{"startOffset":21213,"endOffset":21219,"count":0},{"startOffset":21439,"endOffset":21684,"count":0},{"startOffset":21725,"endOffset":21961,"count":0},{"startOffset":22180,"endOffset":22251,"count":0},{"startOffset":22273,"endOffset":22428,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21514,"endOffset":21599,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21905,"endOffset":21953,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":22459,"endOffset":22558,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":22593,"endOffset":22890,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":22893,"endOffset":23075,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23102,"endOffset":23193,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":23226,"endOffset":23292,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23324,"endOffset":23388,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":23418,"endOffset":23478,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":23515,"endOffset":23791,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":23823,"endOffset":23888,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":23918,"endOffset":23977,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24008,"endOffset":24071,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24112,"endOffset":24159,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24195,"endOffset":25107,"count":87},{"startOffset":24417,"endOffset":24761,"count":0},{"startOffset":24842,"endOffset":24898,"count":0},{"startOffset":24952,"endOffset":24988,"count":0},{"startOffset":25067,"endOffset":25105,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":24512,"endOffset":24626,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":24633,"endOffset":24712,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25138,"endOffset":25206,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":25236,"endOffset":25317,"count":87}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":25510,"endOffset":25614,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":25646,"endOffset":26575,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":26580,"endOffset":27379,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":27382,"endOffset":29482,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":29485,"endOffset":32425,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":32454,"endOffset":34035,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":34078,"endOffset":34232,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":34235,"endOffset":34381,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":34383,"endOffset":38314,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":38316,"endOffset":42415,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":42417,"endOffset":42476,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":42502,"endOffset":42689,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":42718,"endOffset":42911,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":42915,"endOffset":44603,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":44605,"endOffset":45015,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":45017,"endOffset":45538,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":45540,"endOffset":46858,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":46860,"endOffset":47356,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":47358,"endOffset":47788,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":47790,"endOffset":49402,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":49513,"endOffset":49578,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":49646,"endOffset":51098,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":51100,"endOffset":53794,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":53861,"endOffset":53923,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":53926,"endOffset":54041,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":54044,"endOffset":55626,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":55655,"endOffset":60017,"count":0}],"isBlockCoverage":false},{"functionName":"isIpv6LinkLocal","ranges":[{"startOffset":60020,"endOffset":60658,"count":0}],"isBlockCoverage":false},{"functionName":"filterOnlyValidAddress","ranges":[{"startOffset":60660,"endOffset":60945,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":60947,"endOffset":61568,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":61650,"endOffset":61693,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":61769,"endOffset":62047,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":62050,"endOffset":63961,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":64110,"endOffset":64863,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":64892,"endOffset":65782,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":65824,"endOffset":65944,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":65986,"endOffset":66372,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":66376,"endOffset":66459,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":66518,"endOffset":66680,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":66902,"endOffset":66938,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":66942,"endOffset":66983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":67063,"endOffset":67094,"count":194}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":67098,"endOffset":67134,"count":7}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":67173,"endOffset":67414,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":67440,"endOffset":67538,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":67566,"endOffset":67665,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":67807,"endOffset":68476,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":68515,"endOffset":68756,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":68885,"endOffset":68987,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":68991,"endOffset":69113,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7070,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1057,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1201,"endOffset":2056,"count":87},{"startOffset":1301,"endOffset":1468,"count":1},{"startOffset":1426,"endOffset":1444,"count":0},{"startOffset":1473,"endOffset":1487,"count":0},{"startOffset":1492,"endOffset":1556,"count":0},{"startOffset":1561,"endOffset":1573,"count":86},{"startOffset":1578,"endOffset":1639,"count":86},{"startOffset":1644,"endOffset":1706,"count":0},{"startOffset":1711,"endOffset":1723,"count":0},{"startOffset":1728,"endOffset":1741,"count":0},{"startOffset":1746,"endOffset":1761,"count":0},{"startOffset":1766,"endOffset":1830,"count":0},{"startOffset":1835,"endOffset":2050,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2058,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2649,"endOffset":2887,"count":87}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2889,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3530,"endOffset":3735,"count":87}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3737,"endOffset":4044,"count":87},{"startOffset":3904,"endOffset":3959,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4046,"endOffset":5985,"count":15},{"startOffset":4240,"endOffset":4260,"count":14},{"startOffset":4262,"endOffset":5002,"count":14},{"startOffset":4347,"endOffset":4606,"count":0},{"startOffset":4790,"endOffset":4981,"count":0},{"startOffset":5002,"endOffset":5023,"count":1},{"startOffset":5023,"endOffset":5040,"count":0},{"startOffset":5040,"endOffset":5371,"count":1},{"startOffset":5371,"endOffset":5564,"count":0},{"startOffset":5564,"endOffset":5649,"count":1},{"startOffset":5649,"endOffset":5716,"count":0},{"startOffset":5716,"endOffset":5983,"count":1},{"startOffset":5761,"endOffset":5801,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":5987,"endOffset":6863,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16722,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2600,"endOffset":2861,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2863,"endOffset":3203,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3205,"endOffset":3626,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3628,"endOffset":3970,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4047,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4156,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4388,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4531,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":4839,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5336,"endOffset":5584,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5962,"endOffset":9533,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10015,"endOffset":10217,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10278,"endOffset":11304,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":11592,"endOffset":12856,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":12944,"endOffset":13216,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13218,"endOffset":13283,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13285,"endOffset":13885,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":13887,"endOffset":14729,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":14731,"endOffset":15847,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":15884,"endOffset":16003,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16006,"endOffset":16116,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16118,"endOffset":16433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":675,"endOffset":748,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":777,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1136,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1240,"endOffset":1355,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1359,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1478,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1594,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1842,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2286,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2539,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2653,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":2908,"endOffset":3112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6478,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2542,"endOffset":2995,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3153,"endOffset":6149,"count":68},{"startOffset":3357,"endOffset":3715,"count":0},{"startOffset":4056,"endOffset":4082,"count":0},{"startOffset":4120,"endOffset":4678,"count":0},{"startOffset":4696,"endOffset":4724,"count":0},{"startOffset":4740,"endOffset":5003,"count":0},{"startOffset":5038,"endOffset":5168,"count":0},{"startOffset":5204,"endOffset":5405,"count":0},{"startOffset":5410,"endOffset":5427,"count":0},{"startOffset":5432,"endOffset":5472,"count":0},{"startOffset":5477,"endOffset":5524,"count":0},{"startOffset":5566,"endOffset":5594,"count":0},{"startOffset":5624,"endOffset":6148,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4892,"endOffset":4913,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5941,"endOffset":5994,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6151,"endOffset":6424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4046,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":284,"endOffset":309,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":853,"endOffset":881,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1227,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1843,"endOffset":2059,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2234,"endOffset":2336,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2476,"endOffset":2605,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2609,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2847,"endOffset":2875,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2924,"endOffset":3070,"count":35},{"startOffset":3057,"endOffset":3065,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3073,"endOffset":3686,"count":27},{"startOffset":3307,"endOffset":3343,"count":0},{"startOffset":3345,"endOffset":3415,"count":0},{"startOffset":3502,"endOffset":3508,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3689,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":3852,"endOffset":3991,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17040,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1098,"endOffset":1123,"count":1}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":1681,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParseSync","ranges":[{"startOffset":2110,"endOffset":2247,"count":1}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2438,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":2665,"endOffset":2988,"count":20}],"isBlockCoverage":true},{"functionName":"loadCJSModule","ranges":[{"startOffset":3648,"endOffset":5702,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":6186,"endOffset":7628,"count":2},{"startOffset":6455,"endOffset":6488,"count":0},{"startOffset":6653,"endOffset":6675,"count":0},{"startOffset":6722,"endOffset":6778,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6838,"endOffset":7616,"count":2},{"startOffset":7129,"endOffset":7172,"count":0},{"startOffset":7215,"endOffset":7572,"count":5},{"startOffset":7318,"endOffset":7345,"count":0},{"startOffset":7469,"endOffset":7525,"count":0}],"isBlockCoverage":true},{"functionName":"requireCommonJS","ranges":[{"startOffset":7663,"endOffset":7931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8093,"endOffset":8207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8380,"endOffset":8575,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":8763,"endOffset":9506,"count":2},{"startOffset":8829,"endOffset":8858,"count":1},{"startOffset":9254,"endOffset":9269,"count":0},{"startOffset":9394,"endOffset":9442,"count":0}],"isBlockCoverage":true},{"functionName":"cjsLoader","ranges":[{"startOffset":9105,"endOffset":9253,"count":2}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":9695,"endOffset":12240,"count":2},{"startOffset":9877,"endOffset":9920,"count":0},{"startOffset":9922,"endOffset":9991,"count":0},{"startOffset":10376,"endOffset":10381,"count":0},{"startOffset":10389,"endOffset":10438,"count":0},{"startOffset":10604,"endOffset":12203,"count":0}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":12364,"endOffset":12770,"count":5},{"startOffset":12643,"endOffset":12695,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":12834,"endOffset":15090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15156,"endOffset":16249,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16345,"endOffset":16647,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16737,"endOffset":17037,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1194,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":32,"endOffset":127,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":257,"endOffset":517,"count":68},{"startOffset":329,"endOffset":388,"count":0},{"startOffset":505,"endOffset":511,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":521,"endOffset":1162,"count":1},{"startOffset":689,"endOffset":693,"count":0},{"startOffset":749,"endOffset":753,"count":0},{"startOffset":809,"endOffset":813,"count":0},{"startOffset":870,"endOffset":874,"count":0},{"startOffset":928,"endOffset":932,"count":0},{"startOffset":987,"endOffset":991,"count":0},{"startOffset":1044,"endOffset":1048,"count":0},{"startOffset":1103,"endOffset":1107,"count":0}],"isBlockCoverage":true}]},{"scriptId":"116","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13994,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":463,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":1185,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJobBase","ranges":[{"startOffset":1343,"endOffset":1530,"count":27}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1683,"endOffset":10809,"count":27}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":2392,"endOffset":3347,"count":27},{"startOffset":2740,"endOffset":2895,"count":0}],"isBlockCoverage":true},{"functionName":"_link","ranges":[{"startOffset":3485,"endOffset":5110,"count":27},{"startOffset":4468,"endOffset":5035,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4724,"endOffset":4875,"count":30}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":5114,"endOffset":5259,"count":5}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":5263,"endOffset":8992,"count":5},{"startOffset":5796,"endOffset":5973,"count":0},{"startOffset":6030,"endOffset":8745,"count":0},{"startOffset":8792,"endOffset":8988,"count":38}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":5362,"endOffset":5695,"count":43},{"startOffset":5496,"endOffset":5521,"count":5},{"startOffset":5521,"endOffset":5694,"count":38}],"isBlockCoverage":true},{"functionName":"runSync","ranges":[{"startOffset":8996,"endOffset":9433,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":9437,"endOffset":10807,"count":5},{"startOffset":9523,"endOffset":9597,"count":1},{"startOffset":9766,"endOffset":10750,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11426,"endOffset":13874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:internal/deps/cjs-module-lexer/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53714,"count":1}],"isBlockCoverage":false},{"functionName":"resetState","ranges":[{"startOffset":287,"endOffset":729,"count":4}],"isBlockCoverage":true},{"functionName":"parseCJS","ranges":[{"startOffset":811,"endOffset":1282,"count":2},{"startOffset":907,"endOffset":1073,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1123,"endOffset":1177,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1213,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1284,"endOffset":2033,"count":16},{"startOffset":1349,"endOffset":2002,"count":11},{"startOffset":1511,"endOffset":1957,"count":98},{"startOffset":1675,"endOffset":1949,"count":0},{"startOffset":1990,"endOffset":1998,"count":0},{"startOffset":2002,"endOffset":2031,"count":5}],"isBlockCoverage":true},{"functionName":"parseSource","ranges":[{"startOffset":2035,"endOffset":7781,"count":2},{"startOffset":2200,"endOffset":2230,"count":1},{"startOffset":2237,"endOffset":2432,"count":1},{"startOffset":2274,"endOffset":2286,"count":0},{"startOffset":2325,"endOffset":2428,"count":18},{"startOffset":2388,"endOffset":2400,"count":17},{"startOffset":2416,"endOffset":2422,"count":1},{"startOffset":2456,"endOffset":7635,"count":1341},{"startOffset":2510,"endOffset":2530,"count":1100},{"startOffset":2521,"endOffset":2530,"count":72},{"startOffset":2538,"endOffset":2547,"count":313},{"startOffset":2547,"endOffset":2579,"count":1028},{"startOffset":2579,"endOffset":4076,"count":200},{"startOffset":2609,"endOffset":2783,"count":6},{"startOffset":2674,"endOffset":2694,"count":0},{"startOffset":2708,"endOffset":2733,"count":0},{"startOffset":2792,"endOffset":3013,"count":14},{"startOffset":2877,"endOffset":2902,"count":11},{"startOffset":2916,"endOffset":2963,"count":11},{"startOffset":3022,"endOffset":4062,"count":0},{"startOffset":4070,"endOffset":4076,"count":180},{"startOffset":4076,"endOffset":4102,"count":1008},{"startOffset":4102,"endOffset":4392,"count":55},{"startOffset":4165,"endOffset":4185,"count":6},{"startOffset":4187,"endOffset":4377,"count":6},{"startOffset":4288,"endOffset":4367,"count":0},{"startOffset":4399,"endOffset":4571,"count":39},{"startOffset":4443,"endOffset":4480,"count":17},{"startOffset":4481,"endOffset":4520,"count":0},{"startOffset":4532,"endOffset":4556,"count":0},{"startOffset":4578,"endOffset":4721,"count":29},{"startOffset":4641,"endOffset":4661,"count":3},{"startOffset":4673,"endOffset":4706,"count":3},{"startOffset":4728,"endOffset":4886,"count":5},{"startOffset":4790,"endOffset":4810,"count":0},{"startOffset":4822,"endOffset":4871,"count":0},{"startOffset":4893,"endOffset":4981,"count":40},{"startOffset":4988,"endOffset":5134,"count":40},{"startOffset":5046,"endOffset":5093,"count":0},{"startOffset":5141,"endOffset":5326,"count":10},{"startOffset":5333,"endOffset":5756,"count":17},{"startOffset":5392,"endOffset":5437,"count":0},{"startOffset":5486,"endOffset":5588,"count":7},{"startOffset":5588,"endOffset":5741,"count":10},{"startOffset":5639,"endOffset":5672,"count":0},{"startOffset":5686,"endOffset":5731,"count":0},{"startOffset":5763,"endOffset":5833,"count":0},{"startOffset":5840,"endOffset":5853,"count":23},{"startOffset":5860,"endOffset":5915,"count":24},{"startOffset":5922,"endOffset":7540,"count":5},{"startOffset":6023,"endOffset":6114,"count":3},{"startOffset":6114,"endOffset":7517,"count":2},{"startOffset":6245,"endOffset":7517,"count":0},{"startOffset":7517,"endOffset":7540,"count":0},{"startOffset":7547,"endOffset":7601,"count":2},{"startOffset":7607,"endOffset":7635,"count":1003},{"startOffset":7669,"endOffset":7711,"count":0},{"startOffset":7739,"endOffset":7779,"count":0}],"isBlockCoverage":true},{"functionName":"tryBacktrackAddStarExportBinding","ranges":[{"startOffset":7783,"endOffset":9006,"count":11},{"startOffset":7879,"endOffset":7891,"count":10},{"startOffset":7897,"endOffset":7904,"count":10},{"startOffset":7948,"endOffset":9004,"count":10},{"startOffset":8161,"endOffset":8173,"count":54},{"startOffset":8175,"endOffset":8391,"count":54},{"startOffset":8218,"endOffset":8225,"count":0},{"startOffset":8280,"endOffset":8286,"count":10},{"startOffset":8286,"endOffset":8391,"count":44},{"startOffset":8416,"endOffset":8449,"count":7},{"startOffset":8456,"endOffset":9000,"count":7},{"startOffset":8649,"endOffset":8750,"count":0},{"startOffset":8876,"endOffset":8883,"count":0},{"startOffset":8909,"endOffset":8925,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseObjectHasOwnProperty","ranges":[{"startOffset":9091,"endOffset":10257,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseObjectDefineOrKeys","ranges":[{"startOffset":10259,"endOffset":27670,"count":0}],"isBlockCoverage":false},{"functionName":"readExportsOrModuleDotExports","ranges":[{"startOffset":27672,"endOffset":28124,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseModuleExportsDotAssign","ranges":[{"startOffset":28126,"endOffset":28458,"count":3},{"startOffset":28266,"endOffset":28437,"count":2},{"startOffset":28333,"endOffset":28372,"count":0},{"startOffset":28374,"endOffset":28433,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseExportsDotAssign","ranges":[{"startOffset":28460,"endOffset":29830,"count":6},{"startOffset":28823,"endOffset":28916,"count":5},{"startOffset":28924,"endOffset":28943,"count":1},{"startOffset":28971,"endOffset":29406,"count":0},{"startOffset":29435,"endOffset":29805,"count":0},{"startOffset":29809,"endOffset":29829,"count":1}],"isBlockCoverage":true},{"functionName":"tryParseRequire","ranges":[{"startOffset":29832,"endOffset":30809,"count":14},{"startOffset":29962,"endOffset":30791,"count":11},{"startOffset":30141,"endOffset":30153,"count":0},{"startOffset":30333,"endOffset":30457,"count":0},{"startOffset":30470,"endOffset":30592,"count":0},{"startOffset":30766,"endOffset":30791,"count":0},{"startOffset":30791,"endOffset":30808,"count":3}],"isBlockCoverage":true},{"functionName":"tryParseLiteralExports","ranges":[{"startOffset":30811,"endOffset":32363,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":43691,"endOffset":43902,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":43966,"endOffset":44336,"count":50},{"startOffset":44026,"endOffset":44044,"count":0},{"startOffset":44062,"endOffset":44073,"count":1},{"startOffset":44073,"endOffset":44091,"count":49},{"startOffset":44091,"endOffset":44109,"count":0},{"startOffset":44109,"endOffset":44139,"count":49},{"startOffset":44139,"endOffset":44335,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":44399,"endOffset":44868,"count":99},{"startOffset":44458,"endOffset":44476,"count":13},{"startOffset":44476,"endOffset":44494,"count":86},{"startOffset":44494,"endOffset":44505,"count":0},{"startOffset":44505,"endOffset":44523,"count":86},{"startOffset":44523,"endOffset":44535,"count":0},{"startOffset":44535,"endOffset":44553,"count":86},{"startOffset":44553,"endOffset":44564,"count":6},{"startOffset":44564,"endOffset":44582,"count":80},{"startOffset":44582,"endOffset":44600,"count":0},{"startOffset":44600,"endOffset":44619,"count":80},{"startOffset":44619,"endOffset":44630,"count":77},{"startOffset":44630,"endOffset":44726,"count":3},{"startOffset":44673,"endOffset":44726,"count":0},{"startOffset":44726,"endOffset":44866,"count":0}],"isBlockCoverage":true},{"functionName":"identifier","ranges":[{"startOffset":44870,"endOffset":45294,"count":6},{"startOffset":44986,"endOffset":44999,"count":0},{"startOffset":45066,"endOffset":45277,"count":45},{"startOffset":45104,"endOffset":45142,"count":39},{"startOffset":45142,"endOffset":45273,"count":6},{"startOffset":45169,"endOffset":45243,"count":0}],"isBlockCoverage":true},{"functionName":"codePointLen","ranges":[{"startOffset":45296,"endOffset":45368,"count":89},{"startOffset":45354,"endOffset":45367,"count":0}],"isBlockCoverage":true},{"functionName":"codePointAtLast","ranges":[{"startOffset":45370,"endOffset":45625,"count":54},{"startOffset":45530,"endOffset":45610,"count":0}],"isBlockCoverage":true},{"functionName":"esmSyntaxErr","ranges":[{"startOffset":45627,"endOffset":45732,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfImportStatement","ranges":[{"startOffset":45734,"endOffset":46524,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfExportStatement","ranges":[{"startOffset":46526,"endOffset":46755,"count":0}],"isBlockCoverage":false},{"functionName":"commentWhitespace","ranges":[{"startOffset":46757,"endOffset":47157,"count":56},{"startOffset":46804,"endOffset":47121,"count":61},{"startOffset":46863,"endOffset":47064,"count":0},{"startOffset":47093,"endOffset":47117,"count":56},{"startOffset":47121,"endOffset":47156,"count":0}],"isBlockCoverage":true},{"functionName":"templateString","ranges":[{"startOffset":47159,"endOffset":47549,"count":9},{"startOffset":47210,"endOffset":47530,"count":52},{"startOffset":47274,"endOffset":47311,"count":7},{"startOffset":47318,"endOffset":47451,"count":7},{"startOffset":47451,"endOffset":47482,"count":45},{"startOffset":47482,"endOffset":47489,"count":2},{"startOffset":47489,"endOffset":47520,"count":43},{"startOffset":47520,"endOffset":47526,"count":1},{"startOffset":47530,"endOffset":47548,"count":0}],"isBlockCoverage":true},{"functionName":"blockComment","ranges":[{"startOffset":47551,"endOffset":47756,"count":2},{"startOffset":47609,"endOffset":47754,"count":829},{"startOffset":47673,"endOffset":47709,"count":16},{"startOffset":47716,"endOffset":47750,"count":2}],"isBlockCoverage":true},{"functionName":"lineComment","ranges":[{"startOffset":47758,"endOffset":47910,"count":3},{"startOffset":47806,"endOffset":47908,"count":122},{"startOffset":47871,"endOffset":47883,"count":119},{"startOffset":47897,"endOffset":47904,"count":3}],"isBlockCoverage":true},{"functionName":"stringLiteral","ranges":[{"startOffset":47912,"endOffset":48280,"count":35},{"startOffset":47967,"endOffset":48235,"count":472},{"startOffset":48034,"endOffset":48041,"count":35},{"startOffset":48041,"endOffset":48066,"count":437},{"startOffset":48066,"endOffset":48195,"count":0},{"startOffset":48195,"endOffset":48231,"count":437},{"startOffset":48225,"endOffset":48231,"count":0},{"startOffset":48235,"endOffset":48279,"count":0}],"isBlockCoverage":true},{"functionName":"regexCharacterClass","ranges":[{"startOffset":48282,"endOffset":48591,"count":0}],"isBlockCoverage":false},{"functionName":"regularExpression","ranges":[{"startOffset":48593,"endOffset":48954,"count":0}],"isBlockCoverage":false},{"functionName":"isBr","ranges":[{"startOffset":49092,"endOffset":49156,"count":437}],"isBlockCoverage":true},{"functionName":"isBrOrWs","ranges":[{"startOffset":49158,"endOffset":49234,"count":61},{"startOffset":49219,"endOffset":49231,"count":56}],"isBlockCoverage":true},{"functionName":"isBrOrWsOrPunctuatorNotDot","ranges":[{"startOffset":49236,"endOffset":49366,"count":58},{"startOffset":49303,"endOffset":49314,"count":43},{"startOffset":49315,"endOffset":49327,"count":26},{"startOffset":49328,"endOffset":49358,"count":26},{"startOffset":49347,"endOffset":49358,"count":9}],"isBlockCoverage":true},{"functionName":"keywordStart","ranges":[{"startOffset":49368,"endOffset":49477,"count":59},{"startOffset":49417,"endOffset":49474,"count":58}],"isBlockCoverage":true},{"functionName":"readPrecedingKeyword","ranges":[{"startOffset":49479,"endOffset":49716,"count":0}],"isBlockCoverage":false},{"functionName":"readPrecedingKeyword1","ranges":[{"startOffset":49718,"endOffset":49875,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionKeyword","ranges":[{"startOffset":49997,"endOffset":52097,"count":0}],"isBlockCoverage":false},{"functionName":"isParenKeyword","ranges":[{"startOffset":52099,"endOffset":52406,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuator","ranges":[{"startOffset":52408,"endOffset":52695,"count":26},{"startOffset":52585,"endOffset":52606,"count":18},{"startOffset":52607,"endOffset":52623,"count":18},{"startOffset":52629,"endOffset":52641,"count":18},{"startOffset":52647,"endOffset":52659,"count":18},{"startOffset":52665,"endOffset":52692,"count":18},{"startOffset":52681,"endOffset":52692,"count":1}],"isBlockCoverage":true},{"functionName":"isExpressionPunctuator","ranges":[{"startOffset":52697,"endOffset":53000,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionTerminator","ranges":[{"startOffset":53002,"endOffset":53562,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.init","ranges":[{"startOffset":53626,"endOffset":53643,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.initSync","ranges":[{"startOffset":53671,"endOffset":53679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":1}],"isBlockCoverage":true}]},{"scriptId":"119","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"120","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":1}],"isBlockCoverage":true}]},{"scriptId":"121","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"122","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"123","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":1}],"isBlockCoverage":true}]},{"scriptId":"124","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"125","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"126","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"127","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"128","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3027,"count":1}],"isBlockCoverage":true},{"functionName":"exports.main","ranges":[{"startOffset":1374,"endOffset":2820,"count":1},{"startOffset":1727,"endOffset":1810,"count":0},{"startOffset":2553,"endOffset":2557,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2097,"endOffset":2314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/debug@4.4.0_supports-color@8.1.1/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"130","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/debug@4.4.0_supports-color@8.1.1/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":68}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":13},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":13},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/supports-color@8.1.1/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1},{"startOffset":254,"endOffset":278,"count":0},{"startOffset":382,"endOffset":406,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":408,"endOffset":672,"count":2},{"startOffset":462,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":674,"endOffset":832,"count":2},{"startOffset":725,"endOffset":745,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":834,"endOffset":2729,"count":2},{"startOffset":990,"endOffset":1031,"count":0},{"startOffset":1081,"endOffset":1099,"count":0},{"startOffset":1125,"endOffset":1141,"count":0},{"startOffset":1251,"endOffset":1269,"count":0},{"startOffset":1299,"endOffset":1317,"count":0},{"startOffset":1354,"endOffset":1381,"count":0},{"startOffset":1383,"endOffset":1399,"count":0},{"startOffset":1458,"endOffset":1476,"count":0},{"startOffset":1513,"endOffset":1868,"count":0},{"startOffset":1888,"endOffset":2077,"count":0},{"startOffset":2111,"endOffset":2192,"count":0},{"startOffset":2246,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2731,"endOffset":2909,"count":2}],"isBlockCoverage":true}]},{"scriptId":"132","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9564,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2026,"endOffset":2272,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2085,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2654,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2716,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2778,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2841,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2902,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2967,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3020,"endOffset":3039,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3075,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3128,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3181,"endOffset":3201,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3235,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3293,"endOffset":3317,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3352,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3404,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3559,"endOffset":3659,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3939,"endOffset":4368,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4399,"endOffset":4441,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4468,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4518,"endOffset":4568,"count":2}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4599,"endOffset":4621,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4653,"endOffset":5048,"count":2},{"startOffset":4690,"endOffset":5012,"count":0},{"startOffset":5036,"endOffset":5045,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5077,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5128,"endOffset":5175,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5208,"endOffset":5225,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5313,"endOffset":5566,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5568,"endOffset":6513,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6724,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7501,"endOffset":7790,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":7848,"endOffset":8103,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8407,"endOffset":8695,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":32},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"134","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/debug@4.4.0_supports-color@8.1.1/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6912,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6886,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":13},{"startOffset":1108,"endOffset":1213,"count":205}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":13}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":235},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":235},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4433,"count":1},{"startOffset":4196,"endOffset":4208,"count":0},{"startOffset":4311,"endOffset":4430,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTemplate","ranges":[{"startOffset":4626,"endOffset":5653,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":5739,"endOffset":5930,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":6073,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":6416,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6644,"endOffset":6820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ms@2.1.3/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":3},{"startOffset":524,"endOffset":541,"count":2},{"startOffset":543,"endOffset":571,"count":2},{"startOffset":571,"endOffset":678,"count":1},{"startOffset":643,"endOffset":657,"count":0},{"startOffset":678,"endOffset":791,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":2},{"startOffset":983,"endOffset":1000,"count":0},{"startOffset":1179,"endOffset":1196,"count":0},{"startOffset":1298,"endOffset":1311,"count":0},{"startOffset":1316,"endOffset":1328,"count":0},{"startOffset":1333,"endOffset":1344,"count":0},{"startOffset":1349,"endOffset":1359,"count":0},{"startOffset":1364,"endOffset":1393,"count":0},{"startOffset":1398,"endOffset":1411,"count":0},{"startOffset":1416,"endOffset":1428,"count":0},{"startOffset":1433,"endOffset":1462,"count":0},{"startOffset":1467,"endOffset":1479,"count":0},{"startOffset":1484,"endOffset":1495,"count":0},{"startOffset":1500,"endOffset":1529,"count":0},{"startOffset":1534,"endOffset":1547,"count":0},{"startOffset":1552,"endOffset":1564,"count":0},{"startOffset":1569,"endOffset":1580,"count":0},{"startOffset":1585,"endOffset":1595,"count":0},{"startOffset":1600,"endOffset":1629,"count":0},{"startOffset":1634,"endOffset":1649,"count":0},{"startOffset":1654,"endOffset":1668,"count":0},{"startOffset":1673,"endOffset":1685,"count":0},{"startOffset":1690,"endOffset":1701,"count":0},{"startOffset":1706,"endOffset":1735,"count":0},{"startOffset":1740,"endOffset":1755,"count":0},{"startOffset":1760,"endOffset":1774,"count":0},{"startOffset":1779,"endOffset":1791,"count":0},{"startOffset":1796,"endOffset":1807,"count":0},{"startOffset":1812,"endOffset":1841,"count":0},{"startOffset":1846,"endOffset":1866,"count":0},{"startOffset":1871,"endOffset":1890,"count":0},{"startOffset":1895,"endOffset":1908,"count":0},{"startOffset":1913,"endOffset":1925,"count":0},{"startOffset":1961,"endOffset":1993,"count":0}],"isBlockCoverage":true},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":1},{"startOffset":2167,"endOffset":2209,"count":0},{"startOffset":2228,"endOffset":2270,"count":0},{"startOffset":2289,"endOffset":2331,"count":0},{"startOffset":2350,"endOffset":2392,"count":0}],"isBlockCoverage":true},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/log-symbols@4.1.0/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1},{"startOffset":402,"endOffset":412,"count":0}],"isBlockCoverage":true}]},{"scriptId":"137","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chalk@4.1.2/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5968,"endOffset":5971,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":2},{"startOffset":477,"endOffset":558,"count":1},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":729,"endOffset":732,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":2}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":8},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":8},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ansi-styles@4.3.0/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1080,"endOffset":1107,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1239,"endOffset":1594,"count":0},{"startOffset":1614,"endOffset":1794,"count":0},{"startOffset":1828,"endOffset":1909,"count":0},{"startOffset":1963,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chalk@4.1.2/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/is-unicode-supported@0.1.0/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":313,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":311,"count":1},{"startOffset":94,"endOffset":164,"count":0},{"startOffset":165,"endOffset":227,"count":0},{"startOffset":228,"endOffset":270,"count":0},{"startOffset":271,"endOffset":308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"142","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1455,"count":1}],"isBlockCoverage":true},{"functionName":"Argv","ranges":[{"startOffset":272,"endOffset":462,"count":2}],"isBlockCoverage":true},{"functionName":"defineGetter","ranges":[{"startOffset":464,"endOffset":612,"count":14}],"isBlockCoverage":true},{"functionName":"lookupGetter","ranges":[{"startOffset":613,"endOffset":768,"count":2}],"isBlockCoverage":true},{"functionName":"singletonify","ranges":[{"startOffset":1010,"endOffset":1454,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1145,"endOffset":1450,"count":178},{"startOffset":1178,"endOffset":1241,"count":2},{"startOffset":1241,"endOffset":1446,"count":176},{"startOffset":1284,"endOffset":1331,"count":170},{"startOffset":1331,"endOffset":1446,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1370,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1421,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62178,"count":1},{"startOffset":60890,"endOffset":60897,"count":0},{"startOffset":60924,"endOffset":60931,"count":0},{"startOffset":60960,"endOffset":60974,"count":0},{"startOffset":61244,"endOffset":61249,"count":0},{"startOffset":61482,"endOffset":61489,"count":0},{"startOffset":61515,"endOffset":61522,"count":0},{"startOffset":61549,"endOffset":61592,"count":0},{"startOffset":61676,"endOffset":61831,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":59,"endOffset":174,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":186,"endOffset":734,"count":1},{"startOffset":272,"endOffset":691,"count":0},{"startOffset":704,"endOffset":711,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":371,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":483,"endOffset":571,"count":0}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":734,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":926,"endOffset":1377,"count":262},{"startOffset":1037,"endOffset":1082,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1154,"endOffset":1372,"count":540},{"startOffset":1211,"endOffset":1235,"count":2},{"startOffset":1249,"endOffset":1310,"count":248},{"startOffset":1310,"endOffset":1371,"count":292}],"isBlockCoverage":true},{"functionName":"h","ranges":[{"startOffset":1437,"endOffset":2173,"count":260},{"startOffset":1498,"endOffset":1530,"count":2},{"startOffset":1530,"endOffset":1550,"count":258},{"startOffset":1583,"endOffset":1607,"count":306},{"startOffset":1609,"endOffset":1617,"count":52},{"startOffset":1626,"endOffset":1636,"count":4},{"startOffset":1660,"endOffset":1762,"count":0},{"startOffset":1813,"endOffset":1894,"count":0},{"startOffset":2141,"endOffset":2172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1914,"endOffset":2003,"count":291},{"startOffset":1983,"endOffset":1997,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":1974,"count":639},{"startOffset":1965,"endOffset":1974,"count":348}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2026,"endOffset":2138,"count":246},{"startOffset":2046,"endOffset":2053,"count":74},{"startOffset":2053,"endOffset":2118,"count":172},{"startOffset":2118,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2092,"endOffset":2109,"count":217},{"startOffset":2100,"endOffset":2109,"count":54}],"isBlockCoverage":true},{"functionName":"l","ranges":[{"startOffset":2173,"endOffset":2244,"count":463},{"startOffset":2210,"endOffset":2218,"count":32},{"startOffset":2218,"endOffset":2243,"count":431},{"startOffset":2227,"endOffset":2234,"count":0}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":2244,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":2360,"endOffset":2421,"count":30},{"startOffset":2393,"endOffset":2420,"count":6}],"isBlockCoverage":true},{"functionName":"d","ranges":[{"startOffset":2421,"endOffset":2472,"count":6}],"isBlockCoverage":true},{"functionName":"u","ranges":[{"startOffset":2472,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":2528,"endOffset":2564,"count":38}],"isBlockCoverage":true},{"functionName":"g","ranges":[{"startOffset":2564,"endOffset":2656,"count":34}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":2583,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2624,"endOffset":2651,"count":9},{"startOffset":2637,"endOffset":2650,"count":8}],"isBlockCoverage":true},{"functionName":"m","ranges":[{"startOffset":2656,"endOffset":2727,"count":1},{"startOffset":2701,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"y","ranges":[{"startOffset":2727,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"hideBin","ranges":[{"startOffset":2809,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"v","ranges":[{"startOffset":2866,"endOffset":3163,"count":1072},{"startOffset":2896,"endOffset":2900,"count":0},{"startOffset":2901,"endOffset":2970,"count":0},{"startOffset":2993,"endOffset":3003,"count":0},{"startOffset":3014,"endOffset":3110,"count":0},{"startOffset":3123,"endOffset":3125,"count":0},{"startOffset":3133,"endOffset":3143,"count":0},{"startOffset":3145,"endOffset":3153,"count":0}],"isBlockCoverage":true},{"functionName":"O","ranges":[{"startOffset":3163,"endOffset":3524,"count":78},{"startOffset":3196,"endOffset":3250,"count":0},{"startOffset":3260,"endOffset":3264,"count":0},{"startOffset":3265,"endOffset":3334,"count":0},{"startOffset":3357,"endOffset":3367,"count":0},{"startOffset":3378,"endOffset":3473,"count":0},{"startOffset":3486,"endOffset":3498,"count":0},{"startOffset":3500,"endOffset":3510,"count":0}],"isBlockCoverage":true},{"functionName":"w","ranges":[{"startOffset":3532,"endOffset":3601,"count":2}],"isBlockCoverage":true},{"functionName":"addMiddleware","ranges":[{"startOffset":3601,"endOffset":4067,"count":8},{"startOffset":3727,"endOffset":3930,"count":0}],"isBlockCoverage":true},{"functionName":"addCoerceMiddleware","ranges":[{"startOffset":4067,"endOffset":4295,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4183,"endOffset":4250,"count":15}],"isBlockCoverage":true},{"functionName":"getMiddleware","ranges":[{"startOffset":4295,"endOffset":4340,"count":1}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":4340,"endOffset":4395,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":4395,"endOffset":4471,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":4471,"endOffset":4545,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4531,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":4546,"endOffset":4853,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4583,"endOffset":4848,"count":16},{"startOffset":4622,"endOffset":4644,"count":8},{"startOffset":4644,"endOffset":4680,"count":6},{"startOffset":4658,"endOffset":4667,"count":0},{"startOffset":4680,"endOffset":4688,"count":8},{"startOffset":4688,"endOffset":4768,"count":0},{"startOffset":4768,"endOffset":4795,"count":8},{"startOffset":4795,"endOffset":4827,"count":1},{"startOffset":4827,"endOffset":4846,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4703,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4738,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4804,"endOffset":4825,"count":1}],"isBlockCoverage":true},{"functionName":"j","ranges":[{"startOffset":4853,"endOffset":4982,"count":5},{"startOffset":4918,"endOffset":4922,"count":3},{"startOffset":4922,"endOffset":4924,"count":2},{"startOffset":4936,"endOffset":4954,"count":1},{"startOffset":4954,"endOffset":4959,"count":4},{"startOffset":4960,"endOffset":4981,"count":0}],"isBlockCoverage":true},{"functionName":"s","ranges":[{"startOffset":4871,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4945,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"_","ranges":[{"startOffset":5013,"endOffset":5177,"count":2}],"isBlockCoverage":true},{"functionName":"addDirectory","ranges":[{"startOffset":5177,"endOffset":5536,"count":0}],"isBlockCoverage":false},{"functionName":"addHandler","ranges":[{"startOffset":5536,"endOffset":6668,"count":4},{"startOffset":5654,"endOffset":5664,"count":2},{"startOffset":5682,"endOffset":5793,"count":1},{"startOffset":5752,"endOffset":5793,"count":0},{"startOffset":5793,"endOffset":6194,"count":3},{"startOffset":5861,"endOffset":6094,"count":2},{"startOffset":5892,"endOffset":5920,"count":1},{"startOffset":5930,"endOffset":5949,"count":0},{"startOffset":5966,"endOffset":6002,"count":0},{"startOffset":6094,"endOffset":6102,"count":1},{"startOffset":6102,"endOffset":6193,"count":0},{"startOffset":6194,"endOffset":6667,"count":2},{"startOffset":6335,"endOffset":6352,"count":0},{"startOffset":6354,"endOffset":6402,"count":1},{"startOffset":6548,"endOffset":6552,"count":0},{"startOffset":6622,"endOffset":6666,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5577,"endOffset":5644,"count":4},{"startOffset":5597,"endOffset":5640,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5605,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"i","ranges":[{"startOffset":5657,"endOffset":5663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5685,"endOffset":5737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5713,"endOffset":5734,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5801,"endOffset":5857,"count":3},{"startOffset":5837,"endOffset":5856,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6239,"endOffset":6250,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6296,"endOffset":6320,"count":3},{"startOffset":6309,"endOffset":6320,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6414,"endOffset":6441,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandHandlers","ranges":[{"startOffset":6668,"endOffset":6710,"count":0}],"isBlockCoverage":false},{"functionName":"getCommands","ranges":[{"startOffset":6710,"endOffset":6793,"count":2}],"isBlockCoverage":true},{"functionName":"hasDefaultCommand","ranges":[{"startOffset":6793,"endOffset":6841,"count":3}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":6841,"endOffset":7291,"count":1},{"startOffset":7009,"endOffset":7063,"count":0},{"startOffset":7145,"endOffset":7224,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7154,"endOffset":7222,"count":0}],"isBlockCoverage":false},{"functionName":"applyBuilderUpdateUsageAndParse","ranges":[{"startOffset":7291,"endOffset":7841,"count":1},{"startOffset":7479,"endOffset":7604,"count":0},{"startOffset":7605,"endOffset":7796,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7494,"endOffset":7602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7610,"endOffset":7647,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7771,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"parseAndUpdateUsage","ranges":[{"startOffset":7841,"endOffset":8259,"count":1},{"startOffset":8165,"endOffset":8219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8174,"endOffset":8217,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":8259,"endOffset":8413,"count":1}],"isBlockCoverage":true},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":8413,"endOffset":8591,"count":1},{"startOffset":8482,"endOffset":8514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8538,"endOffset":8551,"count":0}],"isBlockCoverage":false},{"functionName":"handleValidationAndGetResult","ranges":[{"startOffset":8591,"endOffset":9288,"count":1},{"startOffset":9037,"endOffset":9099,"count":0},{"startOffset":9244,"endOffset":9285,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8754,"endOffset":8765,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8978,"endOffset":9033,"count":1},{"startOffset":9030,"endOffset":9032,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9023,"endOffset":9028,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9159,"endOffset":9233,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddlewareAndGetResult","ranges":[{"startOffset":9288,"endOffset":9649,"count":1},{"startOffset":9345,"endOffset":9354,"count":0},{"startOffset":9533,"endOffset":9597,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9542,"endOffset":9595,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":9649,"endOffset":10069,"count":1},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9986,"endOffset":9993,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":10069,"endOffset":10195,"count":1},{"startOffset":10153,"endOffset":10194,"count":0}],"isBlockCoverage":true},{"functionName":"cmdToParseOptions","ranges":[{"startOffset":10195,"endOffset":10508,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10299,"endOffset":10397,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10420,"endOffset":10503,"count":1}],"isBlockCoverage":true},{"functionName":"postProcessPositionals","ranges":[{"startOffset":10508,"endOffset":11522,"count":1},{"startOffset":10910,"endOffset":10917,"count":0},{"startOffset":11057,"endOffset":11129,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10791,"endOffset":10897,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10805,"endOffset":10894,"count":1},{"startOffset":10851,"endOffset":10866,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11181,"endOffset":11209,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11241,"endOffset":11518,"count":17},{"startOffset":11258,"endOffset":11517,"count":1},{"startOffset":11265,"endOffset":11283,"count":0},{"startOffset":11330,"endOffset":11501,"count":0}],"isBlockCoverage":true},{"functionName":"isDefaulted","ranges":[{"startOffset":11522,"endOffset":11691,"count":1},{"startOffset":11619,"endOffset":11690,"count":0}],"isBlockCoverage":true},{"functionName":"isInConfigs","ranges":[{"startOffset":11691,"endOffset":11892,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11761,"endOffset":11805,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11817,"endOffset":11889,"count":1}],"isBlockCoverage":true},{"functionName":"runDefaultBuilderOn","ranges":[{"startOffset":11892,"endOffset":12303,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12303,"endOffset":12629,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":12629,"endOffset":12712,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":12712,"endOffset":12848,"count":2},{"startOffset":12781,"endOffset":12839,"count":3},{"startOffset":12803,"endOffset":12811,"count":1},{"startOffset":12812,"endOffset":12821,"count":2},{"startOffset":12821,"endOffset":12839,"count":1},{"startOffset":12839,"endOffset":12847,"count":0}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":12848,"endOffset":12959,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":12959,"endOffset":13106,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":13106,"endOffset":13213,"count":1}],"isBlockCoverage":true},{"functionName":"k","ranges":[{"startOffset":13214,"endOffset":13296,"count":1},{"startOffset":13252,"endOffset":13295,"count":0}],"isBlockCoverage":true},{"functionName":"x","ranges":[{"startOffset":13296,"endOffset":13337,"count":1}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":13337,"endOffset":13525,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":13525,"endOffset":13565,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":13565,"endOffset":21218,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.failFn","ranges":[{"startOffset":13618,"endOffset":13640,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.showHelpOnFail","ranges":[{"startOffset":13681,"endOffset":13806,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.fail","ranges":[{"startOffset":13823,"endOffset":14272,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.usage","ranges":[{"startOffset":14295,"endOffset":14351,"count":1},{"startOffset":14310,"endOffset":14324,"count":0},{"startOffset":14342,"endOffset":14346,"count":0}],"isBlockCoverage":true},{"functionName":"P.n.getUsage","ranges":[{"startOffset":14363,"endOffset":14368,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getUsageDisabled","ranges":[{"startOffset":14388,"endOffset":14393,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getPositionalGroupName","ranges":[{"startOffset":14419,"endOffset":14440,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.example","ranges":[{"startOffset":14460,"endOffset":14486,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.command","ranges":[{"startOffset":14506,"endOffset":14584,"count":2},{"startOffset":14530,"endOffset":14559,"count":1},{"startOffset":14571,"endOffset":14575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14542,"endOffset":14556,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getCommands","ranges":[{"startOffset":14599,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.describe","ranges":[{"startOffset":14625,"endOffset":14766,"count":50},{"startOffset":14655,"endOffset":14689,"count":0},{"startOffset":14708,"endOffset":14758,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14667,"endOffset":14687,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14733,"endOffset":14756,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getDescriptions","ranges":[{"startOffset":14785,"endOffset":14790,"count":45}],"isBlockCoverage":true},{"functionName":"P.n.epilog","ranges":[{"startOffset":14809,"endOffset":14823,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.wrap","ranges":[{"startOffset":14842,"endOffset":14855,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getWrap","ranges":[{"startOffset":14866,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":15037,"endOffset":15258,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":15264,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":15372,"endOffset":15575,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.deferY18nLookup","ranges":[{"startOffset":15593,"endOffset":15599,"count":5}],"isBlockCoverage":true},{"functionName":"P.n.help","ranges":[{"startOffset":15607,"endOffset":20037,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.cacheHelpMessage","ranges":[{"startOffset":20057,"endOffset":20082,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.clearCachedHelpMessage","ranges":[{"startOffset":20108,"endOffset":20128,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.hasCachedHelpMessage","ranges":[{"startOffset":20152,"endOffset":20173,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.showHelp","ranges":[{"startOffset":20185,"endOffset":20295,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.functionDescription","ranges":[{"startOffset":20318,"endOffset":20399,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.stringifiedValues","ranges":[{"startOffset":20420,"endOffset":20555,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.version","ranges":[{"startOffset":20577,"endOffset":20585,"count":4}],"isBlockCoverage":true},{"functionName":"P.n.showVersion","ranges":[{"startOffset":20600,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.reset","ranges":[{"startOffset":20712,"endOffset":20788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20775,"endOffset":20783,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.freeze","ranges":[{"startOffset":20816,"endOffset":20939,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.unfreeze","ranges":[{"startOffset":20951,"endOffset":21215,"count":2},{"startOffset":20987,"endOffset":21213,"count":1}],"isBlockCoverage":true},{"functionName":"S","ranges":[{"startOffset":21218,"endOffset":21257,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":21257,"endOffset":21299,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":21299,"endOffset":21334,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":21342,"endOffset":21745,"count":2},{"startOffset":21622,"endOffset":21629,"count":0},{"startOffset":21648,"endOffset":21728,"count":0}],"isBlockCoverage":true},{"functionName":"defaultCompletion","ranges":[{"startOffset":21745,"endOffset":22183,"count":0}],"isBlockCoverage":false},{"functionName":"commandCompletions","ranges":[{"startOffset":22183,"endOffset":22504,"count":0}],"isBlockCoverage":false},{"functionName":"optionCompletions","ranges":[{"startOffset":22504,"endOffset":22928,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromOptionsCompletions","ranges":[{"startOffset":22928,"endOffset":23100,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromPositionalsCompletions","ranges":[{"startOffset":23100,"endOffset":23519,"count":0}],"isBlockCoverage":false},{"functionName":"getPreviousArgChoices","ranges":[{"startOffset":23519,"endOffset":23941,"count":0}],"isBlockCoverage":false},{"functionName":"previousArgHasChoices","ranges":[{"startOffset":23941,"endOffset":24034,"count":0}],"isBlockCoverage":false},{"functionName":"argsContainKey","ranges":[{"startOffset":24034,"endOffset":24233,"count":0}],"isBlockCoverage":false},{"functionName":"completeOptionKey","ranges":[{"startOffset":24233,"endOffset":24764,"count":0}],"isBlockCoverage":false},{"functionName":"customCompletion","ranges":[{"startOffset":24764,"endOffset":25283,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletion","ranges":[{"startOffset":25283,"endOffset":25489,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":25489,"endOffset":27133,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunction","ranges":[{"startOffset":27133,"endOffset":27185,"count":0}],"isBlockCoverage":false},{"functionName":"setParsed","ranges":[{"startOffset":27185,"endOffset":27221,"count":1}],"isBlockCoverage":true},{"functionName":"N","ranges":[{"startOffset":27222,"endOffset":27674,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":28887,"endOffset":29895,"count":2}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":29895,"endOffset":30205,"count":3},{"startOffset":29985,"endOffset":30031,"count":1},{"startOffset":30038,"endOffset":30050,"count":0},{"startOffset":30080,"endOffset":30082,"count":1},{"startOffset":30082,"endOffset":30089,"count":2},{"startOffset":30152,"endOffset":30197,"count":2}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":30205,"endOffset":30243,"count":3}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":30243,"endOffset":30529,"count":0}],"isBlockCoverage":false},{"functionName":"showHidden","ranges":[{"startOffset":30529,"endOffset":30579,"count":0}],"isBlockCoverage":false},{"functionName":"alias","ranges":[{"startOffset":30579,"endOffset":30711,"count":23}],"isBlockCoverage":true},{"functionName":"array","ranges":[{"startOffset":30711,"endOffset":30805,"count":1}],"isBlockCoverage":true},{"functionName":"boolean","ranges":[{"startOffset":30805,"endOffset":30903,"count":7}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":30903,"endOffset":31275,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30987,"endOffset":31262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30997,"endOffset":31020,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31023,"endOffset":31195,"count":1},{"startOffset":31069,"endOffset":31192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31198,"endOffset":31260,"count":0}],"isBlockCoverage":false},{"functionName":"choices","ranges":[{"startOffset":31275,"endOffset":31413,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":31413,"endOffset":32093,"count":6},{"startOffset":31506,"endOffset":31607,"count":0},{"startOffset":31629,"endOffset":31692,"count":0},{"startOffset":31698,"endOffset":31746,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31813,"endOffset":32083,"count":6},{"startOffset":31875,"endOffset":32080,"count":2},{"startOffset":32080,"endOffset":32082,"count":4}],"isBlockCoverage":true},{"functionName":"Object.hasOwnProperty.call.i.<computed>","ranges":[{"startOffset":31879,"endOffset":31909,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31912,"endOffset":32048,"count":2},{"startOffset":32012,"endOffset":32039,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32051,"endOffset":32078,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":32093,"endOffset":32209,"count":4}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":32209,"endOffset":32699,"count":2},{"startOffset":32332,"endOffset":32545,"count":1},{"startOffset":32372,"endOffset":32388,"count":0},{"startOffset":32485,"endOffset":32487,"count":0},{"startOffset":32545,"endOffset":32698,"count":1},{"startOffset":32677,"endOffset":32681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32502,"endOffset":32537,"count":1}],"isBlockCoverage":true},{"functionName":"completion","ranges":[{"startOffset":32699,"endOffset":32998,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":32998,"endOffset":33198,"count":2}],"isBlockCoverage":true},{"functionName":"commands","ranges":[{"startOffset":33198,"endOffset":33253,"count":0}],"isBlockCoverage":false},{"functionName":"commandDir","ranges":[{"startOffset":33253,"endOffset":33439,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":33439,"endOffset":33533,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":33533,"endOffset":33907,"count":9},{"startOffset":33621,"endOffset":33683,"count":0},{"startOffset":33704,"endOffset":33853,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":33907,"endOffset":33950,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":33950,"endOffset":34210,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":34210,"endOffset":34593,"count":0}],"isBlockCoverage":false},{"functionName":"demandOption","ranges":[{"startOffset":34593,"endOffset":34743,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateOption","ranges":[{"startOffset":34743,"endOffset":34868,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":34868,"endOffset":34997,"count":50}],"isBlockCoverage":true},{"functionName":"detectLocale","ranges":[{"startOffset":34997,"endOffset":35077,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":35077,"endOffset":35209,"count":0}],"isBlockCoverage":false},{"functionName":"epilogue","ranges":[{"startOffset":35209,"endOffset":35293,"count":1}],"isBlockCoverage":true},{"functionName":"epilog","ranges":[{"startOffset":35293,"endOffset":35327,"count":1}],"isBlockCoverage":true},{"functionName":"example","ranges":[{"startOffset":35327,"endOffset":35484,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":35484,"endOffset":35573,"count":0}],"isBlockCoverage":false},{"functionName":"exitProcess","ranges":[{"startOffset":35573,"endOffset":35655,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":35655,"endOffset":35852,"count":1},{"startOffset":35730,"endOffset":35738,"count":0},{"startOffset":35739,"endOffset":35815,"count":0}],"isBlockCoverage":true},{"functionName":"getAliases","ranges":[{"startOffset":35852,"endOffset":35907,"count":8},{"startOffset":35883,"endOffset":35903,"count":2},{"startOffset":35903,"endOffset":35906,"count":6}],"isBlockCoverage":true},{"functionName":"getCompletion","ranges":[{"startOffset":35907,"endOffset":36099,"count":0}],"isBlockCoverage":false},{"functionName":"getDemandedOptions","ranges":[{"startOffset":36099,"endOffset":36166,"count":1}],"isBlockCoverage":true},{"functionName":"getDemandedCommands","ranges":[{"startOffset":36166,"endOffset":36235,"count":1}],"isBlockCoverage":true},{"functionName":"getDeprecatedOptions","ranges":[{"startOffset":36235,"endOffset":36306,"count":0}],"isBlockCoverage":false},{"functionName":"getDetectLocale","ranges":[{"startOffset":36306,"endOffset":36345,"count":0}],"isBlockCoverage":false},{"functionName":"getExitProcess","ranges":[{"startOffset":36345,"endOffset":36383,"count":0}],"isBlockCoverage":false},{"functionName":"getGroups","ranges":[{"startOffset":36383,"endOffset":36449,"count":0}],"isBlockCoverage":false},{"functionName":"getHelp","ranges":[{"startOffset":36449,"endOffset":36784,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":36784,"endOffset":36819,"count":6}],"isBlockCoverage":true},{"functionName":"getStrict","ranges":[{"startOffset":36819,"endOffset":36853,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictCommands","ranges":[{"startOffset":36853,"endOffset":36895,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptions","ranges":[{"startOffset":36895,"endOffset":36936,"count":0}],"isBlockCoverage":false},{"functionName":"global","ranges":[{"startOffset":36936,"endOffset":37189,"count":14},{"startOffset":37102,"endOffset":37183,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37080,"endOffset":37100,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37114,"endOffset":37181,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":37189,"endOffset":37428,"count":41},{"startOffset":37313,"endOffset":37339,"count":0},{"startOffset":37377,"endOffset":37381,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37401,"endOffset":37420,"count":257}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":37428,"endOffset":37520,"count":1}],"isBlockCoverage":true},{"functionName":"implies","ranges":[{"startOffset":37520,"endOffset":37639,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":37639,"endOffset":37804,"count":0}],"isBlockCoverage":false},{"functionName":"middleware","ranges":[{"startOffset":37804,"endOffset":37866,"count":2}],"isBlockCoverage":true},{"functionName":"nargs","ranges":[{"startOffset":37866,"endOffset":37991,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":37991,"endOffset":38081,"count":2}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":38081,"endOffset":38177,"count":1}],"isBlockCoverage":true},{"functionName":"option","ranges":[{"startOffset":38177,"endOffset":40145,"count":44},{"startOffset":38264,"endOffset":38316,"count":1},{"startOffset":38316,"endOffset":40133,"count":43},{"startOffset":38339,"endOffset":38347,"count":0},{"startOffset":38412,"endOffset":38419,"count":0},{"startOffset":38428,"endOffset":38772,"count":0},{"startOffset":38805,"endOffset":38828,"count":0},{"startOffset":38864,"endOffset":38891,"count":0},{"startOffset":38933,"endOffset":38951,"count":0},{"startOffset":38966,"endOffset":39042,"count":0},{"startOffset":39054,"endOffset":39085,"count":4},{"startOffset":39099,"endOffset":39126,"count":9},{"startOffset":39145,"endOffset":39172,"count":0},{"startOffset":39189,"endOffset":39212,"count":0},{"startOffset":39221,"endOffset":39252,"count":1},{"startOffset":39264,"endOffset":39283,"count":2},{"startOffset":39293,"endOffset":39320,"count":0},{"startOffset":39329,"endOffset":39354,"count":6},{"startOffset":39362,"endOffset":39385,"count":40},{"startOffset":39417,"endOffset":39467,"count":0},{"startOffset":39495,"endOffset":39541,"count":0},{"startOffset":39571,"endOffset":39619,"count":0},{"startOffset":39649,"endOffset":39697,"count":0},{"startOffset":39725,"endOffset":39740,"count":0},{"startOffset":39767,"endOffset":39792,"count":0},{"startOffset":39813,"endOffset":39874,"count":5},{"startOffset":39891,"endOffset":39915,"count":0},{"startOffset":39949,"endOffset":39957,"count":0},{"startOffset":40034,"endOffset":40054,"count":1},{"startOffset":40083,"endOffset":40097,"count":1},{"startOffset":40111,"endOffset":40132,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38288,"endOffset":38313,"count":42}],"isBlockCoverage":true},{"functionName":"options","ranges":[{"startOffset":40145,"endOffset":40182,"count":43}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":40182,"endOffset":40870,"count":1},{"startOffset":40298,"endOffset":40318,"count":0},{"startOffset":40337,"endOffset":40361,"count":0},{"startOffset":40382,"endOffset":40407,"count":0},{"startOffset":40442,"endOffset":40460,"count":0},{"startOffset":40767,"endOffset":40869,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40556,"endOffset":40635,"count":1},{"startOffset":40574,"endOffset":40632,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40645,"endOffset":40723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40735,"endOffset":40765,"count":1}],"isBlockCoverage":true},{"functionName":"parseAsync","ranges":[{"startOffset":40870,"endOffset":40947,"count":0}],"isBlockCoverage":false},{"functionName":"parseSync","ranges":[{"startOffset":40947,"endOffset":41104,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":41104,"endOffset":41191,"count":1}],"isBlockCoverage":true},{"functionName":"pkgConf","ranges":[{"startOffset":41191,"endOffset":41491,"count":0}],"isBlockCoverage":false},{"functionName":"positional","ranges":[{"startOffset":41491,"endOffset":42122,"count":1},{"startOffset":41858,"endOffset":41893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41701,"endOffset":41780,"count":3},{"startOffset":41720,"endOffset":41764,"count":1},{"startOffset":41765,"endOffset":41780,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41956,"endOffset":42048,"count":4},{"startOffset":41989,"endOffset":42018,"count":1},{"startOffset":42007,"endOffset":42018,"count":0},{"startOffset":42018,"endOffset":42047,"count":3},{"startOffset":42023,"endOffset":42047,"count":0}],"isBlockCoverage":true},{"functionName":"recommendCommands","ranges":[{"startOffset":42122,"endOffset":42211,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":42211,"endOffset":42253,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":42253,"endOffset":42294,"count":0}],"isBlockCoverage":false},{"functionName":"requiresArg","ranges":[{"startOffset":42294,"endOffset":42473,"count":14}],"isBlockCoverage":true},{"functionName":"showCompletionScript","ranges":[{"startOffset":42473,"endOffset":42662,"count":0}],"isBlockCoverage":false},{"functionName":"showHelp","ranges":[{"startOffset":42662,"endOffset":43060,"count":0}],"isBlockCoverage":false},{"functionName":"scriptName","ranges":[{"startOffset":43060,"endOffset":43121,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFail","ranges":[{"startOffset":43121,"endOffset":43242,"count":0}],"isBlockCoverage":false},{"functionName":"showVersion","ranges":[{"startOffset":43242,"endOffset":43343,"count":0}],"isBlockCoverage":false},{"functionName":"skipValidation","ranges":[{"startOffset":43343,"endOffset":43443,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":43443,"endOffset":43523,"count":0}],"isBlockCoverage":false},{"functionName":"strictCommands","ranges":[{"startOffset":43523,"endOffset":43611,"count":0}],"isBlockCoverage":false},{"functionName":"strictOptions","ranges":[{"startOffset":43611,"endOffset":43698,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":43698,"endOffset":43794,"count":1}],"isBlockCoverage":true},{"functionName":"terminalWidth","ranges":[{"startOffset":43794,"endOffset":43859,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":43859,"endOffset":43904,"count":0}],"isBlockCoverage":false},{"functionName":"updateStrings","ranges":[{"startOffset":43904,"endOffset":44021,"count":1}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":44021,"endOffset":44366,"count":0}],"isBlockCoverage":false},{"functionName":"usageConfiguration","ranges":[{"startOffset":44366,"endOffset":44452,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":44452,"endOffset":44991,"count":3},{"startOffset":44567,"endOffset":44646,"count":1},{"startOffset":44668,"endOffset":44685,"count":2},{"startOffset":44685,"endOffset":44787,"count":1},{"startOffset":44714,"endOffset":44745,"count":0},{"startOffset":44770,"endOffset":44786,"count":0},{"startOffset":44824,"endOffset":44826,"count":0},{"startOffset":44835,"endOffset":44890,"count":2},{"startOffset":44915,"endOffset":44923,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":44991,"endOffset":45084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45084,"endOffset":45695,"count":1},{"startOffset":45629,"endOffset":45694,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45695,"endOffset":46036,"count":2}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":45713,"endOffset":45869,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":45876,"endOffset":46034,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46036,"endOffset":46266,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46071,"endOffset":46220,"count":44},{"startOffset":46098,"endOffset":46105,"count":2},{"startOffset":46105,"endOffset":46147,"count":42},{"startOffset":46147,"endOffset":46187,"count":18},{"startOffset":46161,"endOffset":46187,"count":2},{"startOffset":46187,"endOffset":46219,"count":24},{"startOffset":46206,"endOffset":46219,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46266,"endOffset":46358,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46358,"endOffset":46856,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46856,"endOffset":47374,"count":2},{"startOffset":46996,"endOffset":47037,"count":0},{"startOffset":47193,"endOffset":47371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47047,"endOffset":47147,"count":2},{"startOffset":47144,"endOffset":47146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47374,"endOffset":47403,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47403,"endOffset":47432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47432,"endOffset":47653,"count":2},{"startOffset":47464,"endOffset":47616,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47653,"endOffset":47697,"count":2},{"startOffset":47685,"endOffset":47696,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47697,"endOffset":47891,"count":1},{"startOffset":47720,"endOffset":47728,"count":0},{"startOffset":47769,"endOffset":47882,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47891,"endOffset":48310,"count":2},{"startOffset":47935,"endOffset":47960,"count":0},{"startOffset":48251,"endOffset":48261,"count":0},{"startOffset":48287,"endOffset":48291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48114,"endOffset":48169,"count":6},{"startOffset":48147,"endOffset":48162,"count":2},{"startOffset":48162,"endOffset":48169,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48310,"endOffset":48393,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48346,"endOffset":48390,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48393,"endOffset":48461,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48425,"endOffset":48458,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48461,"endOffset":48564,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48493,"endOffset":48561,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48564,"endOffset":48714,"count":96},{"startOffset":48600,"endOffset":48625,"count":0},{"startOffset":48660,"endOffset":48690,"count":1},{"startOffset":48680,"endOffset":48690,"count":20},{"startOffset":48690,"endOffset":48713,"count":95}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48611,"endOffset":48622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48634,"endOffset":48655,"count":96}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48714,"endOffset":48760,"count":146},{"startOffset":48743,"endOffset":48757,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48760,"endOffset":48822,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48822,"endOffset":49732,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49013,"endOffset":49040,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49077,"endOffset":49103,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49119,"endOffset":49145,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49161,"endOffset":49188,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49207,"endOffset":49233,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49252,"endOffset":49278,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49313,"endOffset":49340,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49364,"endOffset":49391,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49414,"endOffset":49441,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49468,"endOffset":49494,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49511,"endOffset":49538,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49560,"endOffset":49587,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49732,"endOffset":49768,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalMethods","ranges":[{"startOffset":49768,"endOffset":50389,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50389,"endOffset":50417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50417,"endOffset":50445,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50445,"endOffset":50473,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50473,"endOffset":50501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50501,"endOffset":50534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50534,"endOffset":50563,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50563,"endOffset":50592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50592,"endOffset":50622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50622,"endOffset":50650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50650,"endOffset":50879,"count":3},{"startOffset":50669,"endOffset":50678,"count":1},{"startOffset":50678,"endOffset":50686,"count":2},{"startOffset":50686,"endOffset":50713,"count":1},{"startOffset":50759,"endOffset":50808,"count":1},{"startOffset":50809,"endOffset":50826,"count":1},{"startOffset":50828,"endOffset":50876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50879,"endOffset":57436,"count":3},{"startOffset":50914,"endOffset":50918,"count":2},{"startOffset":50963,"endOffset":50967,"count":2},{"startOffset":51012,"endOffset":51016,"count":2},{"startOffset":51691,"endOffset":51715,"count":1},{"startOffset":51715,"endOffset":51738,"count":2},{"startOffset":51768,"endOffset":51792,"count":1},{"startOffset":51792,"endOffset":57044,"count":2},{"startOffset":57072,"endOffset":57094,"count":1},{"startOffset":57094,"endOffset":57195,"count":2},{"startOffset":57214,"endOffset":57320,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51045,"endOffset":51092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51159,"endOffset":51245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51375,"endOffset":51427,"count":24},{"startOffset":51402,"endOffset":51406,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51416,"endOffset":51424,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51569,"endOffset":51610,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51599,"endOffset":51607,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51793,"endOffset":57008,"count":2}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51858,"endOffset":52604,"count":1},{"startOffset":51923,"endOffset":51938,"count":0},{"startOffset":51997,"endOffset":52603,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":52621,"endOffset":52783,"count":1},{"startOffset":52638,"endOffset":52782,"count":0}],"isBlockCoverage":true},{"functionName":"requiredArguments","ranges":[{"startOffset":52802,"endOffset":53192,"count":1},{"startOffset":52857,"endOffset":52935,"count":0},{"startOffset":52940,"endOffset":53191,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":53210,"endOffset":54009,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":54026,"endOffset":54359,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":54388,"endOffset":54564,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":54580,"endOffset":55078,"count":1},{"startOffset":54661,"endOffset":55077,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54685,"endOffset":54861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54945,"endOffset":55065,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":55089,"endOffset":55318,"count":0}],"isBlockCoverage":false},{"functionName":"r.implies","ranges":[{"startOffset":55328,"endOffset":55583,"count":0}],"isBlockCoverage":false},{"functionName":"r.getImplied","ranges":[{"startOffset":55597,"endOffset":55617,"count":0}],"isBlockCoverage":false},{"functionName":"r.implications","ranges":[{"startOffset":55633,"endOffset":55877,"count":1},{"startOffset":55803,"endOffset":55876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55683,"endOffset":55791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55854,"endOffset":55863,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicts","ranges":[{"startOffset":55899,"endOffset":56135,"count":14},{"startOffset":55990,"endOffset":56041,"count":0},{"startOffset":56059,"endOffset":56070,"count":4},{"startOffset":56087,"endOffset":56120,"count":2},{"startOffset":56120,"endOffset":56133,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56015,"endOffset":56039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56099,"endOffset":56118,"count":10}],"isBlockCoverage":true},{"functionName":"r.getConflicting","ranges":[{"startOffset":56153,"endOffset":56158,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicting","ranges":[{"startOffset":56173,"endOffset":56586,"count":1},{"startOffset":56399,"endOffset":56585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56209,"endOffset":56333,"count":18},{"startOffset":56217,"endOffset":56332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56233,"endOffset":56330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56425,"endOffset":56583,"count":0}],"isBlockCoverage":false},{"functionName":"r.recommendCommands","ranges":[{"startOffset":56607,"endOffset":56783,"count":0}],"isBlockCoverage":false},{"functionName":"r.reset","ranges":[{"startOffset":56792,"endOffset":56849,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56818,"endOffset":56826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56836,"endOffset":56844,"count":0}],"isBlockCoverage":false},{"functionName":"r.freeze","ranges":[{"startOffset":56877,"endOffset":56922,"count":1}],"isBlockCoverage":true},{"functionName":"r.unfreeze","ranges":[{"startOffset":56934,"endOffset":57005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57095,"endOffset":57135,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57225,"endOffset":57265,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57436,"endOffset":57487,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57487,"endOffset":59870,"count":2},{"startOffset":57517,"endOffset":57520,"count":1},{"startOffset":57524,"endOffset":57540,"count":1},{"startOffset":58128,"endOffset":58156,"count":0},{"startOffset":58213,"endOffset":58217,"count":0},{"startOffset":58273,"endOffset":58291,"count":0},{"startOffset":58417,"endOffset":58735,"count":1},{"startOffset":58495,"endOffset":58514,"count":0},{"startOffset":58515,"endOffset":58601,"count":0},{"startOffset":58672,"endOffset":58734,"count":0},{"startOffset":58748,"endOffset":58846,"count":0},{"startOffset":58883,"endOffset":58887,"count":1},{"startOffset":58888,"endOffset":58980,"count":1},{"startOffset":58980,"endOffset":59239,"count":0},{"startOffset":59239,"endOffset":59400,"count":1},{"startOffset":59259,"endOffset":59321,"count":0},{"startOffset":59323,"endOffset":59399,"count":0},{"startOffset":59403,"endOffset":59529,"count":0},{"startOffset":59533,"endOffset":59760,"count":0},{"startOffset":59761,"endOffset":59832,"count":0},{"startOffset":59832,"endOffset":59855,"count":1},{"startOffset":59855,"endOffset":59857,"count":0},{"startOffset":59857,"endOffset":59859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57965,"endOffset":58031,"count":31},{"startOffset":57986,"endOffset":57997,"count":0},{"startOffset":58016,"endOffset":58030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58227,"endOffset":58240,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59120,"endOffset":59214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59469,"endOffset":59526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59709,"endOffset":59755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59870,"endOffset":60315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59930,"endOffset":60314,"count":1},{"startOffset":59939,"endOffset":59962,"count":0},{"startOffset":60056,"endOffset":60095,"count":0},{"startOffset":60110,"endOffset":60157,"count":0},{"startOffset":60172,"endOffset":60219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60315,"endOffset":60339,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60339,"endOffset":60441,"count":53},{"startOffset":60369,"endOffset":60394,"count":49},{"startOffset":60394,"endOffset":60440,"count":4},{"startOffset":60416,"endOffset":60440,"count":43}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":60733,"endOffset":60750,"count":4}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":61020,"endOffset":61036,"count":4}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":61065,"endOffset":61096,"count":0}],"isBlockCoverage":false},{"functionName":"execPath","ranges":[{"startOffset":61106,"endOffset":61126,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":61132,"endOffset":61152,"count":0}],"isBlockCoverage":false},{"functionName":"ue.Yargs","ranges":[{"startOffset":61923,"endOffset":62074,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":62021,"endOffset":62034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22957,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2164,"endOffset":2348,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":2901,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3178,"endOffset":4159,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":4406,"endOffset":4467,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":4726,"endOffset":5098,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":5317,"endOffset":5693,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":5893,"endOffset":6258,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":6464,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":7080,"endOffset":7469,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":7718,"endOffset":8115,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":8320,"endOffset":8633,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":8845,"endOffset":9166,"count":6},{"startOffset":8926,"endOffset":8985,"count":0},{"startOffset":9020,"endOffset":9164,"count":0}],"isBlockCoverage":true},{"functionName":"Comparison","ranges":[{"startOffset":9190,"endOffset":9572,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":9576,"endOffset":10295,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":10297,"endOffset":13680,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":13682,"endOffset":13822,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":13824,"endOffset":14188,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":14190,"endOffset":14904,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":14906,"endOffset":16515,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":16517,"endOffset":17135,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":17137,"endOffset":17779,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":17937,"endOffset":18031,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":18210,"endOffset":18322,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":18484,"endOffset":18578,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":18744,"endOffset":18856,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":18984,"endOffset":20773,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":20776,"endOffset":21859,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":22055,"endOffset":22147,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":22355,"endOffset":22461,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":22652,"endOffset":22721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17314,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1451,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1671,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":2281,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2379,"endOffset":11135,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11137,"endOffset":11440,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11481,"endOffset":16343,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16347,"endOffset":16422,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16426,"endOffset":17277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"node:internal/assert/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9582,"count":1}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":1504,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":1555,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":2497,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":4144,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":5563,"endOffset":8945,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":8947,"endOffset":9547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":487,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1515,"endOffset":3420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"148","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/y18n@5.0.8/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6783,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":123,"endOffset":611,"count":1},{"startOffset":196,"endOffset":201,"count":0},{"startOffset":243,"endOffset":257,"count":0},{"startOffset":343,"endOffset":349,"count":0},{"startOffset":473,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":616,"endOffset":1683,"count":1},{"startOffset":676,"endOffset":755,"count":0},{"startOffset":913,"endOffset":929,"count":0},{"startOffset":946,"endOffset":964,"count":0},{"startOffset":1025,"endOffset":1048,"count":0},{"startOffset":1157,"endOffset":1176,"count":0},{"startOffset":1178,"endOffset":1535,"count":0},{"startOffset":1655,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":807,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":949,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1688,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3216,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":3276,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3328,"endOffset":3607,"count":1},{"startOffset":3453,"endOffset":3601,"count":3}],"isBlockCoverage":true},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3612,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3957,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4106,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4751,"endOffset":5465,"count":1},{"startOffset":5145,"endOffset":5411,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5470,"endOffset":5946,"count":1},{"startOffset":5645,"endOffset":5672,"count":0},{"startOffset":5674,"endOffset":5919,"count":0}],"isBlockCoverage":true},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5951,"endOffset":6014,"count":1}],"isBlockCoverage":true},{"functionName":"y18n$1","ranges":[{"startOffset":6017,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6537,"endOffset":6683,"count":1},{"startOffset":6628,"endOffset":6677,"count":0}],"isBlockCoverage":true},{"functionName":"y18n","ranges":[{"startOffset":6701,"endOffset":6757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/yargs-parser@21.1.1/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42891,"count":1},{"startOffset":41288,"endOffset":41332,"count":0},{"startOffset":41414,"endOffset":41422,"count":0},{"startOffset":41469,"endOffset":41477,"count":0},{"startOffset":41520,"endOffset":41643,"count":0},{"startOffset":41756,"endOffset":41954,"count":0},{"startOffset":41991,"endOffset":41995,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":980,"count":42},{"startOffset":172,"endOffset":200,"count":0},{"startOffset":297,"endOffset":323,"count":1},{"startOffset":325,"endOffset":352,"count":1},{"startOffset":352,"endOffset":978,"count":41},{"startOffset":511,"endOffset":537,"count":0},{"startOffset":564,"endOffset":946,"count":522},{"startOffset":633,"endOffset":727,"count":47},{"startOffset":752,"endOffset":783,"count":481},{"startOffset":768,"endOffset":782,"count":434},{"startOffset":785,"endOffset":837,"count":47},{"startOffset":837,"endOffset":936,"count":475}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":981,"endOffset":1474,"count":36},{"startOffset":1089,"endOffset":1095,"count":0},{"startOffset":1165,"endOffset":1447,"count":412},{"startOffset":1289,"endOffset":1297,"count":42},{"startOffset":1299,"endOffset":1377,"count":42},{"startOffset":1377,"endOffset":1441,"count":370}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1475,"endOffset":1786,"count":37},{"startOffset":1552,"endOffset":1565,"count":0},{"startOffset":1605,"endOffset":1617,"count":0},{"startOffset":1660,"endOffset":1672,"count":0},{"startOffset":1707,"endOffset":1720,"count":0}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1788,"endOffset":2573,"count":6},{"startOffset":1862,"endOffset":1940,"count":5},{"startOffset":1940,"endOffset":2125,"count":1},{"startOffset":2125,"endOffset":2554,"count":0},{"startOffset":2554,"endOffset":2572,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1893,"endOffset":1932,"count":27},{"startOffset":1920,"endOffset":1928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2605,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2941,"endOffset":2992,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":39582,"count":6},{"startOffset":4702,"endOffset":4707,"count":0},{"startOffset":4855,"endOffset":4861,"count":2},{"startOffset":4862,"endOffset":4867,"count":4},{"startOffset":4991,"endOffset":5006,"count":3},{"startOffset":5665,"endOffset":5670,"count":0},{"startOffset":6308,"endOffset":6313,"count":0},{"startOffset":6469,"endOffset":6474,"count":0},{"startOffset":6632,"endOffset":6637,"count":0},{"startOffset":6794,"endOffset":6799,"count":3},{"startOffset":6959,"endOffset":6964,"count":3},{"startOffset":7431,"endOffset":7687,"count":3},{"startOffset":7736,"endOffset":8310,"count":3},{"startOffset":7817,"endOffset":7979,"count":0},{"startOffset":8807,"endOffset":16076,"count":18},{"startOffset":9086,"endOffset":9114,"count":14},{"startOffset":9116,"endOffset":9168,"count":0},{"startOffset":9224,"endOffset":9302,"count":0},{"startOffset":9410,"endOffset":9972,"count":0},{"startOffset":10020,"endOffset":10056,"count":2},{"startOffset":10058,"endOffset":10328,"count":2},{"startOffset":10277,"endOffset":10286,"count":0},{"startOffset":10328,"endOffset":16066,"count":16},{"startOffset":10369,"endOffset":10435,"count":4},{"startOffset":10437,"endOffset":11646,"count":12},{"startOffset":10645,"endOffset":10720,"count":5},{"startOffset":10720,"endOffset":11614,"count":7},{"startOffset":10795,"endOffset":10870,"count":4},{"startOffset":10870,"endOffset":11614,"count":3},{"startOffset":11064,"endOffset":11129,"count":0},{"startOffset":11130,"endOffset":11196,"count":0},{"startOffset":11198,"endOffset":11305,"count":0},{"startOffset":11368,"endOffset":11475,"count":0},{"startOffset":11646,"endOffset":16066,"count":4},{"startOffset":11691,"endOffset":11890,"count":0},{"startOffset":11933,"endOffset":11956,"count":0},{"startOffset":11958,"endOffset":12565,"count":0},{"startOffset":12608,"endOffset":12631,"count":0},{"startOffset":12633,"endOffset":15492,"count":0},{"startOffset":15536,"endOffset":15574,"count":0},{"startOffset":15575,"endOffset":15636,"count":0},{"startOffset":15638,"endOffset":15737,"count":0},{"startOffset":15773,"endOffset":15857,"count":0},{"startOffset":15916,"endOffset":15996,"count":0},{"startOffset":16361,"endOffset":16386,"count":0},{"startOffset":16564,"endOffset":16582,"count":2},{"startOffset":16596,"endOffset":16620,"count":0},{"startOffset":16767,"endOffset":16799,"count":3},{"startOffset":16801,"endOffset":16958,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5696,"endOffset":6274,"count":51},{"startOffset":5761,"endOffset":5770,"count":0},{"startOffset":6130,"endOffset":6192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5830,"endOffset":6077,"count":429}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6339,"endOffset":6436,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6500,"endOffset":6599,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6663,"endOffset":6762,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6825,"endOffset":6923,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6990,"endOffset":7091,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7185,"endOffset":7373,"count":88}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7481,"endOffset":7675,"count":129}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7882,"endOffset":7963,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8088,"endOffset":8284,"count":1},{"startOffset":8159,"endOffset":8189,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8419,"endOffset":8576,"count":26},{"startOffset":8468,"endOffset":8473,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8483,"endOffset":8564,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16429,"endOffset":16534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16646,"endOffset":16714,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16840,"endOffset":16880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16890,"endOffset":16946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17055,"endOffset":17070,"count":107}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17081,"endOffset":17333,"count":121},{"startOffset":17150,"endOffset":17172,"count":52},{"startOffset":17174,"endOffset":17283,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17229,"endOffset":17252,"count":2}],"isBlockCoverage":true},{"functionName":"pushPositional","ranges":[{"startOffset":17354,"endOffset":17625,"count":4},{"startOffset":17508,"endOffset":17549,"count":0}],"isBlockCoverage":true},{"functionName":"eatNargs","ranges":[{"startOffset":17634,"endOffset":19255,"count":4},{"startOffset":17828,"endOffset":17831,"count":0},{"startOffset":17870,"endOffset":18107,"count":0},{"startOffset":18171,"endOffset":18174,"count":0},{"startOffset":18229,"endOffset":18444,"count":0},{"startOffset":18521,"endOffset":18748,"count":8},{"startOffset":18575,"endOffset":18602,"count":4},{"startOffset":18603,"endOffset":18636,"count":4},{"startOffset":18662,"endOffset":18730,"count":4},{"startOffset":18808,"endOffset":18869,"count":0},{"startOffset":18987,"endOffset":19002,"count":0},{"startOffset":19004,"endOffset":19095,"count":0}],"isBlockCoverage":true},{"functionName":"eatArray","ranges":[{"startOffset":19264,"endOffset":21069,"count":5},{"startOffset":19522,"endOffset":19555,"count":0},{"startOffset":19557,"endOffset":19610,"count":0},{"startOffset":19720,"endOffset":19743,"count":0},{"startOffset":19744,"endOffset":19774,"count":0},{"startOffset":19777,"endOffset":19986,"count":0},{"startOffset":20059,"endOffset":20158,"count":0},{"startOffset":20220,"endOffset":20729,"count":8},{"startOffset":20279,"endOffset":20302,"count":0},{"startOffset":20343,"endOffset":20376,"count":7},{"startOffset":20377,"endOffset":20410,"count":7},{"startOffset":20437,"endOffset":20443,"count":3},{"startOffset":20443,"endOffset":20521,"count":5},{"startOffset":20521,"endOffset":20544,"count":0},{"startOffset":20545,"endOffset":20575,"count":0},{"startOffset":20601,"endOffset":20607,"count":0},{"startOffset":20607,"endOffset":20729,"count":5},{"startOffset":20791,"endOffset":20906,"count":4},{"startOffset":20879,"endOffset":20904,"count":0},{"startOffset":20908,"endOffset":21001,"count":0}],"isBlockCoverage":true},{"functionName":"setArg","ranges":[{"startOffset":21078,"endOffset":22995,"count":62},{"startOffset":21171,"endOffset":21211,"count":6},{"startOffset":21213,"endOffset":21410,"count":3},{"startOffset":21604,"endOffset":21809,"count":43},{"startOffset":21846,"endOffset":21878,"count":0},{"startOffset":21880,"endOffset":22357,"count":0},{"startOffset":22412,"endOffset":22450,"count":2},{"startOffset":22452,"endOffset":22985,"count":2},{"startOffset":22515,"endOffset":22520,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21264,"endOffset":21343,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21649,"endOffset":21793,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21941,"endOffset":22341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22552,"endOffset":22969,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22696,"endOffset":22769,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":22795,"endOffset":22927,"count":9},{"startOffset":22868,"endOffset":22892,"count":0}],"isBlockCoverage":true},{"functionName":"addNewAlias","ranges":[{"startOffset":23004,"endOffset":23349,"count":4},{"startOffset":23076,"endOffset":23104,"count":2},{"startOffset":23107,"endOffset":23210,"count":2},{"startOffset":23250,"endOffset":23280,"count":3},{"startOffset":23283,"endOffset":23339,"count":1}],"isBlockCoverage":true},{"functionName":"processValue","ranges":[{"startOffset":23358,"endOffset":24356,"count":67},{"startOffset":23446,"endOffset":23501,"count":0},{"startOffset":23552,"endOffset":23589,"count":55},{"startOffset":23591,"endOffset":23693,"count":12},{"startOffset":23658,"endOffset":23679,"count":0},{"startOffset":23753,"endOffset":23814,"count":17},{"startOffset":23831,"endOffset":23860,"count":50},{"startOffset":23913,"endOffset":23966,"count":0},{"startOffset":23968,"endOffset":24020,"count":0},{"startOffset":24075,"endOffset":24112,"count":2},{"startOffset":24114,"endOffset":24320,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23763,"endOffset":23813,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24192,"endOffset":24233,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":24365,"endOffset":25009,"count":99},{"startOffset":24465,"endOffset":24479,"count":28},{"startOffset":24497,"endOffset":24510,"count":2},{"startOffset":24510,"endOffset":24564,"count":97},{"startOffset":24564,"endOffset":24601,"count":61},{"startOffset":24602,"endOffset":24626,"count":43},{"startOffset":24628,"endOffset":24973,"count":37},{"startOffset":24696,"endOffset":24729,"count":2},{"startOffset":24730,"endOffset":24791,"count":2},{"startOffset":24832,"endOffset":24895,"count":35},{"startOffset":24897,"endOffset":24959,"count":2},{"startOffset":24973,"endOffset":25008,"count":97}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":25018,"endOffset":26653,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25222,"endOffset":26641,"count":1},{"startOffset":25356,"endOffset":26627,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigObject","ranges":[{"startOffset":26662,"endOffset":27338,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26743,"endOffset":27326,"count":53},{"startOffset":26840,"endOffset":26858,"count":0},{"startOffset":26912,"endOffset":26929,"count":17},{"startOffset":26930,"endOffset":26954,"count":17},{"startOffset":26955,"endOffset":26987,"count":0},{"startOffset":26989,"endOffset":27061,"count":0},{"startOffset":27143,"endOffset":27221,"count":5},{"startOffset":27186,"endOffset":27220,"count":0},{"startOffset":27223,"endOffset":27294,"count":48}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":27347,"endOffset":27591,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27471,"endOffset":27565,"count":7}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":27600,"endOffset":28476,"count":12},{"startOffset":27715,"endOffset":27784,"count":0},{"startOffset":27785,"endOffset":27789,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27865,"endOffset":28464,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":28485,"endOffset":29332,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28618,"endOffset":29320,"count":99},{"startOffset":28674,"endOffset":29306,"count":87},{"startOffset":28798,"endOffset":29288,"count":24},{"startOffset":28973,"endOffset":28978,"count":8},{"startOffset":29186,"endOffset":29266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28994,"endOffset":29133,"count":36}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":29341,"endOffset":29633,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29642,"endOffset":30259,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29759,"endOffset":30247,"count":90},{"startOffset":29826,"endOffset":30233,"count":29},{"startOffset":29948,"endOffset":29970,"count":3},{"startOffset":30005,"endOffset":30010,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30020,"endOffset":30213,"count":21},{"startOffset":30118,"endOffset":30125,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":30268,"endOffset":30693,"count":164},{"startOffset":30620,"endOffset":30633,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30449,"endOffset":30515,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30702,"endOffset":33151,"count":139},{"startOffset":31801,"endOffset":31837,"count":0},{"startOffset":31839,"endOffset":32083,"count":0},{"startOffset":32123,"endOffset":32182,"count":0},{"startOffset":32227,"endOffset":32721,"count":1},{"startOffset":32387,"endOffset":32451,"count":0},{"startOffset":32470,"endOffset":32707,"count":0},{"startOffset":32721,"endOffset":33141,"count":138},{"startOffset":32780,"endOffset":32852,"count":30},{"startOffset":32828,"endOffset":32837,"count":0},{"startOffset":32852,"endOffset":33141,"count":108},{"startOffset":32910,"endOffset":32963,"count":0},{"startOffset":32964,"endOffset":33016,"count":0},{"startOffset":33019,"endOffset":33076,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30890,"endOffset":31505,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":33160,"endOffset":34753,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33219,"endOffset":34741,"count":24},{"startOffset":33268,"endOffset":33273,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33283,"endOffset":34725,"count":275},{"startOffset":33368,"endOffset":33375,"count":106},{"startOffset":33375,"endOffset":33440,"count":169},{"startOffset":33440,"endOffset":33445,"count":62}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33507,"endOffset":33934,"count":290},{"startOffset":33562,"endOffset":33602,"count":57},{"startOffset":33604,"endOffset":33912,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33996,"endOffset":34449,"count":326},{"startOffset":34052,"endOffset":34070,"count":230},{"startOffset":34071,"endOffset":34111,"count":36},{"startOffset":34113,"endOffset":34427,"count":36},{"startOffset":34215,"endOffset":34254,"count":2},{"startOffset":34256,"endOffset":34401,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34499,"endOffset":34705,"count":157}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34596,"endOffset":34680,"count":219}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34762,"endOffset":35047,"count":793},{"startOffset":34857,"endOffset":34862,"count":222},{"startOffset":35012,"endOffset":35028,"count":148},{"startOffset":35029,"endOffset":35036,"count":645}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34956,"endOffset":34981,"count":1169}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":35056,"endOffset":35354,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":35363,"endOffset":35643,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35652,"endOffset":36498,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":36507,"endOffset":36638,"count":18},{"startOffset":36604,"endOffset":36627,"count":0}],"isBlockCoverage":true},{"functionName":"isUnknownOption","ranges":[{"startOffset":36647,"endOffset":37352,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":37361,"endOffset":37688,"count":3},{"startOffset":37441,"endOffset":37495,"count":0},{"startOffset":37496,"endOffset":37535,"count":0},{"startOffset":37537,"endOffset":37590,"count":0}],"isBlockCoverage":true},{"functionName":"defaultForType","ranges":[{"startOffset":37697,"endOffset":38033,"count":3}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":38042,"endOffset":38602,"count":3},{"startOffset":38193,"endOffset":38231,"count":0},{"startOffset":38306,"endOffset":38344,"count":0},{"startOffset":38456,"endOffset":38567,"count":0}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":38611,"endOffset":38686,"count":58}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":38695,"endOffset":39267,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38770,"endOffset":39255,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":39585,"endOffset":40787,"count":6},{"startOffset":39925,"endOffset":40413,"count":107},{"startOffset":39991,"endOffset":40403,"count":1055},{"startOffset":40184,"endOffset":40389,"count":0},{"startOffset":40403,"endOffset":40413,"count":1055},{"startOffset":40413,"endOffset":40419,"count":107}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39746,"endOffset":39824,"count":107}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40049,"endOffset":40143,"count":2238}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40444,"endOffset":40762,"count":107}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40507,"endOffset":40582,"count":228}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":40788,"endOffset":40862,"count":139},{"startOffset":40845,"endOffset":40855,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":40863,"endOffset":40967,"count":139},{"startOffset":40928,"endOffset":40949,"count":0}],"isBlockCoverage":true},{"functionName":"stripQuotes","ranges":[{"startOffset":40968,"endOffset":41180,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":42061,"endOffset":42094,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":42192,"endOffset":42511,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":42536,"endOffset":42644,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":42669,"endOffset":42739,"count":6}],"isBlockCoverage":true}]},{"scriptId":"150","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/cliui@8.0.1/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"span","ranges":[{"startOffset":341,"endOffset":428,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":433,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":483,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":961,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1106,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2209,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"measurePadding","ranges":[{"startOffset":2334,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2551,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"rowToString","ranges":[{"startOffset":2885,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"renderInline","ranges":[{"startOffset":4848,"endOffset":5613,"count":0}],"isBlockCoverage":false},{"functionName":"rasterize","ranges":[{"startOffset":5618,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"negatePadding","ranges":[{"startOffset":7070,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"columnWidths","ranges":[{"startOffset":7347,"endOffset":8184,"count":0}],"isBlockCoverage":false},{"functionName":"addBorder","ranges":[{"startOffset":8187,"endOffset":8433,"count":0}],"isBlockCoverage":false},{"functionName":"_minWidth","ranges":[{"startOffset":8512,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowWidth","ranges":[{"startOffset":8728,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8953,"endOffset":9156,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":9157,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9412,"endOffset":9653,"count":0}],"isBlockCoverage":false},{"functionName":"ui","ranges":[{"startOffset":9823,"endOffset":9930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/string-width@4.2.3/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/strip-ansi@6.0.1/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ansi-regex@5.0.1/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/is-fullwidth-code-point@3.0.0/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/emoji-regex@8.0.0/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/wrap-ansi@7.0.0/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/escalade@3.2.0/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":415,"count":2},{"startOffset":235,"endOffset":261,"count":0},{"startOffset":277,"endOffset":413,"count":6},{"startOffset":331,"endOffset":356,"count":2},{"startOffset":356,"endOffset":404,"count":4},{"startOffset":404,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"158","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/get-caller-file@2.0.5/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":233,"endOffset":1073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"node:internal/source_map/source_map_cache_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3653,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":939,"endOffset":3564,"count":1}],"isBlockCoverage":false},{"functionName":"#cleanup","ranges":[{"startOffset":1366,"endOffset":1740,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2181,"endOffset":2496,"count":62}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2309,"endOffset":2355,"count":62}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2598,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":2979,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3036,"endOffset":3562,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/require-directory@2.1.1/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":238,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":293,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":340,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1272,"endOffset":2788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9689,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2082,"endOffset":2212,"count":10}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2138,"endOffset":2203,"count":6},{"startOffset":2188,"endOffset":2191,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2301,"endOffset":2389,"count":33}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2350,"endOffset":2387,"count":18},{"startOffset":2373,"endOffset":2382,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2770,"endOffset":2814,"count":20}],"isBlockCoverage":true},{"functionName":"createErrorForNumericPositionalArg","ranges":[{"startOffset":3210,"endOffset":4051,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4351,"endOffset":5900,"count":3},{"startOffset":4800,"endOffset":4806,"count":2},{"startOffset":4807,"endOffset":4824,"count":1},{"startOffset":5454,"endOffset":5543,"count":0},{"startOffset":5647,"endOffset":5760,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4860,"endOffset":5103,"count":24},{"startOffset":4966,"endOffset":5083,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5410,"endOffset":5425,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5595,"endOffset":5616,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5820,"endOffset":5873,"count":0}],"isBlockCoverage":false},{"functionName":"loadRc","ranges":[{"startOffset":6284,"endOffset":6430,"count":1},{"startOffset":6330,"endOffset":6428,"count":0}],"isBlockCoverage":true},{"functionName":"loadPkgRc","ranges":[{"startOffset":6866,"endOffset":7980,"count":1},{"startOffset":6951,"endOffset":7030,"count":0},{"startOffset":7048,"endOffset":7979,"count":0}],"isBlockCoverage":true},{"functionName":"loadOptions","ranges":[{"startOffset":8697,"endOffset":9586,"count":1},{"startOffset":8923,"endOffset":8945,"count":0},{"startOffset":9094,"endOffset":9170,"count":0},{"startOffset":9188,"endOffset":9266,"count":0},{"startOffset":9444,"endOffset":9510,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8867,"endOffset":8899,"count":6}],"isBlockCoverage":true}]},{"scriptId":"162","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ansi-colors@4.1.3/node_modules/ansi-colors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":32,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"hasColor","ranges":[{"startOffset":382,"endOffset":495,"count":1},{"startOffset":477,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":513,"endOffset":5843,"count":1}],"isBlockCoverage":true},{"functionName":"ansi","ranges":[{"startOffset":634,"endOffset":1300,"count":42}],"isBlockCoverage":true},{"functionName":"style.wrap","ranges":[{"startOffset":857,"endOffset":1277,"count":4},{"startOffset":912,"endOffset":955,"count":0},{"startOffset":1214,"endOffset":1261,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":1318,"endOffset":1434,"count":4},{"startOffset":1386,"endOffset":1400,"count":0}],"isBlockCoverage":true},{"functionName":"style","ranges":[{"startOffset":1453,"endOffset":1899,"count":4},{"startOffset":1512,"endOffset":1522,"count":0},{"startOffset":1557,"endOffset":1570,"count":0},{"startOffset":1605,"endOffset":1615,"count":0},{"startOffset":1745,"endOffset":1813,"count":0}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1919,"endOffset":2460,"count":42},{"startOffset":2026,"endOffset":2053,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2176,"endOffset":2231,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2239,"endOffset":2448,"count":4},{"startOffset":2383,"endOffset":2408,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":2267,"endOffset":2301,"count":4}],"isBlockCoverage":true},{"functionName":"colors.hasColor.colors.hasAnsi","ranges":[{"startOffset":4300,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"colors.alias","ranges":[{"startOffset":4448,"endOffset":5212,"count":2},{"startOffset":4506,"endOffset":4521,"count":0},{"startOffset":4566,"endOffset":4677,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4922,"endOffset":4977,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4985,"endOffset":5200,"count":2},{"startOffset":5129,"endOffset":5158,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":5013,"endOffset":5047,"count":0}],"isBlockCoverage":false},{"functionName":"colors.theme","ranges":[{"startOffset":5232,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5467,"endOffset":5635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5662,"endOffset":5672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ansi-colors@4.1.3/node_modules/ansi-colors/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1618,"count":1},{"startOffset":1191,"endOffset":1196,"count":0},{"startOffset":1228,"endOffset":1233,"count":0},{"startOffset":1322,"endOffset":1333,"count":0},{"startOffset":1335,"endOffset":1344,"count":0}],"isBlockCoverage":true}]},{"scriptId":"164","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/run-option-metadata.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1647,"endOffset":1957,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1797,"endOffset":1939,"count":43},{"startOffset":1868,"endOffset":1873,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1895,"endOffset":1933,"count":23}],"isBlockCoverage":true},{"functionName":"exports.isMochaFlag","ranges":[{"startOffset":2168,"endOffset":2235,"count":13}],"isBlockCoverage":true},{"functionName":"exports.expectedTypeForFlag","ranges":[{"startOffset":2591,"endOffset":2968,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/one-and-dones.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1549,"count":1}],"isBlockCoverage":true},{"functionName":"showKeys","ranges":[{"startOffset":510,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"list-interfaces","ranges":[{"startOffset":1181,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"list-reporters","ranges":[{"startOffset":1309,"endOffset":1351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38658,"count":1}],"isBlockCoverage":true},{"functionName":"exports.afterEach","ranges":[{"startOffset":2162,"endOffset":2278,"count":0}],"isBlockCoverage":false},{"functionName":"exports.after","ranges":[{"startOffset":2296,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beforeEach","ranges":[{"startOffset":2436,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"exports.before","ranges":[{"startOffset":2557,"endOffset":2660,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe","ranges":[{"startOffset":2681,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.only","ranges":[{"startOffset":2807,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.skip","ranges":[{"startOffset":2950,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it","ranges":[{"startOffset":3082,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.only","ranges":[{"startOffset":3195,"endOffset":3293,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.skip","ranges":[{"startOffset":3313,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"exports.run","ranges":[{"startOffset":3712,"endOffset":3781,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha","ranges":[{"startOffset":6154,"endOffset":8593,"count":1},{"startOffset":6914,"endOffset":6917,"count":0},{"startOffset":6971,"endOffset":7011,"count":0},{"startOffset":7387,"endOffset":7431,"count":0},{"startOffset":8439,"endOffset":8503,"count":0},{"startOffset":8508,"endOffset":8591,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7283,"endOffset":7352,"count":15},{"startOffset":7322,"endOffset":7348,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.bail","ranges":[{"startOffset":8832,"endOffset":8901,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.addFile","ranges":[{"startOffset":9246,"endOffset":9305,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.reporter","ranges":[{"startOffset":9882,"endOffset":11034,"count":1},{"startOffset":9967,"endOffset":10007,"count":0},{"startOffset":10047,"endOffset":10056,"count":0},{"startOffset":10297,"endOffset":10811,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.ui","ranges":[{"startOffset":11368,"endOffset":11875,"count":1},{"startOffset":11437,"endOffset":11466,"count":0},{"startOffset":11486,"endOffset":11494,"count":0},{"startOffset":11564,"endOffset":11726,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11801,"endOffset":11855,"count":3}],"isBlockCoverage":true},{"functionName":"Mocha.loadFiles","ranges":[{"startOffset":12410,"endOffset":12746,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.loadFilesAsync","ranges":[{"startOffset":13600,"endOffset":14041,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13761,"endOffset":13846,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13852,"endOffset":14016,"count":3}],"isBlockCoverage":true},{"functionName":"Mocha.unloadFile","ranges":[{"startOffset":14255,"endOffset":14471,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.unloadFiles","ranges":[{"startOffset":14913,"endOffset":15277,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fgrep","ranges":[{"startOffset":15632,"endOffset":15732,"count":1},{"startOffset":15683,"endOffset":15731,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.grep","ranges":[{"startOffset":16873,"endOffset":17161,"count":1},{"startOffset":16915,"endOffset":17105,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.invert","ranges":[{"startOffset":17432,"endOffset":17492,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.checkLeaks","ranges":[{"startOffset":17788,"endOffset":17878,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.cleanReferencesAfterRun","ranges":[{"startOffset":18276,"endOffset":18398,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dispose","ranges":[{"startOffset":18693,"endOffset":19028,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fullTrace","ranges":[{"startOffset":19291,"endOffset":19378,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.global","ranges":[{"startOffset":19799,"endOffset":20014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19924,"endOffset":19995,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.color","ranges":[{"startOffset":20396,"endOffset":20471,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.inlineDiffs","ranges":[{"startOffset":20771,"endOffset":20864,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.diff","ranges":[{"startOffset":21121,"endOffset":21193,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.timeout","ranges":[{"startOffset":21766,"endOffset":21830,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.retries","ranges":[{"startOffset":22199,"endOffset":22263,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.slow","ranges":[{"startOffset":22640,"endOffset":22701,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.asyncOnly","ranges":[{"startOffset":22992,"endOffset":23079,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.noHighlighting","ranges":[{"startOffset":23221,"endOffset":23289,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.allowUncaught","ranges":[{"startOffset":23560,"endOffset":23659,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":23926,"endOffset":23990,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dryRun","ranges":[{"startOffset":24237,"endOffset":24315,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.failZero","ranges":[{"startOffset":24566,"endOffset":24650,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.passOnFailingTestSuite","ranges":[{"startOffset":24926,"endOffset":25050,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidOnly","ranges":[{"startOffset":25315,"endOffset":25405,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidPending","ranges":[{"startOffset":25691,"endOffset":25790,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha._guardRunningStateTransition","ranges":[{"startOffset":25957,"endOffset":26641,"count":1},{"startOffset":26014,"endOffset":26191,"count":0},{"startOffset":26298,"endOffset":26639,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.run","ranges":[{"startOffset":27663,"endOffset":29990,"count":1},{"startOffset":27783,"endOffset":27848,"count":0},{"startOffset":27898,"endOffset":27925,"count":0},{"startOffset":28591,"endOffset":28643,"count":0},{"startOffset":28743,"endOffset":28802,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":28930,"endOffset":29243,"count":1},{"startOffset":29072,"endOffset":29090,"count":0},{"startOffset":29104,"endOffset":29117,"count":0},{"startOffset":29164,"endOffset":29206,"count":0}],"isBlockCoverage":true},{"functionName":"runAsync","ranges":[{"startOffset":29265,"endOffset":29697,"count":1},{"startOffset":29381,"endOffset":29425,"count":0},{"startOffset":29606,"endOffset":29668,"count":0}],"isBlockCoverage":true},{"functionName":"rootHooks","ranges":[{"startOffset":30150,"endOffset":30708,"count":0}],"isBlockCoverage":false},{"functionName":"parallelMode","ranges":[{"startOffset":31389,"endOffset":32196,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFiles","ranges":[{"startOffset":32625,"endOffset":32755,"count":1}],"isBlockCoverage":true},{"functionName":"globalSetup","ranges":[{"startOffset":33047,"endOffset":33246,"count":1}],"isBlockCoverage":true},{"functionName":"globalTeardown","ranges":[{"startOffset":33550,"endOffset":33773,"count":1}],"isBlockCoverage":true},{"functionName":"runGlobalSetup","ranges":[{"startOffset":34246,"endOffset":34539,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalTeardown","ranges":[{"startOffset":35016,"endOffset":35332,"count":0}],"isBlockCoverage":false},{"functionName":"_runGlobalFixtures","ranges":[{"startOffset":35606,"endOffset":35783,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalSetup","ranges":[{"startOffset":36011,"endOffset":36125,"count":1}],"isBlockCoverage":true},{"functionName":"enableGlobalTeardown","ranges":[{"startOffset":36362,"endOffset":36486,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalSetupFixtures","ranges":[{"startOffset":36646,"endOffset":36734,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalTeardownFixtures","ranges":[{"startOffset":36902,"endOffset":37000,"count":1}],"isBlockCoverage":true}]},{"scriptId":"167","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/escape-string-regexp@4.0.0/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true}]},{"scriptId":"169","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12917,"count":1},{"startOffset":1078,"endOffset":1119,"count":0},{"startOffset":2421,"endOffset":2480,"count":0}],"isBlockCoverage":true},{"functionName":"getBrowserWindowSize","ranges":[{"startOffset":436,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"exports.color","ranges":[{"startOffset":2116,"endOffset":2265,"count":109},{"startOffset":2165,"endOffset":2194,"count":0}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":2668,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"show","ranges":[{"startOffset":2747,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"deleteLine","ranges":[{"startOffset":2832,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"beginningOfLine","ranges":[{"startOffset":2920,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":2995,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"exports.showDiff","ranges":[{"startOffset":3198,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyDiffObjs","ranges":[{"startOffset":3350,"endOffset":3555,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateDiff","ranges":[{"startOffset":3866,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"getFullErrorStack","ranges":[{"startOffset":4828,"endOffset":5757,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":5985,"endOffset":7454,"count":0}],"isBlockCoverage":false},{"functionName":"Base","ranges":[{"startOffset":7754,"endOffset":8837,"count":1},{"startOffset":7842,"endOffset":7899,"count":0},{"startOffset":7925,"endOffset":7930,"count":0},{"startOffset":8090,"endOffset":8132,"count":0},{"startOffset":8169,"endOffset":8202,"count":0},{"startOffset":8204,"endOffset":8259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8290,"endOffset":8502,"count":46},{"startOffset":8345,"endOffset":8379,"count":0},{"startOffset":8422,"endOffset":8458,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8535,"endOffset":8833,"count":0}],"isBlockCoverage":false},{"functionName":"Base.epilogue","ranges":[{"startOffset":8982,"endOffset":9601,"count":1},{"startOffset":9210,"endOffset":9214,"count":0},{"startOffset":9434,"endOffset":9577,"count":0}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":9727,"endOffset":9828,"count":0}],"isBlockCoverage":false},{"functionName":"inlineDiff","ranges":[{"startOffset":10000,"endOffset":10558,"count":0}],"isBlockCoverage":false},{"functionName":"unifiedDiff","ranges":[{"startOffset":10738,"endOffset":11540,"count":0}],"isBlockCoverage":false},{"functionName":"errorDiff","ranges":[{"startOffset":11685,"endOffset":12037,"count":0}],"isBlockCoverage":false},{"functionName":"colorLines","ranges":[{"startOffset":12180,"endOffset":12325,"count":0}],"isBlockCoverage":false},{"functionName":"sameType","ranges":[{"startOffset":12538,"endOffset":12619,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7762,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":174,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":301,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":432,"endOffset":480,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":567,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":702,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":972,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1104,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1226,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1354,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1484,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1613,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1744,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1875,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1999,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2125,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2263,"endOffset":2319,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2407,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2547,"endOffset":2599,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2679,"endOffset":2731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2819,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2964,"endOffset":3021,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4462,"endOffset":4559,"count":1},{"startOffset":4536,"endOffset":4556,"count":0}],"isBlockCoverage":true}]},{"scriptId":"171","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38478,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":158,"endOffset":176,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":260,"endOffset":6642,"count":0}],"isBlockCoverage":false},{"functionName":"addToPath","ranges":[{"startOffset":6713,"endOffset":7336,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommon","ranges":[{"startOffset":7411,"endOffset":8032,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":8100,"endOffset":8341,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmpty","ranges":[{"startOffset":8414,"endOffset":8592,"count":0}],"isBlockCoverage":false},{"functionName":"castInput","ranges":[{"startOffset":8663,"endOffset":8712,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":8782,"endOffset":8840,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":8906,"endOffset":8959,"count":0}],"isBlockCoverage":false},{"functionName":"buildValues","ranges":[{"startOffset":8964,"endOffset":11368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/character.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1671,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":327,"endOffset":424,"count":1},{"startOffset":401,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"diffChars","ranges":[{"startOffset":688,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/word.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8786,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":464,"endOffset":561,"count":1},{"startOffset":538,"endOffset":558,"count":0}],"isBlockCoverage":true},{"functionName":"wordDiff.equals","ranges":[{"startOffset":1546,"endOffset":1789,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":1812,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":2496,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":2855,"endOffset":2960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/util/params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1752,"count":1}],"isBlockCoverage":true},{"functionName":"generateOptions","ranges":[{"startOffset":174,"endOffset":502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6283,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":460,"endOffset":557,"count":1},{"startOffset":534,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":826,"endOffset":1648,"count":0}],"isBlockCoverage":false},{"functionName":"diffLines","ranges":[{"startOffset":1651,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":1751,"endOffset":2121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/sentence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2090,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":334,"endOffset":431,"count":1},{"startOffset":408,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":716,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":786,"endOffset":892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/css.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":317,"endOffset":414,"count":1},{"startOffset":391,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":679,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":741,"endOffset":836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12937,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":440,"endOffset":537,"count":1},{"startOffset":514,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":539,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":1625,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":2270,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":2568,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":2859,"endOffset":4359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":422,"count":1},{"startOffset":399,"endOffset":419,"count":0}],"isBlockCoverage":true},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":695,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":783,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":822,"endOffset":922,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20050,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":450,"endOffset":547,"count":1},{"startOffset":524,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"applyPatch","ranges":[{"startOffset":573,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":4904,"endOffset":5760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17908,"count":1}],"isBlockCoverage":true},{"functionName":"parsePatch","ranges":[{"startOffset":164,"endOffset":4730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/util/distance-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4641,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":340,"endOffset":1483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50907,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":482,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":637,"endOffset":827,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":829,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1247,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1379,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1472,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":1681,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2137,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":5018,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":5876,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":5984,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":6174,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":6303,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":6504,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":9251,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":11900,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":12610,"endOffset":12754,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":12756,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":12981,"endOffset":13145,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":13147,"endOffset":13641,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":13643,"endOffset":14910,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":14912,"endOffset":15044,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":15046,"endOffset":15360,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":15362,"endOffset":16317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23969,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":410,"endOffset":563,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":565,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":757,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1175,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1307,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1400,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"structuredPatch","ranges":[{"startOffset":1609,"endOffset":6844,"count":0}],"isBlockCoverage":false},{"functionName":"formatPatch","ranges":[{"startOffset":6846,"endOffset":7944,"count":0}],"isBlockCoverage":false},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":7946,"endOffset":8163,"count":0}],"isBlockCoverage":false},{"functionName":"createPatch","ranges":[{"startOffset":8165,"endOffset":8343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/util/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2026,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEqual","ranges":[{"startOffset":207,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":324,"endOffset":548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/reverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5555,"count":1}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":144,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":487,"endOffset":1021,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":1023,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"reversePatch","ranges":[{"startOffset":1258,"endOffset":2553,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/convert/dmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2255,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":248,"endOffset":609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/convert/xml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3359,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToXML","ranges":[{"startOffset":182,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":615,"endOffset":793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18823,"count":1}],"isBlockCoverage":true},{"functionName":"exports.escape","ranges":[{"startOffset":797,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isString","ranges":[{"startOffset":1012,"endOffset":1064,"count":59}],"isBlockCoverage":true},{"functionName":"exports.slug","ranges":[{"startOffset":1188,"endOffset":1321,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clean","ranges":[{"startOffset":1473,"endOffset":2125,"count":0}],"isBlockCoverage":false},{"functionName":"emptyRepresentation","ranges":[{"startOffset":2587,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalType","ranges":[{"startOffset":3694,"endOffset":4087,"count":5},{"startOffset":3753,"endOffset":3782,"count":0},{"startOffset":3808,"endOffset":3832,"count":0},{"startOffset":3866,"endOffset":3892,"count":0},{"startOffset":3941,"endOffset":3975,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4710,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stringify","ranges":[{"startOffset":5806,"endOffset":6851,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStringify","ranges":[{"startOffset":7012,"endOffset":9055,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":9957,"endOffset":11732,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stackTraceFilter","ranges":[{"startOffset":12103,"endOffset":13434,"count":1},{"startOffset":12217,"endOffset":12234,"count":0},{"startOffset":12324,"endOffset":12468,"count":0}],"isBlockCoverage":true},{"functionName":"isMochaInternal","ranges":[{"startOffset":12472,"endOffset":12680,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeInternal","ranges":[{"startOffset":12684,"endOffset":12968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12979,"endOffset":13431,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":13579,"endOffset":13716,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":13954,"endOffset":14042,"count":66}],"isBlockCoverage":true},{"functionName":"exports.noop","ranges":[{"startOffset":14095,"endOffset":14109,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createMap","ranges":[{"startOffset":15014,"endOffset":15149,"count":5}],"isBlockCoverage":true},{"functionName":"exports.defineConstants","ranges":[{"startOffset":15639,"endOffset":15852,"count":5},{"startOffset":15723,"endOffset":15802,"count":0}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":15977,"endOffset":16019,"count":3}],"isBlockCoverage":true},{"functionName":"isBrowser","ranges":[{"startOffset":16169,"endOffset":16228,"count":2}],"isBlockCoverage":true},{"functionName":"castArray","ranges":[{"startOffset":16733,"endOffset":17036,"count":5},{"startOffset":16788,"endOffset":16808,"count":0},{"startOffset":16831,"endOffset":16855,"count":0},{"startOffset":16946,"endOffset":16975,"count":0},{"startOffset":17016,"endOffset":17035,"count":0}],"isBlockCoverage":true},{"functionName":"exports.uniqueID","ranges":[{"startOffset":17388,"endOffset":17512,"count":65},{"startOffset":17442,"endOffset":17497,"count":1365}],"isBlockCoverage":true},{"functionName":"exports.assignNewMochaID","ranges":[{"startOffset":17542,"endOffset":17691,"count":65}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17639,"endOffset":17669,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getMochaID","ranges":[{"startOffset":17830,"endOffset":17907,"count":0}],"isBlockCoverage":false},{"functionName":"exports.breakCircularDeps","ranges":[{"startOffset":18086,"endOffset":18676,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isNumeric","ranges":[{"startOffset":18773,"endOffset":18821,"count":2}],"isBlockCoverage":true}]},{"scriptId":"190","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/he@1.2.0/node_modules/he/he.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":100883,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61,"endOffset":100874,"count":1},{"startOffset":500,"endOffset":535,"count":0},{"startOffset":100447,"endOffset":100481,"count":0},{"startOffset":100482,"endOffset":100497,"count":0},{"startOffset":100501,"endOffset":100547,"count":0},{"startOffset":100689,"endOffset":100813,"count":0},{"startOffset":100816,"endOffset":100871,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":92347,"endOffset":92434,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":92453,"endOffset":92630,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":92646,"endOffset":92997,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToSymbol","ranges":[{"startOffset":93093,"endOffset":94044,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":94064,"endOffset":94149,"count":0}],"isBlockCoverage":false},{"functionName":"decEscape","ranges":[{"startOffset":94169,"endOffset":94226,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":94247,"endOffset":94311,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":94409,"endOffset":97437,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":97673,"endOffset":99781,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":99934,"endOffset":100103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100512,"endOffset":100542,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34221,"count":1},{"startOffset":5791,"endOffset":5810,"count":0}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":3983,"endOffset":5631,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4396,"endOffset":4678,"count":49},{"startOffset":4467,"endOffset":4481,"count":0},{"startOffset":4483,"endOffset":4641,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4719,"endOffset":4773,"count":85}],"isBlockCoverage":true},{"functionName":"Runner.unhandled","ranges":[{"startOffset":4947,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"Runner._addEventListener","ranges":[{"startOffset":6139,"endOffset":7047,"count":55},{"startOffset":6388,"endOffset":6442,"count":1},{"startOffset":6443,"endOffset":6511,"count":0},{"startOffset":6516,"endOffset":6633,"count":0},{"startOffset":6731,"endOffset":6765,"count":1},{"startOffset":6770,"endOffset":6781,"count":54},{"startOffset":6849,"endOffset":6881,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._removeEventListener","ranges":[{"startOffset":7358,"endOffset":7971,"count":2},{"startOffset":7486,"endOffset":7886,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.dispose","ranges":[{"startOffset":8147,"endOffset":8477,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.grep","ranges":[{"startOffset":8731,"endOffset":8896,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.grepTotal","ranges":[{"startOffset":9094,"endOffset":9350,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9167,"endOffset":9329,"count":177},{"startOffset":9258,"endOffset":9287,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.globalProps","ranges":[{"startOffset":9465,"endOffset":9691,"count":1},{"startOffset":9579,"endOffset":9672,"count":8},{"startOffset":9617,"endOffset":9640,"count":6},{"startOffset":9640,"endOffset":9672,"count":2}],"isBlockCoverage":true},{"functionName":"Runner.globals","ranges":[{"startOffset":9859,"endOffset":10036,"count":2},{"startOffset":9901,"endOffset":9932,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.checkGlobals","ranges":[{"startOffset":10130,"endOffset":10674,"count":134},{"startOffset":10189,"endOffset":10672,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10603,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.fail","ranges":[{"startOffset":11450,"endOffset":12479,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.hook","ranges":[{"startOffset":12631,"endOffset":15427,"count":256},{"startOffset":12678,"endOffset":12690,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":12776,"endOffset":15370,"count":341},{"startOffset":12835,"endOffset":12861,"count":256},{"startOffset":12861,"endOffset":12935,"count":85},{"startOffset":12935,"endOffset":12993,"count":1},{"startOffset":12993,"endOffset":13171,"count":84},{"startOffset":13033,"endOffset":13118,"count":1},{"startOffset":13118,"endOffset":13171,"count":83},{"startOffset":13171,"endOffset":13335,"count":85},{"startOffset":13335,"endOffset":13443,"count":7},{"startOffset":13443,"endOffset":15369,"count":85}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13381,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"cbHookRun","ranges":[{"startOffset":13458,"endOffset":14859,"count":85},{"startOffset":13541,"endOffset":13591,"count":0},{"startOffset":13642,"endOffset":14589,"count":0},{"startOffset":14604,"endOffset":14726,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14193,"endOffset":14255,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14289,"endOffset":14353,"count":0}],"isBlockCoverage":false},{"functionName":"setHookTitle","ranges":[{"startOffset":14867,"endOffset":15366,"count":170},{"startOffset":14943,"endOffset":14956,"count":7},{"startOffset":15002,"endOffset":15360,"count":85},{"startOffset":15211,"endOffset":15286,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15393,"endOffset":15423,"count":256}],"isBlockCoverage":true},{"functionName":"Runner.hooks","ranges":[{"startOffset":15649,"endOffset":16064,"count":92}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":15726,"endOffset":16039,"count":330},{"startOffset":15790,"endOffset":15841,"count":92},{"startOffset":15841,"endOffset":16038,"count":238}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15863,"endOffset":16033,"count":238},{"startOffset":15895,"endOffset":16000,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hookUp","ranges":[{"startOffset":16205,"endOffset":16322,"count":46}],"isBlockCoverage":true},{"functionName":"Runner.hookDown","ranges":[{"startOffset":16471,"endOffset":16578,"count":46}],"isBlockCoverage":true},{"functionName":"Runner.parents","ranges":[{"startOffset":16715,"endOffset":16871,"count":92},{"startOffset":16797,"endOffset":16852,"count":146}],"isBlockCoverage":true},{"functionName":"Runner.runTest","ranges":[{"startOffset":16996,"endOffset":17439,"count":46},{"startOffset":17037,"endOffset":17067,"count":0},{"startOffset":17126,"endOffset":17143,"count":0},{"startOffset":17167,"endOffset":17199,"count":0},{"startOffset":17315,"endOffset":17376,"count":0},{"startOffset":17407,"endOffset":17437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17240,"endOffset":17286,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.runTests","ranges":[{"startOffset":17621,"endOffset":22218,"count":9}],"isBlockCoverage":true},{"functionName":"hookErr","ranges":[{"startOffset":17713,"endOffset":18418,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":18422,"endOffset":22159,"count":58},{"startOffset":18509,"endOffset":18523,"count":0},{"startOffset":18525,"endOffset":18550,"count":0},{"startOffset":18573,"endOffset":18599,"count":0},{"startOffset":18614,"endOffset":18664,"count":0},{"startOffset":18741,"endOffset":18767,"count":9},{"startOffset":18767,"endOffset":18854,"count":49},{"startOffset":18854,"endOffset":18883,"count":0},{"startOffset":18883,"endOffset":18900,"count":49},{"startOffset":18900,"endOffset":19540,"count":0},{"startOffset":19540,"endOffset":19610,"count":49},{"startOffset":19610,"endOffset":19901,"count":3},{"startOffset":19642,"endOffset":19719,"count":0},{"startOffset":19901,"endOffset":22158,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20039,"endOffset":22153,"count":46},{"startOffset":20138,"endOffset":20709,"count":0},{"startOffset":20725,"endOffset":20780,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20606,"endOffset":20699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20840,"endOffset":22145,"count":46},{"startOffset":20947,"endOffset":21307,"count":0},{"startOffset":21322,"endOffset":21949,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.runSuite","ranges":[{"startOffset":22391,"endOffset":24036,"count":9},{"startOffset":22570,"endOffset":22584,"count":0},{"startOffset":22587,"endOffset":22643,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":22712,"endOffset":23608,"count":17},{"startOffset":22756,"endOffset":23106,"count":0},{"startOffset":23129,"endOffset":23157,"count":0},{"startOffset":23208,"endOffset":23236,"count":9},{"startOffset":23236,"endOffset":23467,"count":8},{"startOffset":23467,"endOffset":23558,"count":0},{"startOffset":23558,"endOffset":23604,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23494,"endOffset":23550,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":23612,"endOffset":23876,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23780,"endOffset":23870,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23938,"endOffset":24032,"count":9},{"startOffset":23968,"endOffset":23996,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._uncaught","ranges":[{"startOffset":24882,"endOffset":27547,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.run","ranges":[{"startOffset":27914,"endOffset":29933,"count":1},{"startOffset":28000,"endOffset":28005,"count":0},{"startOffset":28062,"endOffset":28079,"count":0},{"startOffset":29611,"endOffset":29871,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":28065,"endOffset":28079,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":28096,"endOffset":28291,"count":1},{"startOffset":28124,"endOffset":28146,"count":0},{"startOffset":28148,"endOffset":28166,"count":0}],"isBlockCoverage":true},{"functionName":"begin","ranges":[{"startOffset":28310,"endOffset":28518,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":28539,"endOffset":28913,"count":1},{"startOffset":28642,"endOffset":28731,"count":0},{"startOffset":28800,"endOffset":28888,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29045,"endOffset":29092,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29149,"endOffset":29288,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.linkPartialObjects","ranges":[{"startOffset":30767,"endOffset":30802,"count":0}],"isBlockCoverage":false},{"functionName":"runAsync","ranges":[{"startOffset":31190,"endOffset":31297,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31248,"endOffset":31293,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.abort","ranges":[{"startOffset":31432,"endOffset":31515,"count":0}],"isBlockCoverage":false},{"functionName":"isParallelMode","ranges":[{"startOffset":31716,"endOffset":31761,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.workerReporter","ranges":[{"startOffset":32111,"endOffset":32207,"count":0}],"isBlockCoverage":false},{"functionName":"filterLeaks","ranges":[{"startOffset":32355,"endOffset":33393,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":33608,"endOffset":33708,"count":0}],"isBlockCoverage":false},{"functionName":"thrown2Error","ranges":[{"startOffset":33871,"endOffset":34024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/pending.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"Pending","ranges":[{"startOffset":165,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/runnable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10622,"count":1}],"isBlockCoverage":true},{"functionName":"Runnable","ranges":[{"startOffset":814,"endOffset":1192,"count":56},{"startOffset":901,"endOffset":906,"count":3},{"startOffset":938,"endOffset":950,"count":53}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1118,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.reset","ranges":[{"startOffset":1369,"endOffset":1499,"count":105}],"isBlockCoverage":true},{"functionName":"Runnable.timeout","ranges":[{"startOffset":2201,"endOffset":2661,"count":223},{"startOffset":2242,"endOffset":2273,"count":167},{"startOffset":2273,"endOffset":2304,"count":56},{"startOffset":2304,"endOffset":2336,"count":0},{"startOffset":2336,"endOffset":2491,"count":56},{"startOffset":2493,"endOffset":2521,"count":0},{"startOffset":2521,"endOffset":2614,"count":56},{"startOffset":2614,"endOffset":2644,"count":0},{"startOffset":2644,"endOffset":2660,"count":56}],"isBlockCoverage":true},{"functionName":"Runnable.slow","ranges":[{"startOffset":2821,"endOffset":3042,"count":148},{"startOffset":2861,"endOffset":2889,"count":56},{"startOffset":2891,"endOffset":2919,"count":92},{"startOffset":2919,"endOffset":2950,"count":56},{"startOffset":2950,"endOffset":2982,"count":0},{"startOffset":2982,"endOffset":3041,"count":56}],"isBlockCoverage":true},{"functionName":"Runnable.skip","ranges":[{"startOffset":3150,"endOffset":3242,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPending","ranges":[{"startOffset":3367,"endOffset":3449,"count":226},{"startOffset":3403,"endOffset":3446,"count":223}],"isBlockCoverage":true},{"functionName":"Runnable.isFailed","ranges":[{"startOffset":3569,"endOffset":3653,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPassed","ranges":[{"startOffset":3773,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.retries","ranges":[{"startOffset":3945,"endOffset":4039,"count":56},{"startOffset":3985,"endOffset":4016,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.currentRetry","ranges":[{"startOffset":4127,"endOffset":4231,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.fullTitle","ranges":[{"startOffset":4427,"endOffset":4479,"count":226}],"isBlockCoverage":true},{"functionName":"Runnable.titlePath","ranges":[{"startOffset":4677,"endOffset":4747,"count":226}],"isBlockCoverage":true},{"functionName":"Runnable.clearTimeout","ranges":[{"startOffset":4829,"endOffset":4872,"count":167}],"isBlockCoverage":true},{"functionName":"Runnable.resetTimeout","ranges":[{"startOffset":4954,"endOffset":5225,"count":36},{"startOffset":5013,"endOffset":5027,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5079,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.globals","ranges":[{"startOffset":5372,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.run","ranges":[{"startOffset":5605,"endOffset":9154,"count":131},{"startOffset":5760,"endOffset":5772,"count":0},{"startOffset":6566,"endOffset":6700,"count":0},{"startOffset":6761,"endOffset":7446,"count":0},{"startOffset":7512,"endOffset":7712,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":5915,"endOffset":6078,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":6096,"endOffset":6439,"count":131},{"startOffset":6169,"endOffset":6190,"count":0},{"startOffset":6210,"endOffset":6245,"count":0},{"startOffset":6368,"endOffset":6377,"count":0},{"startOffset":6379,"endOffset":6422,"count":0}],"isBlockCoverage":true},{"functionName":"asyncSkip","ranges":[{"startOffset":6866,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":7716,"endOffset":8419,"count":131},{"startOffset":7784,"endOffset":7820,"count":36},{"startOffset":7822,"endOffset":8195,"count":36},{"startOffset":8195,"endOffset":8415,"count":95},{"startOffset":8229,"endOffset":8394,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7878,"endOffset":8060,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8070,"endOffset":8180,"count":0}],"isBlockCoverage":false},{"functionName":"callFnAsync","ranges":[{"startOffset":8423,"endOffset":9152,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable._timeoutError","ranges":[{"startOffset":9337,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.toValueOrError","ranges":[{"startOffset":10396,"endOffset":10587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15639,"count":1}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":350,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":753,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1062,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"createNoFilesMatchPatternError","ranges":[{"startOffset":4375,"endOffset":4554,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidReporterError","ranges":[{"startOffset":4856,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidInterfaceError","ranges":[{"startOffset":5341,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsupportedError","ranges":[{"startOffset":5752,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingArgumentError","ranges":[{"startOffset":6204,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentTypeError","ranges":[{"startOffset":6687,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentValueError","ranges":[{"startOffset":7319,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidExceptionError","ranges":[{"startOffset":7870,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"createFatalError","ranges":[{"startOffset":8297,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidLegacyPluginError","ranges":[{"startOffset":8820,"endOffset":9158,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginError","ranges":[{"startOffset":9598,"endOffset":9755,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyDisposedError","ranges":[{"startOffset":10106,"endOffset":10390,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyRunningError","ranges":[{"startOffset":10602,"endOffset":10794,"count":0}],"isBlockCoverage":false},{"functionName":"createMultipleDoneError","ranges":[{"startOffset":11082,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"createForbiddenExclusivityError","ranges":[{"startOffset":12086,"endOffset":12341,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginDefinitionError","ranges":[{"startOffset":12641,"endOffset":12827,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginImplementationError","ranges":[{"startOffset":13287,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"createTimeoutError","ranges":[{"startOffset":13803,"endOffset":13974,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsableFileError","ranges":[{"startOffset":14240,"endOffset":14383,"count":0}],"isBlockCoverage":false},{"functionName":"isMochaError","ranges":[{"startOffset":14609,"endOffset":14687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/suite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15436,"count":1}],"isBlockCoverage":true},{"functionName":"Suite.create","ranges":[{"startOffset":714,"endOffset":882,"count":8}],"isBlockCoverage":true},{"functionName":"Suite","ranges":[{"startOffset":1284,"endOffset":2125,"count":9},{"startOffset":1355,"endOffset":1549,"count":0}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":1574,"endOffset":1595,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2056,"endOffset":2100,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.reset","ranges":[{"startOffset":2290,"endOffset":2601,"count":9}],"isBlockCoverage":true},{"functionName":"doReset","ranges":[{"startOffset":2330,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.clone","ranges":[{"startOffset":2705,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.timeout","ranges":[{"startOffset":3194,"endOffset":3521,"count":74},{"startOffset":3235,"endOffset":3266,"count":64},{"startOffset":3266,"endOffset":3297,"count":10},{"startOffset":3297,"endOffset":3329,"count":1},{"startOffset":3329,"endOffset":3520,"count":10}],"isBlockCoverage":true},{"functionName":"Suite.retries","ranges":[{"startOffset":3694,"endOffset":3848,"count":72},{"startOffset":3734,"endOffset":3765,"count":64},{"startOffset":3765,"endOffset":3826,"count":8},{"startOffset":3826,"endOffset":3830,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.slow","ranges":[{"startOffset":4017,"endOffset":4209,"count":73},{"startOffset":4058,"endOffset":4086,"count":64},{"startOffset":4086,"endOffset":4117,"count":9},{"startOffset":4117,"endOffset":4149,"count":1},{"startOffset":4149,"endOffset":4208,"count":9}],"isBlockCoverage":true},{"functionName":"Suite.bail","ranges":[{"startOffset":4371,"endOffset":4506,"count":16},{"startOffset":4414,"endOffset":4505,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.isPending","ranges":[{"startOffset":4625,"endOffset":4707,"count":687},{"startOffset":4677,"endOffset":4703,"count":408}],"isBlockCoverage":true},{"functionName":"Suite._createHook","ranges":[{"startOffset":4896,"endOffset":5129,"count":7}],"isBlockCoverage":true},{"functionName":"Suite.beforeAll","ranges":[{"startOffset":5312,"endOffset":5672,"count":1},{"startOffset":5359,"endOffset":5381,"count":0},{"startOffset":5499,"endOffset":5513,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterAll","ranges":[{"startOffset":5853,"endOffset":6210,"count":1},{"startOffset":5900,"endOffset":5922,"count":0},{"startOffset":6039,"endOffset":6053,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.beforeEach","ranges":[{"startOffset":6395,"endOffset":6758,"count":3},{"startOffset":6442,"endOffset":6464,"count":0},{"startOffset":6583,"endOffset":6597,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterEach","ranges":[{"startOffset":6941,"endOffset":7301,"count":2},{"startOffset":6988,"endOffset":7010,"count":0},{"startOffset":7128,"endOffset":7142,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.addSuite","ranges":[{"startOffset":7433,"endOffset":7713,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.addTest","ranges":[{"startOffset":7850,"endOffset":8095,"count":49}],"isBlockCoverage":true},{"functionName":"Suite.fullTitle","ranges":[{"startOffset":8279,"endOffset":8331,"count":17}],"isBlockCoverage":true},{"functionName":"Suite.titlePath","ranges":[{"startOffset":8517,"endOffset":8699,"count":645},{"startOffset":8569,"endOffset":8627,"count":402},{"startOffset":8646,"endOffset":8680,"count":402}],"isBlockCoverage":true},{"functionName":"Suite.total","ranges":[{"startOffset":8824,"endOffset":8966,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8872,"endOffset":8935,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.eachTest","ranges":[{"startOffset":9172,"endOffset":9301,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9236,"endOffset":9282,"count":21}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":9422,"endOffset":9510,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnly","ranges":[{"startOffset":9659,"endOffset":9843,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9781,"endOffset":9835,"count":8}],"isBlockCoverage":true},{"functionName":"filterOnly","ranges":[{"startOffset":9962,"endOffset":10999,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlySuite","ranges":[{"startOffset":11139,"endOffset":11191,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.markOnly","ranges":[{"startOffset":11275,"endOffset":11342,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlyTest","ranges":[{"startOffset":11474,"endOffset":11523,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":11646,"endOffset":11700,"count":256}],"isBlockCoverage":true},{"functionName":"Suite.dispose","ranges":[{"startOffset":11800,"endOffset":11909,"count":0}],"isBlockCoverage":false},{"functionName":"cleanReferences","ranges":[{"startOffset":12309,"endOffset":12879,"count":9},{"startOffset":12843,"endOffset":12877,"count":49}],"isBlockCoverage":true},{"functionName":"cleanArrReferences","ranges":[{"startOffset":12340,"endOffset":12451,"count":36},{"startOffset":12416,"endOffset":12447,"count":7}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":13048,"endOffset":13341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1787,"count":1}],"isBlockCoverage":true},{"functionName":"Hook","ranges":[{"startOffset":354,"endOffset":438,"count":7}],"isBlockCoverage":true},{"functionName":"Hook.reset","ranges":[{"startOffset":580,"endOffset":656,"count":7}],"isBlockCoverage":true},{"functionName":"Hook.error","ranges":[{"startOffset":793,"endOffset":927,"count":85},{"startOffset":903,"endOffset":926,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":1095,"endOffset":1785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/dot.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1897,"count":1}],"isBlockCoverage":true},{"functionName":"Dot","ranges":[{"startOffset":749,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/doc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2309,"count":1}],"isBlockCoverage":true},{"functionName":"Doc","ranges":[{"startOffset":690,"endOffset":2267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/tap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7044,"count":1}],"isBlockCoverage":true},{"functionName":"TAP","ranges":[{"startOffset":851,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":1956,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":2232,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"createProducer","ranges":[{"startOffset":2683,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer","ranges":[{"startOffset":3150,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeVersion","ranges":[{"startOffset":3291,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePlan","ranges":[{"startOffset":3481,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePass","ranges":[{"startOffset":3761,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePending","ranges":[{"startOffset":4062,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeFail","ranges":[{"startOffset":4407,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeEpilogue","ranges":[{"startOffset":4661,"endOffset":4981,"count":0}],"isBlockCoverage":false},{"functionName":"TAP12Producer","ranges":[{"startOffset":5249,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"TAP13Producer","ranges":[{"startOffset":6013,"endOffset":6911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3634,"count":1}],"isBlockCoverage":true},{"functionName":"JSONReporter","ranges":[{"startOffset":882,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":2458,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"cleanCycles","ranges":[{"startOffset":2921,"endOffset":3315,"count":0}],"isBlockCoverage":false},{"functionName":"errorJSON","ranges":[{"startOffset":3431,"endOffset":3583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/html.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11916,"count":1}],"isBlockCoverage":true},{"functionName":"HTML","ranges":[{"startOffset":1664,"endOffset":8936,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":9063,"endOffset":9427,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.suiteURL","ranges":[{"startOffset":9515,"endOffset":9594,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.testURL","ranges":[{"startOffset":9680,"endOffset":9757,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.addCodeToggle","ranges":[{"startOffset":9931,"endOffset":10244,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":10305,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"fragment","ranges":[{"startOffset":10481,"endOffset":10831,"count":0}],"isBlockCoverage":false},{"functionName":"hideSuitesWithout","ranges":[{"startOffset":10953,"endOffset":11227,"count":0}],"isBlockCoverage":false},{"functionName":"unhide","ranges":[{"startOffset":11263,"endOffset":11450,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":11553,"endOffset":11683,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":11734,"endOffset":11889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1905,"count":1}],"isBlockCoverage":true},{"functionName":"List","ranges":[{"startOffset":854,"endOffset":1786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1091,"count":1}],"isBlockCoverage":true},{"functionName":"Min","ranges":[{"startOffset":674,"endOffset":977,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"Spec","ranges":[{"startOffset":879,"endOffset":2216,"count":1}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":1003,"endOffset":1064,"count":58}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1170,"endOffset":1275,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1308,"endOffset":1396,"count":9},{"startOffset":1360,"endOffset":1392,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1432,"endOffset":1544,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1577,"endOffset":2025,"count":46},{"startOffset":1800,"endOffset":2021,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2058,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/nyan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5570,"count":1}],"isBlockCoverage":true},{"functionName":"NyanCat","ranges":[{"startOffset":760,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.draw","ranges":[{"startOffset":1798,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawScoreboard","ranges":[{"startOffset":2080,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.appendRainbow","ranges":[{"startOffset":2513,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawRainbow","ranges":[{"startOffset":2930,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawNyanCat","ranges":[{"startOffset":3273,"endOffset":4070,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.face","ranges":[{"startOffset":4165,"endOffset":4379,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorUp","ranges":[{"startOffset":4479,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorDown","ranges":[{"startOffset":4644,"endOffset":4705,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.generateColors","ranges":[{"startOffset":4813,"endOffset":5169,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.rainbowify","ranges":[{"startOffset":5306,"endOffset":5531,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/xunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4878,"count":1}],"isBlockCoverage":true},{"functionName":"XUnit","ranges":[{"startOffset":1066,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.done","ranges":[{"startOffset":2946,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.write","ranges":[{"startOffset":3188,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.test","ranges":[{"startOffset":3510,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":4416,"endOffset":4825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/markdown.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2434,"count":1}],"isBlockCoverage":true},{"functionName":"Markdown","ranges":[{"startOffset":753,"endOffset":2381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2517,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":781,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/landing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"Landing","ranges":[{"startOffset":948,"endOffset":2401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/reporters/json-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2079,"count":1}],"isBlockCoverage":true},{"functionName":"JSONStream","ranges":[{"startOffset":677,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":1492,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1812,"endOffset":2019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/nodejs/esm-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3533,"count":1}],"isBlockCoverage":true},{"functionName":"forward","ranges":[{"startOffset":75,"endOffset":81,"count":4}],"isBlockCoverage":true},{"functionName":"formattedImport","ranges":[{"startOffset":108,"endOffset":1086,"count":4},{"startOffset":179,"endOffset":1037,"count":3},{"startOffset":273,"endOffset":1033,"count":0},{"startOffset":1037,"endOffset":1085,"count":1}],"isBlockCoverage":true},{"functionName":"exports.doImport","ranges":[{"startOffset":1108,"endOffset":1134,"count":4}],"isBlockCoverage":true},{"functionName":"exports.requireOrImport","ranges":[{"startOffset":1163,"endOffset":3093,"count":4},{"startOffset":1232,"endOffset":1285,"count":0},{"startOffset":1369,"endOffset":3091,"count":0}],"isBlockCoverage":true},{"functionName":"dealWithExports","ranges":[{"startOffset":3096,"endOffset":3242,"count":4},{"startOffset":3153,"endOffset":3185,"count":1},{"startOffset":3185,"endOffset":3240,"count":3}],"isBlockCoverage":true},{"functionName":"exports.loadFilesAsync","ranges":[{"startOffset":3269,"endOffset":3531,"count":1},{"startOffset":3367,"endOffset":3529,"count":3}],"isBlockCoverage":true}]},{"scriptId":"212","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/stats-collector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"createStatsCollector","ranges":[{"startOffset":1329,"endOffset":2179,"count":1},{"startOffset":1520,"endOffset":1577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1635,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1716,"endOffset":1772,"count":9},{"startOffset":1750,"endOffset":1767,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1841,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1873,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1985,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2016,"endOffset":2052,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2084,"endOffset":2175,"count":1}],"isBlockCoverage":true}]},{"scriptId":"213","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/interfaces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1}],"isBlockCoverage":true}]},{"scriptId":"214","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/interfaces/bdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2512,"count":1}],"isBlockCoverage":true},{"functionName":"bddInterface","ranges":[{"startOffset":544,"endOffset":2448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":635,"endOffset":2444,"count":3},{"startOffset":926,"endOffset":955,"count":0}],"isBlockCoverage":true},{"functionName":"context.describe.context.context","ranges":[{"startOffset":1135,"endOffset":1248,"count":8}],"isBlockCoverage":true},{"functionName":"context.xdescribe.context.xcontext.context.describe.skip","ranges":[{"startOffset":1380,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"context.describe.only","ranges":[{"startOffset":1587,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"context.it.context.specify","ranges":[{"startOffset":1872,"endOffset":2095,"count":49},{"startOffset":1953,"endOffset":1981,"count":0}],"isBlockCoverage":true},{"functionName":"context.it.only","ranges":[{"startOffset":2165,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"context.xit.context.xspecify.context.it.skip","ranges":[{"startOffset":2375,"endOffset":2439,"count":3}],"isBlockCoverage":true}]},{"scriptId":"215","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2635,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":557,"endOffset":870,"count":49},{"startOffset":608,"endOffset":796,"count":0}],"isBlockCoverage":true},{"functionName":"Test.reset","ranges":[{"startOffset":1031,"endOffset":1133,"count":98}],"isBlockCoverage":true},{"functionName":"Test.retriedTest","ranges":[{"startOffset":1215,"endOffset":1317,"count":49},{"startOffset":1290,"endOffset":1316,"count":0}],"isBlockCoverage":true},{"functionName":"Test.markOnly","ranges":[{"startOffset":1417,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"Test.clone","ranges":[{"startOffset":1494,"endOffset":1857,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2051,"endOffset":2633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/interfaces/tdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":625,"endOffset":2243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/interfaces/qunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2135,"count":1}],"isBlockCoverage":true},{"functionName":"qUnitInterface","ranges":[{"startOffset":648,"endOffset":2088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/interfaces/exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":460,"endOffset":1360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":152,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"Context.runnable","ranges":[{"startOffset":338,"endOffset":475,"count":131},{"startOffset":385,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"Context.timeout","ranges":[{"startOffset":610,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"Context.slow","ranges":[{"startOffset":885,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"Context.skip","ranges":[{"startOffset":1108,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"Context.retries","ranges":[{"startOffset":1308,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/run-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8821,"count":1}],"isBlockCoverage":true},{"functionName":"exitMochaLater","ranges":[{"startOffset":831,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"exitMocha","ranges":[{"startOffset":1158,"endOffset":1849,"count":1}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":1567,"endOffset":1640,"count":3},{"startOffset":1596,"endOffset":1636,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1714,"endOffset":1834,"count":2}],"isBlockCoverage":true},{"functionName":"exports.list","ranges":[{"startOffset":2068,"endOffset":2146,"count":16},{"startOffset":2096,"endOffset":2125,"count":8},{"startOffset":2126,"endOffset":2146,"count":8}],"isBlockCoverage":true},{"functionName":"exports.handleRequires","ranges":[{"startOffset":2416,"endOffset":3274,"count":1},{"startOffset":2691,"endOffset":2795,"count":0},{"startOffset":2964,"endOffset":3047,"count":0},{"startOffset":3189,"endOffset":3254,"count":0}],"isBlockCoverage":true},{"functionName":"handleUnmatchedFiles","ranges":[{"startOffset":3537,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"singleRun","ranges":[{"startOffset":4507,"endOffset":5029,"count":1},{"startOffset":4698,"endOffset":4777,"count":0}],"isBlockCoverage":true},{"functionName":"parallelRun","ranges":[{"startOffset":5434,"endOffset":5949,"count":0}],"isBlockCoverage":false},{"functionName":"exports.runMocha","ranges":[{"startOffset":6412,"endOffset":6909,"count":1},{"startOffset":6745,"endOffset":6800,"count":0},{"startOffset":6827,"endOffset":6840,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateLegacyPlugin","ranges":[{"startOffset":7490,"endOffset":8554,"count":2},{"startOffset":7763,"endOffset":7888,"count":0},{"startOffset":8170,"endOffset":8552,"count":0}],"isBlockCoverage":true},{"functionName":"createUnknownError","ranges":[{"startOffset":7919,"endOffset":8075,"count":0}],"isBlockCoverage":false},{"functionName":"createExitHandler","ranges":[{"startOffset":8583,"endOffset":8819,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8632,"endOffset":8816,"count":1},{"startOffset":8695,"endOffset":8698,"count":0},{"startOffset":8782,"endOffset":8811,"count":0}],"isBlockCoverage":true}]},{"scriptId":"221","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/watch-run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10769,"count":1}],"isBlockCoverage":true},{"functionName":"exports.watchParallelRun","ranges":[{"startOffset":1013,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"exports.watchRun","ranges":[{"startOffset":3283,"endOffset":4740,"count":0}],"isBlockCoverage":false},{"functionName":"createWatcher","ranges":[{"startOffset":5532,"endOffset":7799,"count":0}],"isBlockCoverage":false},{"functionName":"createRerunner","ranges":[{"startOffset":8180,"endOffset":9177,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedFiles","ranges":[{"startOffset":9404,"endOffset":9617,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":9690,"endOffset":9738,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":9811,"endOffset":9859,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":9929,"endOffset":9975,"count":0}],"isBlockCoverage":false},{"functionName":"blastCache","ranges":[{"startOffset":10136,"endOffset":10324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28375,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1627,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1699,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1899,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2322,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2754,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2831,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3029,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3240,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3456,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3616,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3749,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4088,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4227,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4332,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4560,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5282,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":5767,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":5909,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6330,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6648,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7511,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11450,"endOffset":13187,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13398,"endOffset":14076,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14177,"endOffset":14941,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15016,"endOffset":15266,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15268,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":15781,"endOffset":18082,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18257,"endOffset":18533,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":18829,"endOffset":19563,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":19565,"endOffset":19615,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20062,"endOffset":21418,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":21420,"endOffset":21484,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":21658,"endOffset":22258,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":22260,"endOffset":22327,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":22624,"endOffset":22863,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23061,"endOffset":23329,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":23594,"endOffset":23870,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":24176,"endOffset":26865,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":26931,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":27141,"endOffset":27297,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":27360,"endOffset":27543,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":27545,"endOffset":27943,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":28244,"endOffset":28349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/readdirp@3.6.0/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8876,"count":1},{"startOffset":1140,"endOffset":1181,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":942,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1055,"endOffset":1082,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1208,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2119,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2434,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3726,"endOffset":5128,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5132,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5340,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5778,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":5928,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":7820,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8482,"endOffset":8738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"225","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"226","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"227","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"228","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"229","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/anymatch@3.1.3/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3180,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2124,"endOffset":3121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"231","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/normalize-path@3.0.0/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"232","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob-parent@5.1.2/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/is-glob@4.0.3/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/is-extglob@2.1.1/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/braces@3.0.3/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4380,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1363,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1799,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2411,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3145,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4122,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1099,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1349,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1769,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1971,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2179,"endOffset":2516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/fill-range@7.1.1/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6406,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2311,"endOffset":2564,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2583,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2864,"endOffset":2958,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2982,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3115,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3283,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4797,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5593,"endOffset":6380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/to-regex-range@5.0.1/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/is-number@7.0.0/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2797,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":832,"endOffset":2769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6899,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"245","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20067,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":725,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":843,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1034,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1181,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1384,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2240,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3167,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3691,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6374,"endOffset":8442,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8539,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":8844,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":9953,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12337,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13372,"endOffset":15882,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16330,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":17835,"endOffset":20030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/is-binary-path@2.1.0/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":164,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/binary-extensions@2.3.0/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"248","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1878,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1670,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1702,"endOffset":1712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16368,"count":1},{"startOffset":170,"endOffset":266,"count":0},{"startOffset":507,"endOffset":518,"count":0},{"startOffset":520,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":1007,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2098,"endOffset":2185,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2586,"endOffset":4967,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":5072,"endOffset":5311,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5388,"endOffset":5433,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5516,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5774,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":6075,"endOffset":6113,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6114,"endOffset":6418,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6420,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6651,"endOffset":7317,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7319,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":9001,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11330,"endOffset":12413,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12478,"endOffset":12951,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":12953,"endOffset":13218,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":13558,"endOffset":16297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"250","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/fsevents@2.3.3/node_modules/fsevents/fsevents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2482,"count":1},{"startOffset":184,"endOffset":281,"count":0}],"isBlockCoverage":true},{"functionName":"watch","ranges":[{"startOffset":360,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1231,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"getFileType","ranges":[{"startOffset":1401,"endOffset":1645,"count":0}],"isBlockCoverage":false},{"functionName":"anyIsTrue","ranges":[{"startOffset":1646,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"getEventType","ranges":[{"startOffset":1750,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"getFileChanges","ranges":[{"startOffset":2161,"endOffset":2402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/collect-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4074,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":780,"endOffset":2999,"count":1},{"startOffset":2154,"endOffset":2181,"count":0},{"startOffset":2397,"endOffset":2788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":930,"endOffset":1517,"count":1},{"startOffset":1314,"endOffset":1513,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1056,"endOffset":1200,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1104,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1224,"endOffset":1258,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1627,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2273,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2862,"endOffset":2944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"252","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@5.1.6/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28818,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":35,"endOffset":267,"count":0}],"isBlockCoverage":false},{"functionName":"charSet","ranges":[{"startOffset":1274,"endOffset":1347,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1298,"endOffset":1342,"count":17}],"isBlockCoverage":true},{"functionName":"minimatch.filter","ranges":[{"startOffset":1617,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1706,"endOffset":1836,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1859,"endOffset":2677,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":2957,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":3030,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":3424,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":4321,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":4411,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":4670,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"charUnescape","ranges":[{"startOffset":4722,"endOffset":4757,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":4779,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"braExpEscape","ranges":[{"startOffset":4851,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":4907,"endOffset":5471,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":5475,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":5490,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":6700,"endOffset":7058,"count":0}],"isBlockCoverage":false},{"functionName":"matchOne","ranges":[{"startOffset":7290,"endOffset":12449,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":12453,"endOffset":12524,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12528,"endOffset":24830,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":24834,"endOffset":27191,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27195,"endOffset":28706,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":28717,"endOffset":28782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"253","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@5.1.6/node_modules/minimatch/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1},{"startOffset":120,"endOffset":135,"count":0}],"isBlockCoverage":true}]},{"scriptId":"254","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/brace-expansion@2.0.1/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4992,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":298,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":408,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":647,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1040,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1508,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2087,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2139,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2194,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2234,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2275,"endOffset":4990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/balanced-match@1.0.2/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/lookup-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4547,"count":1}],"isBlockCoverage":true},{"functionName":"isHiddenOnUnix","ranges":[{"startOffset":1057,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingExtname","ranges":[{"startOffset":1618,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"lookupFiles","ranges":[{"startOffset":2409,"endOffset":4545,"count":1},{"startOffset":2712,"endOffset":3009,"count":0},{"startOffset":3421,"endOffset":3562,"count":0},{"startOffset":3584,"endOffset":3698,"count":0},{"startOffset":3703,"endOffset":4544,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2820,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3355,"endOffset":3389,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3811,"endOffset":4524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2876,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":699,"endOffset":741,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":814,"endOffset":858,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":965,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1124,"endOffset":1171,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1284,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"globStreamSync","ranges":[{"startOffset":1331,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":1444,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":1549,"endOffset":1653,"count":1}],"isBlockCoverage":true},{"functionName":"glob_","ranges":[{"startOffset":1654,"endOffset":1757,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":1758,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":1873,"endOffset":1979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"258","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40557,"count":1},{"startOffset":3263,"endOffset":3272,"count":0},{"startOffset":3407,"endOffset":3423,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":729,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":1166,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1175,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":1247,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":1309,"endOffset":1421,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1360,"endOffset":1418,"count":5}],"isBlockCoverage":true},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":1455,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1607,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1680,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1780,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1874,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1939,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":2057,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":2277,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":2494,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2644,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2796,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2923,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4110,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":4269,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":4326,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":6266,"endOffset":6670,"count":2},{"startOffset":6616,"endOffset":6669,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":7419,"endOffset":7486,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7570,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":7956,"endOffset":8008,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8026,"endOffset":39810,"count":2}],"isBlockCoverage":true},{"functionName":"Minimatch","ranges":[{"startOffset":8290,"endOffset":9487,"count":2},{"startOffset":8421,"endOffset":8426,"count":0},{"startOffset":8533,"endOffset":8551,"count":1},{"startOffset":8684,"endOffset":8723,"count":0},{"startOffset":9260,"endOffset":9288,"count":0},{"startOffset":9325,"endOffset":9339,"count":0}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":9492,"endOffset":9819,"count":1},{"startOffset":9544,"endOffset":9566,"count":0},{"startOffset":9568,"endOffset":9604,"count":0},{"startOffset":9687,"endOffset":9781,"count":2},{"startOffset":9755,"endOffset":9767,"count":1},{"startOffset":9781,"endOffset":9818,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":9824,"endOffset":9839,"count":8}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":9844,"endOffset":12674,"count":2},{"startOffset":10014,"endOffset":10042,"count":1},{"startOffset":10044,"endOffset":10108,"count":0},{"startOffset":10131,"endOffset":10193,"count":0},{"startOffset":10384,"endOffset":10457,"count":0},{"startOffset":12238,"endOffset":12624,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":10411,"endOffset":10446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11110,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11284,"endOffset":11992,"count":2},{"startOffset":11331,"endOffset":11357,"count":0},{"startOffset":11359,"endOffset":11934,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11749,"endOffset":11769,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11879,"endOffset":11899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11960,"endOffset":11980,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12127,"endOffset":12155,"count":2}],"isBlockCoverage":true},{"functionName":"preprocess","ranges":[{"startOffset":12975,"endOffset":14043,"count":2},{"startOffset":13102,"endOffset":13387,"count":0},{"startOffset":13480,"endOffset":14011,"count":1},{"startOffset":13860,"endOffset":14011,"count":0}],"isBlockCoverage":true},{"functionName":"adjascentGlobstarOptimize","ranges":[{"startOffset":14093,"endOffset":14533,"count":0}],"isBlockCoverage":false},{"functionName":"levelOneOptimize","ranges":[{"startOffset":14593,"endOffset":15248,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14652,"endOffset":15240,"count":1},{"startOffset":15215,"endOffset":15221,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14696,"endOffset":15170,"count":3},{"startOffset":14797,"endOffset":14813,"count":1},{"startOffset":14815,"endOffset":14866,"count":0},{"startOffset":14902,"endOffset":15096,"count":0}],"isBlockCoverage":true},{"functionName":"levelTwoFileOptimize","ranges":[{"startOffset":15253,"endOffset":16741,"count":0}],"isBlockCoverage":false},{"functionName":"firstPhasePreProcess","ranges":[{"startOffset":17572,"endOffset":20809,"count":1},{"startOffset":18008,"endOffset":18127,"count":0},{"startOffset":18294,"endOffset":18373,"count":0},{"startOffset":18583,"endOffset":18647,"count":0},{"startOffset":18648,"endOffset":18685,"count":0},{"startOffset":18686,"endOffset":18716,"count":0},{"startOffset":18717,"endOffset":18754,"count":0},{"startOffset":18755,"endOffset":18793,"count":0},{"startOffset":18795,"endOffset":19174,"count":0},{"startOffset":19495,"endOffset":19513,"count":0},{"startOffset":19543,"endOffset":19552,"count":0},{"startOffset":19604,"endOffset":19761,"count":0},{"startOffset":19825,"endOffset":19870,"count":0},{"startOffset":19871,"endOffset":19935,"count":0},{"startOffset":19937,"endOffset":20042,"count":0},{"startOffset":20210,"endOffset":20731,"count":0}],"isBlockCoverage":true},{"functionName":"secondPhasePreProcess","ranges":[{"startOffset":21151,"endOffset":21650,"count":1},{"startOffset":21241,"endOffset":21594,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21627,"endOffset":21642,"count":1}],"isBlockCoverage":true},{"functionName":"partsMatch","ranges":[{"startOffset":21655,"endOffset":23232,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":23237,"endOffset":23661,"count":2},{"startOffset":23292,"endOffset":23467,"count":1},{"startOffset":23474,"endOffset":23543,"count":0},{"startOffset":23543,"endOffset":23582,"count":1},{"startOffset":23582,"endOffset":23625,"count":0},{"startOffset":23625,"endOffset":23660,"count":1}],"isBlockCoverage":true},{"functionName":"matchOne","ranges":[{"startOffset":23904,"endOffset":32038,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":32043,"endOffset":32133,"count":2}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":32138,"endOffset":33865,"count":6},{"startOffset":32324,"endOffset":32348,"count":2},{"startOffset":32348,"endOffset":32389,"count":4},{"startOffset":32389,"endOffset":32399,"count":0},{"startOffset":32399,"endOffset":32616,"count":4},{"startOffset":32616,"endOffset":32688,"count":0},{"startOffset":32688,"endOffset":33576,"count":4},{"startOffset":32741,"endOffset":33025,"count":2},{"startOffset":32798,"endOffset":32900,"count":1},{"startOffset":32832,"endOffset":32857,"count":0},{"startOffset":32917,"endOffset":33007,"count":1},{"startOffset":32951,"endOffset":32970,"count":0},{"startOffset":33025,"endOffset":33576,"count":2},{"startOffset":33074,"endOffset":33339,"count":0},{"startOffset":33393,"endOffset":33479,"count":0},{"startOffset":33529,"endOffset":33576,"count":0},{"startOffset":33576,"endOffset":33677,"count":4},{"startOffset":33677,"endOffset":33702,"count":2},{"startOffset":33704,"endOffset":33840,"count":2},{"startOffset":33840,"endOffset":33864,"count":4}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":33870,"endOffset":37227,"count":0}],"isBlockCoverage":false},{"functionName":"slashSplit","ranges":[{"startOffset":37232,"endOffset":37801,"count":2},{"startOffset":37526,"endOffset":37570,"count":0},{"startOffset":37603,"endOffset":37627,"count":0},{"startOffset":37629,"endOffset":37735,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":37806,"endOffset":39717,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":39729,"endOffset":39808,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39963,"endOffset":39999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40112,"endOffset":40154,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40273,"endOffset":40319,"count":1}],"isBlockCoverage":true}]},{"scriptId":"259","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":179,"endOffset":393,"count":10},{"startOffset":231,"endOffset":286,"count":0},{"startOffset":332,"endOffset":391,"count":0}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22822,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":316,"endOffset":335,"count":26}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":1090,"endOffset":1142,"count":24}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1551,"endOffset":22771,"count":4}],"isBlockCoverage":true},{"functionName":"AST","ranges":[{"startOffset":1848,"endOffset":2417,"count":4},{"startOffset":1989,"endOffset":2011,"count":0},{"startOffset":2077,"endOffset":2097,"count":0},{"startOffset":2160,"endOffset":2181,"count":0},{"startOffset":2229,"endOffset":2247,"count":0},{"startOffset":2274,"endOffset":2300,"count":0},{"startOffset":2314,"endOffset":2336,"count":0},{"startOffset":2378,"endOffset":2406,"count":0}],"isBlockCoverage":true},{"functionName":"get hasMagic","ranges":[{"startOffset":2422,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2929,"endOffset":3286,"count":8},{"startOffset":2996,"endOffset":3134,"count":4},{"startOffset":3134,"endOffset":3280,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3098,"endOffset":3112,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3237,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"#fillNegs","ranges":[{"startOffset":3291,"endOffset":4480,"count":4},{"startOffset":3380,"endOffset":3424,"count":0},{"startOffset":3467,"endOffset":3479,"count":0},{"startOffset":3670,"endOffset":4453,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4485,"endOffset":4857,"count":4},{"startOffset":4577,"endOffset":4586,"count":0},{"startOffset":4659,"endOffset":4703,"count":0},{"startOffset":4705,"endOffset":4775,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":4862,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"isStart","ranges":[{"startOffset":5337,"endOffset":5935,"count":8},{"startOffset":5406,"endOffset":5500,"count":0},{"startOffset":5516,"endOffset":5934,"count":0}],"isBlockCoverage":true},{"functionName":"isEnd","ranges":[{"startOffset":5940,"endOffset":6427,"count":8},{"startOffset":6007,"endOffset":6038,"count":0},{"startOffset":6060,"endOffset":6105,"count":0},{"startOffset":6121,"endOffset":6342,"count":0},{"startOffset":6343,"endOffset":6346,"count":0}],"isBlockCoverage":true},{"functionName":"copyIn","ranges":[{"startOffset":6432,"endOffset":6573,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":6578,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"#parseAST","ranges":[{"startOffset":6749,"endOffset":10733,"count":4},{"startOffset":7084,"endOffset":8460,"count":26},{"startOffset":7292,"endOffset":7413,"count":0},{"startOffset":7443,"endOffset":7861,"count":0},{"startOffset":7898,"endOffset":8087,"count":0},{"startOffset":8139,"endOffset":8163,"count":2},{"startOffset":8165,"endOffset":8420,"count":0},{"startOffset":8519,"endOffset":10732,"count":0}],"isBlockCoverage":true},{"functionName":"fromGlob","ranges":[{"startOffset":10745,"endOffset":10908,"count":4}],"isBlockCoverage":true},{"functionName":"toMMPattern","ranges":[{"startOffset":11008,"endOffset":11979,"count":4},{"startOffset":11140,"endOffset":11172,"count":0},{"startOffset":11536,"endOffset":11565,"count":2},{"startOffset":11566,"endOffset":11714,"count":2},{"startOffset":11603,"endOffset":11652,"count":1},{"startOffset":11653,"endOffset":11713,"count":0},{"startOffset":11739,"endOffset":11820,"count":2},{"startOffset":11820,"endOffset":11825,"count":1},{"startOffset":11826,"endOffset":11830,"count":1},{"startOffset":11841,"endOffset":11846,"count":0},{"startOffset":11847,"endOffset":11851,"count":2}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":11984,"endOffset":12035,"count":0}],"isBlockCoverage":false},{"functionName":"toRegExpSource","ranges":[{"startOffset":15478,"endOffset":20598,"count":4},{"startOffset":17038,"endOffset":17063,"count":0},{"startOffset":17194,"endOffset":17219,"count":0},{"startOffset":17355,"endOffset":17380,"count":0},{"startOffset":17666,"endOffset":17684,"count":0},{"startOffset":17697,"endOffset":17709,"count":2},{"startOffset":17710,"endOffset":17714,"count":2},{"startOffset":17972,"endOffset":17978,"count":0},{"startOffset":17988,"endOffset":18038,"count":0},{"startOffset":18284,"endOffset":18541,"count":0},{"startOffset":18615,"endOffset":18628,"count":0},{"startOffset":18629,"endOffset":18636,"count":0},{"startOffset":18710,"endOffset":18725,"count":0},{"startOffset":18726,"endOffset":18734,"count":0},{"startOffset":18735,"endOffset":18755,"count":0},{"startOffset":18757,"endOffset":19207,"count":0},{"startOffset":19208,"endOffset":19214,"count":0},{"startOffset":19215,"endOffset":19229,"count":0},{"startOffset":19242,"endOffset":19246,"count":0},{"startOffset":19259,"endOffset":19286,"count":0},{"startOffset":19325,"endOffset":19601,"count":0},{"startOffset":19603,"endOffset":20597,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15764,"endOffset":16110,"count":4},{"startOffset":15927,"endOffset":15955,"count":0}],"isBlockCoverage":true},{"functionName":"#partsToRegExp","ranges":[{"startOffset":20603,"endOffset":21248,"count":0}],"isBlockCoverage":false},{"functionName":"#parseGlob","ranges":[{"startOffset":21260,"endOffset":22769,"count":4},{"startOffset":21430,"endOffset":22688,"count":26},{"startOffset":21496,"endOffset":21630,"count":0},{"startOffset":21659,"endOffset":21875,"count":0},{"startOffset":21903,"endOffset":22273,"count":0},{"startOffset":22301,"endOffset":22512,"count":2},{"startOffset":22368,"endOffset":22386,"count":0},{"startOffset":22512,"endOffset":22540,"count":24},{"startOffset":22540,"endOffset":22643,"count":0},{"startOffset":22643,"endOffset":22688,"count":24}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5763,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":1000,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":1098,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1236,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1621,"endOffset":5683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":973,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":694,"endOffset":906,"count":8},{"startOffset":783,"endOffset":818,"count":0}],"isBlockCoverage":true}]},{"scriptId":"263","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":968,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":553,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8546,"count":1},{"startOffset":552,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":637,"endOffset":8492,"count":1}],"isBlockCoverage":true},{"functionName":"Glob","ranges":[{"startOffset":1581,"endOffset":5913,"count":1},{"startOffset":1671,"endOffset":1716,"count":0},{"startOffset":2076,"endOffset":2228,"count":0},{"startOffset":2729,"endOffset":2744,"count":0},{"startOffset":2856,"endOffset":2886,"count":0},{"startOffset":2888,"endOffset":2974,"count":0},{"startOffset":3137,"endOffset":3209,"count":0},{"startOffset":3353,"endOffset":3562,"count":0},{"startOffset":3736,"endOffset":3984,"count":0},{"startOffset":4053,"endOffset":4084,"count":0},{"startOffset":4130,"endOffset":4162,"count":0},{"startOffset":4199,"endOffset":4230,"count":0},{"startOffset":4776,"endOffset":4804,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3286,"endOffset":3312,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3510,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5366,"endOffset":5404,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5456,"endOffset":5579,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5629,"endOffset":5905,"count":1},{"startOffset":5749,"endOffset":5791,"count":0}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":5918,"endOffset":6667,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":6672,"endOffset":7139,"count":1},{"startOffset":6861,"endOffset":6922,"count":0}],"isBlockCoverage":true},{"functionName":"stream","ranges":[{"startOffset":7144,"endOffset":7547,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":7552,"endOffset":7963,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":8083,"endOffset":8157,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8162,"endOffset":8224,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":8351,"endOffset":8422,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8427,"endOffset":8490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/path-scurry@1.11.1/node_modules/path-scurry/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":66122,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0},{"startOffset":65687,"endOffset":65698,"count":0},{"startOffset":65989,"endOffset":66006,"count":0},{"startOffset":66070,"endOffset":66087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":106},{"startOffset":232,"endOffset":247,"count":8},{"startOffset":248,"endOffset":284,"count":98},{"startOffset":264,"endOffset":284,"count":5},{"startOffset":287,"endOffset":363,"count":101}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":1},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":106}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":2223,"endOffset":2478,"count":2},{"startOffset":2273,"endOffset":2297,"count":0},{"startOffset":2318,"endOffset":2478,"count":0}],"isBlockCoverage":true},{"functionName":"uncToDrive","ranges":[{"startOffset":2588,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":3789,"endOffset":4096,"count":6},{"startOffset":3807,"endOffset":3814,"count":3},{"startOffset":3819,"endOffset":4096,"count":3},{"startOffset":3853,"endOffset":4096,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":4182,"endOffset":4337,"count":12},{"startOffset":4247,"endOffset":4256,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeNocase","ranges":[{"startOffset":4403,"endOffset":4577,"count":18},{"startOffset":4474,"endOffset":4483,"count":6},{"startOffset":4483,"endOffset":4576,"count":12}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":4720,"endOffset":4770,"count":2}],"isBlockCoverage":true},{"functionName":"ChildrenCache","ranges":[{"startOffset":5698,"endOffset":5868,"count":1}],"isBlockCoverage":true},{"functionName":"sizeCalculation","ranges":[{"startOffset":5832,"endOffset":5849,"count":9}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6534,"endOffset":38140,"count":12}],"isBlockCoverage":true},{"functionName":"get dev","ranges":[{"startOffset":7660,"endOffset":7703,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":7719,"endOffset":7764,"count":0}],"isBlockCoverage":false},{"functionName":"get nlink","ranges":[{"startOffset":7781,"endOffset":7828,"count":0}],"isBlockCoverage":false},{"functionName":"get uid","ranges":[{"startOffset":7843,"endOffset":7886,"count":0}],"isBlockCoverage":false},{"functionName":"get gid","ranges":[{"startOffset":7901,"endOffset":7944,"count":0}],"isBlockCoverage":false},{"functionName":"get rdev","ranges":[{"startOffset":7960,"endOffset":8005,"count":0}],"isBlockCoverage":false},{"functionName":"get blksize","ranges":[{"startOffset":8024,"endOffset":8075,"count":0}],"isBlockCoverage":false},{"functionName":"get ino","ranges":[{"startOffset":8090,"endOffset":8133,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":8149,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"get blocks","ranges":[{"startOffset":8212,"endOffset":8261,"count":0}],"isBlockCoverage":false},{"functionName":"get atimeMs","ranges":[{"startOffset":8280,"endOffset":8331,"count":0}],"isBlockCoverage":false},{"functionName":"get mtimeMs","ranges":[{"startOffset":8350,"endOffset":8401,"count":0}],"isBlockCoverage":false},{"functionName":"get ctimeMs","ranges":[{"startOffset":8420,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtimeMs","ranges":[{"startOffset":8494,"endOffset":8553,"count":0}],"isBlockCoverage":false},{"functionName":"get atime","ranges":[{"startOffset":8570,"endOffset":8617,"count":0}],"isBlockCoverage":false},{"functionName":"get mtime","ranges":[{"startOffset":8634,"endOffset":8681,"count":0}],"isBlockCoverage":false},{"functionName":"get ctime","ranges":[{"startOffset":8698,"endOffset":8745,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtime","ranges":[{"startOffset":8766,"endOffset":8821,"count":0}],"isBlockCoverage":false},{"functionName":"get parentPath","ranges":[{"startOffset":9243,"endOffset":9316,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":9493,"endOffset":9543,"count":0}],"isBlockCoverage":false},{"functionName":"PathBase","ranges":[{"startOffset":9736,"endOffset":10394,"count":12},{"startOffset":9892,"endOffset":9909,"count":0},{"startOffset":10032,"endOffset":10039,"count":1},{"startOffset":10266,"endOffset":10317,"count":11},{"startOffset":10317,"endOffset":10388,"count":1}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":10547,"endOffset":10753,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":10791,"endOffset":10845,"count":11}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":10948,"endOffset":11340,"count":1},{"startOffset":10983,"endOffset":11019,"count":0},{"startOffset":11207,"endOffset":11267,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveParts","ranges":[{"startOffset":11345,"endOffset":11496,"count":1}],"isBlockCoverage":true},{"functionName":"children","ranges":[{"startOffset":11795,"endOffset":12093,"count":9},{"startOffset":11877,"endOffset":11915,"count":0}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":12498,"endOffset":13714,"count":6},{"startOffset":12571,"endOffset":12607,"count":0},{"startOffset":12639,"endOffset":12690,"count":0},{"startOffset":12820,"endOffset":12841,"count":0},{"startOffset":12877,"endOffset":12969,"count":0},{"startOffset":13175,"endOffset":13185,"count":5},{"startOffset":13186,"endOffset":13190,"count":1},{"startOffset":13232,"endOffset":13263,"count":1},{"startOffset":13264,"endOffset":13275,"count":5},{"startOffset":13448,"endOffset":13495,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":13881,"endOffset":14271,"count":12},{"startOffset":13930,"endOffset":13940,"count":0},{"startOffset":13983,"endOffset":14029,"count":3},{"startOffset":14029,"endOffset":14109,"count":9},{"startOffset":14109,"endOffset":14169,"count":0},{"startOffset":14169,"endOffset":14228,"count":9},{"startOffset":14228,"endOffset":14240,"count":6},{"startOffset":14241,"endOffset":14245,"count":3},{"startOffset":14246,"endOffset":14256,"count":6}],"isBlockCoverage":true},{"functionName":"relativePosix","ranges":[{"startOffset":14539,"endOffset":15014,"count":0}],"isBlockCoverage":false},{"functionName":"fullpath","ranges":[{"startOffset":15093,"endOffset":15471,"count":16},{"startOffset":15148,"endOffset":15274,"count":8},{"startOffset":15274,"endOffset":15334,"count":1},{"startOffset":15334,"endOffset":15403,"count":7},{"startOffset":15403,"endOffset":15407,"count":1},{"startOffset":15408,"endOffset":15418,"count":6}],"isBlockCoverage":true},{"functionName":"fullpathPosix","ranges":[{"startOffset":15670,"endOffset":16350,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknown","ranges":[{"startOffset":16621,"endOffset":16688,"count":4}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":16693,"endOffset":16749,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":16754,"endOffset":17330,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":17386,"endOffset":17448,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":17501,"endOffset":17568,"count":3}],"isBlockCoverage":true},{"functionName":"isCharacterDevice","ranges":[{"startOffset":17628,"endOffset":17701,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":17757,"endOffset":17826,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":17879,"endOffset":17941,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":17991,"endOffset":18056,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":18113,"endOffset":18184,"count":5}],"isBlockCoverage":true},{"functionName":"lstatCached","ranges":[{"startOffset":18436,"endOffset":18518,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkCached","ranges":[{"startOffset":18879,"endOffset":18936,"count":0}],"isBlockCoverage":false},{"functionName":"realpathCached","ranges":[{"startOffset":19302,"endOffset":19357,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCached","ranges":[{"startOffset":19740,"endOffset":19861,"count":0}],"isBlockCoverage":false},{"functionName":"canReadlink","ranges":[{"startOffset":20158,"endOffset":20507,"count":0}],"isBlockCoverage":false},{"functionName":"calledReaddir","ranges":[{"startOffset":20668,"endOffset":20739,"count":3}],"isBlockCoverage":true},{"functionName":"isENOENT","ranges":[{"startOffset":20988,"endOffset":21046,"count":3}],"isBlockCoverage":true},{"functionName":"isNamed","ranges":[{"startOffset":21515,"endOffset":21662,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":21976,"endOffset":22755,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":22821,"endOffset":23583,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirSuccess","ranges":[{"startOffset":23588,"endOffset":23934,"count":3},{"startOffset":23830,"endOffset":23928,"count":0}],"isBlockCoverage":true},{"functionName":"#markENOENT","ranges":[{"startOffset":23939,"endOffset":24146,"count":0}],"isBlockCoverage":false},{"functionName":"#markChildrenENOENT","ranges":[{"startOffset":24151,"endOffset":24388,"count":0}],"isBlockCoverage":false},{"functionName":"#markENOREALPATH","ranges":[{"startOffset":24393,"endOffset":24483,"count":0}],"isBlockCoverage":false},{"functionName":"#markENOTDIR","ranges":[{"startOffset":24552,"endOffset":25215,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirFail","ranges":[{"startOffset":25220,"endOffset":25559,"count":0}],"isBlockCoverage":false},{"functionName":"#lstatFail","ranges":[{"startOffset":25564,"endOffset":25974,"count":0}],"isBlockCoverage":false},{"functionName":"#readlinkFail","ranges":[{"startOffset":25979,"endOffset":26723,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirAddChild","ranges":[{"startOffset":26728,"endOffset":26859,"count":5}],"isBlockCoverage":true},{"functionName":"#readdirAddNewChild","ranges":[{"startOffset":26864,"endOffset":27291,"count":5},{"startOffset":27126,"endOffset":27143,"count":3},{"startOffset":27144,"endOffset":27163,"count":3},{"startOffset":27165,"endOffset":27212,"count":3}],"isBlockCoverage":true},{"functionName":"#readdirMaybePromoteChild","ranges":[{"startOffset":27296,"endOffset":27668,"count":5},{"startOffset":27385,"endOffset":27662,"count":0}],"isBlockCoverage":true},{"functionName":"#readdirPromoteChild","ranges":[{"startOffset":27673,"endOffset":28359,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":28996,"endOffset":29293,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":29356,"endOffset":29640,"count":1},{"startOffset":29556,"endOffset":29624,"count":0}],"isBlockCoverage":true},{"functionName":"#applyStat","ranges":[{"startOffset":29645,"endOffset":30636,"count":1},{"startOffset":30565,"endOffset":30582,"count":0},{"startOffset":30584,"endOffset":30630,"count":0}],"isBlockCoverage":true},{"functionName":"#callOnReaddirCB","ranges":[{"startOffset":30696,"endOffset":30903,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCB","ranges":[{"startOffset":31669,"endOffset":33155,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":33456,"endOffset":34698,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":34763,"endOffset":35564,"count":3},{"startOffset":34811,"endOffset":34845,"count":0},{"startOffset":34922,"endOffset":34993,"count":0},{"startOffset":35272,"endOffset":35339,"count":5},{"startOffset":35402,"endOffset":35502,"count":0}],"isBlockCoverage":true},{"functionName":"canReaddir","ranges":[{"startOffset":35569,"endOffset":35953,"count":24},{"startOffset":35631,"endOffset":35644,"count":3},{"startOffset":35644,"endOffset":35822,"count":21},{"startOffset":35822,"endOffset":35839,"count":14},{"startOffset":35840,"endOffset":35857,"count":0},{"startOffset":35860,"endOffset":35897,"count":0},{"startOffset":35897,"endOffset":35952,"count":21}],"isBlockCoverage":true},{"functionName":"shouldWalk","ranges":[{"startOffset":35958,"endOffset":36163,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":36482,"endOffset":36883,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":36940,"endOffset":37328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37482,"endOffset":38138,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":38374,"endOffset":40226,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":40380,"endOffset":41268,"count":12}],"isBlockCoverage":true},{"functionName":"PathPosix","ranges":[{"startOffset":40728,"endOffset":40870,"count":12}],"isBlockCoverage":true},{"functionName":"getRootString","ranges":[{"startOffset":40908,"endOffset":40983,"count":1},{"startOffset":40966,"endOffset":40971,"count":0}],"isBlockCoverage":true},{"functionName":"getRoot","ranges":[{"startOffset":41021,"endOffset":41073,"count":0}],"isBlockCoverage":false},{"functionName":"newChild","ranges":[{"startOffset":41111,"endOffset":41266,"count":11}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":41646,"endOffset":62674,"count":1}],"isBlockCoverage":true},{"functionName":"PathScurryBase","ranges":[{"startOffset":42470,"endOffset":44270,"count":1},{"startOffset":42683,"endOffset":42748,"count":0},{"startOffset":43351,"endOffset":43363,"count":0},{"startOffset":43365,"endOffset":43401,"count":0},{"startOffset":43466,"endOffset":43564,"count":0},{"startOffset":43916,"endOffset":44239,"count":5},{"startOffset":44160,"endOffset":44164,"count":4},{"startOffset":44165,"endOffset":44174,"count":1}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":44351,"endOffset":44503,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":44678,"endOffset":44732,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":45047,"endOffset":45748,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePosix","ranges":[{"startOffset":46210,"endOffset":46931,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":47032,"endOffset":47195,"count":0}],"isBlockCoverage":false},{"functionName":"relativePosix","ranges":[{"startOffset":47352,"endOffset":47525,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":47612,"endOffset":47769,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":47855,"endOffset":48035,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":48040,"endOffset":48572,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":48577,"endOffset":49151,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":49804,"endOffset":49967,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":50036,"endOffset":50201,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":50206,"endOffset":50631,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":50636,"endOffset":51057,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":51062,"endOffset":51487,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":51492,"endOffset":51913,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":51918,"endOffset":54055,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":54060,"endOffset":55248,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55596,"endOffset":55659,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":55664,"endOffset":56234,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56378,"endOffset":56440,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":56445,"endOffset":57569,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":57574,"endOffset":60521,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":60526,"endOffset":62491,"count":0}],"isBlockCoverage":false},{"functionName":"chdir","ranges":[{"startOffset":62496,"endOffset":62672,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":62939,"endOffset":64020,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":64326,"endOffset":65000,"count":1}],"isBlockCoverage":true},{"functionName":"PathScurryPosix","ranges":[{"startOffset":64408,"endOffset":64595,"count":1}],"isBlockCoverage":true},{"functionName":"parseRootPath","ranges":[{"startOffset":64633,"endOffset":64680,"count":1}],"isBlockCoverage":true},{"functionName":"newRoot","ranges":[{"startOffset":64718,"endOffset":64855,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":64943,"endOffset":64998,"count":0}],"isBlockCoverage":false},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":65309,"endOffset":65441,"count":1}],"isBlockCoverage":true}]},{"scriptId":"266","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55020,"count":1},{"startOffset":263,"endOffset":269,"count":0},{"startOffset":387,"endOffset":391,"count":0},{"startOffset":740,"endOffset":2309,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":436,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":786,"endOffset":954,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1004,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1603,"endOffset":2306,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2350,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2425,"endOffset":2480,"count":30},{"startOffset":2434,"endOffset":2456,"count":20},{"startOffset":2457,"endOffset":2465,"count":20},{"startOffset":2466,"endOffset":2480,"count":20}],"isBlockCoverage":true},{"functionName":"getUintArray","ranges":[{"startOffset":2995,"endOffset":3312,"count":5},{"startOffset":3023,"endOffset":3029,"count":1},{"startOffset":3034,"endOffset":3312,"count":4},{"startOffset":3087,"endOffset":3312,"count":0}],"isBlockCoverage":true},{"functionName":"ZeroArray","ranges":[{"startOffset":3371,"endOffset":3439,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3454,"endOffset":4192,"count":2}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3454,"endOffset":4192,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3550,"endOffset":3791,"count":3},{"startOffset":3641,"endOffset":3651,"count":1},{"startOffset":3651,"endOffset":3790,"count":2}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":3796,"endOffset":4073,"count":2},{"startOffset":3888,"endOffset":3975,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4078,"endOffset":4131,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":4136,"endOffset":4190,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4841,"endOffset":54957,"count":3}],"isBlockCoverage":true},{"functionName":"unsafeExposeInternals","ranges":[{"startOffset":6887,"endOffset":7797,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":7905,"endOffset":7948,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":8025,"endOffset":8076,"count":0}],"isBlockCoverage":false},{"functionName":"get calculatedSize","ranges":[{"startOffset":8162,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":8307,"endOffset":8352,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchMethod","ranges":[{"startOffset":8433,"endOffset":8492,"count":0}],"isBlockCoverage":false},{"functionName":"get memoMethod","ranges":[{"startOffset":8497,"endOffset":8554,"count":0}],"isBlockCoverage":false},{"functionName":"get dispose","ranges":[{"startOffset":8631,"endOffset":8682,"count":0}],"isBlockCoverage":false},{"functionName":"get disposeAfter","ranges":[{"startOffset":8764,"endOffset":8825,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":8830,"endOffset":13471,"count":3},{"startOffset":9236,"endOffset":9253,"count":2},{"startOffset":9255,"endOffset":9343,"count":0},{"startOffset":9374,"endOffset":9393,"count":2},{"startOffset":9394,"endOffset":9401,"count":1},{"startOffset":9427,"endOffset":9496,"count":0},{"startOffset":9696,"endOffset":10036,"count":1},{"startOffset":9729,"endOffset":9750,"count":0},{"startOffset":9752,"endOffset":9874,"count":0},{"startOffset":9935,"endOffset":10026,"count":0},{"startOffset":10074,"endOffset":10121,"count":0},{"startOffset":10123,"endOffset":10211,"count":0},{"startOffset":10289,"endOffset":10337,"count":0},{"startOffset":10339,"endOffset":10430,"count":0},{"startOffset":10935,"endOffset":10983,"count":0},{"startOffset":11032,"endOffset":11123,"count":0},{"startOffset":11772,"endOffset":12193,"count":1},{"startOffset":11859,"endOffset":11970,"count":0},{"startOffset":12031,"endOffset":12139,"count":0},{"startOffset":12451,"endOffset":12473,"count":0},{"startOffset":12522,"endOffset":12525,"count":0},{"startOffset":12622,"endOffset":12813,"count":0},{"startOffset":12894,"endOffset":12911,"count":1},{"startOffset":12912,"endOffset":12934,"count":1},{"startOffset":12936,"endOffset":13032,"count":0},{"startOffset":13078,"endOffset":13095,"count":1},{"startOffset":13097,"endOffset":13465,"count":0}],"isBlockCoverage":true},{"functionName":"getRemainingTTL","ranges":[{"startOffset":13654,"endOffset":13735,"count":0}],"isBlockCoverage":false},{"functionName":"#initializeTTLTracking","ranges":[{"startOffset":13740,"endOffset":16416,"count":0}],"isBlockCoverage":false},{"functionName":"#updateItemAge","ranges":[{"startOffset":16494,"endOffset":16503,"count":0}],"isBlockCoverage":false},{"functionName":"#statusTTL","ranges":[{"startOffset":16522,"endOffset":16531,"count":0}],"isBlockCoverage":false},{"functionName":"#setItemTTL","ranges":[{"startOffset":16551,"endOffset":16560,"count":0}],"isBlockCoverage":false},{"functionName":"#isStale","ranges":[{"startOffset":16602,"endOffset":16613,"count":0}],"isBlockCoverage":false},{"functionName":"#initializeSizeTracking","ranges":[{"startOffset":16619,"endOffset":18485,"count":1}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":16789,"endOffset":16889,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":16919,"endOffset":17958,"count":9},{"startOffset":17121,"endOffset":17162,"count":0},{"startOffset":17300,"endOffset":17406,"count":0},{"startOffset":17498,"endOffset":17626,"count":0},{"startOffset":17644,"endOffset":17909,"count":0}],"isBlockCoverage":true},{"functionName":"#addItemSize","ranges":[{"startOffset":17988,"endOffset":18478,"count":9},{"startOffset":18198,"endOffset":18256,"count":0},{"startOffset":18345,"endOffset":18468,"count":0}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":18508,"endOffset":18517,"count":0}],"isBlockCoverage":false},{"functionName":"#addItemSize","ranges":[{"startOffset":18538,"endOffset":18558,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":18579,"endOffset":18789,"count":0}],"isBlockCoverage":false},{"functionName":"#indexes","ranges":[{"startOffset":18795,"endOffset":19305,"count":0}],"isBlockCoverage":false},{"functionName":"#rindexes","ranges":[{"startOffset":19310,"endOffset":19821,"count":0}],"isBlockCoverage":false},{"functionName":"#isValidIndex","ranges":[{"startOffset":19826,"endOffset":19956,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":20098,"endOffset":20405,"count":0}],"isBlockCoverage":false},{"functionName":"rentries","ranges":[{"startOffset":20611,"endOffset":20920,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":21063,"endOffset":21307,"count":0}],"isBlockCoverage":false},{"functionName":"rkeys","ranges":[{"startOffset":21511,"endOffset":21757,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":21902,"endOffset":22163,"count":0}],"isBlockCoverage":false},{"functionName":"rvalues","ranges":[{"startOffset":22371,"endOffset":22634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22753,"endOffset":22811,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":23211,"endOffset":23645,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":24093,"endOffset":24456,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":24631,"endOffset":24996,"count":0}],"isBlockCoverage":false},{"functionName":"purgeStale","ranges":[{"startOffset":25112,"endOffset":25399,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":26009,"endOffset":26778,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":27302,"endOffset":28252,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":28628,"endOffset":29273,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30555,"endOffset":34488,"count":9},{"startOffset":30613,"endOffset":30677,"count":0},{"startOffset":31132,"endOffset":31400,"count":0},{"startOffset":31438,"endOffset":31449,"count":1},{"startOffset":31450,"endOffset":31471,"count":8},{"startOffset":31586,"endOffset":31598,"count":1},{"startOffset":31615,"endOffset":31808,"count":8},{"startOffset":31661,"endOffset":31679,"count":0},{"startOffset":31751,"endOffset":31771,"count":0},{"startOffset":32165,"endOffset":32184,"count":0},{"startOffset":32227,"endOffset":33912,"count":0},{"startOffset":33935,"endOffset":33949,"count":0},{"startOffset":33951,"endOffset":34005,"count":0},{"startOffset":34030,"endOffset":34212,"count":0},{"startOffset":34266,"endOffset":34283,"count":0},{"startOffset":34285,"endOffset":34461,"count":0}],"isBlockCoverage":true},{"functionName":"pop","ranges":[{"startOffset":34613,"endOffset":35370,"count":0}],"isBlockCoverage":false},{"functionName":"#evict","ranges":[{"startOffset":35375,"endOffset":36443,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":37186,"endOffset":38123,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":38352,"endOffset":38797,"count":0}],"isBlockCoverage":false},{"functionName":"#backgroundFetch","ranges":[{"startOffset":38802,"endOffset":43948,"count":0}],"isBlockCoverage":false},{"functionName":"#isBackgroundFetch","ranges":[{"startOffset":43953,"endOffset":44227,"count":9},{"startOffset":44037,"endOffset":44114,"count":0},{"startOffset":44115,"endOffset":44170,"count":0},{"startOffset":44171,"endOffset":44219,"count":0}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":44232,"endOffset":47562,"count":0}],"isBlockCoverage":false},{"functionName":"forceFetch","ranges":[{"startOffset":47567,"endOffset":47772,"count":0}],"isBlockCoverage":false},{"functionName":"memo","ranges":[{"startOffset":47777,"endOffset":48282,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48468,"endOffset":50615,"count":9},{"startOffset":48724,"endOffset":50539,"count":0},{"startOffset":50565,"endOffset":50609,"count":0}],"isBlockCoverage":true},{"functionName":"#connect","ranges":[{"startOffset":50620,"endOffset":50696,"count":0}],"isBlockCoverage":false},{"functionName":"#moveToTail","ranges":[{"startOffset":50701,"endOffset":51363,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":51491,"endOffset":51550,"count":0}],"isBlockCoverage":false},{"functionName":"#delete","ranges":[{"startOffset":51555,"endOffset":53574,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":53654,"endOffset":53707,"count":0}],"isBlockCoverage":false},{"functionName":"#clear","ranges":[{"startOffset":53712,"endOffset":54955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":false}]},{"scriptId":"268","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8223,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":929,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1147,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1276,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1416,"endOffset":1579,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1583,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1723,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1883,"endOffset":2031,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2035,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2183,"endOffset":2332,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2336,"endOffset":2519,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2523,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2706,"endOffset":2882,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2886,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3062,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3264,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3457,"endOffset":3615,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3619,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3783,"endOffset":3919,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3923,"endOffset":4071,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4075,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4227,"endOffset":4481,"count":0}],"isBlockCoverage":false},{"functionName":"get deliveryType","ranges":[{"startOffset":4485,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStatus","ranges":[{"startOffset":4620,"endOffset":4755,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4759,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6726,"endOffset":7480,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7549,"endOffset":8148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"269","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6446,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1134,"endOffset":1586,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1639,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2374,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2483,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":2917,"endOffset":3214,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3218,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3330,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3715,"endOffset":3920,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3922,"endOffset":4063,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4065,"endOffset":5648,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5650,"endOffset":6085,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6087,"endOffset":6342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3673,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":746,"endOffset":2899,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1411,"endOffset":1507,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1623,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1837,"endOffset":1934,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2052,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2265,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2486,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2903,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3148,"endOffset":3534,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6391,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1291,"endOffset":1351,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1355,"endOffset":1650,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1654,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1889,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2102,"endOffset":2319,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2323,"endOffset":2451,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2455,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2789,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3050,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3275,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3564,"endOffset":3660,"count":1}],"isBlockCoverage":true},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3664,"endOffset":3980,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":3984,"endOffset":4110,"count":1}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":4114,"endOffset":4342,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":5943,"endOffset":6112,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6000,"endOffset":6091,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6156,"endOffset":6294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2280,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":610,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":987,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8467,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":894,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1032,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1173,"endOffset":1585,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1636,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1814,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":2004,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2178,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2364,"endOffset":2487,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2538,"endOffset":2673,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2724,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2900,"endOffset":3031,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3082,"endOffset":3225,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3276,"endOffset":3405,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3476,"endOffset":3825,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3896,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4320,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4572,"endOffset":4773,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4810,"endOffset":4926,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4930,"endOffset":5085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5089,"endOffset":5149,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5153,"endOffset":5410,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5462,"endOffset":5628,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5697,"endOffset":5971,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6008,"endOffset":6159,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6215,"endOffset":6488,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6492,"endOffset":6657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6661,"endOffset":6721,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram","ranges":[{"startOffset":6725,"endOffset":6935,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram.<computed>","ranges":[{"startOffset":6979,"endOffset":6988,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram","ranges":[{"startOffset":6991,"endOffset":7306,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram.<computed>","ranges":[{"startOffset":7360,"endOffset":7369,"count":0}],"isBlockCoverage":false},{"functionName":"createRecordableHistogram","ranges":[{"startOffset":7372,"endOffset":7466,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7609,"endOffset":8294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1749,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":625,"endOffset":686,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":726,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":977,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1283,"endOffset":1707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":false}]},{"scriptId":"276","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33371,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3219,"endOffset":3311,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3373,"endOffset":3456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3485,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":3820,"endOffset":3950,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3990,"endOffset":10090,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10092,"endOffset":10463,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10465,"endOffset":10748,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":10750,"endOffset":11210,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11212,"endOffset":11332,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":11334,"endOffset":12476,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":12478,"endOffset":14879,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":15032,"endOffset":15225,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15227,"endOffset":15438,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":15440,"endOffset":15704,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":15824,"endOffset":16156,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":16158,"endOffset":17654,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":17656,"endOffset":18020,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18022,"endOffset":19380,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":19382,"endOffset":19847,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":19849,"endOffset":20129,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20131,"endOffset":20264,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20266,"endOffset":20505,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":20507,"endOffset":20680,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":20682,"endOffset":21102,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":21104,"endOffset":21273,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":21275,"endOffset":21436,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":21438,"endOffset":21951,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":21953,"endOffset":23926,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":23928,"endOffset":24410,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":24412,"endOffset":24676,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":24678,"endOffset":25920,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":25922,"endOffset":26174,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":26176,"endOffset":26439,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":26441,"endOffset":26702,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":26704,"endOffset":26952,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":26954,"endOffset":27255,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":27257,"endOffset":27431,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":27433,"endOffset":27646,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":27648,"endOffset":27885,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":27887,"endOffset":28115,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":28117,"endOffset":28420,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":28422,"endOffset":28699,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":28701,"endOffset":29002,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":29004,"endOffset":29286,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":29288,"endOffset":29567,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":29569,"endOffset":29838,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":29840,"endOffset":30078,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":30080,"endOffset":30388,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":30390,"endOffset":31264,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":31266,"endOffset":31380,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":31382,"endOffset":31623,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":31625,"endOffset":31969,"count":0}],"isBlockCoverage":false},{"functionName":"_watch","ranges":[{"startOffset":31971,"endOffset":32632,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32659,"endOffset":32697,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":32700,"endOffset":32848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7032,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":693,"endOffset":6027,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":6205,"endOffset":6756,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6758,"endOffset":6975,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11262,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1420,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1470,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1820,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2565,"endOffset":3403,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3624,"endOffset":3632,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3878,"endOffset":4159,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4248,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4706,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5021,"endOffset":5271,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5275,"endOffset":6247,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6784,"endOffset":7698,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7915,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8046,"endOffset":8383,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8412,"endOffset":8481,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8512,"endOffset":8583,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8586,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8862,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8902,"endOffset":8943,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8979,"endOffset":11130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7216,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":716,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":870,"endOffset":7162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39053,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3837,"endOffset":9323,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9564,"endOffset":9664,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9667,"endOffset":9765,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":9874,"endOffset":9925,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10019,"endOffset":10062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10066,"endOffset":10257,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10396,"endOffset":10650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10654,"endOffset":10961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10965,"endOffset":11207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11211,"endOffset":11298,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11302,"endOffset":11470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11474,"endOffset":11671,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11675,"endOffset":12853,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12857,"endOffset":13862,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13946,"endOffset":14117,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14198,"endOffset":14329,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14421,"endOffset":14557,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14828,"endOffset":14987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14991,"endOffset":16725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16729,"endOffset":17398,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17402,"endOffset":17801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17805,"endOffset":20014,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20018,"endOffset":20479,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20483,"endOffset":20741,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20745,"endOffset":21227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21231,"endOffset":21712,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21716,"endOffset":22476,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22480,"endOffset":22907,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22911,"endOffset":23189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23193,"endOffset":23451,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23455,"endOffset":23715,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23719,"endOffset":23874,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23878,"endOffset":24553,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24557,"endOffset":24706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24710,"endOffset":24864,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24868,"endOffset":25055,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25059,"endOffset":25367,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25371,"endOffset":25679,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26114,"endOffset":26748,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26752,"endOffset":27460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27535,"endOffset":28475,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28652,"endOffset":28821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28940,"endOffset":29497,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29534,"endOffset":37784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38092,"endOffset":38472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"281","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12360,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":366,"endOffset":560,"count":4},{"startOffset":525,"endOffset":540,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":939,"endOffset":1201,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1203,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2194,"endOffset":11821,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11851,"endOffset":12247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minipass@7.1.2/node_modules/minipass/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33796,"count":1},{"startOffset":374,"endOffset":427,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":745,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":1063,"endOffset":1319,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":1449,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2884,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2936,"endOffset":2948,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2967,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":3056,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":3263,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3414,"endOffset":3951,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":4108,"endOffset":4208,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":4213,"endOffset":4381,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":4412,"endOffset":4433,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":4461,"endOffset":4524,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4929,"endOffset":33733,"count":0}],"isBlockCoverage":true}]},{"scriptId":"284","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7300,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":241,"endOffset":263,"count":3}],"isBlockCoverage":true},{"functionName":"isGlobList","ranges":[{"startOffset":284,"endOffset":306,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":409,"endOffset":7237,"count":3}],"isBlockCoverage":true},{"functionName":"Pattern","ranges":[{"startOffset":586,"endOffset":2959,"count":3},{"startOffset":681,"endOffset":747,"count":0},{"startOffset":783,"endOffset":846,"count":0},{"startOffset":899,"endOffset":992,"count":0},{"startOffset":1082,"endOffset":1148,"count":0},{"startOffset":1396,"endOffset":2953,"count":1},{"startOffset":1740,"endOffset":2369,"count":0},{"startOffset":2428,"endOffset":2943,"count":0}],"isBlockCoverage":true},{"functionName":"pattern","ranges":[{"startOffset":3034,"endOffset":3098,"count":20}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":3164,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobstar","ranges":[{"startOffset":3315,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":3470,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"globString","ranges":[{"startOffset":3638,"endOffset":4000,"count":4},{"startOffset":3717,"endOffset":3992,"count":2},{"startOffset":3755,"endOffset":3925,"count":1},{"startOffset":3795,"endOffset":3874,"count":0},{"startOffset":3946,"endOffset":3991,"count":1}],"isBlockCoverage":true},{"functionName":"hasMore","ranges":[{"startOffset":4080,"endOffset":4143,"count":8}],"isBlockCoverage":true},{"functionName":"rest","ranges":[{"startOffset":4239,"endOffset":4657,"count":17},{"startOffset":4298,"endOffset":4316,"count":14},{"startOffset":4316,"endOffset":4358,"count":3},{"startOffset":4358,"endOffset":4385,"count":1},{"startOffset":4385,"endOffset":4656,"count":2}],"isBlockCoverage":true},{"functionName":"isUNC","ranges":[{"startOffset":4741,"endOffset":5208,"count":2},{"startOffset":4830,"endOffset":4855,"count":1},{"startOffset":4868,"endOffset":5201,"count":1},{"startOffset":4928,"endOffset":4968,"count":0},{"startOffset":4969,"endOffset":5004,"count":0},{"startOffset":5005,"endOffset":5040,"count":0},{"startOffset":5041,"endOffset":5089,"count":0},{"startOffset":5090,"endOffset":5120,"count":0},{"startOffset":5121,"endOffset":5169,"count":0},{"startOffset":5170,"endOffset":5200,"count":0}],"isBlockCoverage":true},{"functionName":"isDrive","ranges":[{"startOffset":5545,"endOffset":5923,"count":2},{"startOffset":5638,"endOffset":5665,"count":1},{"startOffset":5678,"endOffset":5916,"count":1},{"startOffset":5740,"endOffset":5780,"count":0},{"startOffset":5781,"endOffset":5819,"count":0},{"startOffset":5820,"endOffset":5868,"count":0},{"startOffset":5869,"endOffset":5915,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":6156,"endOffset":6449,"count":13},{"startOffset":6255,"endOffset":6285,"count":12},{"startOffset":6298,"endOffset":6442,"count":1},{"startOffset":6350,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"root","ranges":[{"startOffset":6524,"endOffset":6693,"count":3},{"startOffset":6632,"endOffset":6652,"count":0},{"startOffset":6654,"endOffset":6669,"count":0}],"isBlockCoverage":true},{"functionName":"checkFollowGlobstar","ranges":[{"startOffset":6811,"endOffset":6948,"count":0}],"isBlockCoverage":false},{"functionName":"markFollowGlobstar","ranges":[{"startOffset":7044,"endOffset":7235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12869,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":408,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":664,"endOffset":10529,"count":1}],"isBlockCoverage":true},{"functionName":"GlobUtil","ranges":[{"startOffset":861,"endOffset":1903,"count":1},{"startOffset":1044,"endOffset":1050,"count":0},{"startOffset":1183,"endOffset":1496,"count":0},{"startOffset":1663,"endOffset":1674,"count":0},{"startOffset":1730,"endOffset":1897,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1821,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"#ignored","ranges":[{"startOffset":1908,"endOffset":2001,"count":9},{"startOffset":1977,"endOffset":1994,"count":0}],"isBlockCoverage":true},{"functionName":"#childrenIgnored","ranges":[{"startOffset":2006,"endOffset":2092,"count":3},{"startOffset":2060,"endOffset":2085,"count":0}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":2127,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":2175,"endOffset":2453,"count":0}],"isBlockCoverage":false},{"functionName":"onResume","ranges":[{"startOffset":2458,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"matchCheck","ranges":[{"startOffset":2831,"endOffset":3605,"count":0}],"isBlockCoverage":false},{"functionName":"matchCheckTest","ranges":[{"startOffset":3610,"endOffset":4069,"count":3},{"startOffset":3698,"endOffset":3727,"count":0},{"startOffset":3752,"endOffset":3769,"count":0},{"startOffset":3895,"endOffset":3933,"count":0},{"startOffset":3934,"endOffset":3987,"count":0},{"startOffset":4051,"endOffset":4062,"count":0}],"isBlockCoverage":true},{"functionName":"matchCheckSync","ranges":[{"startOffset":4074,"endOffset":4770,"count":3},{"startOffset":4119,"endOffset":4137,"count":0},{"startOffset":4151,"endOffset":4168,"count":0},{"startOffset":4218,"endOffset":4364,"count":0},{"startOffset":4450,"endOffset":4465,"count":0},{"startOffset":4500,"endOffset":4518,"count":0},{"startOffset":4519,"endOffset":4541,"count":0},{"startOffset":4543,"endOffset":4718,"count":0}],"isBlockCoverage":true},{"functionName":"matchFinish","ranges":[{"startOffset":4775,"endOffset":5843,"count":3},{"startOffset":4844,"endOffset":4851,"count":0},{"startOffset":4960,"endOffset":4980,"count":0},{"startOffset":4982,"endOffset":5079,"count":0},{"startOffset":5144,"endOffset":5164,"count":0},{"startOffset":5228,"endOffset":5246,"count":0},{"startOffset":5247,"endOffset":5258,"count":0},{"startOffset":5339,"endOffset":5381,"count":0},{"startOffset":5404,"endOffset":5531,"count":0},{"startOffset":5587,"endOffset":5606,"count":0},{"startOffset":5669,"endOffset":5705,"count":0},{"startOffset":5706,"endOffset":5739,"count":0},{"startOffset":5794,"endOffset":5806,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":5848,"endOffset":5996,"count":0}],"isBlockCoverage":false},{"functionName":"matchSync","ranges":[{"startOffset":6001,"endOffset":6145,"count":3}],"isBlockCoverage":true},{"functionName":"walkCB","ranges":[{"startOffset":6150,"endOffset":6382,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB2","ranges":[{"startOffset":6387,"endOffset":7801,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB3","ranges":[{"startOffset":7806,"endOffset":8448,"count":0}],"isBlockCoverage":false},{"functionName":"walkCBSync","ranges":[{"startOffset":8453,"endOffset":8693,"count":1},{"startOffset":8541,"endOffset":8550,"count":0},{"startOffset":8564,"endOffset":8569,"count":0}],"isBlockCoverage":true},{"functionName":"walkCB2Sync","ranges":[{"startOffset":8698,"endOffset":9908,"count":3},{"startOffset":8800,"endOffset":8812,"count":0},{"startOffset":8836,"endOffset":8845,"count":0},{"startOffset":8859,"endOffset":8864,"count":0},{"startOffset":8890,"endOffset":9005,"count":0},{"startOffset":9460,"endOffset":9579,"count":0},{"startOffset":9677,"endOffset":9706,"count":0},{"startOffset":9708,"endOffset":9749,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8918,"endOffset":8973,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9316,"endOffset":9386,"count":6},{"startOffset":9371,"endOffset":9376,"count":3}],"isBlockCoverage":true},{"functionName":"walkCB3Sync","ranges":[{"startOffset":9913,"endOffset":10527,"count":3},{"startOffset":10261,"endOffset":10270,"count":0},{"startOffset":10400,"endOffset":10505,"count":2}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":10065,"endOffset":10135,"count":5},{"startOffset":10120,"endOffset":10125,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10593,"endOffset":11708,"count":1}],"isBlockCoverage":true},{"functionName":"GlobWalker","ranges":[{"startOffset":10624,"endOffset":10702,"count":1}],"isBlockCoverage":true},{"functionName":"matchEmit","ranges":[{"startOffset":10707,"endOffset":10756,"count":3}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":10761,"endOffset":11281,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":11286,"endOffset":11706,"count":1},{"startOffset":11322,"endOffset":11331,"count":0},{"startOffset":11345,"endOffset":11370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11572,"endOffset":11669,"count":1},{"startOffset":11607,"endOffset":11616,"count":0},{"startOffset":11634,"endOffset":11659,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11776,"endOffset":12801,"count":0}],"isBlockCoverage":true}]},{"scriptId":"286","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4267,"count":1},{"startOffset":533,"endOffset":542,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":607,"endOffset":4207,"count":0}],"isBlockCoverage":true}]},{"scriptId":"287","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10760,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":378,"endOffset":938,"count":6}],"isBlockCoverage":true},{"functionName":"HasWalkedCache","ranges":[{"startOffset":395,"endOffset":461,"count":6}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":466,"endOffset":536,"count":5}],"isBlockCoverage":true},{"functionName":"hasWalked","ranges":[{"startOffset":541,"endOffset":652,"count":1},{"startOffset":618,"endOffset":623,"count":0}],"isBlockCoverage":true},{"functionName":"storeWalked","ranges":[{"startOffset":657,"endOffset":936,"count":4},{"startOffset":813,"endOffset":846,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1213,"endOffset":1647,"count":6}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1242,"endOffset":1455,"count":3},{"startOffset":1301,"endOffset":1304,"count":0},{"startOffset":1319,"endOffset":1322,"count":0},{"startOffset":1434,"endOffset":1447,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":1490,"endOffset":1645,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1547,"endOffset":1637,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1799,"endOffset":2598,"count":6}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1828,"endOffset":2183,"count":5},{"startOffset":1885,"endOffset":1916,"count":0},{"startOffset":1980,"endOffset":2117,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2009,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2188,"endOffset":2427,"count":3},{"startOffset":2296,"endOffset":2371,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":2432,"endOffset":2510,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2475,"endOffset":2502,"count":2}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":2515,"endOffset":2596,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2569,"endOffset":2588,"count":5}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2813,"endOffset":10691,"count":6}],"isBlockCoverage":true},{"functionName":"Processor","ranges":[{"startOffset":2948,"endOffset":3188,"count":6},{"startOffset":3135,"endOffset":3158,"count":5},{"startOffset":3159,"endOffset":3181,"count":1}],"isBlockCoverage":true},{"functionName":"processPatterns","ranges":[{"startOffset":3193,"endOffset":7119,"count":3},{"startOffset":3644,"endOffset":3675,"count":0},{"startOffset":3746,"endOffset":4155,"count":0},{"startOffset":4202,"endOffset":4211,"count":0},{"startOffset":4349,"endOffset":4391,"count":1},{"startOffset":4393,"endOffset":4535,"count":1},{"startOffset":4631,"endOffset":4800,"count":1},{"startOffset":4716,"endOffset":4725,"count":0},{"startOffset":5021,"endOffset":5306,"count":0},{"startOffset":5747,"endOffset":5781,"count":0},{"startOffset":5782,"endOffset":5834,"count":0},{"startOffset":6051,"endOffset":6060,"count":0},{"startOffset":6063,"endOffset":6294,"count":0},{"startOffset":6355,"endOffset":6945,"count":0},{"startOffset":6977,"endOffset":7082,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3306,"endOffset":3322,"count":3}],"isBlockCoverage":true},{"functionName":"subwalkTargets","ranges":[{"startOffset":7124,"endOffset":7185,"count":3}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":7190,"endOffset":7267,"count":5}],"isBlockCoverage":true},{"functionName":"filterEntries","ranges":[{"startOffset":7463,"endOffset":8300,"count":3},{"startOffset":7685,"endOffset":8270,"count":5},{"startOffset":8015,"endOffset":8246,"count":0}],"isBlockCoverage":true},{"functionName":"testGlobstar","ranges":[{"startOffset":8305,"endOffset":10179,"count":5},{"startOffset":8435,"endOffset":8504,"count":0},{"startOffset":8537,"endOffset":9412,"count":2},{"startOffset":9056,"endOffset":9398,"count":0},{"startOffset":9605,"endOffset":9690,"count":0},{"startOffset":9691,"endOffset":9719,"count":0},{"startOffset":9720,"endOffset":9749,"count":0},{"startOffset":9751,"endOffset":9829,"count":0},{"startOffset":9864,"endOffset":10041,"count":0}],"isBlockCoverage":true},{"functionName":"testRegExp","ranges":[{"startOffset":10184,"endOffset":10419,"count":5},{"startOffset":10260,"endOffset":10267,"count":2},{"startOffset":10267,"endOffset":10348,"count":3},{"startOffset":10348,"endOffset":10413,"count":0}],"isBlockCoverage":true},{"functionName":"testString","ranges":[{"startOffset":10424,"endOffset":10689,"count":0}],"isBlockCoverage":false}]},{"scriptId":"288","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":748,"endOffset":990,"count":1},{"startOffset":970,"endOffset":989,"count":0}],"isBlockCoverage":true}]},{"scriptId":"289","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/plugin-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8391,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":611,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":929,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2005,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2660,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"PluginLoader","ranges":[{"startOffset":3633,"endOffset":4623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4435,"endOffset":4487,"count":3}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":4723,"endOffset":5868,"count":3},{"startOffset":4798,"endOffset":4924,"count":0},{"startOffset":4956,"endOffset":5097,"count":0},{"startOffset":5181,"endOffset":5312,"count":0},{"startOffset":5405,"endOffset":5418,"count":0},{"startOffset":5468,"endOffset":5630,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":6119,"endOffset":6956,"count":1},{"startOffset":6934,"endOffset":6955,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6387,"endOffset":6904,"count":3},{"startOffset":6505,"endOffset":6860,"count":0}],"isBlockCoverage":true},{"functionName":"finalize","ranges":[{"startOffset":7385,"endOffset":7889,"count":1},{"startOffset":7528,"endOffset":7801,"count":3},{"startOffset":7560,"endOffset":7795,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":8016,"endOffset":8126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2624,"count":1}],"isBlockCoverage":true},{"functionName":"yaml","ranges":[{"startOffset":880,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"js","ranges":[{"startOffset":958,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":1375,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"exports.loadConfig","ranges":[{"startOffset":1723,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.findConfig","ranges":[{"startOffset":2437,"endOffset":2622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/find-up@5.0.0/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/locate-path@6.0.0/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":945,"endOffset":1327,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/p-locate@5.0.0/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/p-limit@3.1.0/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1521,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":68,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/yocto-queue@0.1.0/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":38,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":277,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":314,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":514,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":667,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":752,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":791,"endOffset":921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"296","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/path-exists@4.0.0/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/node-flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2844,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isNodeFlag","ranges":[{"startOffset":1079,"endOffset":1831,"count":24},{"startOffset":1225,"endOffset":1252,"count":11},{"startOffset":1252,"endOffset":1595,"count":13},{"startOffset":1595,"endOffset":1607,"count":2},{"startOffset":1608,"endOffset":1630,"count":2},{"startOffset":1632,"endOffset":1659,"count":13},{"startOffset":1660,"endOffset":1824,"count":13}],"isBlockCoverage":true},{"functionName":"exports.impliesNoTimeouts","ranges":[{"startOffset":2107,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unparseNodeFlags","ranges":[{"startOffset":2636,"endOffset":2842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/yargs-unparser@2.0.0/node_modules/yargs-unparser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5238,"count":1}],"isBlockCoverage":true},{"functionName":"isAlias","ranges":[{"startOffset":175,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"hasDefaultValue","ranges":[{"startOffset":356,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCased","ranges":[{"startOffset":444,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"keyToFlag","ranges":[{"startOffset":641,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":724,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOption","ranges":[{"startOffset":1762,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"unparsePositional","ranges":[{"startOffset":2600,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOptions","ranges":[{"startOffset":3643,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"unparseEndOfOptions","ranges":[{"startOffset":4322,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"unparser","ranges":[{"startOffset":4544,"endOffset":5209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/flat@5.0.2/node_modules/flat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3970,"count":1}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":82,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"keyIdentity","ranges":[{"startOffset":240,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":285,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"unflatten","ranges":[{"startOffset":1286,"endOffset":3969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/camelcase@6.3.0/node_modules/camelcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"preserveCamelCase","ranges":[{"startOffset":464,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"preserveConsecutiveUppercase","ranges":[{"startOffset":1450,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":1596,"endOffset":1855,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":1876,"endOffset":3157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/decamelize@4.0.0/node_modules/decamelize/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/is-plain-obj@2.1.0/node_modules/is-plain-obj/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":245,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true}]},{"scriptId":"304","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":265,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"exports.handler","ranges":[{"startOffset":368,"endOffset":956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/cli/run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11093,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":1009,"endOffset":10839,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":3713,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4676,"endOffset":4708,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4862,"endOffset":4893,"count":6}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":5799,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7945,"endOffset":10084,"count":1},{"startOffset":8269,"endOffset":8308,"count":0},{"startOffset":8310,"endOffset":8503,"count":0},{"startOffset":8530,"endOffset":9582,"count":0},{"startOffset":9610,"endOffset":9832,"count":0},{"startOffset":9855,"endOffset":10058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8056,"endOffset":8181,"count":2},{"startOffset":8088,"endOffset":8173,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10102,"endOffset":10714,"count":1},{"startOffset":10527,"endOffset":10708,"count":0}],"isBlockCoverage":true},{"functionName":"exports.handler","ranges":[{"startOffset":10860,"endOffset":11091,"count":1},{"startOffset":10999,"endOffset":11089,"count":0}],"isBlockCoverage":true}]},{"scriptId":"306","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":1}],"isBlockCoverage":true}]},{"scriptId":"307","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/register/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27,"count":1}],"isBlockCoverage":true}]},{"scriptId":"308","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45984,"count":1},{"startOffset":1784,"endOffset":1818,"count":0},{"startOffset":2053,"endOffset":2065,"count":0},{"startOffset":2211,"endOffset":2287,"count":0},{"startOffset":2343,"endOffset":2490,"count":0},{"startOffset":2799,"endOffset":2803,"count":0},{"startOffset":3983,"endOffset":3987,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1105,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"assertScriptCanLoadAsCJS","ranges":[{"startOffset":1786,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debug","ranges":[{"startOffset":2213,"endOffset":2287,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debug","ranges":[{"startOffset":2294,"endOffset":2309,"count":0}],"isBlockCoverage":false},{"functionName":"debugFn","ranges":[{"startOffset":2345,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"debugFn","ranges":[{"startOffset":2497,"endOffset":2510,"count":5}],"isBlockCoverage":true},{"functionName":"TSError","ranges":[{"startOffset":4136,"endOffset":4674,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4712,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":4875,"endOffset":5752,"count":1},{"startOffset":5060,"endOffset":5098,"count":0},{"startOffset":5217,"endOffset":5232,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":5852,"endOffset":6027,"count":1}],"isBlockCoverage":true},{"functionName":"createFromPreloadedConfig","ranges":[{"startOffset":6070,"endOffset":39588,"count":1},{"startOffset":6642,"endOffset":6663,"count":0},{"startOffset":6665,"endOffset":6773,"count":0},{"startOffset":6944,"endOffset":6968,"count":0},{"startOffset":6970,"endOffset":7087,"count":0},{"startOffset":7451,"endOffset":7472,"count":0},{"startOffset":7474,"endOffset":7827,"count":0},{"startOffset":8122,"endOffset":8159,"count":0},{"startOffset":8261,"endOffset":8366,"count":0},{"startOffset":8393,"endOffset":8512,"count":0},{"startOffset":8868,"endOffset":9032,"count":0},{"startOffset":9363,"endOffset":9369,"count":0},{"startOffset":9454,"endOffset":9458,"count":0},{"startOffset":9516,"endOffset":9535,"count":0},{"startOffset":9568,"endOffset":9573,"count":0},{"startOffset":9680,"endOffset":9685,"count":0},{"startOffset":9730,"endOffset":9804,"count":0},{"startOffset":9907,"endOffset":9911,"count":0},{"startOffset":10265,"endOffset":10275,"count":0},{"startOffset":10351,"endOffset":10388,"count":0},{"startOffset":10390,"endOffset":10488,"count":0},{"startOffset":13980,"endOffset":13996,"count":0},{"startOffset":14101,"endOffset":14124,"count":0},{"startOffset":14133,"endOffset":14155,"count":0},{"startOffset":14882,"endOffset":14918,"count":0},{"startOffset":16164,"endOffset":16172,"count":0},{"startOffset":18838,"endOffset":18849,"count":0},{"startOffset":23894,"endOffset":32249,"count":0},{"startOffset":32255,"endOffset":32403,"count":0},{"startOffset":35436,"endOffset":35459,"count":0},{"startOffset":35460,"endOffset":35483,"count":0}],"isBlockCoverage":true},{"functionName":"isScoped","ranges":[{"startOffset":9732,"endOffset":9804,"count":0}],"isBlockCoverage":false},{"functionName":"isScoped","ranges":[{"startOffset":9815,"endOffset":9825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9971,"endOffset":9995,"count":1}],"isBlockCoverage":true},{"functionName":"getNewLine","ranges":[{"startOffset":10048,"endOffset":10068,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":10099,"endOffset":10108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10267,"endOffset":10275,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticHost.getCanonicalFileName","ranges":[{"startOffset":10290,"endOffset":10312,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTranspilerFactory","ranges":[{"startOffset":10551,"endOffset":12085,"count":1},{"startOffset":10632,"endOffset":12079,"count":0}],"isBlockCoverage":true},{"functionName":"createTranspiler","ranges":[{"startOffset":11428,"endOffset":12069,"count":0}],"isBlockCoverage":false},{"functionName":"enableExperimentalEsmLoaderInterop","ranges":[{"startOffset":12289,"endOffset":12380,"count":0}],"isBlockCoverage":false},{"functionName":"installSourceMapSupport","ranges":[{"startOffset":12478,"endOffset":13892,"count":1}],"isBlockCoverage":true},{"functionName":"retrieveFile","ranges":[{"startOffset":12670,"endOffset":13462,"count":0}],"isBlockCoverage":false},{"functionName":"onConflictingLibraryRedirect","ranges":[{"startOffset":13522,"endOffset":13873,"count":0}],"isBlockCoverage":false},{"functionName":"createTSError","ranges":[{"startOffset":14161,"endOffset":14421,"count":0}],"isBlockCoverage":false},{"functionName":"reportTSError","ranges":[{"startOffset":14426,"endOffset":14796,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitExtension","ranges":[{"startOffset":15104,"endOffset":15746,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16795,"endOffset":16822,"count":0}],"isBlockCoverage":false},{"functionName":"getCustomTransformers","ranges":[{"startOffset":16868,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectVersion","ranges":[{"startOffset":17262,"endOffset":17290,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptFileNames","ranges":[{"startOffset":17328,"endOffset":17359,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptVersion","ranges":[{"startOffset":17395,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptSnapshot","ranges":[{"startOffset":17572,"endOffset":18286,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":18879,"endOffset":18899,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":18944,"endOffset":18982,"count":1}],"isBlockCoverage":true},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":19021,"endOffset":19030,"count":1}],"isBlockCoverage":true},{"functionName":"getCompilationSettings","ranges":[{"startOffset":19072,"endOffset":19092,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":19133,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"updateMemoryCache","ranges":[{"startOffset":20311,"endOffset":21420,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":21491,"endOffset":23359,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":23387,"endOffset":23883,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":24024,"endOffset":24422,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFile","ranges":[{"startOffset":25272,"endOffset":25568,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibLocation","ranges":[{"startOffset":25613,"endOffset":25678,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":25723,"endOffset":25848,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":25897,"endOffset":25932,"count":0}],"isBlockCoverage":false},{"functionName":"updateMemoryCache","ranges":[{"startOffset":27504,"endOffset":28548,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":28574,"endOffset":30621,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":30649,"endOffset":31912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32074,"endOffset":32223,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":32289,"endOffset":32396,"count":0}],"isBlockCoverage":false},{"functionName":"createTranspileOnlyGetOutputFunction","ranges":[{"startOffset":32408,"endOffset":34086,"count":5},{"startOffset":32609,"endOffset":32653,"count":4},{"startOffset":32751,"endOffset":32806,"count":0},{"startOffset":33102,"endOffset":33113,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33130,"endOffset":34079,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":35615,"endOffset":37687,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":37731,"endOffset":37797,"count":0}],"isBlockCoverage":false},{"functionName":"ignored","ranges":[{"startOffset":37819,"endOffset":38083,"count":1},{"startOffset":37868,"endOffset":37880,"count":0},{"startOffset":37979,"endOffset":38056,"count":0}],"isBlockCoverage":true},{"functionName":"addDiagnosticFilter","ranges":[{"startOffset":38089,"endOffset":38302,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38351,"endOffset":38588,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38640,"endOffset":38784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38833,"endOffset":39030,"count":0}],"isBlockCoverage":false},{"functionName":"createIgnore","ranges":[{"startOffset":39704,"endOffset":39966,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39762,"endOffset":39963,"count":0}],"isBlockCoverage":false},{"functionName":"registerExtensions","ranges":[{"startOffset":40035,"endOffset":41330,"count":1},{"startOffset":40482,"endOffset":40741,"count":4},{"startOffset":40516,"endOffset":40577,"count":2},{"startOffset":40579,"endOffset":40735,"count":2},{"startOffset":40802,"endOffset":40869,"count":2},{"startOffset":40892,"endOffset":41328,"count":0}],"isBlockCoverage":true},{"functionName":"registerExtension","ranges":[{"startOffset":41375,"endOffset":41999,"count":2},{"startOffset":41475,"endOffset":41493,"count":1}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":41525,"endOffset":41996,"count":1},{"startOffset":41625,"endOffset":41995,"count":0}],"isBlockCoverage":true},{"functionName":"m._compile","ranges":[{"startOffset":41740,"endOffset":41956,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutput","ranges":[{"startOffset":42055,"endOffset":44103,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceMap","ranges":[{"startOffset":44167,"endOffset":44407,"count":0}],"isBlockCoverage":false},{"functionName":"filterDiagnostics","ranges":[{"startOffset":44439,"endOffset":44788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44520,"endOffset":44784,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44541,"endOffset":44783,"count":1},{"startOffset":44603,"endOffset":44716,"count":0}],"isBlockCoverage":true},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":44967,"endOffset":45442,"count":0}],"isBlockCoverage":false},{"functionName":"createEsmHooks","ranges":[{"startOffset":45843,"endOffset":45908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"node:module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":697,"count":1}],"isBlockCoverage":false}]},{"scriptId":"310","url":"node:internal/source_map/source_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12164,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":4050,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4164,"endOffset":4242,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4280,"endOffset":4356,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4395,"endOffset":4459,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4616,"endOffset":10114,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":10169,"endOffset":10238,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":10328,"endOffset":11261,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":11328,"endOffset":11640,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":11835,"endOffset":12114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/make-error@1.3.6/node_modules/make-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3854,"count":1},{"startOffset":180,"endOffset":191,"count":0},{"startOffset":396,"endOffset":1049,"count":0}],"isBlockCoverage":true},{"functionName":"captureStackTrace","ranges":[{"startOffset":420,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"BaseError","ranges":[{"startOffset":1123,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1933,"endOffset":2230,"count":1},{"startOffset":2216,"endOffset":2228,"count":0}],"isBlockCoverage":true},{"functionName":"setFunctionName","ranges":[{"startOffset":1948,"endOffset":2081,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":2102,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"makeError","ranges":[{"startOffset":2308,"endOffset":3784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"312","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6140,"count":1},{"startOffset":675,"endOffset":707,"count":0},{"startOffset":740,"endOffset":767,"count":0}],"isBlockCoverage":true},{"functionName":"yn","ranges":[{"startOffset":954,"endOffset":1066,"count":13},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1047,"endOffset":1051,"count":0}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":1169,"endOffset":1459,"count":2},{"startOffset":1247,"endOffset":1432,"count":5},{"startOffset":1296,"endOffset":1426,"count":21},{"startOffset":1390,"endOffset":1416,"count":2}],"isBlockCoverage":true},{"functionName":"split","ranges":[{"startOffset":1594,"endOffset":1733,"count":2},{"startOffset":1663,"endOffset":1710,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1694,"endOffset":1709,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1805,"endOffset":1900,"count":1},{"startOffset":1866,"endOffset":1885,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSlashes","ranges":[{"startOffset":2053,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":2244,"endOffset":2356,"count":2}],"isBlockCoverage":true},{"functionName":"cachedLookup","ranges":[{"startOffset":2438,"endOffset":2681,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2506,"endOffset":2678,"count":1},{"startOffset":2641,"endOffset":2677,"count":0}],"isBlockCoverage":true},{"functionName":"attemptRequireWithV8CompileCache","ranges":[{"startOffset":2937,"endOffset":3310,"count":2},{"startOffset":3205,"endOffset":3213,"count":0},{"startOffset":3254,"endOffset":3308,"count":0}],"isBlockCoverage":true},{"functionName":"createProjectLocalResolveHelper","ranges":[{"startOffset":3701,"endOffset":4035,"count":3}],"isBlockCoverage":true},{"functionName":"projectLocalResolveHelper","ranges":[{"startOffset":3771,"endOffset":4032,"count":2},{"startOffset":3995,"endOffset":4013,"count":0}],"isBlockCoverage":true},{"functionName":"getBasePathForProjectLocalDependencyResolution","ranges":[{"startOffset":4286,"endOffset":4925,"count":2},{"startOffset":4462,"endOffset":4591,"count":1},{"startOffset":4592,"endOffset":4616,"count":0},{"startOffset":4617,"endOffset":4632,"count":1},{"startOffset":4643,"endOffset":4659,"count":1},{"startOffset":4660,"endOffset":4664,"count":0},{"startOffset":4665,"endOffset":4676,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":5048,"endOffset":5275,"count":3}],"isBlockCoverage":true},{"functionName":"onceFn","ranges":[{"startOffset":5108,"endOffset":5254,"count":0}],"isBlockCoverage":false},{"functionName":"versionGteLt","ranges":[{"startOffset":5314,"endOffset":6070,"count":8},{"startOffset":5536,"endOffset":5646,"count":0},{"startOffset":5692,"endOffset":5931,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":5962,"endOffset":6068,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6038,"endOffset":6060,"count":48}],"isBlockCoverage":true}]},{"scriptId":"313","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/yn@3.1.1/node_modules/yn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":711,"count":1}],"isBlockCoverage":true},{"functionName":"yn","ranges":[{"startOffset":64,"endOffset":610,"count":13},{"startOffset":224,"endOffset":263,"count":0},{"startOffset":265,"endOffset":388,"count":0},{"startOffset":430,"endOffset":449,"count":0},{"startOffset":491,"endOffset":511,"count":0},{"startOffset":544,"endOffset":582,"count":0}],"isBlockCoverage":true}]},{"scriptId":"314","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/yn@3.1.1/node_modules/yn/lenient.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"getYesMatchScore","ranges":[{"startOffset":766,"endOffset":1016,"count":0}],"isBlockCoverage":false},{"functionName":"getNoMatchScore","ranges":[{"startOffset":1018,"endOffset":1212,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1231,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/configuration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13874,"count":1}],"isBlockCoverage":true},{"functionName":"fixConfig","ranges":[{"startOffset":796,"endOffset":1517,"count":1},{"startOffset":1221,"endOffset":1281,"count":0},{"startOffset":1433,"endOffset":1496,"count":0}],"isBlockCoverage":true},{"functionName":"findAndReadConfig","ranges":[{"startOffset":1535,"endOffset":3427,"count":1},{"startOffset":1700,"endOffset":1704,"count":0},{"startOffset":1749,"endOffset":1753,"count":0},{"startOffset":1804,"endOffset":1808,"count":0},{"startOffset":1905,"endOffset":1909,"count":0},{"startOffset":2520,"endOffset":2525,"count":0},{"startOffset":3222,"endOffset":3226,"count":0}],"isBlockCoverage":true},{"functionName":"readConfig","ranges":[{"startOffset":3786,"endOffset":10026,"count":1},{"startOffset":4160,"endOffset":4164,"count":0},{"startOffset":4475,"endOffset":4691,"count":0},{"startOffset":5215,"endOffset":5514,"count":0},{"startOffset":5871,"endOffset":6751,"count":0},{"startOffset":7308,"endOffset":7627,"count":0},{"startOffset":7658,"endOffset":7749,"count":0},{"startOffset":7853,"endOffset":7916,"count":0},{"startOffset":7957,"endOffset":8019,"count":0},{"startOffset":8058,"endOffset":8118,"count":0},{"startOffset":8152,"endOffset":8207,"count":0},{"startOffset":8392,"endOffset":8396,"count":0},{"startOffset":8458,"endOffset":8462,"count":0},{"startOffset":8754,"endOffset":8886,"count":0},{"startOffset":9742,"endOffset":9764,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7568,"endOffset":7615,"count":0}],"isBlockCoverage":false},{"functionName":"ts.parseJsonConfigFileContent.readDirectory","ranges":[{"startOffset":9767,"endOffset":9775,"count":1}],"isBlockCoverage":true},{"functionName":"resolveAndLoadCompiler","ranges":[{"startOffset":10220,"endOffset":10409,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCompiler","ranges":[{"startOffset":10467,"endOffset":10717,"count":2}],"isBlockCoverage":true},{"functionName":"loadCompiler","ranges":[{"startOffset":10735,"endOffset":10846,"count":2}],"isBlockCoverage":true},{"functionName":"filterRecognizedTsConfigTsNodeOptions","ranges":[{"startOffset":11016,"endOffset":12319,"count":1},{"startOffset":11157,"endOffset":12318,"count":0}],"isBlockCoverage":true},{"functionName":"getTsConfigDefaults","ranges":[{"startOffset":12573,"endOffset":13781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/ts-internals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13675,"count":1}],"isBlockCoverage":true},{"functionName":"createTsInternalsUncached","ranges":[{"startOffset":796,"endOffset":2654,"count":1}],"isBlockCoverage":true},{"functionName":"getExtendsConfigPath","ranges":[{"startOffset":1003,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":2740,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"combinePaths","ranges":[{"startOffset":2817,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":2960,"endOffset":3191,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":3192,"endOffset":3273,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":3274,"endOffset":3441,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":3795,"endOffset":3974,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":4024,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":5526,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":5762,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":5853,"endOffset":5993,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponents","ranges":[{"startOffset":5994,"endOffset":6156,"count":0}],"isBlockCoverage":false},{"functionName":"reducePathComponents","ranges":[{"startOffset":6157,"endOffset":6832,"count":0}],"isBlockCoverage":false},{"functionName":"getRootLength","ranges":[{"startOffset":6833,"endOffset":6970,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedRootLength","ranges":[{"startOffset":6971,"endOffset":9834,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":9835,"endOffset":9999,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":10000,"endOffset":10139,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":10140,"endOffset":10293,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":10294,"endOffset":10463,"count":0}],"isBlockCoverage":false},{"functionName":"isVolumeCharacter","ranges":[{"startOffset":10566,"endOffset":10794,"count":0}],"isBlockCoverage":false},{"functionName":"getFileUrlVolumeSeparatorEnd","ranges":[{"startOffset":10795,"endOffset":11261,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":11262,"endOffset":11573,"count":0}],"isBlockCoverage":false},{"functionName":"pathComponents","ranges":[{"startOffset":11574,"endOffset":11833,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":11834,"endOffset":11938,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":11939,"endOffset":12040,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":12041,"endOffset":12250,"count":0}],"isBlockCoverage":false},{"functionName":"isImplicitGlob","ranges":[{"startOffset":12432,"endOffset":12523,"count":0}],"isBlockCoverage":false},{"functionName":"getUseDefineForClassFields","ranges":[{"startOffset":12815,"endOffset":13060,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitScriptTarget","ranges":[{"startOffset":13247,"endOffset":13583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/tsconfigs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1435,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultTsconfigJsonForNodeVersion","ranges":[{"startOffset":331,"endOffset":1312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/module-type-classifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2363,"count":1}],"isBlockCoverage":true},{"functionName":"createModuleTypeClassifier","ranges":[{"startOffset":402,"endOffset":1724,"count":1},{"startOffset":557,"endOffset":617,"count":0},{"startOffset":724,"endOffset":734,"count":0},{"startOffset":1665,"endOffset":1681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":745,"endOffset":905,"count":0}],"isBlockCoverage":false},{"functionName":"classifyModuleNonCached","ranges":[{"startOffset":1206,"endOffset":1425,"count":0}],"isBlockCoverage":false},{"functionName":"classifyModuleAuto","ranges":[{"startOffset":1508,"endOffset":1570,"count":0}],"isBlockCoverage":false},{"functionName":"parsePattern","ranges":[{"startOffset":1790,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1991,"endOffset":2312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/resolver-functions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7574,"count":1}],"isBlockCoverage":true},{"functionName":"createResolverFunctions","ranges":[{"startOffset":268,"endOffset":7468,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleBucket","ranges":[{"startOffset":1143,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"markBucketOfFilenameInternal","ranges":[{"startOffset":1386,"endOffset":1497,"count":0}],"isBlockCoverage":false},{"functionName":"isFileInInternalBucket","ranges":[{"startOffset":1502,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"isFileKnownToBeInternal","ranges":[{"startOffset":1619,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"fixupResolvedModule","ranges":[{"startOffset":1849,"endOffset":2840,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNames","ranges":[{"startOffset":3099,"endOffset":4623,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedModuleWithFailedLookupLocationsFromCache","ranges":[{"startOffset":4774,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirectives","ranges":[{"startOffset":5116,"endOffset":7245,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/cjs-resolve-hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"installCommonjsResolveHooksIfNecessary","ranges":[{"startOffset":155,"endOffset":1196,"count":1},{"startOffset":467,"endOffset":1194,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveFilename","ranges":[{"startOffset":661,"endOffset":982,"count":0}],"isBlockCoverage":false},{"functionName":"_findPath","ranges":[{"startOffset":991,"endOffset":1188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/node-module-type-classifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1515,"count":1}],"isBlockCoverage":true},{"functionName":"classifyModule","ranges":[{"startOffset":674,"endOffset":1418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-internal-modules-cjs-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19220,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":1684,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":2716,"endOffset":3526,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageScope","ranges":[{"startOffset":3528,"endOffset":4071,"count":0}],"isBlockCoverage":false},{"functionName":"createCjsLoader","ranges":[{"startOffset":4287,"endOffset":17772,"count":0}],"isBlockCoverage":false},{"functionName":"assertScriptCanLoadAsCJSImpl","ranges":[{"startOffset":18029,"endOffset":19125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-primordials.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2306,"count":1}],"isBlockCoverage":true},{"functionName":"ArrayPrototypeShift","ranges":[{"startOffset":98,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeForEach","ranges":[{"startOffset":165,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeIncludes","ranges":[{"startOffset":251,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeJoin","ranges":[{"startOffset":334,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypePop","ranges":[{"startOffset":412,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypePush","ranges":[{"startOffset":490,"endOffset":545,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPrototypeHasOwnProperty","ranges":[{"startOffset":841,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpPrototypeExec","ranges":[{"startOffset":928,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpPrototypeTest","ranges":[{"startOffset":1009,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpPrototypeSymbolReplace","ranges":[{"startOffset":1099,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeEndsWith","ranges":[{"startOffset":1251,"endOffset":1311,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeIncludes","ranges":[{"startOffset":1340,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeLastIndexOf","ranges":[{"startOffset":1432,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeIndexOf","ranges":[{"startOffset":1523,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeRepeat","ranges":[{"startOffset":1609,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeReplace","ranges":[{"startOffset":1695,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeSlice","ranges":[{"startOffset":1780,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeSplit","ranges":[{"startOffset":1863,"endOffset":1920,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeStartsWith","ranges":[{"startOffset":1951,"endOffset":2013,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeSubstr","ranges":[{"startOffset":2040,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeCharCodeAt","ranges":[{"startOffset":2129,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeMatch","ranges":[{"startOffset":2217,"endOffset":2274,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-nativemodule.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":246,"count":1}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":115,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-internalBinding-fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1},{"startOffset":1547,"endOffset":1608,"count":0},{"startOffset":1726,"endOffset":1757,"count":0}],"isBlockCoverage":true},{"functionName":"internalModuleReadJSON","ranges":[{"startOffset":262,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"internalModuleStat","ranges":[{"startOffset":980,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"internalModuleStatInefficient","ranges":[{"startOffset":1257,"endOffset":1464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-internal-modules-package_json_reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":522,"endOffset":1235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-internal-modules-cjs-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2739,"count":1},{"startOffset":495,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":787,"endOffset":2641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2988,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":103,"endOffset":176,"count":4}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":191,"endOffset":661,"count":4},{"startOffset":233,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"parseArgv","ranges":[{"startOffset":663,"endOffset":1242,"count":2}],"isBlockCoverage":true},{"functionName":"getNodeOptionsEnvArgv","ranges":[{"startOffset":1244,"endOffset":1469,"count":1},{"startOffset":1409,"endOffset":1449,"count":0}],"isBlockCoverage":true},{"functionName":"ParseNodeOptionsEnvVar","ranges":[{"startOffset":1619,"endOffset":2720,"count":1},{"startOffset":1820,"endOffset":2580,"count":0},{"startOffset":2602,"endOffset":2699,"count":0}],"isBlockCoverage":true},{"functionName":"getOptionValuesFromOtherEnvVars","ranges":[{"startOffset":2799,"endOffset":2987,"count":1},{"startOffset":2917,"endOffset":2967,"count":0}],"isBlockCoverage":true}]},{"scriptId":"329","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/arg@4.1.3/node_modules/arg/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3893,"count":1}],"isBlockCoverage":true},{"functionName":"arg","ranges":[{"startOffset":40,"endOffset":3716,"count":2},{"startOffset":156,"endOffset":224,"count":0},{"startOffset":334,"endOffset":1466,"count":20},{"startOffset":348,"endOffset":419,"count":0},{"startOffset":443,"endOffset":528,"count":0},{"startOffset":554,"endOffset":659,"count":0},{"startOffset":698,"endOffset":745,"count":2},{"startOffset":745,"endOffset":820,"count":18},{"startOffset":820,"endOffset":840,"count":2},{"startOffset":841,"endOffset":873,"count":2},{"startOffset":875,"endOffset":1075,"count":2},{"startOffset":1075,"endOffset":1274,"count":16},{"startOffset":1144,"endOffset":1172,"count":6},{"startOffset":1177,"endOffset":1274,"count":0},{"startOffset":1274,"endOffset":1297,"count":18},{"startOffset":1297,"endOffset":1314,"count":0},{"startOffset":1316,"endOffset":1428,"count":0},{"startOffset":1428,"endOffset":1466,"count":18},{"startOffset":1572,"endOffset":1594,"count":0},{"startOffset":1596,"endOffset":1657,"count":0},{"startOffset":1684,"endOffset":1749,"count":0},{"startOffset":1897,"endOffset":1921,"count":0},{"startOffset":1944,"endOffset":1991,"count":0},{"startOffset":2209,"endOffset":2227,"count":0},{"startOffset":2296,"endOffset":2336,"count":0},{"startOffset":2370,"endOffset":2600,"count":1},{"startOffset":2443,"endOffset":2594,"count":0},{"startOffset":2600,"endOffset":2705,"count":1},{"startOffset":2707,"endOffset":2833,"count":0},{"startOffset":2833,"endOffset":2851,"count":1},{"startOffset":2851,"endOffset":2919,"count":0},{"startOffset":2919,"endOffset":3646,"count":1},{"startOffset":2951,"endOffset":3570,"count":0},{"startOffset":3655,"endOffset":3694,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":909,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1978,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"arg.flag","ranges":[{"startOffset":3729,"endOffset":3774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3815,"endOffset":3867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-internal-errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":630,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"joinArgs","ranges":[{"startOffset":1197,"endOffset":1289,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1232,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"createErrorCtor","ranges":[{"startOffset":1291,"endOffset":1462,"count":12}],"isBlockCoverage":true},{"functionName":"CustomError","ranges":[{"startOffset":1386,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"createErrRequireEsm","ranges":[{"startOffset":2208,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"getErrRequireEsmMessage","ranges":[{"startOffset":2974,"endOffset":3875,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist-raw/node-internal-constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":140,"count":1}],"isBlockCoverage":true}]},{"scriptId":"332","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/file-extensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5702,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":1038,"endOffset":5619,"count":1},{"startOffset":1340,"endOffset":1409,"count":0},{"startOffset":1516,"endOffset":1539,"count":0},{"startOffset":1736,"endOffset":1769,"count":0},{"startOffset":1881,"endOffset":2093,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2240,"endOffset":2279,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2353,"endOffset":2384,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2812,"endOffset":2895,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2937,"endOffset":2990,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3033,"endOffset":3072,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3115,"endOffset":3154,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3197,"endOffset":3236,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3283,"endOffset":3352,"count":6}],"isBlockCoverage":true}]},{"scriptId":"333","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/ts-transpile-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4941,"count":1}],"isBlockCoverage":true},{"functionName":"createTsTranspileModule","ranges":[{"startOffset":136,"endOffset":4834,"count":5},{"startOffset":731,"endOffset":735,"count":0},{"startOffset":861,"endOffset":1004,"count":10},{"startOffset":939,"endOffset":998,"count":5},{"startOffset":1067,"endOffset":1134,"count":95}],"isBlockCoverage":true},{"functionName":"getSourceFile","ranges":[{"startOffset":1583,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":1684,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":2131,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":2184,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalFileName","ranges":[{"startOffset":2226,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":2279,"endOffset":2287,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":2309,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":2344,"endOffset":2420,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2440,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"directoryExists","ranges":[{"startOffset":2554,"endOffset":2564,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectories","ranges":[{"startOffset":2590,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":2780,"endOffset":4832,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/repl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21715,"count":1}],"isBlockCoverage":true},{"functionName":"getProcessTopLevelAwait","ranges":[{"startOffset":655,"endOffset":910,"count":0}],"isBlockCoverage":false},{"functionName":"getDiffLines","ranges":[{"startOffset":921,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"createRepl","ranges":[{"startOffset":1787,"endOffset":11850,"count":0}],"isBlockCoverage":false},{"functionName":"EvalState","ranges":[{"startOffset":11972,"endOffset":12224,"count":0}],"isBlockCoverage":false},{"functionName":"createEvalAwarePartialHost","ranges":[{"startOffset":12258,"endOffset":13159,"count":0}],"isBlockCoverage":false},{"functionName":"appendCompileAndEvalInput","ranges":[{"startOffset":13485,"endOffset":18607,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":18661,"endOffset":18932,"count":0}],"isBlockCoverage":false},{"functionName":"appendToEvalState","ranges":[{"startOffset":19001,"endOffset":19445,"count":0}],"isBlockCoverage":false},{"functionName":"lineCount","ranges":[{"startOffset":19484,"endOffset":19648,"count":0}],"isBlockCoverage":false},{"functionName":"isRecoverable","ranges":[{"startOffset":20997,"endOffset":21246,"count":0}],"isBlockCoverage":false},{"functionName":"setupContext","ranges":[{"startOffset":21340,"endOffset":21645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"node:repl","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":61329,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4048,"endOffset":4089,"count":68}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4159,"endOffset":4181,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4253,"endOffset":4318,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4420,"endOffset":4445,"count":0}],"isBlockCoverage":false},{"functionName":"getREPLResourceName","ranges":[{"startOffset":5801,"endOffset":5879,"count":0}],"isBlockCoverage":false},{"functionName":"writer","ranges":[{"startOffset":7017,"endOffset":7054,"count":0}],"isBlockCoverage":false},{"functionName":"toDynamicImport","ranges":[{"startOffset":7210,"endOffset":8198,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer","ranges":[{"startOffset":8201,"endOffset":34798,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":35036,"endOffset":35206,"count":0}],"isBlockCoverage":false},{"functionName":"setupHistory","ranges":[{"startOffset":35244,"endOffset":35320,"count":0}],"isBlockCoverage":false},{"functionName":"clearBufferedCommand","ranges":[{"startOffset":35367,"endOffset":35439,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":35471,"endOffset":35792,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.createContext","ranges":[{"startOffset":35832,"endOffset":37427,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.resetContext","ranges":[{"startOffset":37466,"endOffset":38475,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.displayPrompt","ranges":[{"startOffset":38515,"endOffset":38947,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":39042,"endOffset":39167,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":39564,"endOffset":40011,"count":0}],"isBlockCoverage":false},{"functionName":"isNotLegacyObjectPrototypeMethod","ranges":[{"startOffset":40013,"endOffset":40227,"count":0}],"isBlockCoverage":false},{"functionName":"filteredOwnPropertyNames","ranges":[{"startOffset":40229,"endOffset":41025,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalLexicalScopeNames","ranges":[{"startOffset":41027,"endOffset":41343,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.complete","ranges":[{"startOffset":41377,"endOffset":41440,"count":0}],"isBlockCoverage":false},{"functionName":"gracefulReaddir","ranges":[{"startOffset":41443,"endOffset":41594,"count":0}],"isBlockCoverage":false},{"functionName":"completeFSFunctions","ranges":[{"startOffset":41596,"endOffset":42148,"count":0}],"isBlockCoverage":false},{"functionName":"complete","ranges":[{"startOffset":42510,"endOffset":53485,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.completeOnEditorMode","ranges":[{"startOffset":53531,"endOffset":53843,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.defineCommand","ranges":[{"startOffset":53883,"endOffset":54066,"count":0}],"isBlockCoverage":false},{"functionName":"_memory","ranges":[{"startOffset":54244,"endOffset":56282,"count":0}],"isBlockCoverage":false},{"functionName":"addCommonWords","ranges":[{"startOffset":56284,"endOffset":56811,"count":0}],"isBlockCoverage":false},{"functionName":"_turnOnEditorMode","ranges":[{"startOffset":56813,"endOffset":56934,"count":0}],"isBlockCoverage":false},{"functionName":"_turnOffEditorMode","ranges":[{"startOffset":56936,"endOffset":57039,"count":0}],"isBlockCoverage":false},{"functionName":"defineDefaultCommands","ranges":[{"startOffset":57041,"endOffset":60367,"count":0}],"isBlockCoverage":false},{"functionName":"Recoverable","ranges":[{"startOffset":60369,"endOffset":60416,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":60727,"endOffset":60745,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":60754,"endOffset":60781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60947,"endOffset":60965,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.get","ranges":[{"startOffset":61064,"endOffset":61082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61127,"endOffset":61154,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.set","ranges":[{"startOffset":61253,"endOffset":61280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"node:internal/deps/acorn/acorn/dist/acorn","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233910,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1,"endOffset":299,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":308,"endOffset":233906,"count":1}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":12298,"endOffset":12553,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":12621,"endOffset":13031,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":13098,"endOffset":13619,"count":0}],"isBlockCoverage":false},{"functionName":"TokenType","ranges":[{"startOffset":14636,"endOffset":15057,"count":77},{"startOffset":14697,"endOffset":14707,"count":8},{"startOffset":15014,"endOffset":15021,"count":62}],"isBlockCoverage":true},{"functionName":"binop","ranges":[{"startOffset":15062,"endOffset":15158,"count":12}],"isBlockCoverage":true},{"functionName":"kw","ranges":[{"startOffset":15345,"endOffset":15507,"count":35},{"startOffset":15404,"endOffset":15417,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":19744,"endOffset":19850,"count":0}],"isBlockCoverage":false},{"functionName":"nextLineBreak","ranges":[{"startOffset":19854,"endOffset":20163,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20437,"endOffset":20518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20556,"endOffset":20632,"count":0}],"isBlockCoverage":false},{"functionName":"wordsRegexp","ranges":[{"startOffset":20680,"endOffset":20822,"count":24},{"startOffset":20740,"endOffset":20818,"count":12}],"isBlockCoverage":true},{"functionName":"codePointToString","ranges":[{"startOffset":20826,"endOffset":21047,"count":0}],"isBlockCoverage":false},{"functionName":"Position","ranges":[{"startOffset":21271,"endOffset":21350,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":21383,"endOffset":21460,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":21486,"endOffset":21637,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":21912,"endOffset":22158,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":27623,"endOffset":28798,"count":0}],"isBlockCoverage":false},{"functionName":"pushComment","ranges":[{"startOffset":28802,"endOffset":29240,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":29629,"endOffset":29765,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":30209,"endOffset":33587,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":33991,"endOffset":34129,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inFunction.get","ranges":[{"startOffset":34170,"endOffset":34244,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inGenerator.get","ranges":[{"startOffset":34286,"endOffset":34405,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inAsync.get","ranges":[{"startOffset":34443,"endOffset":34558,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.canAwait.get","ranges":[{"startOffset":34597,"endOffset":34997,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowSuper.get","ranges":[{"startOffset":35038,"endOffset":35271,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowDirectSuper.get","ranges":[{"startOffset":35318,"endOffset":35397,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.treatFunctionsAsVar.get","ranges":[{"startOffset":35447,"endOffset":35522,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowNewDotTarget.get","ranges":[{"startOffset":35570,"endOffset":35795,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inClassStaticBlock.get","ranges":[{"startOffset":35844,"endOffset":35934,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":35955,"endOffset":36192,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":36212,"endOffset":36293,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":36325,"endOffset":36487,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":36511,"endOffset":36588,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.strictDirective","ranges":[{"startOffset":36812,"endOffset":37820,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.eat","ranges":[{"startOffset":37955,"endOffset":38080,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.isContextual","ranges":[{"startOffset":38163,"endOffset":38265,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.eatContextual","ranges":[{"startOffset":38338,"endOffset":38442,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.expectContextual","ranges":[{"startOffset":38535,"endOffset":38613,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.canInsertSemicolon","ranges":[{"startOffset":38716,"endOffset":38878,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.insertSemicolon","ranges":[{"startOffset":38906,"endOffset":39110,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.semicolon","ranges":[{"startOffset":39259,"endOffset":39358,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.afterTrailingComma","ranges":[{"startOffset":39389,"endOffset":39646,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.expect","ranges":[{"startOffset":39774,"endOffset":39835,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.unexpected","ranges":[{"startOffset":39897,"endOffset":39984,"count":0}],"isBlockCoverage":false},{"functionName":"DestructuringErrors","ranges":[{"startOffset":40015,"endOffset":40196,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkPatternErrors","ranges":[{"startOffset":40227,"endOffset":40721,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkExpressionErrors","ranges":[{"startOffset":40755,"endOffset":41302,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkYieldAwaitInDefaultParams","ranges":[{"startOffset":41345,"endOffset":41626,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.isSimpleAssignTarget","ranges":[{"startOffset":41659,"endOffset":41862,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseTopLevel","ranges":[{"startOffset":42205,"endOffset":42867,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isLet","ranges":[{"startOffset":42952,"endOffset":44075,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isAsyncFunction","ranges":[{"startOffset":44238,"endOffset":44752,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseStatement","ranges":[{"startOffset":45036,"endOffset":48688,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseBreakContinueStatement","ranges":[{"startOffset":48728,"endOffset":49579,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDebuggerStatement","ranges":[{"startOffset":49614,"endOffset":49727,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDoStatement","ranges":[{"startOffset":49756,"endOffset":50133,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseForStatement","ranges":[{"startOffset":50594,"endOffset":53125,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunctionStatement","ranges":[{"startOffset":53160,"endOffset":53348,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseIfStatement","ranges":[{"startOffset":53377,"endOffset":53713,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseReturnStatement","ranges":[{"startOffset":53746,"endOffset":54291,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseSwitchStatement","ranges":[{"startOffset":54324,"endOffset":55646,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseThrowStatement","ranges":[{"startOffset":55678,"endOffset":55973,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseCatchClauseParam","ranges":[{"startOffset":56098,"endOffset":56383,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseTryStatement","ranges":[{"startOffset":56413,"endOffset":57215,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVarStatement","ranges":[{"startOffset":57245,"endOffset":57454,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWhileStatement","ranges":[{"startOffset":57486,"endOffset":57721,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWithStatement","ranges":[{"startOffset":57752,"endOffset":58005,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseEmptyStatement","ranges":[{"startOffset":58037,"endOffset":58125,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseLabeledStatement","ranges":[{"startOffset":58159,"endOffset":59144,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExpressionStatement","ranges":[{"startOffset":59181,"endOffset":59313,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseBlock","ranges":[{"startOffset":59492,"endOffset":60069,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFor","ranges":[{"startOffset":60237,"endOffset":60674,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseForIn","ranges":[{"startOffset":60797,"endOffset":61630,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVar","ranges":[{"startOffset":61696,"endOffset":62596,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVarId","ranges":[{"startOffset":62619,"endOffset":62769,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunction","ranges":[{"startOffset":63049,"endOffset":64780,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunctionParams","ranges":[{"startOffset":64812,"endOffset":65003,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClass","ranges":[{"startOffset":65118,"endOffset":66469,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassElement","ranges":[{"startOffset":66499,"endOffset":68981,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isClassElementNameStart","ranges":[{"startOffset":69017,"endOffset":69266,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassElementName","ranges":[{"startOffset":69300,"endOffset":69638,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassMethod","ranges":[{"startOffset":69667,"endOffset":70790,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassField","ranges":[{"startOffset":70818,"endOffset":71589,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassStaticBlock","ranges":[{"startOffset":71623,"endOffset":72018,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassId","ranges":[{"startOffset":72043,"endOffset":72340,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassSuper","ranges":[{"startOffset":72368,"endOffset":72485,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.enterClassBody","ranges":[{"startOffset":72512,"endOffset":72658,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.exitClassBody","ranges":[{"startOffset":72684,"endOffset":73291,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateNameConflicted","ranges":[{"startOffset":73296,"endOffset":74048,"count":0}],"isBlockCoverage":false},{"functionName":"checkKeyName","ranges":[{"startOffset":74052,"endOffset":74288,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportAllDeclaration","ranges":[{"startOffset":74365,"endOffset":74871,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExport","ranges":[{"startOffset":74895,"endOffset":76668,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportDeclaration","ranges":[{"startOffset":76703,"endOffset":76760,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportDefaultDeclaration","ranges":[{"startOffset":76802,"endOffset":77347,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkExport","ranges":[{"startOffset":77371,"endOffset":77668,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkPatternExport","ranges":[{"startOffset":77699,"endOffset":78555,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkVariableExport","ranges":[{"startOffset":78587,"endOffset":78795,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.shouldParseExportStatement","ranges":[{"startOffset":78834,"endOffset":79063,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportSpecifier","ranges":[{"startOffset":79151,"endOffset":79489,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportSpecifiers","ranges":[{"startOffset":79523,"endOffset":79923,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImport","ranges":[{"startOffset":79980,"endOffset":80432,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportSpecifier","ranges":[{"startOffset":80520,"endOffset":80895,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportDefaultSpecifier","ranges":[{"startOffset":80935,"endOffset":81182,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportNamespaceSpecifier","ranges":[{"startOffset":81224,"endOffset":81472,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportSpecifiers","ranges":[{"startOffset":81506,"endOffset":82121,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseModuleExportName","ranges":[{"startOffset":82155,"endOffset":82521,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.adaptDirectivePrologue","ranges":[{"startOffset":82631,"endOffset":82832,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isDirectiveCandidate","ranges":[{"startOffset":82864,"endOffset":83225,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.toAssignable","ranges":[{"startOffset":83361,"endOffset":86265,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.toAssignableList","ranges":[{"startOffset":86350,"endOffset":86801,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseSpread","ranges":[{"startOffset":86854,"endOffset":87066,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseRestBinding","ranges":[{"startOffset":87095,"endOffset":87428,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingAtom","ranges":[{"startOffset":87496,"endOffset":87903,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingList","ranges":[{"startOffset":87932,"endOffset":88753,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseAssignableListItem","ranges":[{"startOffset":88789,"endOffset":88938,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingListItem","ranges":[{"startOffset":88971,"endOffset":89009,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseMaybeDefault","ranges":[{"startOffset":89102,"endOffset":89436,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValSimple","ranges":[{"startOffset":92450,"endOffset":93915,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValPattern","ranges":[{"startOffset":93944,"endOffset":94613,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValInnerPattern","ranges":[{"startOffset":94647,"endOffset":95237,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":95460,"endOffset":95694,"count":10}],"isBlockCoverage":true},{"functionName":"types.q_tmpl","ranges":[{"startOffset":95956,"endOffset":96005,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.initialContext","ranges":[{"startOffset":96296,"endOffset":96338,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.curContext","ranges":[{"startOffset":96361,"endOffset":96426,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.braceIsBlock","ranges":[{"startOffset":96451,"endOffset":97442,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.inGeneratorContext","ranges":[{"startOffset":97473,"endOffset":97683,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.updateContext","ranges":[{"startOffset":97709,"endOffset":97989,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.overrideContext","ranges":[{"startOffset":98126,"endOffset":98254,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.parenR.updateContext.types$1.braceR.updateContext","ranges":[{"startOffset":98362,"endOffset":98647,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.braceL.updateContext","ranges":[{"startOffset":98683,"endOffset":98818,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.dollarBraceL.updateContext","ranges":[{"startOffset":98860,"endOffset":98942,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.parenL.updateContext","ranges":[{"startOffset":98978,"endOffset":99243,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.incDec.updateContext","ranges":[{"startOffset":99279,"endOffset":99333,"count":0}],"isBlockCoverage":false},{"functionName":"types$1._function.updateContext.types$1._class.updateContext","ranges":[{"startOffset":99403,"endOffset":99909,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.colon.updateContext","ranges":[{"startOffset":99944,"endOffset":100061,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.backQuote.updateContext","ranges":[{"startOffset":100100,"endOffset":100272,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.star.updateContext","ranges":[{"startOffset":100306,"endOffset":100608,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.name.updateContext","ranges":[{"startOffset":100642,"endOffset":100943,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkPropClash","ranges":[{"startOffset":102247,"endOffset":103708,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExpression","ranges":[{"startOffset":104491,"endOffset":104993,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeAssign","ranges":[{"startOffset":105116,"endOffset":107649,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeConditional","ranges":[{"startOffset":107734,"endOffset":108318,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprOps","ranges":[{"startOffset":108378,"endOffset":108785,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprOp","ranges":[{"startOffset":109146,"endOffset":110520,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.buildBinary","ranges":[{"startOffset":110544,"endOffset":110950,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeUnary","ranges":[{"startOffset":111032,"endOffset":113285,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalVariableAccess","ranges":[{"startOffset":113290,"endOffset":113475,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateFieldAccess","ranges":[{"startOffset":113479,"endOffset":113796,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprSubscripts","ranges":[{"startOffset":113882,"endOffset":114719,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscripts","ranges":[{"startOffset":114747,"endOffset":115645,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.shouldParseAsyncArrow","ranges":[{"startOffset":115679,"endOffset":115760,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscriptAsyncArrow","ranges":[{"startOffset":115797,"endOffset":115950,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscript","ranges":[{"startOffset":115977,"endOffset":118965,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprAtom","ranges":[{"startOffset":119213,"endOffset":123446,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprAtomDefault","ranges":[{"startOffset":123479,"endOffset":123518,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprImport","ranges":[{"startOffset":123546,"endOffset":124275,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseDynamicImport","ranges":[{"startOffset":124306,"endOffset":124787,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseImportMeta","ranges":[{"startOffset":124815,"endOffset":125452,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseLiteral","ranges":[{"startOffset":125477,"endOffset":125788,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenExpression","ranges":[{"startOffset":125821,"endOffset":125956,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.shouldParseArrow","ranges":[{"startOffset":125985,"endOffset":126047,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenAndDistinguishExpression","ranges":[{"startOffset":126094,"endOffset":128754,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenItem","ranges":[{"startOffset":128781,"endOffset":128817,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenArrowList","ranges":[{"startOffset":128849,"endOffset":129003,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseNew","ranges":[{"startOffset":129344,"endOffset":130710,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseTemplateElement","ranges":[{"startOffset":130776,"endOffset":131408,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseTemplate","ranges":[{"startOffset":131434,"endOffset":132148,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.isAsyncProp","ranges":[{"startOffset":132172,"endOffset":132572,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseObj","ranges":[{"startOffset":132643,"endOffset":133304,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseProperty","ranges":[{"startOffset":133330,"endOffset":135051,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseGetterSetter","ranges":[{"startOffset":135081,"endOffset":135736,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePropertyValue","ranges":[{"startOffset":135767,"endOffset":137675,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePropertyName","ranges":[{"startOffset":137705,"endOffset":138164,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.initFunction","ranges":[{"startOffset":138227,"endOffset":138415,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMethod","ranges":[{"startOffset":138475,"endOffset":139428,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseArrowExpression","ranges":[{"startOffset":139522,"endOffset":140193,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseFunctionBody","ranges":[{"startOffset":140271,"endOffset":142050,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.isSimpleParamList","ranges":[{"startOffset":142080,"endOffset":142276,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkParams","ranges":[{"startOffset":142428,"endOffset":142698,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprList","ranges":[{"startOffset":143023,"endOffset":143848,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkUnreserved","ranges":[{"startOffset":143876,"endOffset":145134,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseIdent","ranges":[{"startOffset":145313,"endOffset":145618,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseIdentNode","ranges":[{"startOffset":145645,"endOffset":146515,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePrivateIdent","ranges":[{"startOffset":146545,"endOffset":147140,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseYield","ranges":[{"startOffset":147211,"endOffset":147693,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseAwait","ranges":[{"startOffset":147716,"endOffset":147968,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.raise","ranges":[{"startOffset":148302,"endOffset":148544,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.curPosition","ranges":[{"startOffset":148607,"endOffset":148730,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":148779,"endOffset":149224,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.enterScope","ranges":[{"startOffset":149381,"endOffset":149446,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.exitScope","ranges":[{"startOffset":149468,"endOffset":149511,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.treatFunctionsAsVarInScope","ranges":[{"startOffset":149722,"endOffset":149832,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.declareName","ranges":[{"startOffset":149856,"endOffset":151418,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.checkLocalExport","ranges":[{"startOffset":151447,"endOffset":151704,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentScope","ranges":[{"startOffset":151729,"endOffset":151800,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentVarScope","ranges":[{"startOffset":151828,"endOffset":151993,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentThisScope","ranges":[{"startOffset":152121,"endOffset":152318,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":152334,"endOffset":152685,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.startNode","ranges":[{"startOffset":152790,"endOffset":152859,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.startNodeAt","ranges":[{"startOffset":152883,"endOffset":152943,"count":0}],"isBlockCoverage":false},{"functionName":"finishNodeAt","ranges":[{"startOffset":153010,"endOffset":153239,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.finishNode","ranges":[{"startOffset":153261,"endOffset":153371,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.finishNodeAt","ranges":[{"startOffset":153432,"endOffset":153525,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.copyNode","ranges":[{"startOffset":153546,"endOffset":153705,"count":0}],"isBlockCoverage":false},{"functionName":"buildUnicodeData","ranges":[{"startOffset":159644,"endOffset":160274,"count":6}],"isBlockCoverage":true},{"functionName":"BranchID","ranges":[{"startOffset":160611,"endOffset":160784,"count":0}],"isBlockCoverage":false},{"functionName":"separatedFrom","ranges":[{"startOffset":160824,"endOffset":161197,"count":0}],"isBlockCoverage":false},{"functionName":"sibling","ranges":[{"startOffset":161231,"endOffset":161304,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpValidationState","ranges":[{"startOffset":161337,"endOffset":162160,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":162205,"endOffset":162759,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":162804,"endOffset":162949,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":163182,"endOffset":163592,"count":0}],"isBlockCoverage":false},{"functionName":"nextIndex","ranges":[{"startOffset":163641,"endOffset":164035,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":164082,"endOffset":164198,"count":0}],"isBlockCoverage":false},{"functionName":"lookahead","ranges":[{"startOffset":164247,"endOffset":164389,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":164436,"endOffset":164564,"count":0}],"isBlockCoverage":false},{"functionName":"eat","ranges":[{"startOffset":164607,"endOffset":164794,"count":0}],"isBlockCoverage":false},{"functionName":"eatChars","ranges":[{"startOffset":164842,"endOffset":165237,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.validateRegExpFlags","ranges":[{"startOffset":165434,"endOffset":166092,"count":0}],"isBlockCoverage":false},{"functionName":"hasProp","ranges":[{"startOffset":166097,"endOffset":166180,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.validateRegExpPattern","ranges":[{"startOffset":166380,"endOffset":166967,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_pattern","ranges":[{"startOffset":167061,"endOffset":168037,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_disjunction","ranges":[{"startOffset":168139,"endOffset":168786,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_alternative","ranges":[{"startOffset":168888,"endOffset":168986,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatTerm","ranges":[{"startOffset":169084,"endOffset":169743,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAssertion","ranges":[{"startOffset":169851,"endOffset":170768,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatQuantifier","ranges":[{"startOffset":170871,"endOffset":171080,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatQuantifierPrefix","ranges":[{"startOffset":171195,"endOffset":171397,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatBracedQuantifier","ranges":[{"startOffset":171435,"endOffset":172200,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAtom","ranges":[{"startOffset":172291,"endOffset":172606,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatReverseSolidusAtomEscape","ranges":[{"startOffset":172652,"endOffset":172857,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUncapturingGroup","ranges":[{"startOffset":172895,"endOffset":173252,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCapturingGroup","ranges":[{"startOffset":173288,"endOffset":173735,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatExtendedAtom","ranges":[{"startOffset":173849,"endOffset":174226,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatInvalidBracedQuantifier","ranges":[{"startOffset":174362,"endOffset":174502,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatSyntaxCharacter","ranges":[{"startOffset":174615,"endOffset":174794,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxCharacter","ranges":[{"startOffset":174798,"endOffset":175087,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatPatternCharacters","ranges":[{"startOffset":175222,"endOffset":175416,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatExtendedPatternCharacter","ranges":[{"startOffset":175554,"endOffset":175929,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_groupSpecifier","ranges":[{"startOffset":176022,"endOffset":176850,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatGroupName","ranges":[{"startOffset":177014,"endOffset":177285,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierName","ranges":[{"startOffset":177513,"endOffset":177871,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierStart","ranges":[{"startOffset":178032,"endOffset":178457,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierStart","ranges":[{"startOffset":178461,"endOffset":178588,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierPart","ranges":[{"startOffset":178776,"endOffset":179200,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierPart","ranges":[{"startOffset":179204,"endOffset":179388,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAtomEscape","ranges":[{"startOffset":179497,"endOffset":179985,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatBackReference","ranges":[{"startOffset":180020,"endOffset":180507,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatKGroupName","ranges":[{"startOffset":180539,"endOffset":180799,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterEscape","ranges":[{"startOffset":180919,"endOffset":181321,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCControlLetter","ranges":[{"startOffset":181357,"endOffset":181565,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatZero","ranges":[{"startOffset":181591,"endOffset":181788,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlEscape","ranges":[{"startOffset":181897,"endOffset":182565,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlLetter","ranges":[{"startOffset":182674,"endOffset":182858,"count":0}],"isBlockCoverage":false},{"functionName":"isControlLetter","ranges":[{"startOffset":182862,"endOffset":183016,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpUnicodeEscapeSequence","ranges":[{"startOffset":183152,"endOffset":184342,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUnicode","ranges":[{"startOffset":184346,"endOffset":184416,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatIdentityEscape","ranges":[{"startOffset":184533,"endOffset":184992,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalEscape","ranges":[{"startOffset":185101,"endOffset":185462,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClassEscape","ranges":[{"startOffset":185879,"endOffset":186647,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterClassEscape","ranges":[{"startOffset":186652,"endOffset":186883,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValueExpression","ranges":[{"startOffset":187064,"endOffset":187782,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameAndValue","ranges":[{"startOffset":187837,"endOffset":188088,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameOrValue","ranges":[{"startOffset":188142,"endOffset":188406,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyName","ranges":[{"startOffset":188513,"endOffset":188772,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyNameCharacter","ranges":[{"startOffset":188777,"endOffset":188880,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValue","ranges":[{"startOffset":188989,"endOffset":189249,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyValueCharacter","ranges":[{"startOffset":189253,"endOffset":189371,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLoneUnicodePropertyNameOrValue","ranges":[{"startOffset":189500,"endOffset":189575,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClass","ranges":[{"startOffset":189686,"endOffset":190091,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classContents","ranges":[{"startOffset":190244,"endOffset":190465,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_nonEmptyClassRanges","ranges":[{"startOffset":190668,"endOffset":191153,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassAtom","ranges":[{"startOffset":191329,"endOffset":191943,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassEscape","ranges":[{"startOffset":192055,"endOffset":192608,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classSetExpression","ranges":[{"startOffset":192851,"endOffset":194237,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetRange","ranges":[{"startOffset":194322,"endOffset":194787,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetOperand","ranges":[{"startOffset":194876,"endOffset":195060,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatNestedClass","ranges":[{"startOffset":195141,"endOffset":195750,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassStringDisjunction","ranges":[{"startOffset":195853,"endOffset":196281,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classStringDisjunctionContents","ranges":[{"startOffset":196397,"endOffset":196617,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classString","ranges":[{"startOffset":196750,"endOffset":196906,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetCharacter","ranges":[{"startOffset":196999,"endOffset":197662,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetReservedDoublePunctuatorCharacter","ranges":[{"startOffset":197735,"endOffset":198108,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetSyntaxCharacter","ranges":[{"startOffset":198171,"endOffset":198447,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetReservedPunctuator","ranges":[{"startOffset":198557,"endOffset":198747,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetReservedPunctuator","ranges":[{"startOffset":198814,"endOffset":199188,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassControlLetter","ranges":[{"startOffset":199313,"endOffset":199519,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexEscapeSequence","ranges":[{"startOffset":199636,"endOffset":199922,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalDigits","ranges":[{"startOffset":200031,"endOffset":200308,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalDigit","ranges":[{"startOffset":200312,"endOffset":200397,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexDigits","ranges":[{"startOffset":200497,"endOffset":200763,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":200767,"endOffset":200968,"count":0}],"isBlockCoverage":false},{"functionName":"hexToInt","ranges":[{"startOffset":200971,"endOffset":201219,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLegacyOctalEscapeSequence","ranges":[{"startOffset":201409,"endOffset":201889,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatOctalDigit","ranges":[{"startOffset":201992,"endOffset":202209,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":202213,"endOffset":202296,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatFixedHexDigits","ranges":[{"startOffset":202572,"endOffset":202924,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":203142,"endOffset":203425,"count":0}],"isBlockCoverage":false},{"functionName":"pp.next","ranges":[{"startOffset":203518,"endOffset":203990,"count":0}],"isBlockCoverage":false},{"functionName":"pp.getToken","ranges":[{"startOffset":204009,"endOffset":204069,"count":0}],"isBlockCoverage":false},{"functionName":"pp.<computed>","ranges":[{"startOffset":204196,"endOffset":204448,"count":0}],"isBlockCoverage":false},{"functionName":"pp.nextToken","ranges":[{"startOffset":204684,"endOffset":205114,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken","ranges":[{"startOffset":205134,"endOffset":205432,"count":0}],"isBlockCoverage":false},{"functionName":"pp.fullCharCodeAtPos","ranges":[{"startOffset":205460,"endOffset":205719,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipBlockComment","ranges":[{"startOffset":205746,"endOffset":206408,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipLineComment","ranges":[{"startOffset":206434,"endOffset":206918,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipSpace","ranges":[{"startOffset":207041,"endOffset":208007,"count":0}],"isBlockCoverage":false},{"functionName":"pp.finishToken","ranges":[{"startOffset":208248,"endOffset":208477,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_dot","ranges":[{"startOffset":208786,"endOffset":209211,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_slash","ranges":[{"startOffset":209237,"endOffset":209487,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_mult_modulo_exp","ranges":[{"startOffset":209523,"endOffset":210021,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_pipe_amp","ranges":[{"startOffset":210050,"endOffset":210573,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_caret","ranges":[{"startOffset":210599,"endOffset":210787,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_plus_min","ranges":[{"startOffset":210816,"endOffset":211403,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_lt_gt","ranges":[{"startOffset":211429,"endOffset":212213,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_eq_excl","ranges":[{"startOffset":212241,"endOffset":212659,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_question","ranges":[{"startOffset":212688,"endOffset":213332,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_numberSign","ranges":[{"startOffset":213363,"endOffset":213782,"count":0}],"isBlockCoverage":false},{"functionName":"pp.getTokenFromCode","ranges":[{"startOffset":213809,"endOffset":216544,"count":0}],"isBlockCoverage":false},{"functionName":"pp.finishOp","ranges":[{"startOffset":216563,"endOffset":216709,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readRegexp","ranges":[{"startOffset":216730,"endOffset":218145,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readInt","ranges":[{"startOffset":218372,"endOffset":220153,"count":0}],"isBlockCoverage":false},{"functionName":"stringToNumber","ranges":[{"startOffset":220158,"endOffset":220442,"count":0}],"isBlockCoverage":false},{"functionName":"stringToBigInt","ranges":[{"startOffset":220446,"endOffset":220672,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readRadixNumber","ranges":[{"startOffset":220697,"endOffset":221228,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readNumber","ranges":[{"startOffset":221313,"endOffset":222727,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readCodePoint","ranges":[{"startOffset":222810,"endOffset":223260,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readString","ranges":[{"startOffset":223281,"endOffset":224226,"count":0}],"isBlockCoverage":false},{"functionName":"pp.tryReadTemplateToken","ranges":[{"startOffset":224336,"endOffset":224621,"count":0}],"isBlockCoverage":false},{"functionName":"pp.invalidStringToken","ranges":[{"startOffset":224650,"endOffset":224848,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readTmplToken","ranges":[{"startOffset":224872,"endOffset":226357,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readInvalidTemplateToken","ranges":[{"startOffset":226483,"endOffset":227149,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readEscapedChar","ranges":[{"startOffset":227213,"endOffset":229304,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readHexChar","ranges":[{"startOffset":229392,"endOffset":229578,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readWord1","ranges":[{"startOffset":229830,"endOffset":230864,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readWord","ranges":[{"startOffset":230977,"endOffset":231166,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":232534,"endOffset":232610,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":232787,"endOffset":232897,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":233041,"endOffset":233125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"node:internal/deps/acorn/acorn-walk/dist/walk","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15757,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1,"endOffset":341,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":350,"endOffset":15753,"count":1}],"isBlockCoverage":false},{"functionName":"simple","ranges":[{"startOffset":1034,"endOffset":1350,"count":0}],"isBlockCoverage":false},{"functionName":"ancestor","ranges":[{"startOffset":1561,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"recursive","ranges":[{"startOffset":2358,"endOffset":2624,"count":0}],"isBlockCoverage":false},{"functionName":"makeTest","ranges":[{"startOffset":2628,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"Found","ranges":[{"startOffset":2863,"endOffset":2932,"count":0}],"isBlockCoverage":false},{"functionName":"full","ranges":[{"startOffset":2989,"endOffset":3351,"count":0}],"isBlockCoverage":false},{"functionName":"fullAncestor","ranges":[{"startOffset":3451,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAt","ranges":[{"startOffset":4180,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAround","ranges":[{"startOffset":4959,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAfter","ranges":[{"startOffset":5519,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeBefore","ranges":[{"startOffset":6080,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":6657,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"skipThrough","ranges":[{"startOffset":6834,"endOffset":6884,"count":0}],"isBlockCoverage":false},{"functionName":"ignore","ranges":[{"startOffset":6887,"endOffset":6921,"count":0}],"isBlockCoverage":false},{"functionName":"base.Program.base.BlockStatement.base.StaticBlock","ranges":[{"startOffset":7019,"endOffset":7183,"count":0}],"isBlockCoverage":false},{"functionName":"base.ExpressionStatement.base.ParenthesizedExpression.base.ChainExpression","ranges":[{"startOffset":7336,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"base.IfStatement","ranges":[{"startOffset":7430,"endOffset":7599,"count":0}],"isBlockCoverage":false},{"functionName":"base.LabeledStatement","ranges":[{"startOffset":7627,"endOffset":7691,"count":0}],"isBlockCoverage":false},{"functionName":"base.WithStatement","ranges":[{"startOffset":7773,"endOffset":7874,"count":0}],"isBlockCoverage":false},{"functionName":"base.SwitchStatement","ranges":[{"startOffset":7901,"endOffset":8087,"count":0}],"isBlockCoverage":false},{"functionName":"base.SwitchCase","ranges":[{"startOffset":8109,"endOffset":8334,"count":0}],"isBlockCoverage":false},{"functionName":"base.ReturnStatement.base.YieldExpression.base.AwaitExpression","ranges":[{"startOffset":8407,"endOffset":8498,"count":0}],"isBlockCoverage":false},{"functionName":"base.ThrowStatement.base.SpreadElement","ranges":[{"startOffset":8549,"endOffset":8618,"count":0}],"isBlockCoverage":false},{"functionName":"base.TryStatement","ranges":[{"startOffset":8642,"endOffset":8817,"count":0}],"isBlockCoverage":false},{"functionName":"base.CatchClause","ranges":[{"startOffset":8840,"endOffset":8957,"count":0}],"isBlockCoverage":false},{"functionName":"base.WhileStatement.base.DoWhileStatement","ranges":[{"startOffset":9007,"endOffset":9106,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForStatement","ranges":[{"startOffset":9130,"endOffset":9359,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForInStatement.base.ForOfStatement","ranges":[{"startOffset":9407,"endOffset":9540,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForInit","ranges":[{"startOffset":9559,"endOffset":9689,"count":0}],"isBlockCoverage":false},{"functionName":"base.FunctionDeclaration","ranges":[{"startOffset":9756,"endOffset":9814,"count":0}],"isBlockCoverage":false},{"functionName":"base.VariableDeclaration","ranges":[{"startOffset":9845,"endOffset":10004,"count":0}],"isBlockCoverage":false},{"functionName":"base.VariableDeclarator","ranges":[{"startOffset":10034,"endOffset":10148,"count":0}],"isBlockCoverage":false},{"functionName":"base.Function","ranges":[{"startOffset":10169,"endOffset":10451,"count":0}],"isBlockCoverage":false},{"functionName":"base.Pattern","ranges":[{"startOffset":10471,"endOffset":10696,"count":0}],"isBlockCoverage":false},{"functionName":"base.RestElement","ranges":[{"startOffset":10788,"endOffset":10854,"count":0}],"isBlockCoverage":false},{"functionName":"base.ArrayPattern","ranges":[{"startOffset":10878,"endOffset":11049,"count":0}],"isBlockCoverage":false},{"functionName":"base.ObjectPattern","ranges":[{"startOffset":11074,"endOffset":11441,"count":0}],"isBlockCoverage":false},{"functionName":"base.ArrayExpression","ranges":[{"startOffset":11567,"endOffset":11741,"count":0}],"isBlockCoverage":false},{"functionName":"base.ObjectExpression","ranges":[{"startOffset":11769,"endOffset":11926,"count":0}],"isBlockCoverage":false},{"functionName":"base.SequenceExpression","ranges":[{"startOffset":12041,"endOffset":12213,"count":0}],"isBlockCoverage":false},{"functionName":"base.TemplateLiteral","ranges":[{"startOffset":12240,"endOffset":12554,"count":0}],"isBlockCoverage":false},{"functionName":"base.UnaryExpression.base.UpdateExpression","ranges":[{"startOffset":12638,"endOffset":12706,"count":0}],"isBlockCoverage":false},{"functionName":"base.BinaryExpression.base.LogicalExpression","ranges":[{"startOffset":12759,"endOffset":12860,"count":0}],"isBlockCoverage":false},{"functionName":"base.AssignmentExpression.base.AssignmentPattern","ranges":[{"startOffset":12917,"endOffset":13015,"count":0}],"isBlockCoverage":false},{"functionName":"base.ConditionalExpression","ranges":[{"startOffset":13048,"endOffset":13195,"count":0}],"isBlockCoverage":false},{"functionName":"base.NewExpression.base.CallExpression","ranges":[{"startOffset":13242,"endOffset":13492,"count":0}],"isBlockCoverage":false},{"functionName":"base.MemberExpression","ranges":[{"startOffset":13520,"endOffset":13649,"count":0}],"isBlockCoverage":false},{"functionName":"base.ExportNamedDeclaration.base.ExportDefaultDeclaration","ranges":[{"startOffset":13715,"endOffset":13955,"count":0}],"isBlockCoverage":false},{"functionName":"base.ExportAllDeclaration","ranges":[{"startOffset":13987,"endOffset":14108,"count":0}],"isBlockCoverage":false},{"functionName":"base.ImportDeclaration","ranges":[{"startOffset":14137,"endOffset":14332,"count":0}],"isBlockCoverage":false},{"functionName":"base.ImportExpression","ranges":[{"startOffset":14360,"endOffset":14426,"count":0}],"isBlockCoverage":false},{"functionName":"base.TaggedTemplateExpression","ranges":[{"startOffset":14616,"endOffset":14716,"count":0}],"isBlockCoverage":false},{"functionName":"base.ClassDeclaration.base.ClassExpression","ranges":[{"startOffset":14767,"endOffset":14822,"count":0}],"isBlockCoverage":false},{"functionName":"base.Class","ranges":[{"startOffset":14839,"endOffset":15004,"count":0}],"isBlockCoverage":false},{"functionName":"base.ClassBody","ranges":[{"startOffset":15025,"endOffset":15174,"count":0}],"isBlockCoverage":false},{"functionName":"base.MethodDefinition.base.PropertyDefinition.base.Property","ranges":[{"startOffset":15244,"endOffset":15387,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12932,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2411,"endOffset":2534,"count":3}],"isBlockCoverage":true},{"functionName":"Script","ranges":[{"startOffset":2578,"endOffset":4032,"count":4},{"startOffset":2681,"endOffset":2727,"count":0},{"startOffset":3221,"endOffset":3284,"count":1},{"startOffset":3890,"endOffset":3959,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4036,"endOffset":4331,"count":1},{"startOffset":4158,"endOffset":4196,"count":0},{"startOffset":4198,"endOffset":4270,"count":0}],"isBlockCoverage":true},{"functionName":"runInContext","ranges":[{"startOffset":4335,"endOffset":4720,"count":1},{"startOffset":4547,"endOffset":4585,"count":0},{"startOffset":4587,"endOffset":4659,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4724,"endOffset":4895,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":4899,"endOffset":5118,"count":1},{"startOffset":4984,"endOffset":5116,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5120,"endOffset":5799,"count":2},{"startOffset":5319,"endOffset":5384,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5801,"endOffset":6869,"count":2},{"startOffset":5859,"endOffset":6086,"count":1},{"startOffset":6086,"endOffset":6145,"count":0},{"startOffset":6145,"endOffset":6193,"count":1},{"startOffset":6193,"endOffset":6256,"count":0},{"startOffset":6256,"endOffset":6308,"count":1},{"startOffset":6308,"endOffset":6731,"count":0},{"startOffset":6731,"endOffset":6779,"count":1},{"startOffset":6779,"endOffset":6842,"count":0},{"startOffset":6842,"endOffset":6868,"count":1}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":6904,"endOffset":8303,"count":2},{"startOffset":7051,"endOffset":7355,"count":1},{"startOffset":7355,"endOffset":7396,"count":0},{"startOffset":7396,"endOffset":7437,"count":1},{"startOffset":7437,"endOffset":7494,"count":0},{"startOffset":7494,"endOffset":7573,"count":1},{"startOffset":7573,"endOffset":7756,"count":0},{"startOffset":7756,"endOffset":8302,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":8305,"endOffset":8381,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8535,"endOffset":8996,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8998,"endOffset":9396,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9398,"endOffset":9750,"count":1},{"startOffset":9490,"endOffset":9532,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":9752,"endOffset":9938,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9940,"endOffset":11528,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11805,"endOffset":12377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"node:readline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12807,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2591,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":3655,"endOffset":4449,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":4500,"endOffset":5271,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":5805,"endOffset":5929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6122,"endOffset":6166,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6213,"endOffset":6253,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6307,"endOffset":6354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6405,"endOffset":6449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6501,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6598,"endOffset":6643,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6696,"endOffset":6742,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6794,"endOffset":6839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6888,"endOffset":6930,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6980,"endOffset":7023,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7074,"endOffset":7118,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7170,"endOffset":7215,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7270,"endOffset":7318,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7374,"endOffset":7423,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7478,"endOffset":7526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7582,"endOffset":7631,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7676,"endOffset":7714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7766,"endOffset":7811,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7863,"endOffset":7908,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7962,"endOffset":8009,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8060,"endOffset":8104,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8153,"endOffset":8195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8334,"endOffset":8376,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8382,"endOffset":8430,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8480,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8532,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8632,"endOffset":8676,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8682,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8782,"endOffset":8828,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8834,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8931,"endOffset":8972,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8978,"endOffset":9025,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9080,"endOffset":9131,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9137,"endOffset":9194,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9244,"endOffset":9290,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9296,"endOffset":9348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9398,"endOffset":9444,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9450,"endOffset":9502,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":10098,"endOffset":10579,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":11645,"endOffset":12659,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"node:internal/readline/emitKeypressEvents","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2663,"count":1}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":644,"endOffset":2624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"node:readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1658,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":531,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":634,"endOffset":1462,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":1466,"endOffset":1590,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"node:internal/readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3512,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":470,"endOffset":3476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"node:console","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1202,"count":1}],"isBlockCoverage":false}]},{"scriptId":"344","url":"node:domain","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16738,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2238,"endOffset":2277,"count":10}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2286,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2443,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":3398,"endOffset":3880,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":3884,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4097,"endOffset":4163,"count":0}],"isBlockCoverage":false},{"functionName":"process.setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":4673,"endOffset":4849,"count":0}],"isBlockCoverage":false},{"functionName":"emitMakeCallbackDeprecation","ranges":[{"startOffset":4894,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"topLevelDomainCallback","ranges":[{"startOffset":5382,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"updateExceptionCapture","ranges":[{"startOffset":5878,"endOffset":6240,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6269,"endOffset":6613,"count":6},{"startOffset":6326,"endOffset":6376,"count":2},{"startOffset":6378,"endOffset":6611,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6646,"endOffset":7045,"count":2},{"startOffset":6703,"endOffset":6753,"count":0},{"startOffset":6755,"endOffset":7043,"count":0}],"isBlockCoverage":true},{"functionName":"domainUncaughtExceptionClear","ranges":[{"startOffset":7049,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"Domain","ranges":[{"startOffset":7223,"endOffset":7454,"count":0}],"isBlockCoverage":false},{"functionName":"createDomain","ranges":[{"startOffset":7524,"endOffset":7574,"count":0}],"isBlockCoverage":false},{"functionName":"Domain._errorHandler","ranges":[{"startOffset":7802,"endOffset":10725,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.enter","ranges":[{"startOffset":10754,"endOffset":10989,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.exit","ranges":[{"startOffset":11017,"endOffset":11392,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.add","ranges":[{"startOffset":11459,"endOffset":12234,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.remove","ranges":[{"startOffset":12264,"endOffset":12427,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.run","ranges":[{"startOffset":12454,"endOffset":12589,"count":0}],"isBlockCoverage":false},{"functionName":"intercepted","ranges":[{"startOffset":12593,"endOffset":13097,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.intercept","ranges":[{"startOffset":13129,"endOffset":13278,"count":0}],"isBlockCoverage":false},{"functionName":"bound","ranges":[{"startOffset":13282,"endOffset":13418,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.bind","ranges":[{"startOffset":13445,"endOffset":13733,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":13886,"endOffset":14211,"count":5},{"startOffset":14076,"endOffset":14112,"count":0},{"startOffset":14114,"endOffset":14153,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":14291,"endOffset":16736,"count":446},{"startOffset":14414,"endOffset":14471,"count":1},{"startOffset":14620,"endOffset":14638,"count":445},{"startOffset":14639,"endOffset":14662,"count":79},{"startOffset":14663,"endOffset":14688,"count":0},{"startOffset":14743,"endOffset":16735,"count":0}],"isBlockCoverage":true}]},{"scriptId":"345","url":"node:internal/repl/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25252,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1024,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"isRecoverableError","ranges":[{"startOffset":1416,"endOffset":4359,"count":0}],"isBlockCoverage":false},{"functionName":"setupPreview","ranges":[{"startOffset":4361,"endOffset":16766,"count":0}],"isBlockCoverage":false},{"functionName":"setupReverseSearch","ranges":[{"startOffset":16768,"endOffset":25059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"node:internal/repl/history","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4491,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":336,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"_writeToOutput","ranges":[{"startOffset":711,"endOffset":808,"count":0}],"isBlockCoverage":false},{"functionName":"setupHistory","ranges":[{"startOffset":810,"endOffset":4128,"count":0}],"isBlockCoverage":false},{"functionName":"_replHistoryMessage","ranges":[{"startOffset":4130,"endOffset":4490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38,"count":1}],"isBlockCoverage":true}]},{"scriptId":"348","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/v8-compile-cache-lib@3.0.1/node_modules/v8-compile-cache-lib/v8-compile-cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11535,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystemBlobStore","ranges":[{"startOffset":465,"endOffset":794,"count":2},{"startOffset":550,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":798,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1092,"endOffset":1511,"count":1},{"startOffset":1173,"endOffset":1288,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1515,"endOffset":1666,"count":1}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":1670,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"isDirty","ranges":[{"startOffset":2069,"endOffset":2108,"count":2}],"isBlockCoverage":true},{"functionName":"save","ranges":[{"startOffset":2112,"endOffset":2681,"count":1},{"startOffset":2369,"endOffset":2473,"count":0}],"isBlockCoverage":true},{"functionName":"_load","ranges":[{"startOffset":2685,"endOffset":3022,"count":2},{"startOffset":2845,"endOffset":2932,"count":0}],"isBlockCoverage":true},{"functionName":"_getDump","ranges":[{"startOffset":3026,"endOffset":3801,"count":1},{"startOffset":3610,"endOffset":3766,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3111,"endOffset":3292,"count":1}],"isBlockCoverage":true},{"functionName":"NativeCompileCache","ranges":[{"startOffset":4019,"endOffset":4107,"count":2}],"isBlockCoverage":true},{"functionName":"setCacheStore","ranges":[{"startOffset":4111,"endOffset":4177,"count":2}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":4181,"endOffset":5948,"count":2}],"isBlockCoverage":true},{"functionName":"_ownModuleCompile","ranges":[{"startOffset":4462,"endOffset":5944,"count":1},{"startOffset":4534,"endOffset":4592,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4624,"endOffset":4686,"count":5}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4788,"endOffset":4902,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":5142,"endOffset":5242,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":5952,"endOffset":6215,"count":2}],"isBlockCoverage":true},{"functionName":"_moduleCompile","ranges":[{"startOffset":6219,"endOffset":8037,"count":1},{"startOffset":6449,"endOffset":6490,"count":0},{"startOffset":6497,"endOffset":7203,"count":0},{"startOffset":7761,"endOffset":7846,"count":0}],"isBlockCoverage":true},{"functionName":"mkdirpSync","ranges":[{"startOffset":8365,"endOffset":8432,"count":1}],"isBlockCoverage":true},{"functionName":"_mkdirpSync","ranges":[{"startOffset":8434,"endOffset":8785,"count":1},{"startOffset":8552,"endOffset":8617,"count":0},{"startOffset":8707,"endOffset":8722,"count":0},{"startOffset":8731,"endOffset":8773,"count":0}],"isBlockCoverage":true},{"functionName":"slashEscape","ranges":[{"startOffset":8787,"endOffset":9072,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9039,"endOffset":9068,"count":26}],"isBlockCoverage":true},{"functionName":"supportsCachedData","ranges":[{"startOffset":9074,"endOffset":9267,"count":2}],"isBlockCoverage":true},{"functionName":"getCacheDir","ranges":[{"startOffset":9269,"endOffset":9935,"count":2},{"startOffset":9405,"endOffset":9449,"count":0},{"startOffset":9607,"endOffset":9627,"count":0},{"startOffset":9717,"endOffset":9852,"count":0}],"isBlockCoverage":true},{"functionName":"getMainName","ranges":[{"startOffset":9937,"endOffset":10288,"count":2},{"startOffset":10251,"endOffset":10266,"count":0}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":10290,"endOffset":11170,"count":2}],"isBlockCoverage":true},{"functionName":"uninstall","ranges":[{"startOffset":10880,"endOffset":11103,"count":2},{"startOffset":10910,"endOffset":10917,"count":0},{"startOffset":11024,"endOffset":11059,"count":1}],"isBlockCoverage":true}]},{"scriptId":"349","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8421,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3092,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3218,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3490,"endOffset":3572,"count":1}],"isBlockCoverage":true},{"functionName":"createCipheriv","ranges":[{"startOffset":3574,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3678,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3786,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3944,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4028,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4086,"endOffset":4168,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4170,"endOffset":4252,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4254,"endOffset":4340,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5531,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5618,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":5904,"endOffset":5995,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6073,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6331,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6569,"endOffset":7402,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6667,"endOffset":7157,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7163,"endOffset":7394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7794,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7946,"endOffset":7993,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8119,"endOffset":8140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16246,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1260,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1628,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":2091,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2636,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3306,"endOffset":4352,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4902,"endOffset":7142,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7144,"endOffset":8020,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8023,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8417,"endOffset":9033,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9398,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9699,"endOffset":10425,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10427,"endOffset":10730,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10732,"endOffset":10970,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":10972,"endOffset":11292,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11294,"endOffset":12527,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12529,"endOffset":12985,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":12987,"endOffset":13245,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":13519,"endOffset":13563,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13638,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14067,"endOffset":14364,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14366,"endOffset":15259,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15261,"endOffset":16059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3018,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":472,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1138,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1545,"endOffset":2016,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2059,"endOffset":2950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16364,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1942,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"getHashCache","ranges":[{"startOffset":2139,"endOffset":2408,"count":2},{"startOffset":2197,"endOffset":2385,"count":1},{"startOffset":2266,"endOffset":2381,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2340,"endOffset":2373,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedHashId","ranges":[{"startOffset":2410,"endOffset":2538,"count":1},{"startOffset":2527,"endOffset":2535,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2572,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2649,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2725,"endOffset":2767,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2771,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3225,"endOffset":3710,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6696,"endOffset":6805,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":7613,"endOffset":7826,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":8052,"endOffset":10487,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":10489,"endOffset":10628,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":10630,"endOffset":10781,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":10783,"endOffset":10934,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":10936,"endOffset":11075,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":11077,"endOffset":11419,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":11421,"endOffset":11617,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11662,"endOffset":11952,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":11956,"endOffset":12188,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":12190,"endOffset":12460,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12996,"endOffset":13276,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":13278,"endOffset":13514,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":13516,"endOffset":13681,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":13683,"endOffset":13895,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":13897,"endOffset":14109,"count":0}],"isBlockCoverage":false},{"functionName":"getDigestSizeInBytes","ranges":[{"startOffset":14111,"endOffset":14294,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":14433,"endOffset":15399,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":15401,"endOffset":15784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2502,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1890,"endOffset":2115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3331,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":626,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1294,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1702,"endOffset":3283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3401,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":816,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1371,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1801,"endOffset":2267,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2269,"endOffset":2607,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2646,"endOffset":3339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27518,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2398,"endOffset":9529,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2508,"endOffset":3050,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3056,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3116,"endOffset":3257,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3263,"endOffset":3547,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3780,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3844,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3930,"endOffset":4278,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":4284,"endOffset":5721,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":5854,"endOffset":6123,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":6232,"endOffset":6292,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":6298,"endOffset":6450,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":6456,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":6839,"endOffset":8385,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":8449,"endOffset":8507,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":8513,"endOffset":8804,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":8869,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":8934,"endOffset":9448,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":9533,"endOffset":9918,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":9920,"endOffset":10772,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":10774,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":10897,"endOffset":11597,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":11599,"endOffset":11736,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":11738,"endOffset":13096,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":13295,"endOffset":13431,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":13631,"endOffset":13747,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":13749,"endOffset":14327,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":14329,"endOffset":14834,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":14836,"endOffset":17385,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":17387,"endOffset":18930,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":18932,"endOffset":19020,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":19022,"endOffset":19117,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":19119,"endOffset":19817,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":19819,"endOffset":20023,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":20025,"endOffset":20362,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":20364,"endOffset":20705,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":20707,"endOffset":20789,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":21212,"endOffset":21272,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21276,"endOffset":21625,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":21629,"endOffset":21764,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":21768,"endOffset":21907,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":21911,"endOffset":22046,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":22050,"endOffset":22193,"count":0}],"isBlockCoverage":false},{"functionName":"defineCryptoKeyProperties","ranges":[{"startOffset":22646,"endOffset":23549,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":23845,"endOffset":24211,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24215,"endOffset":24576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24580,"endOffset":24727,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":24856,"endOffset":24940,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":24942,"endOffset":27041,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10712,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1183,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1255,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1411,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2193,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2312,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2692,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":3944,"endOffset":9232,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9263,"endOffset":9800,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":9802,"endOffset":10004,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10006,"endOffset":10476,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10478,"endOffset":10612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9910,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1232,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3039,"endOffset":3365,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3476,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3705,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4062,"endOffset":4171,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4282,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4518,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4745,"endOffset":4860,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4902,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5088,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5236,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5701,"endOffset":5823,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5856,"endOffset":6007,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6028,"endOffset":6294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6297,"endOffset":6432,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6434,"endOffset":6757,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6831,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8018,"endOffset":9804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9795,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1233,"endOffset":1981,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1301,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2482,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2850,"endOffset":3084,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3086,"endOffset":3505,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3507,"endOffset":3846,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4089,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4361,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4506,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4673,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5218,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5500,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5680,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":5844,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6084,"endOffset":6426,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6674,"endOffset":6884,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":6886,"endOffset":7477,"count":3},{"startOffset":7282,"endOffset":7355,"count":1},{"startOffset":7355,"endOffset":7417,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":7878,"endOffset":8013,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":8418,"endOffset":8635,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":8797,"endOffset":9658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1386,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":401,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":595,"endOffset":769,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":632,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":771,"endOffset":990,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":808,"endOffset":987,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6942,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":870,"endOffset":1129,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1252,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1371,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1687,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1764,"endOffset":1845,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1847,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2201,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2470,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3089,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4309,"endOffset":4576,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4804,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5390,"endOffset":6868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5947,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1100,"endOffset":1826,"count":1},{"startOffset":1159,"endOffset":1195,"count":0},{"startOffset":1345,"endOffset":1364,"count":0},{"startOffset":1365,"endOffset":1391,"count":0},{"startOffset":1437,"endOffset":1484,"count":0},{"startOffset":1616,"endOffset":1620,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1957,"endOffset":2125,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":2156,"endOffset":2261,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2288,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2395,"endOffset":2859,"count":1},{"startOffset":2488,"endOffset":2526,"count":0},{"startOffset":2603,"endOffset":2749,"count":0},{"startOffset":2800,"endOffset":2842,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2887,"endOffset":3208,"count":1},{"startOffset":2980,"endOffset":3018,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3211,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3792,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4379,"endOffset":4850,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":4852,"endOffset":5884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10479,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1157,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1242,"endOffset":2487,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2519,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2680,"endOffset":10233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9066477,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9066475,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":888,"endOffset":9066293,"count":1}],"isBlockCoverage":false},{"functionName":"__export","ranges":[{"startOffset":1130,"endOffset":1241,"count":35},{"startOffset":1177,"endOffset":1239,"count":4918}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":1261,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":1628,"endOffset":1655,"count":1}],"isBlockCoverage":true},{"functionName":"ANONYMOUS","ranges":[{"startOffset":1810,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"AccessFlags","ranges":[{"startOffset":1842,"endOffset":1859,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionLevel","ranges":[{"startOffset":1879,"endOffset":1899,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentDeclarationKind","ranges":[{"startOffset":1930,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentKind","ranges":[{"startOffset":1981,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"Associativity","ranges":[{"startOffset":2020,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"BreakpointResolver","ranges":[{"startOffset":2063,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderFileEmit","ranges":[{"startOffset":2119,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderProgramKind","ranges":[{"startOffset":2164,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderState","ranges":[{"startOffset":2206,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"CallHierarchy","ranges":[{"startOffset":2243,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"CharacterCodes","ranges":[{"startOffset":2293,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"CheckFlags","ranges":[{"startOffset":2329,"endOffset":2345,"count":0}],"isBlockCoverage":false},{"functionName":"CheckMode","ranges":[{"startOffset":2360,"endOffset":2375,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationType","ranges":[{"startOffset":2399,"endOffset":2423,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationTypeNames","ranges":[{"startOffset":2452,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"CommentDirectiveType","ranges":[{"startOffset":2507,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":2549,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionInfoFlags","ranges":[{"startOffset":2590,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionTriggerKind","ranges":[{"startOffset":2642,"endOffset":2669,"count":0}],"isBlockCoverage":false},{"functionName":"Completions","ranges":[{"startOffset":2686,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"ContainerFlags","ranges":[{"startOffset":2734,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"ContextFlags","ranges":[{"startOffset":2772,"endOffset":2790,"count":0}],"isBlockCoverage":false},{"functionName":"Debug","ranges":[{"startOffset":2801,"endOffset":2812,"count":5}],"isBlockCoverage":true},{"functionName":"DiagnosticCategory","ranges":[{"startOffset":2836,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"Diagnostics","ranges":[{"startOffset":2877,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"DocumentHighlights","ranges":[{"startOffset":2918,"endOffset":2942,"count":0}],"isBlockCoverage":false},{"functionName":"ElementFlags","ranges":[{"startOffset":2960,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"EmitFlags","ranges":[{"startOffset":2993,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"EmitHint","ranges":[{"startOffset":3022,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"EmitOnly","ranges":[{"startOffset":3050,"endOffset":3064,"count":0}],"isBlockCoverage":false},{"functionName":"EndOfLineState","ranges":[{"startOffset":3084,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"ExitStatus","ranges":[{"startOffset":3120,"endOffset":3136,"count":0}],"isBlockCoverage":false},{"functionName":"ExportKind","ranges":[{"startOffset":3152,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"Extension","ranges":[{"startOffset":3183,"endOffset":3198,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalEmitHelpers","ranges":[{"startOffset":3223,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"FileIncludeKind","ranges":[{"startOffset":3269,"endOffset":3290,"count":0}],"isBlockCoverage":false},{"functionName":"FilePreprocessingDiagnosticsKind","ranges":[{"startOffset":3328,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"FileSystemEntryKind","ranges":[{"startOffset":3391,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"FileWatcherEventKind","ranges":[{"startOffset":3442,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"FindAllReferences","ranges":[{"startOffset":3491,"endOffset":3525,"count":0}],"isBlockCoverage":false},{"functionName":"FlattenLevel","ranges":[{"startOffset":3543,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"FlowFlags","ranges":[{"startOffset":3576,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"ForegroundColorEscapeSequences","ranges":[{"startOffset":3627,"endOffset":3663,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionFlags","ranges":[{"startOffset":3682,"endOffset":3701,"count":0}],"isBlockCoverage":false},{"functionName":"GeneratedIdentifierFlags","ranges":[{"startOffset":3731,"endOffset":3761,"count":0}],"isBlockCoverage":false},{"functionName":"GetLiteralTextFlags","ranges":[{"startOffset":3786,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"GoToDefinition","ranges":[{"startOffset":3831,"endOffset":3862,"count":0}],"isBlockCoverage":false},{"functionName":"HighlightSpanKind","ranges":[{"startOffset":3885,"endOffset":3908,"count":0}],"isBlockCoverage":false},{"functionName":"IdentifierNameMap","ranges":[{"startOffset":3931,"endOffset":3954,"count":0}],"isBlockCoverage":false},{"functionName":"ImportKind","ranges":[{"startOffset":3970,"endOffset":3986,"count":0}],"isBlockCoverage":false},{"functionName":"ImportsNotUsedAsValues","ranges":[{"startOffset":4014,"endOffset":4042,"count":0}],"isBlockCoverage":false},{"functionName":"IndentStyle","ranges":[{"startOffset":4059,"endOffset":4076,"count":0}],"isBlockCoverage":false},{"functionName":"IndexFlags","ranges":[{"startOffset":4092,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"IndexKind","ranges":[{"startOffset":4123,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"InferenceFlags","ranges":[{"startOffset":4158,"endOffset":4178,"count":0}],"isBlockCoverage":false},{"functionName":"InferencePriority","ranges":[{"startOffset":4201,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHintKind","ranges":[{"startOffset":4243,"endOffset":4263,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHints","ranges":[{"startOffset":4279,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEmitFlags","ranges":[{"startOffset":4329,"endOffset":4352,"count":0}],"isBlockCoverage":false},{"functionName":"InternalNodeBuilderFlags","ranges":[{"startOffset":4382,"endOffset":4412,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSymbolName","ranges":[{"startOffset":4436,"endOffset":4460,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionFlags","ranges":[{"startOffset":4483,"endOffset":4506,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidatedProjectKind","ranges":[{"startOffset":4534,"endOffset":4562,"count":0}],"isBlockCoverage":false},{"functionName":"JSDocParsingMode","ranges":[{"startOffset":4584,"endOffset":4606,"count":0}],"isBlockCoverage":false},{"functionName":"JsDoc","ranges":[{"startOffset":4617,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"JsTyping","ranges":[{"startOffset":4653,"endOffset":4678,"count":0}],"isBlockCoverage":false},{"functionName":"JsxEmit","ranges":[{"startOffset":4691,"endOffset":4704,"count":1}],"isBlockCoverage":true},{"functionName":"JsxFlags","ranges":[{"startOffset":4718,"endOffset":4732,"count":0}],"isBlockCoverage":false},{"functionName":"JsxReferenceKind","ranges":[{"startOffset":4754,"endOffset":4776,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageFeatureMinimumTarget","ranges":[{"startOffset":4810,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageServiceMode","ranges":[{"startOffset":4869,"endOffset":4894,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageVariant","ranges":[{"startOffset":4915,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"LexicalEnvironmentFlags","ranges":[{"startOffset":4965,"endOffset":4994,"count":0}],"isBlockCoverage":false},{"functionName":"ListFormat","ranges":[{"startOffset":5010,"endOffset":5026,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":5040,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"MapCode","ranges":[{"startOffset":5067,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"MemberOverrideStatus","ranges":[{"startOffset":5117,"endOffset":5143,"count":0}],"isBlockCoverage":false},{"functionName":"ModifierFlags","ranges":[{"startOffset":5162,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleDetectionKind","ranges":[{"startOffset":5206,"endOffset":5231,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleInstanceState","ranges":[{"startOffset":5256,"endOffset":5281,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleKind","ranges":[{"startOffset":5297,"endOffset":5313,"count":15}],"isBlockCoverage":true},{"functionName":"ModuleResolutionKind","ranges":[{"startOffset":5339,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleSpecifierEnding","ranges":[{"startOffset":5392,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"NavigateTo","ranges":[{"startOffset":5435,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"NavigationBar","ranges":[{"startOffset":5481,"endOffset":5511,"count":0}],"isBlockCoverage":false},{"functionName":"NewLineKind","ranges":[{"startOffset":5528,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"NodeBuilderFlags","ranges":[{"startOffset":5567,"endOffset":5589,"count":0}],"isBlockCoverage":false},{"functionName":"NodeCheckFlags","ranges":[{"startOffset":5609,"endOffset":5629,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFactoryFlags","ranges":[{"startOffset":5651,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFlags","ranges":[{"startOffset":5688,"endOffset":5703,"count":0}],"isBlockCoverage":false},{"functionName":"NodeResolutionFeatures","ranges":[{"startOffset":5731,"endOffset":5759,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFlags","ranges":[{"startOffset":5776,"endOffset":5793,"count":0}],"isBlockCoverage":false},{"functionName":"OperationCanceledException","ranges":[{"startOffset":5825,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"OperatorPrecedence","ranges":[{"startOffset":5881,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImports","ranges":[{"startOffset":5926,"endOffset":5958,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImportsMode","ranges":[{"startOffset":5983,"endOffset":6008,"count":0}],"isBlockCoverage":false},{"functionName":"OuterExpressionKinds","ranges":[{"startOffset":6034,"endOffset":6060,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningElementsCollector","ranges":[{"startOffset":6092,"endOffset":6135,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningSpanKind","ranges":[{"startOffset":6158,"endOffset":6181,"count":0}],"isBlockCoverage":false},{"functionName":"OutputFileType","ranges":[{"startOffset":6201,"endOffset":6221,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonAutoImportPreference","ranges":[{"startOffset":6258,"endOffset":6295,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonDependencyGroup","ranges":[{"startOffset":6327,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"PatternMatchKind","ranges":[{"startOffset":6381,"endOffset":6403,"count":0}],"isBlockCoverage":false},{"functionName":"PollingInterval","ranges":[{"startOffset":6424,"endOffset":6445,"count":0}],"isBlockCoverage":false},{"functionName":"PollingWatchKind","ranges":[{"startOffset":6467,"endOffset":6489,"count":0}],"isBlockCoverage":false},{"functionName":"PragmaKindFlags","ranges":[{"startOffset":6510,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"PredicateSemantics","ranges":[{"startOffset":6555,"endOffset":6579,"count":0}],"isBlockCoverage":false},{"functionName":"PreparePasteEdits","ranges":[{"startOffset":6602,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateIdentifierKind","ranges":[{"startOffset":6663,"endOffset":6690,"count":0}],"isBlockCoverage":false},{"functionName":"ProcessLevel","ranges":[{"startOffset":6708,"endOffset":6726,"count":0}],"isBlockCoverage":false},{"functionName":"ProgramUpdateLevel","ranges":[{"startOffset":6750,"endOffset":6774,"count":0}],"isBlockCoverage":false},{"functionName":"QuotePreference","ranges":[{"startOffset":6795,"endOffset":6816,"count":0}],"isBlockCoverage":false},{"functionName":"RegularExpressionFlags","ranges":[{"startOffset":6844,"endOffset":6872,"count":0}],"isBlockCoverage":false},{"functionName":"RelationComparisonResult","ranges":[{"startOffset":6902,"endOffset":6932,"count":0}],"isBlockCoverage":false},{"functionName":"Rename","ranges":[{"startOffset":6944,"endOffset":6967,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKind","ranges":[{"startOffset":6990,"endOffset":7013,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKindModifier","ranges":[{"startOffset":7044,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptKind","ranges":[{"startOffset":7091,"endOffset":7107,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptSnapshot","ranges":[{"startOffset":7127,"endOffset":7147,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptTarget","ranges":[{"startOffset":7165,"endOffset":7183,"count":1}],"isBlockCoverage":true},{"functionName":"SemanticClassificationFormat","ranges":[{"startOffset":7217,"endOffset":7251,"count":0}],"isBlockCoverage":false},{"functionName":"SemanticMeaning","ranges":[{"startOffset":7272,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"SemicolonPreference","ranges":[{"startOffset":7318,"endOffset":7343,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureCheckMode","ranges":[{"startOffset":7367,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureFlags","ranges":[{"startOffset":7411,"endOffset":7431,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureHelp","ranges":[{"startOffset":7450,"endOffset":7480,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureInfo","ranges":[{"startOffset":7499,"endOffset":7518,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureKind","ranges":[{"startOffset":7537,"endOffset":7556,"count":0}],"isBlockCoverage":false},{"functionName":"SmartSelectionRange","ranges":[{"startOffset":7581,"endOffset":7617,"count":0}],"isBlockCoverage":false},{"functionName":"SnippetKind","ranges":[{"startOffset":7634,"endOffset":7651,"count":0}],"isBlockCoverage":false},{"functionName":"StatisticType","ranges":[{"startOffset":7670,"endOffset":7689,"count":0}],"isBlockCoverage":false},{"functionName":"StructureIsReused","ranges":[{"startOffset":7712,"endOffset":7735,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolAccessibility","ranges":[{"startOffset":7760,"endOffset":7785,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplay","ranges":[{"startOffset":7804,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplayPartKind","ranges":[{"startOffset":7861,"endOffset":7888,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFlags","ranges":[{"startOffset":7905,"endOffset":7922,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFormatFlags","ranges":[{"startOffset":7945,"endOffset":7968,"count":0}],"isBlockCoverage":false},{"functionName":"SyntaxKind","ranges":[{"startOffset":7984,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"Ternary","ranges":[{"startOffset":8013,"endOffset":8026,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledCancellationToken","ranges":[{"startOffset":8058,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"TokenClass","ranges":[{"startOffset":8106,"endOffset":8122,"count":0}],"isBlockCoverage":false},{"functionName":"TokenFlags","ranges":[{"startOffset":8138,"endOffset":8154,"count":0}],"isBlockCoverage":false},{"functionName":"TransformFlags","ranges":[{"startOffset":8174,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFacts","ranges":[{"startOffset":8209,"endOffset":8224,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFlags","ranges":[{"startOffset":8239,"endOffset":8254,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFormatFlags","ranges":[{"startOffset":8275,"endOffset":8296,"count":0}],"isBlockCoverage":false},{"functionName":"TypeMapKind","ranges":[{"startOffset":8313,"endOffset":8330,"count":0}],"isBlockCoverage":false},{"functionName":"TypePredicateKind","ranges":[{"startOffset":8353,"endOffset":8376,"count":0}],"isBlockCoverage":false},{"functionName":"TypeReferenceSerializationKind","ranges":[{"startOffset":8412,"endOffset":8448,"count":0}],"isBlockCoverage":false},{"functionName":"UnionReduction","ranges":[{"startOffset":8468,"endOffset":8488,"count":0}],"isBlockCoverage":false},{"functionName":"UpToDateStatusType","ranges":[{"startOffset":8512,"endOffset":8536,"count":0}],"isBlockCoverage":false},{"functionName":"VarianceFlags","ranges":[{"startOffset":8555,"endOffset":8574,"count":0}],"isBlockCoverage":false},{"functionName":"Version","ranges":[{"startOffset":8587,"endOffset":8600,"count":0}],"isBlockCoverage":false},{"functionName":"VersionRange","ranges":[{"startOffset":8618,"endOffset":8636,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryFlags","ranges":[{"startOffset":8661,"endOffset":8686,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryKind","ranges":[{"startOffset":8710,"endOffset":8734,"count":0}],"isBlockCoverage":false},{"functionName":"WatchFileKind","ranges":[{"startOffset":8753,"endOffset":8772,"count":0}],"isBlockCoverage":false},{"functionName":"WatchLogLevel","ranges":[{"startOffset":8791,"endOffset":8810,"count":0}],"isBlockCoverage":false},{"functionName":"WatchType","ranges":[{"startOffset":8825,"endOffset":8840,"count":0}],"isBlockCoverage":false},{"functionName":"accessPrivateIdentifier","ranges":[{"startOffset":8869,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlags","ranges":[{"startOffset":8916,"endOffset":8934,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelper","ranges":[{"startOffset":8953,"endOffset":8972,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelpers","ranges":[{"startOffset":8992,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"addInternalEmitFlags","ranges":[{"startOffset":9038,"endOffset":9064,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeFactoryPatcher","ranges":[{"startOffset":9091,"endOffset":9118,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectAllocatorPatcher","ranges":[{"startOffset":9149,"endOffset":9180,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":9194,"endOffset":9208,"count":5}],"isBlockCoverage":true},{"functionName":"addRelatedInfo","ranges":[{"startOffset":9228,"endOffset":9248,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticLeadingComment","ranges":[{"startOffset":9280,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticTrailingComment","ranges":[{"startOffset":9345,"endOffset":9378,"count":0}],"isBlockCoverage":false},{"functionName":"addToSeen","ranges":[{"startOffset":9393,"endOffset":9408,"count":0}],"isBlockCoverage":false},{"functionName":"advancedAsyncSuperHelper","ranges":[{"startOffset":9438,"endOffset":9468,"count":0}],"isBlockCoverage":false},{"functionName":"affectsDeclarationPathOptionDeclarations","ranges":[{"startOffset":9514,"endOffset":9560,"count":0}],"isBlockCoverage":false},{"functionName":"affectsEmitOptionDeclarations","ranges":[{"startOffset":9595,"endOffset":9630,"count":0}],"isBlockCoverage":false},{"functionName":"allKeysStartWithDot","ranges":[{"startOffset":9655,"endOffset":9680,"count":0}],"isBlockCoverage":false},{"functionName":"altDirectorySeparator","ranges":[{"startOffset":9707,"endOffset":9734,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":9743,"endOffset":9752,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":9764,"endOffset":9776,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfUnique","ranges":[{"startOffset":9796,"endOffset":9816,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFrom","ranges":[{"startOffset":9831,"endOffset":9846,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsEqualTo","ranges":[{"startOffset":9866,"endOffset":9886,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsHomogeneous","ranges":[{"startOffset":9910,"endOffset":9934,"count":0}],"isBlockCoverage":false},{"functionName":"arrayOf","ranges":[{"startOffset":9947,"endOffset":9960,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReverseIterator","ranges":[{"startOffset":9986,"endOffset":10012,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMap","ranges":[{"startOffset":10028,"endOffset":10044,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMultiMap","ranges":[{"startOffset":10065,"endOffset":10086,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToNumericMap","ranges":[{"startOffset":10109,"endOffset":10132,"count":0}],"isBlockCoverage":false},{"functionName":"assertType","ranges":[{"startOffset":10148,"endOffset":10164,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":10176,"endOffset":10188,"count":0}],"isBlockCoverage":false},{"functionName":"asyncSuperHelper","ranges":[{"startOffset":10210,"endOffset":10232,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostics","ranges":[{"startOffset":10261,"endOffset":10290,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":10308,"endOffset":10326,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":10344,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":10380,"endOffset":10398,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearchKey","ranges":[{"startOffset":10419,"endOffset":10440,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFile","ranges":[{"startOffset":10460,"endOffset":10480,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoCharacterSpans","ranges":[{"startOffset":10509,"endOffset":10538,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoWordSpans","ranges":[{"startOffset":10562,"endOffset":10586,"count":0}],"isBlockCoverage":false},{"functionName":"buildLinkParts","ranges":[{"startOffset":10606,"endOffset":10626,"count":0}],"isBlockCoverage":false},{"functionName":"buildOpts","ranges":[{"startOffset":10641,"endOffset":10656,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverload","ranges":[{"startOffset":10675,"endOffset":10694,"count":0}],"isBlockCoverage":false},{"functionName":"bundlerModuleNameResolver","ranges":[{"startOffset":10725,"endOffset":10756,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToAsync","ranges":[{"startOffset":10783,"endOffset":10810,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveDecorators","ranges":[{"startOffset":10833,"endOffset":10856,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveExportModifier","ranges":[{"startOffset":10883,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveFlowNode","ranges":[{"startOffset":10931,"endOffset":10952,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalDecorators","ranges":[{"startOffset":10982,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalModifiers","ranges":[{"startOffset":11041,"endOffset":11070,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalType","ranges":[{"startOffset":11094,"endOffset":11118,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalTypeParameters","ranges":[{"startOffset":11152,"endOffset":11186,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveJSDoc","ranges":[{"startOffset":11204,"endOffset":11222,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLocals","ranges":[{"startOffset":11241,"endOffset":11260,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModifiers","ranges":[{"startOffset":11282,"endOffset":11304,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModuleSpecifier","ranges":[{"startOffset":11332,"endOffset":11360,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveSymbol","ranges":[{"startOffset":11379,"endOffset":11398,"count":0}],"isBlockCoverage":false},{"functionName":"canIncludeBindAndCheckDiagnostics","ranges":[{"startOffset":11437,"endOffset":11476,"count":0}],"isBlockCoverage":false},{"functionName":"canJsonReportNoInputFiles","ranges":[{"startOffset":11507,"endOffset":11538,"count":0}],"isBlockCoverage":false},{"functionName":"canProduceDiagnostics","ranges":[{"startOffset":11565,"endOffset":11592,"count":0}],"isBlockCoverage":false},{"functionName":"canUsePropertyAccess","ranges":[{"startOffset":11618,"endOffset":11644,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectingLocation","ranges":[{"startOffset":11675,"endOffset":11706,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAtTypes","ranges":[{"startOffset":11727,"endOffset":11748,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFile","ranges":[{"startOffset":11777,"endOffset":11806,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFilePath","ranges":[{"startOffset":11839,"endOffset":11872,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProduct","ranges":[{"startOffset":11894,"endOffset":11916,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":11926,"endOffset":11936,"count":0}],"isBlockCoverage":false},{"functionName":"chainBundle","ranges":[{"startOffset":11953,"endOffset":11970,"count":0}],"isBlockCoverage":false},{"functionName":"chainDiagnosticMessages","ranges":[{"startOffset":11999,"endOffset":12028,"count":0}],"isBlockCoverage":false},{"functionName":"changeAnyExtension","ranges":[{"startOffset":12052,"endOffset":12076,"count":0}],"isBlockCoverage":false},{"functionName":"changeCompilerHostLikeToUseCache","ranges":[{"startOffset":12114,"endOffset":12152,"count":0}],"isBlockCoverage":false},{"functionName":"changeExtension","ranges":[{"startOffset":12173,"endOffset":12194,"count":0}],"isBlockCoverage":false},{"functionName":"changeFullExtension","ranges":[{"startOffset":12219,"endOffset":12244,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectModuleResolution","ranges":[{"startOffset":12279,"endOffset":12314,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectingProgramStructure","ranges":[{"startOffset":12352,"endOffset":12390,"count":0}],"isBlockCoverage":false},{"functionName":"characterCodeToRegularExpressionFlag","ranges":[{"startOffset":12432,"endOffset":12474,"count":0}],"isBlockCoverage":false},{"functionName":"childIsDecorated","ranges":[{"startOffset":12496,"endOffset":12518,"count":0}],"isBlockCoverage":false},{"functionName":"classElementOrClassElementParameterIsDecorated","ranges":[{"startOffset":12570,"endOffset":12622,"count":0}],"isBlockCoverage":false},{"functionName":"classHasClassThisAssignment","ranges":[{"startOffset":12655,"endOffset":12688,"count":0}],"isBlockCoverage":false},{"functionName":"classHasDeclaredOrExplicitlyAssignedName","ranges":[{"startOffset":12734,"endOffset":12780,"count":0}],"isBlockCoverage":false},{"functionName":"classHasExplicitlyAssignedName","ranges":[{"startOffset":12816,"endOffset":12852,"count":0}],"isBlockCoverage":false},{"functionName":"classOrConstructorParameterIsDecorated","ranges":[{"startOffset":12896,"endOffset":12940,"count":0}],"isBlockCoverage":false},{"functionName":"classicNameResolver","ranges":[{"startOffset":12965,"endOffset":12990,"count":0}],"isBlockCoverage":false},{"functionName":"classifier","ranges":[{"startOffset":13006,"endOffset":13033,"count":0}],"isBlockCoverage":false},{"functionName":"cleanExtendedConfigCache","ranges":[{"startOffset":13063,"endOffset":13093,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":13104,"endOffset":13115,"count":0}],"isBlockCoverage":false},{"functionName":"clearMap","ranges":[{"startOffset":13129,"endOffset":13143,"count":0}],"isBlockCoverage":false},{"functionName":"clearSharedExtendedConfigFileWatcher","ranges":[{"startOffset":13185,"endOffset":13227,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyAccess","ranges":[{"startOffset":13256,"endOffset":13285,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":13296,"endOffset":13307,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCompilerOptions","ranges":[{"startOffset":13333,"endOffset":13359,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcher","ranges":[{"startOffset":13381,"endOffset":13403,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcherOf","ranges":[{"startOffset":13427,"endOffset":13451,"count":0}],"isBlockCoverage":false},{"functionName":"codefix","ranges":[{"startOffset":13464,"endOffset":13488,"count":0}],"isBlockCoverage":false},{"functionName":"collapseTextChangeRangesAcrossMultipleVersions","ranges":[{"startOffset":13540,"endOffset":13592,"count":0}],"isBlockCoverage":false},{"functionName":"collectExternalModuleInfo","ranges":[{"startOffset":13623,"endOffset":13654,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":13667,"endOffset":13680,"count":0}],"isBlockCoverage":false},{"functionName":"combinePaths","ranges":[{"startOffset":13698,"endOffset":13716,"count":0}],"isBlockCoverage":false},{"functionName":"commandLineOptionOfCustomType","ranges":[{"startOffset":13751,"endOffset":13786,"count":0}],"isBlockCoverage":false},{"functionName":"commentPragmas","ranges":[{"startOffset":13806,"endOffset":13826,"count":0}],"isBlockCoverage":false},{"functionName":"commonOptionsWithBuild","ranges":[{"startOffset":13854,"endOffset":13882,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":13895,"endOffset":13908,"count":0}],"isBlockCoverage":false},{"functionName":"compareBooleans","ranges":[{"startOffset":13929,"endOffset":13950,"count":0}],"isBlockCoverage":false},{"functionName":"compareDataObjects","ranges":[{"startOffset":13974,"endOffset":13998,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnostics","ranges":[{"startOffset":14022,"endOffset":14046,"count":0}],"isBlockCoverage":false},{"functionName":"compareEmitHelpers","ranges":[{"startOffset":14070,"endOffset":14094,"count":0}],"isBlockCoverage":false},{"functionName":"compareNumberOfDirectorySeparators","ranges":[{"startOffset":14134,"endOffset":14174,"count":0}],"isBlockCoverage":false},{"functionName":"comparePaths","ranges":[{"startOffset":14192,"endOffset":14210,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseInsensitive","ranges":[{"startOffset":14243,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseSensitive","ranges":[{"startOffset":14307,"endOffset":14338,"count":0}],"isBlockCoverage":false},{"functionName":"comparePatternKeys","ranges":[{"startOffset":14362,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"compareProperties","ranges":[{"startOffset":14409,"endOffset":14432,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitive","ranges":[{"startOffset":14467,"endOffset":14502,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitiveEslintCompatible","ranges":[{"startOffset":14553,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitive","ranges":[{"startOffset":14637,"endOffset":14670,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitiveUI","ranges":[{"startOffset":14705,"endOffset":14740,"count":0}],"isBlockCoverage":false},{"functionName":"compareTextSpans","ranges":[{"startOffset":14762,"endOffset":14784,"count":0}],"isBlockCoverage":false},{"functionName":"compareValues","ranges":[{"startOffset":14803,"endOffset":14822,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectDeclarationPath","ranges":[{"startOffset":14864,"endOffset":14906,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectEmit","ranges":[{"startOffset":14937,"endOffset":14968,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectSemanticDiagnostics","ranges":[{"startOffset":15014,"endOffset":15060,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsDidYouMeanDiagnostics","ranges":[{"startOffset":15102,"endOffset":15144,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsIndicateEsModules","ranges":[{"startOffset":15182,"endOffset":15220,"count":0}],"isBlockCoverage":false},{"functionName":"computeCommonSourceDirectoryOfFilenames","ranges":[{"startOffset":15265,"endOffset":15310,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineAndCharacterOfPosition","ranges":[{"startOffset":15349,"endOffset":15388,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineOfPosition","ranges":[{"startOffset":15415,"endOffset":15442,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineStarts","ranges":[{"startOffset":15465,"endOffset":15488,"count":0}],"isBlockCoverage":false},{"functionName":"computePositionOfLineAndCharacter","ranges":[{"startOffset":15527,"endOffset":15566,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignatureWithDiagnostics","ranges":[{"startOffset":15603,"endOffset":15640,"count":0}],"isBlockCoverage":false},{"functionName":"computeSuggestionDiagnostics","ranges":[{"startOffset":15674,"endOffset":15708,"count":0}],"isBlockCoverage":false},{"functionName":"computedOptions","ranges":[{"startOffset":15729,"endOffset":15750,"count":0}],"isBlockCoverage":false},{"functionName":"concatenate","ranges":[{"startOffset":15767,"endOffset":15784,"count":0}],"isBlockCoverage":false},{"functionName":"concatenateDiagnosticMessageChains","ranges":[{"startOffset":15824,"endOffset":15864,"count":0}],"isBlockCoverage":false},{"functionName":"consumesNodeCoreModules","ranges":[{"startOffset":15893,"endOffset":15922,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":15936,"endOffset":15950,"count":0}],"isBlockCoverage":false},{"functionName":"containsIgnoredPath","ranges":[{"startOffset":15975,"endOffset":16000,"count":0}],"isBlockCoverage":false},{"functionName":"containsObjectRestOrSpread","ranges":[{"startOffset":16032,"endOffset":16064,"count":0}],"isBlockCoverage":false},{"functionName":"containsParseError","ranges":[{"startOffset":16088,"endOffset":16112,"count":0}],"isBlockCoverage":false},{"functionName":"containsPath","ranges":[{"startOffset":16130,"endOffset":16148,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsForTelemetry","ranges":[{"startOffset":16188,"endOffset":16228,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsFromJson","ranges":[{"startOffset":16264,"endOffset":16300,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOption","ranges":[{"startOffset":16323,"endOffset":16346,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBase64","ranges":[{"startOffset":16367,"endOffset":16388,"count":0}],"isBlockCoverage":false},{"functionName":"convertToJson","ranges":[{"startOffset":16407,"endOffset":16426,"count":0}],"isBlockCoverage":false},{"functionName":"convertToObject","ranges":[{"startOffset":16447,"endOffset":16468,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionsWithAbsolutePaths","ranges":[{"startOffset":16507,"endOffset":16546,"count":0}],"isBlockCoverage":false},{"functionName":"convertToRelativePath","ranges":[{"startOffset":16573,"endOffset":16600,"count":0}],"isBlockCoverage":false},{"functionName":"convertToTSConfig","ranges":[{"startOffset":16623,"endOffset":16646,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisitionFromJson","ranges":[{"startOffset":16682,"endOffset":16718,"count":0}],"isBlockCoverage":false},{"functionName":"copyComments","ranges":[{"startOffset":16736,"endOffset":16754,"count":0}],"isBlockCoverage":false},{"functionName":"copyEntries","ranges":[{"startOffset":16771,"endOffset":16788,"count":0}],"isBlockCoverage":false},{"functionName":"copyLeadingComments","ranges":[{"startOffset":16813,"endOffset":16838,"count":0}],"isBlockCoverage":false},{"functionName":"copyProperties","ranges":[{"startOffset":16858,"endOffset":16878,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingAsLeadingComments","ranges":[{"startOffset":16913,"endOffset":16948,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingComments","ranges":[{"startOffset":16974,"endOffset":17000,"count":0}],"isBlockCoverage":false},{"functionName":"couldStartTrivia","ranges":[{"startOffset":17022,"endOffset":17044,"count":0}],"isBlockCoverage":false},{"functionName":"countWhere","ranges":[{"startOffset":17060,"endOffset":17076,"count":0}],"isBlockCoverage":false},{"functionName":"createAbstractBuilder","ranges":[{"startOffset":17103,"endOffset":17130,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyBackingField","ranges":[{"startOffset":17170,"endOffset":17210,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyGetRedirector","ranges":[{"startOffset":17251,"endOffset":17292,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertySetRedirector","ranges":[{"startOffset":17333,"endOffset":17374,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNodeFactory","ranges":[{"startOffset":17401,"endOffset":17428,"count":0}],"isBlockCoverage":false},{"functionName":"createBinaryExpressionTrampoline","ranges":[{"startOffset":17466,"endOffset":17504,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgram","ranges":[{"startOffset":17530,"endOffset":17556,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramUsingIncrementalBuildInfo","ranges":[{"startOffset":17607,"endOffset":17658,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderStatusReporter","ranges":[{"startOffset":17691,"endOffset":17724,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheableExportInfoMap","ranges":[{"startOffset":17758,"endOffset":17792,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDirectoryStructureHost","ranges":[{"startOffset":17832,"endOffset":17872,"count":0}],"isBlockCoverage":false},{"functionName":"createClassifier","ranges":[{"startOffset":17894,"endOffset":17916,"count":0}],"isBlockCoverage":false},{"functionName":"createCommentDirectivesMap","ranges":[{"startOffset":17948,"endOffset":17980,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnostic","ranges":[{"startOffset":18010,"endOffset":18040,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticForInvalidCustomType","ranges":[{"startOffset":18090,"endOffset":18140,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticFromMessageChain","ranges":[{"startOffset":18186,"endOffset":18232,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHost","ranges":[{"startOffset":18256,"endOffset":18280,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostFromProgramHost","ranges":[{"startOffset":18319,"endOffset":18358,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostWorker","ranges":[{"startOffset":18388,"endOffset":18418,"count":0}],"isBlockCoverage":false},{"functionName":"createDetachedDiagnostic","ranges":[{"startOffset":18448,"endOffset":18478,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticCollection","ranges":[{"startOffset":18510,"endOffset":18542,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForFileFromMessageChain","ranges":[{"startOffset":18587,"endOffset":18632,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNode","ranges":[{"startOffset":18661,"endOffset":18690,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArray","ranges":[{"startOffset":18724,"endOffset":18758,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArrayFromMessageChain","ranges":[{"startOffset":18808,"endOffset":18858,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeFromMessageChain","ranges":[{"startOffset":18903,"endOffset":18948,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeInSourceFile","ranges":[{"startOffset":18989,"endOffset":19030,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForRange","ranges":[{"startOffset":19060,"endOffset":19090,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticMessageChainFromDiagnostic","ranges":[{"startOffset":19138,"endOffset":19186,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticReporter","ranges":[{"startOffset":19216,"endOffset":19246,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentPositionMapper","ranges":[{"startOffset":19280,"endOffset":19314,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistry","ranges":[{"startOffset":19342,"endOffset":19370,"count":1}],"isBlockCoverage":true},{"functionName":"createDocumentRegistryInternal","ranges":[{"startOffset":19406,"endOffset":19442,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitAndSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":19494,"endOffset":19546,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitHelperFactory","ranges":[{"startOffset":19575,"endOffset":19604,"count":0}],"isBlockCoverage":false},{"functionName":"createEmptyExports","ranges":[{"startOffset":19628,"endOffset":19652,"count":0}],"isBlockCoverage":false},{"functionName":"createEvaluator","ranges":[{"startOffset":19673,"endOffset":19694,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxElement","ranges":[{"startOffset":19729,"endOffset":19764,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxFragment","ranges":[{"startOffset":19800,"endOffset":19836,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForObjectLiteralElementLike","ranges":[{"startOffset":19885,"endOffset":19934,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyName","ranges":[{"startOffset":19971,"endOffset":20008,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionFromEntityName","ranges":[{"startOffset":20044,"endOffset":20080,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalHelpersImportDeclarationIfNeeded","ranges":[{"startOffset":20132,"endOffset":20184,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnostic","ranges":[{"startOffset":20210,"endOffset":20236,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnosticFromMessageChain","ranges":[{"startOffset":20278,"endOffset":20320,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowNode","ranges":[{"startOffset":20340,"endOffset":20360,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfBindingStatement","ranges":[{"startOffset":20393,"endOffset":20426,"count":0}],"isBlockCoverage":false},{"functionName":"createFutureSourceFile","ranges":[{"startOffset":20454,"endOffset":20482,"count":0}],"isBlockCoverage":false},{"functionName":"createGetCanonicalFileName","ranges":[{"startOffset":20514,"endOffset":20546,"count":1}],"isBlockCoverage":true},{"functionName":"createGetIsolatedDeclarationErrors","ranges":[{"startOffset":20586,"endOffset":20626,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSourceFile","ranges":[{"startOffset":20651,"endOffset":20676,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNode","ranges":[{"startOffset":20727,"endOffset":20778,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNodeName","ranges":[{"startOffset":20833,"endOffset":20888,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolWalker","ranges":[{"startOffset":20915,"endOffset":20942,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalCompilerHost","ranges":[{"startOffset":20977,"endOffset":21012,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalProgram","ranges":[{"startOffset":21042,"endOffset":21072,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpression","ranges":[{"startOffset":21104,"endOffset":21136,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageService","ranges":[{"startOffset":21163,"endOffset":21190,"count":1}],"isBlockCoverage":true},{"functionName":"createLanguageServiceSourceFile","ranges":[{"startOffset":21227,"endOffset":21264,"count":0}],"isBlockCoverage":false},{"functionName":"createMemberAccessForPropertyName","ranges":[{"startOffset":21303,"endOffset":21342,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCache","ranges":[{"startOffset":21368,"endOffset":21394,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCacheKey","ranges":[{"startOffset":21423,"endOffset":21452,"count":0}],"isBlockCoverage":false},{"functionName":"createModeMismatchDetails","ranges":[{"startOffset":21483,"endOffset":21514,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleNotFoundChain","ranges":[{"startOffset":21545,"endOffset":21576,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionCache","ranges":[{"startOffset":21609,"endOffset":21642,"count":1}],"isBlockCoverage":true},{"functionName":"createModuleResolutionLoader","ranges":[{"startOffset":21676,"endOffset":21710,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoaderUsingGlobalCache","ranges":[{"startOffset":21760,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierResolutionHost","ranges":[{"startOffset":21851,"endOffset":21892,"count":0}],"isBlockCoverage":false},{"functionName":"createMultiMap","ranges":[{"startOffset":21912,"endOffset":21932,"count":0}],"isBlockCoverage":false},{"functionName":"createNameResolver","ranges":[{"startOffset":21956,"endOffset":21980,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeConverters","ranges":[{"startOffset":22006,"endOffset":22032,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeFactory","ranges":[{"startOffset":22055,"endOffset":22078,"count":0}],"isBlockCoverage":false},{"functionName":"createOptionNameMap","ranges":[{"startOffset":22103,"endOffset":22128,"count":0}],"isBlockCoverage":false},{"functionName":"createOverload","ranges":[{"startOffset":22148,"endOffset":22168,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonImportFilter","ranges":[{"startOffset":22203,"endOffset":22238,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfo","ranges":[{"startOffset":22265,"endOffset":22292,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizerRules","ranges":[{"startOffset":22322,"endOffset":22352,"count":0}],"isBlockCoverage":false},{"functionName":"createPatternMatcher","ranges":[{"startOffset":22378,"endOffset":22404,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinter","ranges":[{"startOffset":22423,"endOffset":22442,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithDefaults","ranges":[{"startOffset":22473,"endOffset":22504,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveComments","ranges":[{"startOffset":22541,"endOffset":22578,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsNeverAsciiEscape","ranges":[{"startOffset":22631,"endOffset":22684,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsOmitTrailingSemicolon","ranges":[{"startOffset":22742,"endOffset":22800,"count":0}],"isBlockCoverage":false},{"functionName":"createProgram","ranges":[{"startOffset":22819,"endOffset":22838,"count":5}],"isBlockCoverage":true},{"functionName":"createProgramDiagnostics","ranges":[{"startOffset":22868,"endOffset":22898,"count":0}],"isBlockCoverage":false},{"functionName":"createProgramHost","ranges":[{"startOffset":22921,"endOffset":22944,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameNodeForIdentifierOrLiteral","ranges":[{"startOffset":22994,"endOffset":23044,"count":0}],"isBlockCoverage":false},{"functionName":"createQueue","ranges":[{"startOffset":23061,"endOffset":23078,"count":0}],"isBlockCoverage":false},{"functionName":"createRange","ranges":[{"startOffset":23095,"endOffset":23112,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectedBuilderProgram","ranges":[{"startOffset":23148,"endOffset":23184,"count":0}],"isBlockCoverage":false},{"functionName":"createResolutionCache","ranges":[{"startOffset":23211,"endOffset":23238,"count":0}],"isBlockCoverage":false},{"functionName":"createRuntimeTypeSerializer","ranges":[{"startOffset":23271,"endOffset":23304,"count":0}],"isBlockCoverage":false},{"functionName":"createScanner","ranges":[{"startOffset":23323,"endOffset":23342,"count":0}],"isBlockCoverage":false},{"functionName":"createSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":23387,"endOffset":23432,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":23447,"endOffset":23462,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilder","ranges":[{"startOffset":23489,"endOffset":23516,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHost","ranges":[{"startOffset":23547,"endOffset":23578,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatch","ranges":[{"startOffset":23614,"endOffset":23650,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatchHost","ranges":[{"startOffset":23690,"endOffset":23730,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":23753,"endOffset":23776,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile","ranges":[{"startOffset":23798,"endOffset":23820,"count":5}],"isBlockCoverage":true},{"functionName":"createSourceMapGenerator","ranges":[{"startOffset":23850,"endOffset":23880,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapSource","ranges":[{"startOffset":23907,"endOffset":23934,"count":0}],"isBlockCoverage":false},{"functionName":"createSuperAccessVariableStatement","ranges":[{"startOffset":23974,"endOffset":24014,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbolTable","ranges":[{"startOffset":24037,"endOffset":24060,"count":0}],"isBlockCoverage":false},{"functionName":"createSymlinkCache","ranges":[{"startOffset":24084,"endOffset":24108,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntacticTypeNodeBuilder","ranges":[{"startOffset":24144,"endOffset":24180,"count":0}],"isBlockCoverage":false},{"functionName":"createSystemWatchFunctions","ranges":[{"startOffset":24212,"endOffset":24244,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChange","ranges":[{"startOffset":24266,"endOffset":24288,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeFromStartLength","ranges":[{"startOffset":24325,"endOffset":24362,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeRange","ranges":[{"startOffset":24389,"endOffset":24416,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromNode","ranges":[{"startOffset":24445,"endOffset":24474,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromSpan","ranges":[{"startOffset":24503,"endOffset":24532,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpan","ranges":[{"startOffset":24552,"endOffset":24572,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromBounds","ranges":[{"startOffset":24602,"endOffset":24632,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromNode","ranges":[{"startOffset":24660,"endOffset":24688,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromRange","ranges":[{"startOffset":24717,"endOffset":24746,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromStringLiteralLikeContent","ranges":[{"startOffset":24794,"endOffset":24842,"count":0}],"isBlockCoverage":false},{"functionName":"createTextWriter","ranges":[{"startOffset":24864,"endOffset":24886,"count":0}],"isBlockCoverage":false},{"functionName":"createTokenRange","ranges":[{"startOffset":24908,"endOffset":24930,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeChecker","ranges":[{"startOffset":24953,"endOffset":24976,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceDirectiveResolutionCache","ranges":[{"startOffset":25025,"endOffset":25074,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceResolutionLoader","ranges":[{"startOffset":25115,"endOffset":25156,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost","ranges":[{"startOffset":25185,"endOffset":25215,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfConfigFile","ranges":[{"startOffset":25256,"endOffset":25297,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfFilesAndCompilerOptions","ranges":[{"startOffset":25351,"endOffset":25405,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactory","ranges":[{"startOffset":25429,"endOffset":25453,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchHost","ranges":[{"startOffset":25474,"endOffset":25495,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchProgram","ranges":[{"startOffset":25519,"endOffset":25543,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchStatusReporter","ranges":[{"startOffset":25574,"endOffset":25605,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteFileMeasuringIO","ranges":[{"startOffset":25637,"endOffset":25669,"count":0}],"isBlockCoverage":false},{"functionName":"declarationNameToString","ranges":[{"startOffset":25698,"endOffset":25727,"count":0}],"isBlockCoverage":false},{"functionName":"decodeMappings","ranges":[{"startOffset":25747,"endOffset":25767,"count":0}],"isBlockCoverage":false},{"functionName":"decodedTextSpanIntersectsWith","ranges":[{"startOffset":25802,"endOffset":25837,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicate","ranges":[{"startOffset":25854,"endOffset":25871,"count":0}],"isBlockCoverage":false},{"functionName":"defaultInitCompilerOptions","ranges":[{"startOffset":25903,"endOffset":25935,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMaximumTruncationLength","ranges":[{"startOffset":25971,"endOffset":26007,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticCategoryName","ranges":[{"startOffset":26035,"endOffset":26063,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticToString","ranges":[{"startOffset":26087,"endOffset":26111,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticsEqualityComparer","ranges":[{"startOffset":26144,"endOffset":26177,"count":0}],"isBlockCoverage":false},{"functionName":"directoryProbablyExists","ranges":[{"startOffset":26206,"endOffset":26235,"count":0}],"isBlockCoverage":false},{"functionName":"directorySeparator","ranges":[{"startOffset":26259,"endOffset":26283,"count":0}],"isBlockCoverage":false},{"functionName":"displayPart","ranges":[{"startOffset":26300,"endOffset":26317,"count":0}],"isBlockCoverage":false},{"functionName":"displayPartsToString","ranges":[{"startOffset":26343,"endOffset":26369,"count":0}],"isBlockCoverage":false},{"functionName":"disposeEmitNodes","ranges":[{"startOffset":26391,"endOffset":26413,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpansEqual","ranges":[{"startOffset":26437,"endOffset":26461,"count":0}],"isBlockCoverage":false},{"functionName":"dumpTracingLegend","ranges":[{"startOffset":26484,"endOffset":26507,"count":0}],"isBlockCoverage":false},{"functionName":"elementAt","ranges":[{"startOffset":26522,"endOffset":26537,"count":0}],"isBlockCoverage":false},{"functionName":"elideNodes","ranges":[{"startOffset":26553,"endOffset":26569,"count":0}],"isBlockCoverage":false},{"functionName":"emitDetachedComments","ranges":[{"startOffset":26595,"endOffset":26621,"count":0}],"isBlockCoverage":false},{"functionName":"emitFiles","ranges":[{"startOffset":26636,"endOffset":26651,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrors","ranges":[{"startOffset":26681,"endOffset":26711,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrorsAndGetExitStatus","ranges":[{"startOffset":26757,"endOffset":26803,"count":0}],"isBlockCoverage":false},{"functionName":"emitModuleKindIsNonNodeESM","ranges":[{"startOffset":26835,"endOffset":26867,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentOfPosition","ranges":[{"startOffset":26914,"endOffset":26961,"count":0}],"isBlockCoverage":false},{"functionName":"emitResolverSkipsTypeChecking","ranges":[{"startOffset":26996,"endOffset":27031,"count":0}],"isBlockCoverage":false},{"functionName":"emitSkippedWithNoDiagnostics","ranges":[{"startOffset":27065,"endOffset":27099,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":27115,"endOffset":27131,"count":0}],"isBlockCoverage":false},{"functionName":"emptyFileSystemEntries","ranges":[{"startOffset":27159,"endOffset":27187,"count":0}],"isBlockCoverage":false},{"functionName":"emptyMap","ranges":[{"startOffset":27201,"endOffset":27215,"count":0}],"isBlockCoverage":false},{"functionName":"emptyOptions","ranges":[{"startOffset":27233,"endOffset":27251,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":27265,"endOffset":27279,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePathIsNonModuleName","ranges":[{"startOffset":27310,"endOffset":27341,"count":0}],"isBlockCoverage":false},{"functionName":"ensureScriptKind","ranges":[{"startOffset":27363,"endOffset":27385,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":27423,"endOffset":27461,"count":0}],"isBlockCoverage":false},{"functionName":"entityNameToString","ranges":[{"startOffset":27485,"endOffset":27509,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateInsertsAndDeletes","ranges":[{"startOffset":27541,"endOffset":27573,"count":0}],"isBlockCoverage":false},{"functionName":"equalOwnProperties","ranges":[{"startOffset":27597,"endOffset":27621,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseInsensitive","ranges":[{"startOffset":27655,"endOffset":27689,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseSensitive","ranges":[{"startOffset":27721,"endOffset":27753,"count":0}],"isBlockCoverage":false},{"functionName":"equateValues","ranges":[{"startOffset":27771,"endOffset":27789,"count":0}],"isBlockCoverage":false},{"functionName":"escapeJsxAttributeString","ranges":[{"startOffset":27819,"endOffset":27849,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLeadingUnderscores","ranges":[{"startOffset":27879,"endOffset":27909,"count":0}],"isBlockCoverage":false},{"functionName":"escapeNonAsciiString","ranges":[{"startOffset":27935,"endOffset":27961,"count":0}],"isBlockCoverage":false},{"functionName":"escapeSnippetText","ranges":[{"startOffset":27984,"endOffset":28007,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":28025,"endOffset":28043,"count":0}],"isBlockCoverage":false},{"functionName":"escapeTemplateSubstitution","ranges":[{"startOffset":28075,"endOffset":28107,"count":0}],"isBlockCoverage":false},{"functionName":"evaluatorResult","ranges":[{"startOffset":28128,"endOffset":28149,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":28160,"endOffset":28171,"count":0}],"isBlockCoverage":false},{"functionName":"exclusivelyPrefixedNodeCoreModules","ranges":[{"startOffset":28211,"endOffset":28251,"count":0}],"isBlockCoverage":false},{"functionName":"executeCommandLine","ranges":[{"startOffset":28275,"endOffset":28299,"count":0}],"isBlockCoverage":false},{"functionName":"expandPreOrPostfixIncrementOrDecrementExpression","ranges":[{"startOffset":28353,"endOffset":28407,"count":0}],"isBlockCoverage":false},{"functionName":"explainFiles","ranges":[{"startOffset":28425,"endOffset":28443,"count":0}],"isBlockCoverage":false},{"functionName":"explainIfFileIsRedirectAndImpliedFormat","ranges":[{"startOffset":28488,"endOffset":28533,"count":0}],"isBlockCoverage":false},{"functionName":"exportAssignmentIsAlias","ranges":[{"startOffset":28562,"endOffset":28591,"count":0}],"isBlockCoverage":false},{"functionName":"expressionResultIsUnused","ranges":[{"startOffset":28621,"endOffset":28651,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":28663,"endOffset":28675,"count":0}],"isBlockCoverage":false},{"functionName":"extensionFromPath","ranges":[{"startOffset":28698,"endOffset":28721,"count":0}],"isBlockCoverage":false},{"functionName":"extensionIsTS","ranges":[{"startOffset":28740,"endOffset":28759,"count":0}],"isBlockCoverage":false},{"functionName":"extensionsNotSupportingExtensionlessResolution","ranges":[{"startOffset":28811,"endOffset":28863,"count":0}],"isBlockCoverage":false},{"functionName":"externalHelpersModuleNameText","ranges":[{"startOffset":28898,"endOffset":28933,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":28946,"endOffset":28959,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIs","ranges":[{"startOffset":28980,"endOffset":29001,"count":5}],"isBlockCoverage":true},{"functionName":"fileExtensionIsOneOf","ranges":[{"startOffset":29027,"endOffset":29053,"count":0}],"isBlockCoverage":false},{"functionName":"fileIncludeReasonToDiagnostics","ranges":[{"startOffset":29089,"endOffset":29125,"count":0}],"isBlockCoverage":false},{"functionName":"fileShouldUseJavaScriptRequire","ranges":[{"startOffset":29161,"endOffset":29197,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":29209,"endOffset":29221,"count":0}],"isBlockCoverage":false},{"functionName":"filterMutate","ranges":[{"startOffset":29239,"endOffset":29257,"count":0}],"isBlockCoverage":false},{"functionName":"filterSemanticDiagnostics","ranges":[{"startOffset":29288,"endOffset":29319,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":29329,"endOffset":29339,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestor","ranges":[{"startOffset":29357,"endOffset":29375,"count":0}],"isBlockCoverage":false},{"functionName":"findBestPatternMatch","ranges":[{"startOffset":29401,"endOffset":29427,"count":0}],"isBlockCoverage":false},{"functionName":"findChildOfKind","ranges":[{"startOffset":29448,"endOffset":29469,"count":0}],"isBlockCoverage":false},{"functionName":"findComputedPropertyNameCacheAssignment","ranges":[{"startOffset":29514,"endOffset":29559,"count":0}],"isBlockCoverage":false},{"functionName":"findConfigFile","ranges":[{"startOffset":29579,"endOffset":29599,"count":1}],"isBlockCoverage":true},{"functionName":"findConstructorDeclaration","ranges":[{"startOffset":29631,"endOffset":29663,"count":0}],"isBlockCoverage":false},{"functionName":"findContainingList","ranges":[{"startOffset":29687,"endOffset":29711,"count":0}],"isBlockCoverage":false},{"functionName":"findDiagnosticForNode","ranges":[{"startOffset":29738,"endOffset":29765,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonJsxWhitespaceToken","ranges":[{"startOffset":29801,"endOffset":29837,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":29852,"endOffset":29867,"count":0}],"isBlockCoverage":false},{"functionName":"findLast","ranges":[{"startOffset":29881,"endOffset":29895,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":29914,"endOffset":29933,"count":0}],"isBlockCoverage":false},{"functionName":"findListItemInfo","ranges":[{"startOffset":29955,"endOffset":29977,"count":0}],"isBlockCoverage":false},{"functionName":"findModifier","ranges":[{"startOffset":29995,"endOffset":30013,"count":0}],"isBlockCoverage":false},{"functionName":"findNextToken","ranges":[{"startOffset":30032,"endOffset":30051,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJson","ranges":[{"startOffset":30072,"endOffset":30093,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJsons","ranges":[{"startOffset":30115,"endOffset":30137,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingMatchingToken","ranges":[{"startOffset":30169,"endOffset":30201,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingToken","ranges":[{"startOffset":30225,"endOffset":30249,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPath","ranges":[{"startOffset":30282,"endOffset":30315,"count":0}],"isBlockCoverage":false},{"functionName":"findTokenOnLeftOfPosition","ranges":[{"startOffset":30346,"endOffset":30377,"count":0}],"isBlockCoverage":false},{"functionName":"findUseStrictPrologue","ranges":[{"startOffset":30404,"endOffset":30431,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":30442,"endOffset":30453,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefined","ranges":[{"startOffset":30471,"endOffset":30489,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefinedIterator","ranges":[{"startOffset":30515,"endOffset":30541,"count":0}],"isBlockCoverage":false},{"functionName":"firstIterator","ranges":[{"startOffset":30560,"endOffset":30579,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrOnly","ranges":[{"startOffset":30596,"endOffset":30613,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefined","ranges":[{"startOffset":30635,"endOffset":30657,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefinedIterator","ranges":[{"startOffset":30687,"endOffset":30717,"count":0}],"isBlockCoverage":false},{"functionName":"fixupCompilerOptions","ranges":[{"startOffset":30743,"endOffset":30769,"count":5}],"isBlockCoverage":true},{"functionName":"flatMap","ranges":[{"startOffset":30782,"endOffset":30795,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapIterator","ranges":[{"startOffset":30816,"endOffset":30837,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapToMutable","ranges":[{"startOffset":30859,"endOffset":30881,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":30894,"endOffset":30907,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaList","ranges":[{"startOffset":30929,"endOffset":30951,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringAssignment","ranges":[{"startOffset":30987,"endOffset":31023,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringBinding","ranges":[{"startOffset":31056,"endOffset":31089,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDiagnosticMessageText","ranges":[{"startOffset":31123,"endOffset":31157,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":31170,"endOffset":31183,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestor","ranges":[{"startOffset":31204,"endOffset":31225,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectory","ranges":[{"startOffset":31255,"endOffset":31285,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectoryStoppingAtGlobalCache","ranges":[{"startOffset":31336,"endOffset":31387,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":31405,"endOffset":31423,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildRecursively","ranges":[{"startOffset":31452,"endOffset":31481,"count":0}],"isBlockCoverage":false},{"functionName":"forEachDynamicImportOrRequireCall","ranges":[{"startOffset":31520,"endOffset":31559,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEmittedFile","ranges":[{"startOffset":31583,"endOffset":31607,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnclosingBlockScopeContainer","ranges":[{"startOffset":31648,"endOffset":31689,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEntry","ranges":[{"startOffset":31707,"endOffset":31725,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModuleToImportFrom","ranges":[{"startOffset":31764,"endOffset":31803,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportClauseDeclaration","ranges":[{"startOffset":31839,"endOffset":31875,"count":0}],"isBlockCoverage":false},{"functionName":"forEachKey","ranges":[{"startOffset":31891,"endOffset":31907,"count":0}],"isBlockCoverage":false},{"functionName":"forEachLeadingCommentRange","ranges":[{"startOffset":31939,"endOffset":31971,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameInAccessChainWalkingLeft","ranges":[{"startOffset":32012,"endOffset":32053,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameOfDefaultExport","ranges":[{"startOffset":32085,"endOffset":32117,"count":0}],"isBlockCoverage":false},{"functionName":"forEachOptionsSyntaxByName","ranges":[{"startOffset":32149,"endOffset":32181,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProjectReference","ranges":[{"startOffset":32210,"endOffset":32239,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPropertyAssignment","ranges":[{"startOffset":32270,"endOffset":32301,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":32338,"endOffset":32375,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReturnStatement","ranges":[{"startOffset":32403,"endOffset":32431,"count":0}],"isBlockCoverage":false},{"functionName":"forEachRight","ranges":[{"startOffset":32449,"endOffset":32467,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTrailingCommentRange","ranges":[{"startOffset":32500,"endOffset":32533,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTsConfigPropArray","ranges":[{"startOffset":32563,"endOffset":32593,"count":0}],"isBlockCoverage":false},{"functionName":"forEachUnique","ranges":[{"startOffset":32612,"endOffset":32631,"count":0}],"isBlockCoverage":false},{"functionName":"forEachYieldExpression","ranges":[{"startOffset":32659,"endOffset":32687,"count":0}],"isBlockCoverage":false},{"functionName":"formatColorAndReset","ranges":[{"startOffset":32712,"endOffset":32737,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostic","ranges":[{"startOffset":32759,"endOffset":32781,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostics","ranges":[{"startOffset":32804,"endOffset":32827,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticsWithColorAndContext","ranges":[{"startOffset":32869,"endOffset":32911,"count":1}],"isBlockCoverage":true},{"functionName":"formatGeneratedName","ranges":[{"startOffset":32936,"endOffset":32961,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedNamePart","ranges":[{"startOffset":32990,"endOffset":33019,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":33039,"endOffset":33059,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":33078,"endOffset":33097,"count":0}],"isBlockCoverage":false},{"functionName":"formatStringFromArgs","ranges":[{"startOffset":33123,"endOffset":33149,"count":0}],"isBlockCoverage":false},{"functionName":"formatting","ranges":[{"startOffset":33165,"endOffset":33192,"count":0}],"isBlockCoverage":false},{"functionName":"generateDjb2Hash","ranges":[{"startOffset":33214,"endOffset":33236,"count":0}],"isBlockCoverage":false},{"functionName":"generateTSConfig","ranges":[{"startOffset":33258,"endOffset":33280,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedReferenceLocation","ranges":[{"startOffset":33314,"endOffset":33348,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRenameLocation","ranges":[{"startOffset":33379,"endOffset":33410,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasDeclarationFromName","ranges":[{"startOffset":33443,"endOffset":33476,"count":0}],"isBlockCoverage":false},{"functionName":"getAllAccessorDeclarations","ranges":[{"startOffset":33508,"endOffset":33540,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClass","ranges":[{"startOffset":33569,"endOffset":33598,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClassElement","ranges":[{"startOffset":33634,"endOffset":33670,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTags","ranges":[{"startOffset":33691,"endOffset":33712,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTagsOfKind","ranges":[{"startOffset":33739,"endOffset":33766,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":33782,"endOffset":33798,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectOutputs","ranges":[{"startOffset":33824,"endOffset":33850,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSuperTypeNodes","ranges":[{"startOffset":33876,"endOffset":33902,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowImportingTsExtensions","ranges":[{"startOffset":33937,"endOffset":33972,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowJSCompilerOption","ranges":[{"startOffset":34002,"endOffset":34032,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowSyntheticDefaultImports","ranges":[{"startOffset":34069,"endOffset":34106,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestor","ranges":[{"startOffset":34123,"endOffset":34140,"count":0}],"isBlockCoverage":false},{"functionName":"getAnyExtensionFromPath","ranges":[{"startOffset":34169,"endOffset":34198,"count":0}],"isBlockCoverage":false},{"functionName":"getAreDeclarationMapsEnabled","ranges":[{"startOffset":34232,"endOffset":34266,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedExpandoInitializer","ranges":[{"startOffset":34301,"endOffset":34336,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedName","ranges":[{"startOffset":34357,"endOffset":34378,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKind","ranges":[{"startOffset":34412,"endOffset":34446,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationPropertyAccessKind","ranges":[{"startOffset":34494,"endOffset":34542,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentTargetKind","ranges":[{"startOffset":34571,"endOffset":34600,"count":0}],"isBlockCoverage":false},{"functionName":"getAutomaticTypeDirectiveNames","ranges":[{"startOffset":34636,"endOffset":34672,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseFileName","ranges":[{"startOffset":34693,"endOffset":34714,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryOperatorPrecedence","ranges":[{"startOffset":34747,"endOffset":34780,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo","ranges":[{"startOffset":34798,"endOffset":34816,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoFileVersionMap","ranges":[{"startOffset":34848,"endOffset":34880,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoText","ranges":[{"startOffset":34902,"endOffset":34924,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFromAnyBuildOrder","ranges":[{"startOffset":34960,"endOffset":34996,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderCreationParameters","ranges":[{"startOffset":35030,"endOffset":35064,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderFileEmit","ranges":[{"startOffset":35088,"endOffset":35112,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalDiagnostic","ranges":[{"startOffset":35140,"endOffset":35168,"count":0}],"isBlockCoverage":false},{"functionName":"getCheckFlags","ranges":[{"startOffset":35187,"endOffset":35206,"count":0}],"isBlockCoverage":false},{"functionName":"getClassExtendsHeritageElement","ranges":[{"startOffset":35242,"endOffset":35278,"count":0}],"isBlockCoverage":false},{"functionName":"getClassLikeDeclarationOfSymbol","ranges":[{"startOffset":35315,"endOffset":35352,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedLocalAndExportSymbolFlags","ranges":[{"startOffset":35394,"endOffset":35436,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedModifierFlags","ranges":[{"startOffset":35466,"endOffset":35496,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlags","ranges":[{"startOffset":35522,"endOffset":35548,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":35592,"endOffset":35636,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentRange","ranges":[{"startOffset":35657,"endOffset":35678,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectory","ranges":[{"startOffset":35708,"endOffset":35738,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectoryOfConfig","ranges":[{"startOffset":35776,"endOffset":35814,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionValue","ranges":[{"startOffset":35842,"endOffset":35870,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiffValue","ranges":[{"startOffset":35903,"endOffset":35936,"count":0}],"isBlockCoverage":false},{"functionName":"getConditions","ranges":[{"startOffset":35955,"endOffset":35974,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileParsingDiagnostics","ranges":[{"startOffset":36011,"endOffset":36048,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantValue","ranges":[{"startOffset":36070,"endOffset":36092,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerFlags","ranges":[{"startOffset":36115,"endOffset":36138,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerNode","ranges":[{"startOffset":36160,"endOffset":36182,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClass","ranges":[{"startOffset":36206,"endOffset":36230,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassExcludingClassDecorators","ranges":[{"startOffset":36278,"endOffset":36326,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassStaticBlock","ranges":[{"startOffset":36361,"endOffset":36396,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunction","ranges":[{"startOffset":36423,"endOffset":36450,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionDeclaration","ranges":[{"startOffset":36488,"endOffset":36526,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionOrClassStaticBlock","ranges":[{"startOffset":36571,"endOffset":36616,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeArray","ranges":[{"startOffset":36644,"endOffset":36672,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElement","ranges":[{"startOffset":36711,"endOffset":36750,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParent","ranges":[{"startOffset":36783,"endOffset":36816,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParentOrAncestorTypeNode","ranges":[{"startOffset":36867,"endOffset":36918,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationDiagnostics","ranges":[{"startOffset":36949,"endOffset":36980,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitExtensionForPath","ranges":[{"startOffset":37020,"endOffset":37060,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePath","ranges":[{"startOffset":37098,"endOffset":37136,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePathWorker","ranges":[{"startOffset":37180,"endOffset":37224,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFileExtension","ranges":[{"startOffset":37257,"endOffset":37290,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFromName","ranges":[{"startOffset":37318,"endOffset":37346,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationModifierFlagsFromSymbol","ranges":[{"startOffset":37389,"endOffset":37432,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationOfKind","ranges":[{"startOffset":37458,"endOffset":37484,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationsOfKind","ranges":[{"startOffset":37511,"endOffset":37538,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaredExpandoInitializer","ranges":[{"startOffset":37573,"endOffset":37608,"count":0}],"isBlockCoverage":false},{"functionName":"getDecorators","ranges":[{"startOffset":37627,"endOffset":37646,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions","ranges":[{"startOffset":37677,"endOffset":37709,"count":5}],"isBlockCoverage":true},{"functionName":"getDefaultFormatCodeSettings","ranges":[{"startOffset":37743,"endOffset":37777,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":37804,"endOffset":37831,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFilePath","ranges":[{"startOffset":37858,"endOffset":37885,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportInfo","ranges":[{"startOffset":37915,"endOffset":37945,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportNameFromDeclaration","ranges":[{"startOffset":37990,"endOffset":38035,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolutionModeForFileWorker","ranges":[{"startOffset":38078,"endOffset":38121,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticText","ranges":[{"startOffset":38144,"endOffset":38167,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWithinSpan","ranges":[{"startOffset":38197,"endOffset":38227,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryPath","ranges":[{"startOffset":38249,"endOffset":38271,"count":5}],"isBlockCoverage":true},{"functionName":"getDirectoryToWatchFailedLookupLocation","ranges":[{"startOffset":38316,"endOffset":38361,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocationFromTypeRoot","ranges":[{"startOffset":38418,"endOffset":38475,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":38506,"endOffset":38537,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentSpansEqualityComparer","ranges":[{"startOffset":38575,"endOffset":38613,"count":0}],"isBlockCoverage":false},{"functionName":"getESModuleInterop","ranges":[{"startOffset":38637,"endOffset":38661,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":38688,"endOffset":38715,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveBaseTypeNode","ranges":[{"startOffset":38745,"endOffset":38775,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveConstraintOfTypeParameter","ranges":[{"startOffset":38818,"endOffset":38861,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveContainerForJSDocTemplateTag","ranges":[{"startOffset":38907,"endOffset":38953,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveImplementsTypeNodes","ranges":[{"startOffset":38990,"endOffset":39027,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveInitializer","ranges":[{"startOffset":39056,"endOffset":39085,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveJSDocHost","ranges":[{"startOffset":39112,"endOffset":39139,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlags","ranges":[{"startOffset":39170,"endOffset":39201,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":39250,"endOffset":39299,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsNoCache","ranges":[{"startOffset":39337,"endOffset":39375,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveReturnTypeNode","ranges":[{"startOffset":39407,"endOffset":39439,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveSetAccessorTypeAnnotationNode","ranges":[{"startOffset":39486,"endOffset":39533,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeAnnotationNode","ranges":[{"startOffset":39569,"endOffset":39605,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeParameterDeclarations","ranges":[{"startOffset":39648,"endOffset":39691,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":39718,"endOffset":39745,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessArgumentExpressionOrName","ranges":[{"startOffset":39801,"endOffset":39857,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessName","ranges":[{"startOffset":39893,"endOffset":39929,"count":0}],"isBlockCoverage":false},{"functionName":"getElementsOfBindingOrAssignmentPattern","ranges":[{"startOffset":39974,"endOffset":40019,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitDeclarations","ranges":[{"startOffset":40044,"endOffset":40069,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitFlags","ranges":[{"startOffset":40087,"endOffset":40105,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitHelpers","ranges":[{"startOffset":40125,"endOffset":40145,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleDetectionKind","ranges":[{"startOffset":40177,"endOffset":40209,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleFormatOfFileWorker","ranges":[{"startOffset":40246,"endOffset":40283,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleKind","ranges":[{"startOffset":40306,"endOffset":40329,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleResolutionKind","ranges":[{"startOffset":40362,"endOffset":40395,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitScriptTarget","ranges":[{"startOffset":40420,"endOffset":40445,"count":5}],"isBlockCoverage":true},{"functionName":"getEmitStandardClassFields","ranges":[{"startOffset":40477,"endOffset":40509,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingBlockScopeContainer","ranges":[{"startOffset":40546,"endOffset":40583,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingContainer","ranges":[{"startOffset":40610,"endOffset":40637,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":40676,"endOffset":40715,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":40755,"endOffset":40795,"count":0}],"isBlockCoverage":false},{"functionName":"getEndLinePosition","ranges":[{"startOffset":40819,"endOffset":40843,"count":0}],"isBlockCoverage":false},{"functionName":"getEntityNameFromTypeNode","ranges":[{"startOffset":40874,"endOffset":40905,"count":0}],"isBlockCoverage":false},{"functionName":"getEntrypointsFromPackageJsonInfo","ranges":[{"startOffset":40944,"endOffset":40983,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorCountForSummary","ranges":[{"startOffset":41012,"endOffset":41041,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForNode","ranges":[{"startOffset":41066,"endOffset":41091,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSummaryText","ranges":[{"startOffset":41116,"endOffset":41141,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfIdentifierOrLiteral","ranges":[{"startOffset":41182,"endOffset":41223,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxAttributeName","ranges":[{"startOffset":41261,"endOffset":41299,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxNamespacedName","ranges":[{"startOffset":41338,"endOffset":41377,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandoInitializer","ranges":[{"startOffset":41404,"endOffset":41431,"count":0}],"isBlockCoverage":false},{"functionName":"getExportAssignmentExpression","ranges":[{"startOffset":41466,"endOffset":41501,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfoMap","ranges":[{"startOffset":41523,"endOffset":41545,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNeedsImportStarHelper","ranges":[{"startOffset":41581,"endOffset":41617,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionAssociativity","ranges":[{"startOffset":41649,"endOffset":41681,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionPrecedence","ranges":[{"startOffset":41710,"endOffset":41739,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalHelpersModuleName","ranges":[{"startOffset":41773,"endOffset":41807,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleImportEqualsDeclarationExpression","ranges":[{"startOffset":41863,"endOffset":41919,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName","ranges":[{"startOffset":41946,"endOffset":41973,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromDeclaration","ranges":[{"startOffset":42015,"endOffset":42057,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromPath","ranges":[{"startOffset":42092,"endOffset":42127,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameLiteral","ranges":[{"startOffset":42161,"endOffset":42195,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleRequireArgument","ranges":[{"startOffset":42233,"endOffset":42271,"count":0}],"isBlockCoverage":false},{"functionName":"getFallbackOptions","ranges":[{"startOffset":42295,"endOffset":42319,"count":0}],"isBlockCoverage":false},{"functionName":"getFileEmitOutput","ranges":[{"startOffset":42342,"endOffset":42365,"count":0}],"isBlockCoverage":false},{"functionName":"getFileMatcherPatterns","ranges":[{"startOffset":42393,"endOffset":42421,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesFromConfigSpecs","ranges":[{"startOffset":42454,"endOffset":42487,"count":0}],"isBlockCoverage":false},{"functionName":"getFileWatcherEventKind","ranges":[{"startOffset":42516,"endOffset":42545,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesInErrorForSummary","ranges":[{"startOffset":42576,"endOffset":42607,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstConstructorWithBody","ranges":[{"startOffset":42640,"endOffset":42673,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIdentifier","ranges":[{"startOffset":42697,"endOffset":42721,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstNonSpaceCharacterPosition","ranges":[{"startOffset":42760,"endOffset":42799,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstProjectOutput","ranges":[{"startOffset":42826,"endOffset":42853,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanExpression","ranges":[{"startOffset":42888,"endOffset":42923,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettingsForWriting","ranges":[{"startOffset":42960,"endOffset":42997,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":43015,"endOffset":43033,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionFlags","ranges":[{"startOffset":43055,"endOffset":43077,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClause","ranges":[{"startOffset":43100,"endOffset":43123,"count":0}],"isBlockCoverage":false},{"functionName":"getHostSignatureFromJSDoc","ranges":[{"startOffset":43154,"endOffset":43185,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierAutoGenerate","ranges":[{"startOffset":43216,"endOffset":43247,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierGeneratedImportReference","ranges":[{"startOffset":43290,"endOffset":43333,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierTypeArguments","ranges":[{"startOffset":43365,"endOffset":43397,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":43442,"endOffset":43487,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForEmitWorker","ranges":[{"startOffset":43526,"endOffset":43565,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFile","ranges":[{"startOffset":43598,"endOffset":43631,"count":5}],"isBlockCoverage":true},{"functionName":"getImpliedNodeFormatForFileWorker","ranges":[{"startOffset":43670,"endOffset":43709,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportDefaultHelper","ranges":[{"startOffset":43748,"endOffset":43787,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportStarHelper","ranges":[{"startOffset":43823,"endOffset":43859,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":43880,"endOffset":43901,"count":0}],"isBlockCoverage":false},{"functionName":"getInferredLibraryNameResolveFrom","ranges":[{"startOffset":43940,"endOffset":43979,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializedVariables","ranges":[{"startOffset":44008,"endOffset":44037,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBinaryExpression","ranges":[{"startOffset":44075,"endOffset":44113,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBindingOrAssignmentElement","ranges":[{"startOffset":44161,"endOffset":44209,"count":0}],"isBlockCoverage":false},{"functionName":"getInterfaceBaseTypeNodes","ranges":[{"startOffset":44240,"endOffset":44271,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalEmitFlags","ranges":[{"startOffset":44297,"endOffset":44323,"count":0}],"isBlockCoverage":false},{"functionName":"getInvokedExpression","ranges":[{"startOffset":44349,"endOffset":44375,"count":0}],"isBlockCoverage":false},{"functionName":"getIsFileExcluded","ranges":[{"startOffset":44398,"endOffset":44421,"count":0}],"isBlockCoverage":false},{"functionName":"getIsolatedModules","ranges":[{"startOffset":44445,"endOffset":44469,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocAugmentsTag","ranges":[{"startOffset":44494,"endOffset":44519,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocClassTag","ranges":[{"startOffset":44541,"endOffset":44563,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentRanges","ranges":[{"startOffset":44590,"endOffset":44617,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentsAndTags","ranges":[{"startOffset":44646,"endOffset":44675,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTag","ranges":[{"startOffset":44702,"endOffset":44729,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTagNoCache","ranges":[{"startOffset":44763,"endOffset":44797,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocEnumTag","ranges":[{"startOffset":44818,"endOffset":44839,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocHost","ranges":[{"startOffset":44857,"endOffset":44875,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocImplementsTags","ranges":[{"startOffset":44903,"endOffset":44931,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverloadTags","ranges":[{"startOffset":44957,"endOffset":44983,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverrideTagNoCache","ranges":[{"startOffset":45015,"endOffset":45047,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTags","ranges":[{"startOffset":45074,"endOffset":45101,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsNoCache","ranges":[{"startOffset":45135,"endOffset":45169,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTag","ranges":[{"startOffset":45193,"endOffset":45217,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTagNoCache","ranges":[{"startOffset":45248,"endOffset":45279,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTag","ranges":[{"startOffset":45305,"endOffset":45331,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTagNoCache","ranges":[{"startOffset":45364,"endOffset":45397,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTag","ranges":[{"startOffset":45420,"endOffset":45443,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTagNoCache","ranges":[{"startOffset":45473,"endOffset":45503,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTag","ranges":[{"startOffset":45528,"endOffset":45553,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTagNoCache","ranges":[{"startOffset":45585,"endOffset":45617,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnTag","ranges":[{"startOffset":45640,"endOffset":45663,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnType","ranges":[{"startOffset":45687,"endOffset":45711,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocRoot","ranges":[{"startOffset":45729,"endOffset":45747,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesExpressionType","ranges":[{"startOffset":45784,"endOffset":45821,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesTag","ranges":[{"startOffset":45847,"endOffset":45873,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTags","ranges":[{"startOffset":45891,"endOffset":45909,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTemplateTag","ranges":[{"startOffset":45934,"endOffset":45959,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocThisTag","ranges":[{"startOffset":45980,"endOffset":46001,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocType","ranges":[{"startOffset":46019,"endOffset":46037,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAliasName","ranges":[{"startOffset":46064,"endOffset":46091,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAssertionType","ranges":[{"startOffset":46122,"endOffset":46153,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterDeclarations","ranges":[{"startOffset":46192,"endOffset":46231,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTags","ranges":[{"startOffset":46262,"endOffset":46293,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsNoCache","ranges":[{"startOffset":46331,"endOffset":46369,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeTag","ranges":[{"startOffset":46390,"endOffset":46411,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXImplicitImportBase","ranges":[{"startOffset":46441,"endOffset":46471,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXRuntimeImport","ranges":[{"startOffset":46496,"endOffset":46521,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXTransformEnabled","ranges":[{"startOffset":46549,"endOffset":46577,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilerOptions","ranges":[{"startOffset":46607,"endOffset":46637,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageVariant","ranges":[{"startOffset":46661,"endOffset":46685,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChild","ranges":[{"startOffset":46703,"endOffset":46721,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRanges","ranges":[{"startOffset":46750,"endOffset":46779,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRangesOfNode","ranges":[{"startOffset":46814,"endOffset":46849,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostAccessExpression","ranges":[{"startOffset":46882,"endOffset":46915,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostExpression","ranges":[{"startOffset":46942,"endOffset":46969,"count":0}],"isBlockCoverage":false},{"functionName":"getLibFileNameFromLibReference","ranges":[{"startOffset":47005,"endOffset":47041,"count":0}],"isBlockCoverage":false},{"functionName":"getLibNameFromLibReference","ranges":[{"startOffset":47073,"endOffset":47105,"count":0}],"isBlockCoverage":false},{"functionName":"getLibraryNameFromLibFileName","ranges":[{"startOffset":47140,"endOffset":47175,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":47210,"endOffset":47245,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":47262,"endOffset":47279,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPosition","ranges":[{"startOffset":47307,"endOffset":47335,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStartPositionForPosition","ranges":[{"startOffset":47372,"endOffset":47409,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":47428,"endOffset":47447,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndNextNonWhitespaceCharacter","ranges":[{"startOffset":47505,"endOffset":47563,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter","ranges":[{"startOffset":47626,"endOffset":47689,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositions","ranges":[{"startOffset":47719,"endOffset":47749,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndAndRangeStart","ranges":[{"startOffset":47791,"endOffset":47833,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndPositions","ranges":[{"startOffset":47871,"endOffset":47909,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteralText","ranges":[{"startOffset":47929,"endOffset":47949,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalNameForExternalImport","ranges":[{"startOffset":47984,"endOffset":48019,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportDefault","ranges":[{"startOffset":48055,"endOffset":48091,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleSpecificMessage","ranges":[{"startOffset":48121,"endOffset":48151,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleTimeString","ranges":[{"startOffset":48176,"endOffset":48201,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpan","ranges":[{"startOffset":48227,"endOffset":48253,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpan","ranges":[{"startOffset":48280,"endOffset":48307,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocation","ranges":[{"startOffset":48330,"endOffset":48353,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedFileSpec","ranges":[{"startOffset":48377,"endOffset":48401,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedIncludeSpec","ranges":[{"startOffset":48428,"endOffset":48455,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromDeclaration","ranges":[{"startOffset":48486,"endOffset":48517,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromLocation","ranges":[{"startOffset":48545,"endOffset":48573,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOfDeclaration","ranges":[{"startOffset":48602,"endOffset":48631,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForFileReference","ranges":[{"startOffset":48660,"endOffset":48689,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForResolutionAtIndex","ranges":[{"startOffset":48722,"endOffset":48755,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocation","ranges":[{"startOffset":48784,"endOffset":48813,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":48834,"endOffset":48855,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers","ranges":[{"startOffset":48873,"endOffset":48891,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceState","ranges":[{"startOffset":48919,"endOffset":48947,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNameStringLiteralAt","ranges":[{"startOffset":48981,"endOffset":49015,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierEndingPreference","ranges":[{"startOffset":49055,"endOffset":49095,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierResolverHost","ranges":[{"startOffset":49131,"endOffset":49167,"count":0}],"isBlockCoverage":false},{"functionName":"getNameForExportedSymbol","ranges":[{"startOffset":49197,"endOffset":49227,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromImportAttribute","ranges":[{"startOffset":49259,"endOffset":49291,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromIndexInfo","ranges":[{"startOffset":49317,"endOffset":49343,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromPropertyName","ranges":[{"startOffset":49372,"endOffset":49401,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfAccessExpression","ranges":[{"startOffset":49432,"endOffset":49463,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfCompilerOptionValue","ranges":[{"startOffset":49497,"endOffset":49531,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfDeclaration","ranges":[{"startOffset":49557,"endOffset":49583,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfExpando","ranges":[{"startOffset":49605,"endOffset":49627,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfJSDocTypedef","ranges":[{"startOffset":49654,"endOffset":49681,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfScriptTarget","ranges":[{"startOffset":49708,"endOffset":49735,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrArgument","ranges":[{"startOffset":49758,"endOffset":49781,"count":0}],"isBlockCoverage":false},{"functionName":"getNameTable","ranges":[{"startOffset":49799,"endOffset":49817,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceDeclarationNode","ranges":[{"startOffset":49850,"endOffset":49883,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineCharacter","ranges":[{"startOffset":49908,"endOffset":49933,"count":5}],"isBlockCoverage":true},{"functionName":"getNewLineKind","ranges":[{"startOffset":49953,"endOffset":49973,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineOrDefaultFromHost","ranges":[{"startOffset":50006,"endOffset":50039,"count":0}],"isBlockCoverage":false},{"functionName":"getNewTargetContainer","ranges":[{"startOffset":50066,"endOffset":50093,"count":0}],"isBlockCoverage":false},{"functionName":"getNextJSDocCommentLocation","ranges":[{"startOffset":50126,"endOffset":50159,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeChildren","ranges":[{"startOffset":50180,"endOffset":50201,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeForGeneratedName","ranges":[{"startOffset":50230,"endOffset":50259,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeId","ranges":[{"startOffset":50274,"endOffset":50289,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeKind","ranges":[{"startOffset":50306,"endOffset":50323,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModifiers","ranges":[{"startOffset":50345,"endOffset":50367,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulePathParts","ranges":[{"startOffset":50395,"endOffset":50423,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignedNameOfDeclaration","ranges":[{"startOffset":50460,"endOffset":50497,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignmentOperatorForCompoundAssignment","ranges":[{"startOffset":50548,"endOffset":50599,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAugmentationDeclaration","ranges":[{"startOffset":50634,"endOffset":50669,"count":0}],"isBlockCoverage":false},{"functionName":"getNonDecoratorTokenPosOfNode","ranges":[{"startOffset":50704,"endOffset":50739,"count":0}],"isBlockCoverage":false},{"functionName":"getNonIncrementalBuildInfoRoots","ranges":[{"startOffset":50776,"endOffset":50813,"count":0}],"isBlockCoverage":false},{"functionName":"getNonModifierTokenPosOfNode","ranges":[{"startOffset":50847,"endOffset":50881,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":50912,"endOffset":50943,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePathWithoutRoot","ranges":[{"startOffset":50985,"endOffset":51027,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":51060,"endOffset":51093,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectFlags","ranges":[{"startOffset":51113,"endOffset":51133,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorAssociativity","ranges":[{"startOffset":51163,"endOffset":51193,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorPrecedence","ranges":[{"startOffset":51220,"endOffset":51247,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionFromName","ranges":[{"startOffset":51270,"endOffset":51293,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForLibraryResolution","ranges":[{"startOffset":51329,"endOffset":51365,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsNameMap","ranges":[{"startOffset":51388,"endOffset":51411,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsSyntaxByArrayElementValue","ranges":[{"startOffset":51452,"endOffset":51493,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsSyntaxByValue","ranges":[{"startOffset":51522,"endOffset":51551,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateEmitNode","ranges":[{"startOffset":51576,"endOffset":51601,"count":0}],"isBlockCoverage":false},{"functionName":"getOrUpdate","ranges":[{"startOffset":51618,"endOffset":51635,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNode","ranges":[{"startOffset":51656,"endOffset":51677,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNodeId","ranges":[{"startOffset":51700,"endOffset":51723,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileName","ranges":[{"startOffset":51757,"endOffset":51791,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileNameWorker","ranges":[{"startOffset":51831,"endOffset":51871,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputExtension","ranges":[{"startOffset":51895,"endOffset":51919,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputFileNames","ranges":[{"startOffset":51943,"endOffset":51967,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileNameWorker","ranges":[{"startOffset":51998,"endOffset":52029,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsFor","ranges":[{"startOffset":52052,"endOffset":52075,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEmitOutputFilePath","ranges":[{"startOffset":52105,"endOffset":52135,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnKeys","ranges":[{"startOffset":52151,"endOffset":52167,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnValues","ranges":[{"startOffset":52185,"endOffset":52203,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonTypesVersionsPaths","ranges":[{"startOffset":52241,"endOffset":52279,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageNameFromTypesPackageName","ranges":[{"startOffset":52319,"endOffset":52359,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeForPath","ranges":[{"startOffset":52387,"endOffset":52415,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterSymbolFromJSDoc","ranges":[{"startOffset":52448,"endOffset":52481,"count":0}],"isBlockCoverage":false},{"functionName":"getParentNodeInSpan","ranges":[{"startOffset":52506,"endOffset":52531,"count":0}],"isBlockCoverage":false},{"functionName":"getParseTreeNode","ranges":[{"startOffset":52553,"endOffset":52575,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLineOfConfigFile","ranges":[{"startOffset":52613,"endOffset":52651,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponents","ranges":[{"startOffset":52674,"endOffset":52697,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromPathComponents","ranges":[{"startOffset":52728,"endOffset":52759,"count":0}],"isBlockCoverage":false},{"functionName":"getPathUpdater","ranges":[{"startOffset":52779,"endOffset":52799,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsBasePath","ranges":[{"startOffset":52821,"endOffset":52843,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":52867,"endOffset":52891,"count":0}],"isBlockCoverage":false},{"functionName":"getPendingEmitKindWithSeen","ranges":[{"startOffset":52923,"endOffset":52955,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":52990,"endOffset":53025,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleGenericSignatures","ranges":[{"startOffset":53059,"endOffset":53093,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputExtensionForExtension","ranges":[{"startOffset":53144,"endOffset":53195,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputPathWithoutChangingExt","ranges":[{"startOffset":53247,"endOffset":53299,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleTypeArgumentsInfo","ranges":[{"startOffset":53333,"endOffset":53367,"count":0}],"isBlockCoverage":false},{"functionName":"getPreEmitDiagnostics","ranges":[{"startOffset":53394,"endOffset":53421,"count":0}],"isBlockCoverage":false},{"functionName":"getPrecedingNonSpaceCharacterPosition","ranges":[{"startOffset":53464,"endOffset":53507,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifier","ranges":[{"startOffset":53533,"endOffset":53559,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":53578,"endOffset":53597,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty","ranges":[{"startOffset":53614,"endOffset":53631,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentAliasLikeExpression","ranges":[{"startOffset":53677,"endOffset":53723,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForPropertyNameNode","ranges":[{"startOffset":53763,"endOffset":53803,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameFromType","ranges":[{"startOffset":53832,"endOffset":53861,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":53910,"endOffset":53959,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolFromBindingElement","ranges":[{"startOffset":54000,"endOffset":54041,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromContextualType","ranges":[{"startOffset":54083,"endOffset":54125,"count":0}],"isBlockCoverage":false},{"functionName":"getQuoteFromPreference","ranges":[{"startOffset":54153,"endOffset":54181,"count":0}],"isBlockCoverage":false},{"functionName":"getQuotePreference","ranges":[{"startOffset":54205,"endOffset":54229,"count":0}],"isBlockCoverage":false},{"functionName":"getRangesWhere","ranges":[{"startOffset":54249,"endOffset":54269,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorContextSpan","ranges":[{"startOffset":54297,"endOffset":54325,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileLocation","ranges":[{"startOffset":54356,"endOffset":54387,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexFromPattern","ranges":[{"startOffset":54412,"endOffset":54437,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionForWildcard","ranges":[{"startOffset":54474,"endOffset":54511,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionsForWildcards","ranges":[{"startOffset":54550,"endOffset":54589,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromDirectory","ranges":[{"startOffset":54623,"endOffset":54657,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromFile","ranges":[{"startOffset":54686,"endOffset":54715,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathToDirectoryOrUrl","ranges":[{"startOffset":54752,"endOffset":54789,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocation","ranges":[{"startOffset":54812,"endOffset":54835,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementSpanForContextToken","ranges":[{"startOffset":54874,"endOffset":54913,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionDiagnostic","ranges":[{"startOffset":54942,"endOffset":54971,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionModeOverride","ranges":[{"startOffset":55002,"endOffset":55033,"count":0}],"isBlockCoverage":false},{"functionName":"getResolveJsonModule","ranges":[{"startOffset":55059,"endOffset":55085,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonExports","ranges":[{"startOffset":55119,"endOffset":55153,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonImports","ranges":[{"startOffset":55187,"endOffset":55221,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedExternalModuleName","ranges":[{"startOffset":55256,"endOffset":55291,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedModuleFromResolution","ranges":[{"startOffset":55328,"endOffset":55365,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedTypeReferenceDirectiveFromResolution","ranges":[{"startOffset":55418,"endOffset":55471,"count":0}],"isBlockCoverage":false},{"functionName":"getRestIndicatorOfBindingOrAssignmentElement","ranges":[{"startOffset":55521,"endOffset":55571,"count":0}],"isBlockCoverage":false},{"functionName":"getRestParameterElementType","ranges":[{"startOffset":55604,"endOffset":55637,"count":0}],"isBlockCoverage":false},{"functionName":"getRightMostAssignedExpression","ranges":[{"startOffset":55673,"endOffset":55709,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDeclaration","ranges":[{"startOffset":55733,"endOffset":55757,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDirectoryOfResolutionCache","ranges":[{"startOffset":55796,"endOffset":55835,"count":0}],"isBlockCoverage":false},{"functionName":"getRootLength","ranges":[{"startOffset":55854,"endOffset":55873,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":55892,"endOffset":55911,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKindFromFileName","ranges":[{"startOffset":55942,"endOffset":55973,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptTargetFeatures","ranges":[{"startOffset":56002,"endOffset":56031,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedEffectiveModifierFlags","ranges":[{"startOffset":56070,"endOffset":56109,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedSyntacticModifierFlags","ranges":[{"startOffset":56148,"endOffset":56187,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":56219,"endOffset":56251,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticJsxChildren","ranges":[{"startOffset":56279,"endOffset":56307,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorTypeAnnotationNode","ranges":[{"startOffset":56345,"endOffset":56383,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorValueParameter","ranges":[{"startOffset":56417,"endOffset":56451,"count":0}],"isBlockCoverage":false},{"functionName":"getSetExternalModuleIndicator","ranges":[{"startOffset":56486,"endOffset":56521,"count":5}],"isBlockCoverage":true},{"functionName":"getShebang","ranges":[{"startOffset":56537,"endOffset":56553,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleVariableOfVariableStatement","ranges":[{"startOffset":56595,"endOffset":56637,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotText","ranges":[{"startOffset":56658,"endOffset":56679,"count":0}],"isBlockCoverage":false},{"functionName":"getSnippetElement","ranges":[{"startOffset":56702,"endOffset":56725,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfModule","ranges":[{"startOffset":56752,"endOffset":56779,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfNode","ranges":[{"startOffset":56804,"endOffset":56829,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDir","ranges":[{"startOffset":56860,"endOffset":56891,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileVersionAsHashFromText","ranges":[{"startOffset":56931,"endOffset":56971,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilesToEmit","ranges":[{"startOffset":56997,"endOffset":57023,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapRange","ranges":[{"startOffset":57046,"endOffset":57069,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":57090,"endOffset":57111,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTextOfNodeFromSourceFile","ranges":[{"startOffset":57150,"endOffset":57189,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfTokenAtPosition","ranges":[{"startOffset":57219,"endOffset":57249,"count":0}],"isBlockCoverage":false},{"functionName":"getSpellingSuggestion","ranges":[{"startOffset":57276,"endOffset":57303,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfLine","ranges":[{"startOffset":57331,"endOffset":57359,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfRange","ranges":[{"startOffset":57388,"endOffset":57417,"count":0}],"isBlockCoverage":false},{"functionName":"getStartsOnNewLine","ranges":[{"startOffset":57441,"endOffset":57465,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticPropertiesAndClassStaticBlock","ranges":[{"startOffset":57509,"endOffset":57553,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptionValue","ranges":[{"startOffset":57579,"endOffset":57605,"count":0}],"isBlockCoverage":false},{"functionName":"getStringComparer","ranges":[{"startOffset":57628,"endOffset":57651,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":57678,"endOffset":57705,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperCallFromStatement","ranges":[{"startOffset":57736,"endOffset":57767,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperContainer","ranges":[{"startOffset":57790,"endOffset":57813,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":57840,"endOffset":57867,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensions","ranges":[{"startOffset":57895,"endOffset":57923,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsWithJsonIfResolveJsonModule","ranges":[{"startOffset":57978,"endOffset":58033,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchedType","ranges":[{"startOffset":58054,"endOffset":58075,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolId","ranges":[{"startOffset":58092,"endOffset":58109,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNameForPrivateIdentifier","ranges":[{"startOffset":58148,"endOffset":58187,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolTarget","ranges":[{"startOffset":58208,"endOffset":58229,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticClassifications","ranges":[{"startOffset":58262,"endOffset":58295,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlags","ranges":[{"startOffset":58326,"endOffset":58357,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlagsNoCache","ranges":[{"startOffset":58395,"endOffset":58433,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClone","ranges":[{"startOffset":58462,"endOffset":58491,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWithReplacements","ranges":[{"startOffset":58536,"endOffset":58581,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClones","ranges":[{"startOffset":58611,"endOffset":58641,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClonesWithReplacements","ranges":[{"startOffset":58687,"endOffset":58733,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticLeadingComments","ranges":[{"startOffset":58766,"endOffset":58799,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticTrailingComments","ranges":[{"startOffset":58833,"endOffset":58867,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetLabel","ranges":[{"startOffset":58887,"endOffset":58907,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetOfBindingOrAssignmentElement","ranges":[{"startOffset":58950,"endOffset":58993,"count":0}],"isBlockCoverage":false},{"functionName":"getTemporaryModuleResolutionState","ranges":[{"startOffset":59032,"endOffset":59071,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfConstantValue","ranges":[{"startOffset":59099,"endOffset":59127,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfIdentifierOrLiteral","ranges":[{"startOffset":59161,"endOffset":59195,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJSDocComment","ranges":[{"startOffset":59222,"endOffset":59249,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxAttributeName","ranges":[{"startOffset":59280,"endOffset":59311,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxNamespacedName","ranges":[{"startOffset":59343,"endOffset":59375,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNode","ranges":[{"startOffset":59394,"endOffset":59413,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNodeFromSourceText","ranges":[{"startOffset":59446,"endOffset":59479,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfPropertyName","ranges":[{"startOffset":59506,"endOffset":59533,"count":0}],"isBlockCoverage":false},{"functionName":"getThisContainer","ranges":[{"startOffset":59555,"endOffset":59577,"count":0}],"isBlockCoverage":false},{"functionName":"getThisParameter","ranges":[{"startOffset":59599,"endOffset":59621,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":59645,"endOffset":59669,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenPosOfNode","ranges":[{"startOffset":59692,"endOffset":59715,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenSourceMapRange","ranges":[{"startOffset":59743,"endOffset":59771,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingPropertyName","ranges":[{"startOffset":59800,"endOffset":59829,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingToken","ranges":[{"startOffset":59851,"endOffset":59873,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingCommentRanges","ranges":[{"startOffset":59903,"endOffset":59933,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingSemicolonDeferringWriter","ranges":[{"startOffset":59974,"endOffset":60015,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformers","ranges":[{"startOffset":60036,"endOffset":60057,"count":0}],"isBlockCoverage":false},{"functionName":"getTsBuildInfoEmitOutputFilePath","ranges":[{"startOffset":60095,"endOffset":60133,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigObjectLiteralExpression","ranges":[{"startOffset":60173,"endOffset":60213,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigPropArrayElementValue","ranges":[{"startOffset":60251,"endOffset":60289,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationNode","ranges":[{"startOffset":60316,"endOffset":60343,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeArgumentOrTypeParameterList","ranges":[{"startOffset":60383,"endOffset":60423,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeKeywordOfTypeOnlyImport","ranges":[{"startOffset":60459,"endOffset":60495,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode","ranges":[{"startOffset":60512,"endOffset":60529,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNodeIfAccessible","ranges":[{"startOffset":60558,"endOffset":60587,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterFromJsDoc","ranges":[{"startOffset":60618,"endOffset":60649,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterOwner","ranges":[{"startOffset":60676,"endOffset":60703,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageName","ranges":[{"startOffset":60728,"endOffset":60753,"count":0}],"isBlockCoverage":false},{"functionName":"getUILocale","ranges":[{"startOffset":60770,"endOffset":60787,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueName","ranges":[{"startOffset":60806,"endOffset":60825,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueSymbolId","ranges":[{"startOffset":60848,"endOffset":60871,"count":0}],"isBlockCoverage":false},{"functionName":"getUseDefineForClassFields","ranges":[{"startOffset":60903,"endOffset":60935,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchErrorSummaryDiagnosticMessage","ranges":[{"startOffset":60978,"endOffset":61021,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchFactory","ranges":[{"startOffset":61042,"endOffset":61063,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":61074,"endOffset":61085,"count":0}],"isBlockCoverage":false},{"functionName":"groupBy","ranges":[{"startOffset":61098,"endOffset":61111,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentation","ranges":[{"startOffset":61133,"endOffset":61155,"count":0}],"isBlockCoverage":false},{"functionName":"handleNoEmitOptions","ranges":[{"startOffset":61180,"endOffset":61205,"count":0}],"isBlockCoverage":false},{"functionName":"handleWatchOptionsConfigDirTemplateSubstitution","ranges":[{"startOffset":61258,"endOffset":61311,"count":0}],"isBlockCoverage":false},{"functionName":"hasAbstractModifier","ranges":[{"startOffset":61336,"endOffset":61361,"count":0}],"isBlockCoverage":false},{"functionName":"hasAccessorModifier","ranges":[{"startOffset":61386,"endOffset":61411,"count":0}],"isBlockCoverage":false},{"functionName":"hasAmbientModifier","ranges":[{"startOffset":61435,"endOffset":61459,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangesInResolutions","ranges":[{"startOffset":61488,"endOffset":61517,"count":0}],"isBlockCoverage":false},{"functionName":"hasContextSensitiveParameters","ranges":[{"startOffset":61552,"endOffset":61587,"count":0}],"isBlockCoverage":false},{"functionName":"hasDecorators","ranges":[{"startOffset":61606,"endOffset":61625,"count":0}],"isBlockCoverage":false},{"functionName":"hasDocComment","ranges":[{"startOffset":61644,"endOffset":61663,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicName","ranges":[{"startOffset":61683,"endOffset":61703,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifier","ranges":[{"startOffset":61729,"endOffset":61755,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifiers","ranges":[{"startOffset":61782,"endOffset":61809,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveReadonlyModifier","ranges":[{"startOffset":61843,"endOffset":61877,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":61895,"endOffset":61913,"count":0}],"isBlockCoverage":false},{"functionName":"hasImplementationTSFileExtension","ranges":[{"startOffset":61951,"endOffset":61989,"count":0}],"isBlockCoverage":false},{"functionName":"hasIndexSignature","ranges":[{"startOffset":62012,"endOffset":62035,"count":0}],"isBlockCoverage":false},{"functionName":"hasInferredType","ranges":[{"startOffset":62056,"endOffset":62077,"count":0}],"isBlockCoverage":false},{"functionName":"hasInitializer","ranges":[{"startOffset":62097,"endOffset":62117,"count":0}],"isBlockCoverage":false},{"functionName":"hasInvalidEscape","ranges":[{"startOffset":62139,"endOffset":62161,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocNodes","ranges":[{"startOffset":62180,"endOffset":62199,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocParameterTags","ranges":[{"startOffset":62226,"endOffset":62253,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSFileExtension","ranges":[{"startOffset":62277,"endOffset":62301,"count":0}],"isBlockCoverage":false},{"functionName":"hasJsonModuleEmitEnabled","ranges":[{"startOffset":62331,"endOffset":62361,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyExpressionInitializer","ranges":[{"startOffset":62395,"endOffset":62429,"count":0}],"isBlockCoverage":false},{"functionName":"hasOverrideModifier","ranges":[{"startOffset":62454,"endOffset":62479,"count":0}],"isBlockCoverage":false},{"functionName":"hasPossibleExternalModuleReference","ranges":[{"startOffset":62519,"endOffset":62559,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":62576,"endOffset":62593,"count":5}],"isBlockCoverage":true},{"functionName":"hasPropertyAccessExpressionWithName","ranges":[{"startOffset":62634,"endOffset":62675,"count":0}],"isBlockCoverage":false},{"functionName":"hasQuestionToken","ranges":[{"startOffset":62697,"endOffset":62719,"count":0}],"isBlockCoverage":false},{"functionName":"hasRecordedExternalHelpers","ranges":[{"startOffset":62751,"endOffset":62783,"count":0}],"isBlockCoverage":false},{"functionName":"hasResolutionModeOverride","ranges":[{"startOffset":62814,"endOffset":62845,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestParameter","ranges":[{"startOffset":62867,"endOffset":62889,"count":0}],"isBlockCoverage":false},{"functionName":"hasScopeMarker","ranges":[{"startOffset":62909,"endOffset":62929,"count":0}],"isBlockCoverage":false},{"functionName":"hasStaticModifier","ranges":[{"startOffset":62952,"endOffset":62975,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifier","ranges":[{"startOffset":63001,"endOffset":63027,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifiers","ranges":[{"startOffset":63054,"endOffset":63081,"count":0}],"isBlockCoverage":false},{"functionName":"hasTSFileExtension","ranges":[{"startOffset":63105,"endOffset":63129,"count":0}],"isBlockCoverage":false},{"functionName":"hasTabstop","ranges":[{"startOffset":63145,"endOffset":63161,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":63196,"endOffset":63231,"count":0}],"isBlockCoverage":false},{"functionName":"hasType","ranges":[{"startOffset":63244,"endOffset":63257,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeArguments","ranges":[{"startOffset":63279,"endOffset":63301,"count":0}],"isBlockCoverage":false},{"functionName":"hasZeroOrOneAsteriskCharacter","ranges":[{"startOffset":63336,"endOffset":63371,"count":0}],"isBlockCoverage":false},{"functionName":"hostGetCanonicalFileName","ranges":[{"startOffset":63401,"endOffset":63431,"count":0}],"isBlockCoverage":false},{"functionName":"hostUsesCaseSensitiveFileNames","ranges":[{"startOffset":63467,"endOffset":63503,"count":0}],"isBlockCoverage":false},{"functionName":"idText","ranges":[{"startOffset":63515,"endOffset":63527,"count":0}],"isBlockCoverage":false},{"functionName":"identifierIsThisKeyword","ranges":[{"startOffset":63556,"endOffset":63585,"count":0}],"isBlockCoverage":false},{"functionName":"identifierToKeywordKind","ranges":[{"startOffset":63614,"endOffset":63643,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":63657,"endOffset":63671,"count":0}],"isBlockCoverage":false},{"functionName":"identitySourceMapConsumer","ranges":[{"startOffset":63702,"endOffset":63733,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreSourceNewlines","ranges":[{"startOffset":63759,"endOffset":63785,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPaths","ranges":[{"startOffset":63803,"endOffset":63821,"count":0}],"isBlockCoverage":false},{"functionName":"importFromModuleSpecifier","ranges":[{"startOffset":63852,"endOffset":63883,"count":0}],"isBlockCoverage":false},{"functionName":"importSyntaxAffectsModuleResolution","ranges":[{"startOffset":63924,"endOffset":63965,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfAnyCharCode","ranges":[{"startOffset":63989,"endOffset":64013,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfNode","ranges":[{"startOffset":64030,"endOffset":64047,"count":0}],"isBlockCoverage":false},{"functionName":"indicesOf","ranges":[{"startOffset":64062,"endOffset":64077,"count":0}],"isBlockCoverage":false},{"functionName":"inferredTypesContainingFile","ranges":[{"startOffset":64110,"endOffset":64143,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassNamedEvaluationHelperBlockIfMissing","ranges":[{"startOffset":64195,"endOffset":64247,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassThisAssignmentIfMissing","ranges":[{"startOffset":64287,"endOffset":64327,"count":0}],"isBlockCoverage":false},{"functionName":"insertImports","ranges":[{"startOffset":64346,"endOffset":64365,"count":0}],"isBlockCoverage":false},{"functionName":"insertSorted","ranges":[{"startOffset":64383,"endOffset":64401,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterCustomPrologue","ranges":[{"startOffset":64441,"endOffset":64481,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterStandardPrologue","ranges":[{"startOffset":64523,"endOffset":64565,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterCustomPrologue","ranges":[{"startOffset":64606,"endOffset":64647,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterStandardPrologue","ranges":[{"startOffset":64690,"endOffset":64733,"count":0}],"isBlockCoverage":false},{"functionName":"intersperse","ranges":[{"startOffset":64750,"endOffset":64767,"count":0}],"isBlockCoverage":false},{"functionName":"intrinsicTagNameToString","ranges":[{"startOffset":64797,"endOffset":64827,"count":0}],"isBlockCoverage":false},{"functionName":"introducesArgumentsExoticObject","ranges":[{"startOffset":64864,"endOffset":64901,"count":0}],"isBlockCoverage":false},{"functionName":"inverseJsxOptionMap","ranges":[{"startOffset":64926,"endOffset":64951,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractConstructorSymbol","ranges":[{"startOffset":64984,"endOffset":65017,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractModifier","ranges":[{"startOffset":65041,"endOffset":65065,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessExpression","ranges":[{"startOffset":65089,"endOffset":65113,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessibilityModifier","ranges":[{"startOffset":65142,"endOffset":65171,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessor","ranges":[{"startOffset":65187,"endOffset":65203,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessorModifier","ranges":[{"startOffset":65227,"endOffset":65251,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasableExpression","ranges":[{"startOffset":65278,"endOffset":65305,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModule","ranges":[{"startOffset":65326,"endOffset":65347,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientPropertyDeclaration","ranges":[{"startOffset":65381,"endOffset":65415,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":65444,"endOffset":65473,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrBareOrAccessedRequire","ranges":[{"startOffset":65513,"endOffset":65553,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrReExport","ranges":[{"startOffset":65580,"endOffset":65607,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrRequireStatement","ranges":[{"startOffset":65642,"endOffset":65677,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportSyntax","ranges":[{"startOffset":65700,"endOffset":65723,"count":0}],"isBlockCoverage":false},{"functionName":"isAnySupportedFileExtension","ranges":[{"startOffset":65756,"endOffset":65789,"count":0}],"isBlockCoverage":false},{"functionName":"isApplicableVersionedTypesKey","ranges":[{"startOffset":65824,"endOffset":65859,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentExpressionOfElementAccess","ranges":[{"startOffset":65900,"endOffset":65941,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":65954,"endOffset":65967,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingElement","ranges":[{"startOffset":65994,"endOffset":66021,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentElement","ranges":[{"startOffset":66060,"endOffset":66099,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentPattern","ranges":[{"startOffset":66138,"endOffset":66177,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingPattern","ranges":[{"startOffset":66204,"endOffset":66231,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralExpression","ranges":[{"startOffset":66261,"endOffset":66291,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralOrObjectLiteralDestructuringPattern","ranges":[{"startOffset":66346,"endOffset":66401,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeNode","ranges":[{"startOffset":66422,"endOffset":66443,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunction","ranges":[{"startOffset":66464,"endOffset":66485,"count":0}],"isBlockCoverage":false},{"functionName":"isAsExpression","ranges":[{"startOffset":66505,"endOffset":66525,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertClause","ranges":[{"startOffset":66545,"endOffset":66565,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertEntry","ranges":[{"startOffset":66584,"endOffset":66603,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertionExpression","ranges":[{"startOffset":66630,"endOffset":66657,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertsKeyword","ranges":[{"startOffset":66679,"endOffset":66701,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentDeclaration","ranges":[{"startOffset":66730,"endOffset":66759,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":66787,"endOffset":66815,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperator","ranges":[{"startOffset":66841,"endOffset":66867,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":66892,"endOffset":66917,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentTarget","ranges":[{"startOffset":66941,"endOffset":66965,"count":0}],"isBlockCoverage":false},{"functionName":"isAsteriskToken","ranges":[{"startOffset":66986,"endOffset":67007,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":67028,"endOffset":67049,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncModifier","ranges":[{"startOffset":67070,"endOffset":67091,"count":0}],"isBlockCoverage":false},{"functionName":"isAutoAccessorPropertyDeclaration","ranges":[{"startOffset":67130,"endOffset":67169,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":67192,"endOffset":67215,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitKeyword","ranges":[{"startOffset":67235,"endOffset":67255,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":67276,"endOffset":67297,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":67321,"endOffset":67345,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryLogicalOperator","ranges":[{"startOffset":67374,"endOffset":67403,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperatorToken","ranges":[{"startOffset":67430,"endOffset":67457,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableObjectDefinePropertyCall","ranges":[{"startOffset":67497,"endOffset":67537,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticAccessExpression","ranges":[{"startOffset":67575,"endOffset":67613,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticElementAccessExpression","ranges":[{"startOffset":67658,"endOffset":67703,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticNameExpression","ranges":[{"startOffset":67739,"endOffset":67775,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElement","ranges":[{"startOffset":67797,"endOffset":67819,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElementOfBareOrAccessedRequire","ranges":[{"startOffset":67864,"endOffset":67909,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingName","ranges":[{"startOffset":67928,"endOffset":67947,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentElement","ranges":[{"startOffset":67981,"endOffset":68015,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentPattern","ranges":[{"startOffset":68049,"endOffset":68083,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingPattern","ranges":[{"startOffset":68105,"endOffset":68127,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":68140,"endOffset":68153,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockLike","ranges":[{"startOffset":68170,"endOffset":68187,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockOrCatchScoped","ranges":[{"startOffset":68213,"endOffset":68239,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScope","ranges":[{"startOffset":68257,"endOffset":68275,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScopedContainerTopLevel","ranges":[{"startOffset":68311,"endOffset":68347,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":68369,"endOffset":68391,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakOrContinueStatement","ranges":[{"startOffset":68423,"endOffset":68455,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":68477,"endOffset":68499,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildCommand","ranges":[{"startOffset":68519,"endOffset":68539,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildInfoFile","ranges":[{"startOffset":68560,"endOffset":68581,"count":0}],"isBlockCoverage":false},{"functionName":"isBuilderProgram","ranges":[{"startOffset":68603,"endOffset":68625,"count":0}],"isBlockCoverage":false},{"functionName":"isBundle","ranges":[{"startOffset":68639,"endOffset":68653,"count":0}],"isBlockCoverage":false},{"functionName":"isCallChain","ranges":[{"startOffset":68670,"endOffset":68687,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":68709,"endOffset":68731,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpressionTarget","ranges":[{"startOffset":68759,"endOffset":68787,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeExpression","ranges":[{"startOffset":68813,"endOffset":68839,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeOrFunctionLikeExpression","ranges":[{"startOffset":68879,"endOffset":68919,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpression","ranges":[{"startOffset":68946,"endOffset":68973,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpressionTarget","ranges":[{"startOffset":69006,"endOffset":69039,"count":0}],"isBlockCoverage":false},{"functionName":"isCallSignatureDeclaration","ranges":[{"startOffset":69071,"endOffset":69103,"count":0}],"isBlockCoverage":false},{"functionName":"isCallToHelper","ranges":[{"startOffset":69123,"endOffset":69143,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseBlock","ranges":[{"startOffset":69160,"endOffset":69177,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseClause","ranges":[{"startOffset":69195,"endOffset":69213,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseKeyword","ranges":[{"startOffset":69232,"endOffset":69251,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseOrDefaultClause","ranges":[{"startOffset":69278,"endOffset":69305,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":69324,"endOffset":69343,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclaration","ranges":[{"startOffset":69381,"endOffset":69419,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclarationOrBindingElement","ranges":[{"startOffset":69473,"endOffset":69527,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckJsEnabledForFile","ranges":[{"startOffset":69556,"endOffset":69585,"count":0}],"isBlockCoverage":false},{"functionName":"isCircularBuildOrder","ranges":[{"startOffset":69611,"endOffset":69637,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":69661,"endOffset":69685,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElement","ranges":[{"startOffset":69705,"endOffset":69725,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":69748,"endOffset":69771,"count":0}],"isBlockCoverage":false},{"functionName":"isClassInstanceProperty","ranges":[{"startOffset":69800,"endOffset":69829,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLike","ranges":[{"startOffset":69846,"endOffset":69863,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberModifier","ranges":[{"startOffset":69890,"endOffset":69917,"count":0}],"isBlockCoverage":false},{"functionName":"isClassNamedEvaluationHelperBlock","ranges":[{"startOffset":69956,"endOffset":69995,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrTypeElement","ranges":[{"startOffset":70021,"endOffset":70047,"count":0}],"isBlockCoverage":false},{"functionName":"isClassStaticBlockDeclaration","ranges":[{"startOffset":70082,"endOffset":70117,"count":0}],"isBlockCoverage":false},{"functionName":"isClassThisAssignmentBlock","ranges":[{"startOffset":70149,"endOffset":70181,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":70199,"endOffset":70217,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaExpression","ranges":[{"startOffset":70240,"endOffset":70263,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaListExpression","ranges":[{"startOffset":70290,"endOffset":70317,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaSequence","ranges":[{"startOffset":70338,"endOffset":70359,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":70377,"endOffset":70395,"count":0}],"isBlockCoverage":false},{"functionName":"isComment","ranges":[{"startOffset":70410,"endOffset":70425,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportPropertyAssignment","ranges":[{"startOffset":70465,"endOffset":70505,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportedExpression","ranges":[{"startOffset":70539,"endOffset":70573,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundAssignment","ranges":[{"startOffset":70599,"endOffset":70625,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedNonLiteralName","ranges":[{"startOffset":70655,"endOffset":70685,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedPropertyName","ranges":[{"startOffset":70713,"endOffset":70741,"count":0}],"isBlockCoverage":false},{"functionName":"isConciseBody","ranges":[{"startOffset":70760,"endOffset":70779,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":70808,"endOffset":70837,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalTypeNode","ranges":[{"startOffset":70864,"endOffset":70891,"count":0}],"isBlockCoverage":false},{"functionName":"isConstAssertion","ranges":[{"startOffset":70913,"endOffset":70935,"count":0}],"isBlockCoverage":false},{"functionName":"isConstTypeReference","ranges":[{"startOffset":70961,"endOffset":70987,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructSignatureDeclaration","ranges":[{"startOffset":71024,"endOffset":71061,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorDeclaration","ranges":[{"startOffset":71091,"endOffset":71121,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorTypeNode","ranges":[{"startOffset":71148,"endOffset":71175,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeyword","ranges":[{"startOffset":71200,"endOffset":71225,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":71250,"endOffset":71275,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomPrologue","ranges":[{"startOffset":71297,"endOffset":71319,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":71344,"endOffset":71369,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":71388,"endOffset":71407,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationBindingElement","ranges":[{"startOffset":71440,"endOffset":71473,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationFileName","ranges":[{"startOffset":71500,"endOffset":71527,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationName","ranges":[{"startOffset":71550,"endOffset":71573,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOfEnumOrNamespace","ranges":[{"startOffset":71613,"endOffset":71653,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationReadonly","ranges":[{"startOffset":71680,"endOffset":71707,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatement","ranges":[{"startOffset":71735,"endOffset":71763,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameterChildren","ranges":[{"startOffset":71807,"endOffset":71851,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameters","ranges":[{"startOffset":71888,"endOffset":71925,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":71942,"endOffset":71959,"count":0}],"isBlockCoverage":false},{"functionName":"isDecoratorTarget","ranges":[{"startOffset":71982,"endOffset":72005,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultClause","ranges":[{"startOffset":72026,"endOffset":72047,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultImport","ranges":[{"startOffset":72068,"endOffset":72089,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier","ranges":[{"startOffset":72112,"endOffset":72135,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultedExpandoInitializer","ranges":[{"startOffset":72170,"endOffset":72205,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteExpression","ranges":[{"startOffset":72229,"endOffset":72253,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteTarget","ranges":[{"startOffset":72273,"endOffset":72293,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecatedDeclaration","ranges":[{"startOffset":72322,"endOffset":72351,"count":0}],"isBlockCoverage":false},{"functionName":"isDestructuringAssignment","ranges":[{"startOffset":72382,"endOffset":72413,"count":0}],"isBlockCoverage":false},{"functionName":"isDiskPathRoot","ranges":[{"startOffset":72433,"endOffset":72453,"count":0}],"isBlockCoverage":false},{"functionName":"isDoStatement","ranges":[{"startOffset":72472,"endOffset":72491,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentRegistryEntry","ranges":[{"startOffset":72520,"endOffset":72549,"count":0}],"isBlockCoverage":false},{"functionName":"isDotDotDotToken","ranges":[{"startOffset":72571,"endOffset":72593,"count":0}],"isBlockCoverage":false},{"functionName":"isDottedName","ranges":[{"startOffset":72611,"endOffset":72629,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicName","ranges":[{"startOffset":72648,"endOffset":72667,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveExternalModule","ranges":[{"startOffset":72698,"endOffset":72729,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveStrictModeSourceFile","ranges":[{"startOffset":72766,"endOffset":72803,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessChain","ranges":[{"startOffset":72829,"endOffset":72855,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessExpression","ranges":[{"startOffset":72886,"endOffset":72917,"count":0}],"isBlockCoverage":false},{"functionName":"isEmittedFileOfProgram","ranges":[{"startOffset":72945,"endOffset":72973,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyArrayLiteral","ranges":[{"startOffset":72998,"endOffset":73023,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingElement","ranges":[{"startOffset":73050,"endOffset":73077,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingPattern","ranges":[{"startOffset":73104,"endOffset":73131,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObjectLiteral","ranges":[{"startOffset":73157,"endOffset":73183,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":73205,"endOffset":73227,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStringLiteral","ranges":[{"startOffset":73253,"endOffset":73279,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityName","ranges":[{"startOffset":73297,"endOffset":73315,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityNameExpression","ranges":[{"startOffset":73343,"endOffset":73371,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumConst","ranges":[{"startOffset":73388,"endOffset":73405,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":73428,"endOffset":73451,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":73469,"endOffset":73487,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorKind","ranges":[{"startOffset":73515,"endOffset":73543,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualsGreaterThanToken","ranges":[{"startOffset":73573,"endOffset":73603,"count":0}],"isBlockCoverage":false},{"functionName":"isExclamationToken","ranges":[{"startOffset":73627,"endOffset":73651,"count":0}],"isBlockCoverage":false},{"functionName":"isExcludedFile","ranges":[{"startOffset":73671,"endOffset":73691,"count":0}],"isBlockCoverage":false},{"functionName":"isExclusivelyTypeOnlyImportOrExport","ranges":[{"startOffset":73732,"endOffset":73773,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoPropertyDeclaration","ranges":[{"startOffset":73807,"endOffset":73841,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAssignment","ranges":[{"startOffset":73865,"endOffset":73889,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":73914,"endOffset":73939,"count":0}],"isBlockCoverage":false},{"functionName":"isExportModifier","ranges":[{"startOffset":73961,"endOffset":73983,"count":0}],"isBlockCoverage":false},{"functionName":"isExportName","ranges":[{"startOffset":74001,"endOffset":74019,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceAsDefaultDeclaration","ranges":[{"startOffset":74062,"endOffset":74105,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultModifier","ranges":[{"startOffset":74136,"endOffset":74167,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":74190,"endOffset":74213,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsIdentifier","ranges":[{"startOffset":74238,"endOffset":74263,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsOrModuleExportsOrAlias","ranges":[{"startOffset":74300,"endOffset":74337,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":74355,"endOffset":74373,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionNode","ranges":[{"startOffset":74395,"endOffset":74417,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":74474,"endOffset":74531,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfOptionalChainRoot","ranges":[{"startOffset":74568,"endOffset":74605,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":74632,"endOffset":74659,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArguments","ranges":[{"startOffset":74694,"endOffset":74729,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArgumentsInClassExtendsClause","ranges":[{"startOffset":74784,"endOffset":74839,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModule","ranges":[{"startOffset":74861,"endOffset":74883,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleAugmentation","ranges":[{"startOffset":74917,"endOffset":74951,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":74996,"endOffset":75041,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleIndicator","ranges":[{"startOffset":75072,"endOffset":75103,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleNameRelative","ranges":[{"startOffset":75137,"endOffset":75171,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference","ranges":[{"startOffset":75202,"endOffset":75233,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleSymbol","ranges":[{"startOffset":75261,"endOffset":75289,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalOrCommonJsModule","ranges":[{"startOffset":75321,"endOffset":75353,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelReservedGeneratedIdentifier","ranges":[{"startOffset":75397,"endOffset":75441,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelUniqueName","ranges":[{"startOffset":75468,"endOffset":75495,"count":0}],"isBlockCoverage":false},{"functionName":"isFileProbablyExternalModule","ranges":[{"startOffset":75529,"endOffset":75563,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstDeclarationOfSymbolParameter","ranges":[{"startOffset":75604,"endOffset":75645,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseHandler","ranges":[{"startOffset":75674,"endOffset":75703,"count":0}],"isBlockCoverage":false},{"functionName":"isForInOrOfStatement","ranges":[{"startOffset":75729,"endOffset":75755,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":75777,"endOffset":75799,"count":0}],"isBlockCoverage":false},{"functionName":"isForInitializer","ranges":[{"startOffset":75821,"endOffset":75843,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":75865,"endOffset":75887,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":75907,"endOffset":75927,"count":0}],"isBlockCoverage":false},{"functionName":"isFullSourceFile","ranges":[{"startOffset":75949,"endOffset":75971,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBlock","ranges":[{"startOffset":75992,"endOffset":76013,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBody","ranges":[{"startOffset":76033,"endOffset":76053,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":76080,"endOffset":76107,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":76133,"endOffset":76159,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpressionOrArrowFunction","ranges":[{"startOffset":76200,"endOffset":76241,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLike","ranges":[{"startOffset":76261,"endOffset":76281,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclaration","ranges":[{"startOffset":76312,"endOffset":76343,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeKind","ranges":[{"startOffset":76367,"endOffset":76391,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeOrClassStaticBlockDeclaration","ranges":[{"startOffset":76440,"endOffset":76489,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrConstructorTypeNode","ranges":[{"startOffset":76526,"endOffset":76563,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrModuleBlock","ranges":[{"startOffset":76592,"endOffset":76621,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionSymbol","ranges":[{"startOffset":76643,"endOffset":76665,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeNode","ranges":[{"startOffset":76689,"endOffset":76713,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedIdentifier","ranges":[{"startOffset":76740,"endOffset":76767,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedPrivateIdentifier","ranges":[{"startOffset":76801,"endOffset":76835,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessor","ranges":[{"startOffset":76854,"endOffset":76873,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessorDeclaration","ranges":[{"startOffset":76903,"endOffset":76933,"count":0}],"isBlockCoverage":false},{"functionName":"isGetOrSetAccessorDeclaration","ranges":[{"startOffset":76968,"endOffset":77003,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalScopeAugmentation","ranges":[{"startOffset":77034,"endOffset":77065,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalSourceFile","ranges":[{"startOffset":77089,"endOffset":77113,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarError","ranges":[{"startOffset":77133,"endOffset":77153,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause","ranges":[{"startOffset":77175,"endOffset":77197,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedFunction","ranges":[{"startOffset":77220,"endOffset":77243,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariableStatement","ranges":[{"startOffset":77275,"endOffset":77307,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":77325,"endOffset":77343,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierANonContextualKeyword","ranges":[{"startOffset":77382,"endOffset":77421,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":77443,"endOffset":77465,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierOrThisTypeNode","ranges":[{"startOffset":77497,"endOffset":77529,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPart","ranges":[{"startOffset":77551,"endOffset":77573,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":77596,"endOffset":77619,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierText","ranges":[{"startOffset":77641,"endOffset":77663,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypePredicate","ranges":[{"startOffset":77694,"endOffset":77725,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypeReference","ranges":[{"startOffset":77756,"endOffset":77787,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":77806,"endOffset":77825,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredFileFromWildCardWatching","ranges":[{"startOffset":77864,"endOffset":77903,"count":0}],"isBlockCoverage":false},{"functionName":"isImplicitGlob","ranges":[{"startOffset":77923,"endOffset":77943,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":77966,"endOffset":77989,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributeName","ranges":[{"startOffset":78016,"endOffset":78043,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributes","ranges":[{"startOffset":78067,"endOffset":78091,"count":0}],"isBlockCoverage":false},{"functionName":"isImportCall","ranges":[{"startOffset":78109,"endOffset":78127,"count":0}],"isBlockCoverage":false},{"functionName":"isImportClause","ranges":[{"startOffset":78147,"endOffset":78167,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":78192,"endOffset":78217,"count":0}],"isBlockCoverage":false},{"functionName":"isImportEqualsDeclaration","ranges":[{"startOffset":78248,"endOffset":78279,"count":0}],"isBlockCoverage":false},{"functionName":"isImportKeyword","ranges":[{"startOffset":78300,"endOffset":78321,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta","ranges":[{"startOffset":78339,"endOffset":78357,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifier","ranges":[{"startOffset":78388,"endOffset":78419,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifierName","ranges":[{"startOffset":78454,"endOffset":78489,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":78512,"endOffset":78535,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeAssertionContainer","ranges":[{"startOffset":78571,"endOffset":78607,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeNode","ranges":[{"startOffset":78629,"endOffset":78651,"count":0}],"isBlockCoverage":false},{"functionName":"isImportable","ranges":[{"startOffset":78669,"endOffset":78687,"count":0}],"isBlockCoverage":false},{"functionName":"isInComment","ranges":[{"startOffset":78704,"endOffset":78721,"count":0}],"isBlockCoverage":false},{"functionName":"isInCompoundLikeAssignment","ranges":[{"startOffset":78753,"endOffset":78785,"count":0}],"isBlockCoverage":false},{"functionName":"isInExpressionContext","ranges":[{"startOffset":78812,"endOffset":78839,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSDoc","ranges":[{"startOffset":78854,"endOffset":78869,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSFile","ranges":[{"startOffset":78885,"endOffset":78901,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXText","ranges":[{"startOffset":78918,"endOffset":78935,"count":0}],"isBlockCoverage":false},{"functionName":"isInJsonFile","ranges":[{"startOffset":78953,"endOffset":78971,"count":0}],"isBlockCoverage":false},{"functionName":"isInNonReferenceComment","ranges":[{"startOffset":79000,"endOffset":79029,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceComment","ranges":[{"startOffset":79055,"endOffset":79081,"count":0}],"isBlockCoverage":false},{"functionName":"isInRightSideOfInternalImportEqualsDeclaration","ranges":[{"startOffset":79133,"endOffset":79185,"count":0}],"isBlockCoverage":false},{"functionName":"isInString","ranges":[{"startOffset":79201,"endOffset":79217,"count":0}],"isBlockCoverage":false},{"functionName":"isInTemplateString","ranges":[{"startOffset":79241,"endOffset":79265,"count":0}],"isBlockCoverage":false},{"functionName":"isInTopLevelContext","ranges":[{"startOffset":79290,"endOffset":79315,"count":0}],"isBlockCoverage":false},{"functionName":"isInTypeQuery","ranges":[{"startOffset":79334,"endOffset":79353,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalBuildInfo","ranges":[{"startOffset":79381,"endOffset":79409,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalBundleEmitBuildInfo","ranges":[{"startOffset":79447,"endOffset":79485,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalCompilation","ranges":[{"startOffset":79515,"endOffset":79545,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignatureDeclaration","ranges":[{"startOffset":79578,"endOffset":79611,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexedAccessTypeNode","ranges":[{"startOffset":79640,"endOffset":79669,"count":0}],"isBlockCoverage":false},{"functionName":"isInferTypeNode","ranges":[{"startOffset":79690,"endOffset":79711,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinityOrNaNString","ranges":[{"startOffset":79738,"endOffset":79765,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedProperty","ranges":[{"startOffset":79792,"endOffset":79819,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedVariable","ranges":[{"startOffset":79846,"endOffset":79873,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElement","ranges":[{"startOffset":79897,"endOffset":79921,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElementOrAttribute","ranges":[{"startOffset":79956,"endOffset":79991,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":80016,"endOffset":80041,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideTemplateLiteral","ranges":[{"startOffset":80070,"endOffset":80099,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceOfExpression","ranges":[{"startOffset":80127,"endOffset":80155,"count":0}],"isBlockCoverage":false},{"functionName":"isInstantiatedModule","ranges":[{"startOffset":80181,"endOffset":80207,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":80235,"endOffset":80263,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalDeclaration","ranges":[{"startOffset":80290,"endOffset":80317,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalModuleImportEqualsDeclaration","ranges":[{"startOffset":80362,"endOffset":80407,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalName","ranges":[{"startOffset":80427,"endOffset":80447,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeNode","ranges":[{"startOffset":80475,"endOffset":80503,"count":0}],"isBlockCoverage":false},{"functionName":"isIntrinsicJsxName","ranges":[{"startOffset":80527,"endOffset":80551,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":80577,"endOffset":80603,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDoc","ranges":[{"startOffset":80616,"endOffset":80629,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAllType","ranges":[{"startOffset":80649,"endOffset":80669,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAugmentsTag","ranges":[{"startOffset":80693,"endOffset":80717,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAuthorTag","ranges":[{"startOffset":80739,"endOffset":80761,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCallbackTag","ranges":[{"startOffset":80785,"endOffset":80809,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocClassTag","ranges":[{"startOffset":80830,"endOffset":80851,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCommentContainingNode","ranges":[{"startOffset":80885,"endOffset":80919,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocConstructSignature","ranges":[{"startOffset":80950,"endOffset":80981,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocDeprecatedTag","ranges":[{"startOffset":81007,"endOffset":81033,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocEnumTag","ranges":[{"startOffset":81053,"endOffset":81073,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocFunctionType","ranges":[{"startOffset":81098,"endOffset":81123,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImplementsTag","ranges":[{"startOffset":81149,"endOffset":81175,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImportTag","ranges":[{"startOffset":81197,"endOffset":81219,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocIndexSignature","ranges":[{"startOffset":81246,"endOffset":81273,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLikeText","ranges":[{"startOffset":81294,"endOffset":81315,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLink","ranges":[{"startOffset":81332,"endOffset":81349,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkCode","ranges":[{"startOffset":81370,"endOffset":81391,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkLike","ranges":[{"startOffset":81412,"endOffset":81433,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkPlain","ranges":[{"startOffset":81455,"endOffset":81477,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocMemberName","ranges":[{"startOffset":81500,"endOffset":81523,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNameReference","ranges":[{"startOffset":81549,"endOffset":81575,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamepathType","ranges":[{"startOffset":81600,"endOffset":81625,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamespaceBody","ranges":[{"startOffset":81651,"endOffset":81677,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNode","ranges":[{"startOffset":81694,"endOffset":81711,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNonNullableType","ranges":[{"startOffset":81739,"endOffset":81767,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNullableType","ranges":[{"startOffset":81792,"endOffset":81817,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalParameter","ranges":[{"startOffset":81847,"endOffset":81877,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalType","ranges":[{"startOffset":81902,"endOffset":81927,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverloadTag","ranges":[{"startOffset":81951,"endOffset":81975,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverrideTag","ranges":[{"startOffset":81999,"endOffset":82023,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocParameterTag","ranges":[{"startOffset":82048,"endOffset":82073,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPrivateTag","ranges":[{"startOffset":82096,"endOffset":82119,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyLikeTag","ranges":[{"startOffset":82147,"endOffset":82175,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyTag","ranges":[{"startOffset":82199,"endOffset":82223,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocProtectedTag","ranges":[{"startOffset":82248,"endOffset":82273,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPublicTag","ranges":[{"startOffset":82295,"endOffset":82317,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReadonlyTag","ranges":[{"startOffset":82341,"endOffset":82365,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReturnTag","ranges":[{"startOffset":82387,"endOffset":82409,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesExpression","ranges":[{"startOffset":82441,"endOffset":82473,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesTag","ranges":[{"startOffset":82498,"endOffset":82523,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSeeTag","ranges":[{"startOffset":82542,"endOffset":82561,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSignature","ranges":[{"startOffset":82583,"endOffset":82605,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTag","ranges":[{"startOffset":82621,"endOffset":82637,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTemplateTag","ranges":[{"startOffset":82661,"endOffset":82685,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThisTag","ranges":[{"startOffset":82705,"endOffset":82725,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThrowsTag","ranges":[{"startOffset":82747,"endOffset":82769,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAlias","ranges":[{"startOffset":82791,"endOffset":82813,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAssertion","ranges":[{"startOffset":82839,"endOffset":82865,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeExpression","ranges":[{"startOffset":82892,"endOffset":82919,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeLiteral","ranges":[{"startOffset":82943,"endOffset":82967,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeTag","ranges":[{"startOffset":82987,"endOffset":83007,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypedefTag","ranges":[{"startOffset":83030,"endOffset":83053,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownTag","ranges":[{"startOffset":83076,"endOffset":83099,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownType","ranges":[{"startOffset":83123,"endOffset":83147,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocVariadicType","ranges":[{"startOffset":83172,"endOffset":83197,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXTagName","ranges":[{"startOffset":83215,"endOffset":83233,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonEqual","ranges":[{"startOffset":83250,"endOffset":83267,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonSourceFile","ranges":[{"startOffset":83289,"endOffset":83311,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttribute","ranges":[{"startOffset":83331,"endOffset":83351,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeLike","ranges":[{"startOffset":83375,"endOffset":83399,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeName","ranges":[{"startOffset":83423,"endOffset":83447,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributes","ranges":[{"startOffset":83468,"endOffset":83489,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxCallLike","ranges":[{"startOffset":83508,"endOffset":83527,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxChild","ranges":[{"startOffset":83543,"endOffset":83559,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingElement","ranges":[{"startOffset":83584,"endOffset":83609,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingFragment","ranges":[{"startOffset":83635,"endOffset":83661,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxElement","ranges":[{"startOffset":83679,"endOffset":83697,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpression","ranges":[{"startOffset":83718,"endOffset":83739,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxFragment","ranges":[{"startOffset":83758,"endOffset":83777,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxNamespacedName","ranges":[{"startOffset":83802,"endOffset":83827,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningElement","ranges":[{"startOffset":83852,"endOffset":83877,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningFragment","ranges":[{"startOffset":83903,"endOffset":83929,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElement","ranges":[{"startOffset":83958,"endOffset":83987,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElementTagName","ranges":[{"startOffset":84023,"endOffset":84059,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElement","ranges":[{"startOffset":84088,"endOffset":84117,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSpreadAttribute","ranges":[{"startOffset":84143,"endOffset":84169,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxTagNameExpression","ranges":[{"startOffset":84197,"endOffset":84225,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxText","ranges":[{"startOffset":84240,"endOffset":84255,"count":0}],"isBlockCoverage":false},{"functionName":"isJumpStatementTarget","ranges":[{"startOffset":84282,"endOffset":84309,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":84324,"endOffset":84339,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordOrPunctuation","ranges":[{"startOffset":84367,"endOffset":84395,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownSymbol","ranges":[{"startOffset":84414,"endOffset":84433,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelName","ranges":[{"startOffset":84450,"endOffset":84467,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelOfLabeledStatement","ranges":[{"startOffset":84498,"endOffset":84529,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":84553,"endOffset":84577,"count":0}],"isBlockCoverage":false},{"functionName":"isLateVisibilityPaintedStatement","ranges":[{"startOffset":84615,"endOffset":84653,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideExpression","ranges":[{"startOffset":84683,"endOffset":84713,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":84724,"endOffset":84735,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":84752,"endOffset":84769,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralComputedPropertyDeclarationName","ranges":[{"startOffset":84815,"endOffset":84861,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpression","ranges":[{"startOffset":84886,"endOffset":84911,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpressionOfObject","ranges":[{"startOffset":84944,"endOffset":84977,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralImportTypeNode","ranges":[{"startOffset":85006,"endOffset":85035,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralKind","ranges":[{"startOffset":85054,"endOffset":85073,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralNameOfPropertyDeclarationOrIndexAccess","ranges":[{"startOffset":85126,"endOffset":85179,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLiteral","ranges":[{"startOffset":85205,"endOffset":85231,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeNode","ranges":[{"startOffset":85254,"endOffset":85277,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalName","ranges":[{"startOffset":85294,"endOffset":85311,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator","ranges":[{"startOffset":85334,"endOffset":85357,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentExpression","ranges":[{"startOffset":85404,"endOffset":85451,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentOperator","ranges":[{"startOffset":85496,"endOffset":85541,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryExpression","ranges":[{"startOffset":85584,"endOffset":85627,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryOperator","ranges":[{"startOffset":85668,"endOffset":85709,"count":0}],"isBlockCoverage":false},{"functionName":"isMappedTypeNode","ranges":[{"startOffset":85731,"endOffset":85753,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberName","ranges":[{"startOffset":85771,"endOffset":85789,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":85809,"endOffset":85829,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodDeclaration","ranges":[{"startOffset":85854,"endOffset":85879,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodOrAccessor","ranges":[{"startOffset":85903,"endOffset":85927,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodSignature","ranges":[{"startOffset":85950,"endOffset":85973,"count":0}],"isBlockCoverage":false},{"functionName":"isMinusToken","ranges":[{"startOffset":85991,"endOffset":86009,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingDeclaration","ranges":[{"startOffset":86035,"endOffset":86061,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingPackageJsonInfo","ranges":[{"startOffset":86091,"endOffset":86121,"count":0}],"isBlockCoverage":false},{"functionName":"isModifier","ranges":[{"startOffset":86137,"endOffset":86153,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierKind","ranges":[{"startOffset":86173,"endOffset":86193,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike","ranges":[{"startOffset":86213,"endOffset":86233,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleAugmentationExternal","ranges":[{"startOffset":86267,"endOffset":86301,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBlock","ranges":[{"startOffset":86320,"endOffset":86339,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBody","ranges":[{"startOffset":86357,"endOffset":86375,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":86400,"endOffset":86425,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportName","ranges":[{"startOffset":86449,"endOffset":86473,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsAccessExpression","ranges":[{"startOffset":86510,"endOffset":86547,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleIdentifier","ranges":[{"startOffset":86571,"endOffset":86595,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleName","ranges":[{"startOffset":86613,"endOffset":86631,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleOrEnumDeclaration","ranges":[{"startOffset":86662,"endOffset":86693,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleReference","ranges":[{"startOffset":86716,"endOffset":86739,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierLike","ranges":[{"startOffset":86766,"endOffset":86793,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleWithStringLiteralName","ranges":[{"startOffset":86828,"endOffset":86863,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfFunctionDeclaration","ranges":[{"startOffset":86896,"endOffset":86929,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfModuleDeclaration","ranges":[{"startOffset":86960,"endOffset":86991,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDeclaration","ranges":[{"startOffset":87015,"endOffset":87039,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluation","ranges":[{"startOffset":87062,"endOffset":87085,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluationSource","ranges":[{"startOffset":87114,"endOffset":87143,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExportBindings","ranges":[{"startOffset":87170,"endOffset":87197,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExports","ranges":[{"startOffset":87217,"endOffset":87237,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportBindings","ranges":[{"startOffset":87264,"endOffset":87291,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImports","ranges":[{"startOffset":87311,"endOffset":87331,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportsOrExports","ranges":[{"startOffset":87360,"endOffset":87389,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedTupleMember","ranges":[{"startOffset":87413,"endOffset":87437,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceBody","ranges":[{"startOffset":87458,"endOffset":87479,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExport","ranges":[{"startOffset":87502,"endOffset":87525,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExportDeclaration","ranges":[{"startOffset":87559,"endOffset":87593,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceImport","ranges":[{"startOffset":87616,"endOffset":87639,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReexportDeclaration","ranges":[{"startOffset":87675,"endOffset":87711,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":87732,"endOffset":87753,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpressionTarget","ranges":[{"startOffset":87780,"endOffset":87807,"count":0}],"isBlockCoverage":false},{"functionName":"isNewScopeNode","ranges":[{"startOffset":87827,"endOffset":87847,"count":0}],"isBlockCoverage":false},{"functionName":"isNoSubstitutionTemplateLiteral","ranges":[{"startOffset":87884,"endOffset":87921,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArray","ranges":[{"startOffset":87938,"endOffset":87955,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArrayMultiLine","ranges":[{"startOffset":87981,"endOffset":88007,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeDescendantOf","ranges":[{"startOffset":88031,"endOffset":88055,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeKind","ranges":[{"startOffset":88071,"endOffset":88087,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeLikeSystem","ranges":[{"startOffset":88109,"endOffset":88131,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModulesDirectory","ranges":[{"startOffset":88159,"endOffset":88187,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeWithPossibleHoistedDeclaration","ranges":[{"startOffset":88229,"endOffset":88271,"count":0}],"isBlockCoverage":false},{"functionName":"isNonContextualKeyword","ranges":[{"startOffset":88299,"endOffset":88327,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalAmbientModule","ranges":[{"startOffset":88357,"endOffset":88387,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAccess","ranges":[{"startOffset":88408,"endOffset":88429,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullChain","ranges":[{"startOffset":88449,"endOffset":88469,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullExpression","ranges":[{"startOffset":88494,"endOffset":88519,"count":0}],"isBlockCoverage":false},{"functionName":"isNonStaticMethodOrAccessorWithPrivateName","ranges":[{"startOffset":88567,"endOffset":88615,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedStatement","ranges":[{"startOffset":88642,"endOffset":88669,"count":0}],"isBlockCoverage":false},{"functionName":"isNullishCoalesce","ranges":[{"startOffset":88692,"endOffset":88715,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":88729,"endOffset":88743,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":88765,"endOffset":88787,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteralName","ranges":[{"startOffset":88813,"endOffset":88839,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingElementWithoutPropertyName","ranges":[{"startOffset":88886,"endOffset":88933,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentElement","ranges":[{"startOffset":88973,"endOffset":89013,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentPattern","ranges":[{"startOffset":89053,"endOffset":89093,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingPattern","ranges":[{"startOffset":89121,"endOffset":89149,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElement","ranges":[{"startOffset":89177,"endOffset":89205,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElementLike","ranges":[{"startOffset":89237,"endOffset":89269,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralExpression","ranges":[{"startOffset":89300,"endOffset":89331,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralMethod","ranges":[{"startOffset":89358,"endOffset":89385,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralOrClassExpressionMethodOrAccessor","ranges":[{"startOffset":89439,"endOffset":89493,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeDeclaration","ranges":[{"startOffset":89522,"endOffset":89551,"count":0}],"isBlockCoverage":false},{"functionName":"isOmittedExpression","ranges":[{"startOffset":89576,"endOffset":89601,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":89622,"endOffset":89643,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChainRoot","ranges":[{"startOffset":89668,"endOffset":89693,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalDeclaration","ranges":[{"startOffset":89720,"endOffset":89747,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalJSDocPropertyLikeTag","ranges":[{"startOffset":89783,"endOffset":89819,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalTypeNode","ranges":[{"startOffset":89843,"endOffset":89867,"count":0}],"isBlockCoverage":false},{"functionName":"isOuterExpression","ranges":[{"startOffset":89890,"endOffset":89913,"count":0}],"isBlockCoverage":false},{"functionName":"isOutermostOptionalChain","ranges":[{"startOffset":89943,"endOffset":89973,"count":0}],"isBlockCoverage":false},{"functionName":"isOverrideModifier","ranges":[{"startOffset":89997,"endOffset":90021,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageJsonInfo","ranges":[{"startOffset":90044,"endOffset":90067,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedArrayLiteral","ranges":[{"startOffset":90093,"endOffset":90119,"count":0}],"isBlockCoverage":false},{"functionName":"isParameter","ranges":[{"startOffset":90136,"endOffset":90153,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyDeclaration","ranges":[{"startOffset":90189,"endOffset":90225,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyModifier","ranges":[{"startOffset":90258,"endOffset":90291,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":90322,"endOffset":90353,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedTypeNode","ranges":[{"startOffset":90382,"endOffset":90411,"count":0}],"isBlockCoverage":false},{"functionName":"isParseTreeNode","ranges":[{"startOffset":90432,"endOffset":90453,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfParameterDeclaration","ranges":[{"startOffset":90487,"endOffset":90521,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeNode","ranges":[{"startOffset":90543,"endOffset":90565,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":90612,"endOffset":90659,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeQuery","ranges":[{"startOffset":90682,"endOffset":90705,"count":0}],"isBlockCoverage":false},{"functionName":"isPartiallyEmittedExpression","ranges":[{"startOffset":90739,"endOffset":90773,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternMatch","ranges":[{"startOffset":90793,"endOffset":90813,"count":0}],"isBlockCoverage":false},{"functionName":"isPinnedComment","ranges":[{"startOffset":90834,"endOffset":90855,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainJsFile","ranges":[{"startOffset":90874,"endOffset":90893,"count":0}],"isBlockCoverage":false},{"functionName":"isPlusToken","ranges":[{"startOffset":90910,"endOffset":90927,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyTypeArgumentPosition","ranges":[{"startOffset":90963,"endOffset":90999,"count":0}],"isBlockCoverage":false},{"functionName":"isPostfixUnaryExpression","ranges":[{"startOffset":91029,"endOffset":91059,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpression","ranges":[{"startOffset":91088,"endOffset":91117,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitiveLiteralValue","ranges":[{"startOffset":91146,"endOffset":91175,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifier","ranges":[{"startOffset":91200,"endOffset":91225,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierClassElementDeclaration","ranges":[{"startOffset":91273,"endOffset":91321,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierPropertyAccessExpression","ranges":[{"startOffset":91370,"endOffset":91419,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierSymbol","ranges":[{"startOffset":91450,"endOffset":91481,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramUptoDate","ranges":[{"startOffset":91504,"endOffset":91527,"count":0}],"isBlockCoverage":false},{"functionName":"isPrologueDirective","ranges":[{"startOffset":91552,"endOffset":91577,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessChain","ranges":[{"startOffset":91604,"endOffset":91631,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessEntityNameExpression","ranges":[{"startOffset":91673,"endOffset":91715,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessExpression","ranges":[{"startOffset":91747,"endOffset":91779,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedName","ranges":[{"startOffset":91816,"endOffset":91853,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedNameOrImportTypeNode","ranges":[{"startOffset":91906,"endOffset":91959,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAssignment","ranges":[{"startOffset":91985,"endOffset":92011,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDeclaration","ranges":[{"startOffset":92038,"endOffset":92065,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyName","ranges":[{"startOffset":92085,"endOffset":92105,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyNameLiteral","ranges":[{"startOffset":92132,"endOffset":92159,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertySignature","ranges":[{"startOffset":92184,"endOffset":92209,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypeAccess","ranges":[{"startOffset":92232,"endOffset":92255,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypePropertyAssignment","ranges":[{"startOffset":92290,"endOffset":92325,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuation","ranges":[{"startOffset":92344,"endOffset":92363,"count":0}],"isBlockCoverage":false},{"functionName":"isPushOrUnshiftIdentifier","ranges":[{"startOffset":92394,"endOffset":92425,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedName","ranges":[{"startOffset":92446,"endOffset":92467,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionDotToken","ranges":[{"startOffset":92491,"endOffset":92515,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrExclamationToken","ranges":[{"startOffset":92549,"endOffset":92583,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrPlusOrMinusToken","ranges":[{"startOffset":92617,"endOffset":92651,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionToken","ranges":[{"startOffset":92672,"endOffset":92693,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeyword","ranges":[{"startOffset":92716,"endOffset":92739,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeywordOrPlusOrMinusToken","ranges":[{"startOffset":92780,"endOffset":92821,"count":0}],"isBlockCoverage":false},{"functionName":"isRecognizedTripleSlashComment","ranges":[{"startOffset":92857,"endOffset":92893,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceFileLocation","ranges":[{"startOffset":92922,"endOffset":92951,"count":0}],"isBlockCoverage":false},{"functionName":"isReferencedFile","ranges":[{"startOffset":92973,"endOffset":92995,"count":0}],"isBlockCoverage":false},{"functionName":"isRegularExpressionLiteral","ranges":[{"startOffset":93027,"endOffset":93059,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCall","ranges":[{"startOffset":93078,"endOffset":93097,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireVariableStatement","ranges":[{"startOffset":93129,"endOffset":93161,"count":0}],"isBlockCoverage":false},{"functionName":"isRestParameter","ranges":[{"startOffset":93182,"endOffset":93203,"count":0}],"isBlockCoverage":false},{"functionName":"isRestTypeNode","ranges":[{"startOffset":93223,"endOffset":93243,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":93266,"endOffset":93289,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":93337,"endOffset":93385,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfAccessExpression","ranges":[{"startOffset":93420,"endOffset":93455,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfInstanceofExpression","ranges":[{"startOffset":93494,"endOffset":93533,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfPropertyAccess","ranges":[{"startOffset":93566,"endOffset":93599,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedName","ranges":[{"startOffset":93631,"endOffset":93663,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess","ranges":[{"startOffset":93711,"endOffset":93759,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName","ranges":[{"startOffset":93824,"endOffset":93889,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":93911,"endOffset":93933,"count":0}],"isBlockCoverage":false},{"functionName":"isSameEntityName","ranges":[{"startOffset":93955,"endOffset":93977,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiesExpression","ranges":[{"startOffset":94004,"endOffset":94031,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonClassElement","ranges":[{"startOffset":94060,"endOffset":94089,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessor","ranges":[{"startOffset":94108,"endOffset":94127,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessorDeclaration","ranges":[{"startOffset":94157,"endOffset":94187,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperatorOrHigher","ranges":[{"startOffset":94216,"endOffset":94245,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModuleSymbol","ranges":[{"startOffset":94281,"endOffset":94317,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyAssignment","ranges":[{"startOffset":94352,"endOffset":94387,"count":0}],"isBlockCoverage":false},{"functionName":"isSideEffectImport","ranges":[{"startOffset":94411,"endOffset":94435,"count":0}],"isBlockCoverage":false},{"functionName":"isSignedNumericLiteral","ranges":[{"startOffset":94463,"endOffset":94491,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleCopiableExpression","ranges":[{"startOffset":94523,"endOffset":94555,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleInlineableExpression","ranges":[{"startOffset":94589,"endOffset":94623,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameterList","ranges":[{"startOffset":94650,"endOffset":94677,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleOrDoubleQuote","ranges":[{"startOffset":94704,"endOffset":94731,"count":0}],"isBlockCoverage":false},{"functionName":"isSolutionConfig","ranges":[{"startOffset":94753,"endOffset":94775,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":94796,"endOffset":94817,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFile","ranges":[{"startOffset":94835,"endOffset":94853,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileFromLibrary","ranges":[{"startOffset":94882,"endOffset":94911,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileJS","ranges":[{"startOffset":94931,"endOffset":94951,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJson","ranges":[{"startOffset":94976,"endOffset":95001,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMapping","ranges":[{"startOffset":95022,"endOffset":95043,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecialPropertyDeclaration","ranges":[{"startOffset":95077,"endOffset":95111,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadAssignment","ranges":[{"startOffset":95135,"endOffset":95159,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":95180,"endOffset":95201,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":95218,"endOffset":95235,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementButNotDeclaration","ranges":[{"startOffset":95269,"endOffset":95303,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":95327,"endOffset":95351,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementWithLocals","ranges":[{"startOffset":95378,"endOffset":95405,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":95419,"endOffset":95433,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticModifier","ranges":[{"startOffset":95455,"endOffset":95477,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":95491,"endOffset":95505,"count":0}],"isBlockCoverage":false},{"functionName":"isStringANonContextualKeyword","ranges":[{"startOffset":95540,"endOffset":95575,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAndEmptyAnonymousObjectIntersection","ranges":[{"startOffset":95624,"endOffset":95673,"count":0}],"isBlockCoverage":false},{"functionName":"isStringDoubleQuoted","ranges":[{"startOffset":95699,"endOffset":95725,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":95746,"endOffset":95767,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralLike","ranges":[{"startOffset":95792,"endOffset":95817,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrJsxExpression","ranges":[{"startOffset":95853,"endOffset":95889,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrTemplate","ranges":[{"startOffset":95920,"endOffset":95951,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteralLike","ranges":[{"startOffset":95985,"endOffset":96019,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrRegularExpressionOrTemplateLiteral","ranges":[{"startOffset":96069,"endOffset":96119,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTextContainingNode","ranges":[{"startOffset":96151,"endOffset":96183,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperCall","ranges":[{"startOffset":96200,"endOffset":96217,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperKeyword","ranges":[{"startOffset":96237,"endOffset":96257,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperProperty","ranges":[{"startOffset":96278,"endOffset":96299,"count":0}],"isBlockCoverage":false},{"functionName":"isSupportedSourceFileName","ranges":[{"startOffset":96330,"endOffset":96361,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":96384,"endOffset":96407,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxList","ranges":[{"startOffset":96425,"endOffset":96443,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticExpression","ranges":[{"startOffset":96470,"endOffset":96497,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticReference","ranges":[{"startOffset":96523,"endOffset":96549,"count":0}],"isBlockCoverage":false},{"functionName":"isTagName","ranges":[{"startOffset":96564,"endOffset":96579,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":96611,"endOffset":96643,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateTag","ranges":[{"startOffset":96668,"endOffset":96693,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateExpression","ranges":[{"startOffset":96719,"endOffset":96745,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateHead","ranges":[{"startOffset":96765,"endOffset":96785,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":96808,"endOffset":96831,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralKind","ranges":[{"startOffset":96858,"endOffset":96885,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralToken","ranges":[{"startOffset":96913,"endOffset":96941,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeNode","ranges":[{"startOffset":96972,"endOffset":97003,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeSpan","ranges":[{"startOffset":97034,"endOffset":97065,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddle","ranges":[{"startOffset":97087,"endOffset":97109,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddleOrTemplateTail","ranges":[{"startOffset":97145,"endOffset":97181,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateSpan","ranges":[{"startOffset":97201,"endOffset":97221,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateTail","ranges":[{"startOffset":97241,"endOffset":97261,"count":0}],"isBlockCoverage":false},{"functionName":"isTextWhiteSpaceLike","ranges":[{"startOffset":97287,"endOffset":97313,"count":0}],"isBlockCoverage":false},{"functionName":"isThis","ranges":[{"startOffset":97325,"endOffset":97337,"count":0}],"isBlockCoverage":false},{"functionName":"isThisContainerOrFunctionBlock","ranges":[{"startOffset":97373,"endOffset":97409,"count":0}],"isBlockCoverage":false},{"functionName":"isThisIdentifier","ranges":[{"startOffset":97431,"endOffset":97453,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInTypeQuery","ranges":[{"startOffset":97476,"endOffset":97499,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedDeclaration","ranges":[{"startOffset":97533,"endOffset":97567,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedObjectBindingExpression","ranges":[{"startOffset":97613,"endOffset":97659,"count":0}],"isBlockCoverage":false},{"functionName":"isThisProperty","ranges":[{"startOffset":97679,"endOffset":97699,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeNode","ranges":[{"startOffset":97719,"endOffset":97739,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeParameter","ranges":[{"startOffset":97764,"endOffset":97789,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypePredicate","ranges":[{"startOffset":97814,"endOffset":97839,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":97861,"endOffset":97883,"count":0}],"isBlockCoverage":false},{"functionName":"isToken","ranges":[{"startOffset":97896,"endOffset":97909,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenKind","ranges":[{"startOffset":97926,"endOffset":97943,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceEnabled","ranges":[{"startOffset":97963,"endOffset":97983,"count":0}],"isBlockCoverage":false},{"functionName":"isTransientSymbol","ranges":[{"startOffset":98006,"endOffset":98029,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia","ranges":[{"startOffset":98043,"endOffset":98057,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":98077,"endOffset":98097,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeNode","ranges":[{"startOffset":98118,"endOffset":98139,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":98156,"endOffset":98173,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAliasDeclaration","ranges":[{"startOffset":98201,"endOffset":98229,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionExpression","ranges":[{"startOffset":98260,"endOffset":98291,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDeclaration","ranges":[{"startOffset":98314,"endOffset":98337,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeElement","ranges":[{"startOffset":98356,"endOffset":98375,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeyword","ranges":[{"startOffset":98394,"endOffset":98413,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordTokenOrIdentifier","ranges":[{"startOffset":98449,"endOffset":98485,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeLiteralNode","ranges":[{"startOffset":98508,"endOffset":98531,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNode","ranges":[{"startOffset":98547,"endOffset":98563,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNodeKind","ranges":[{"startOffset":98583,"endOffset":98603,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOfExpression","ranges":[{"startOffset":98627,"endOffset":98651,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyExportDeclaration","ranges":[{"startOffset":98684,"endOffset":98717,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportDeclaration","ranges":[{"startOffset":98750,"endOffset":98783,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":98824,"endOffset":98865,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOperatorNode","ranges":[{"startOffset":98889,"endOffset":98913,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":98945,"endOffset":98977,"count":0}],"isBlockCoverage":false},{"functionName":"isTypePredicateNode","ranges":[{"startOffset":99002,"endOffset":99027,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeQueryNode","ranges":[{"startOffset":99048,"endOffset":99069,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceNode","ranges":[{"startOffset":99094,"endOffset":99119,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceType","ranges":[{"startOffset":99144,"endOffset":99169,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeUsableAsPropertyName","ranges":[{"startOffset":99201,"endOffset":99233,"count":0}],"isBlockCoverage":false},{"functionName":"isUMDExportSymbol","ranges":[{"startOffset":99256,"endOffset":99279,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":99302,"endOffset":99325,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionWithWrite","ranges":[{"startOffset":99357,"endOffset":99389,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierStart","ranges":[{"startOffset":99419,"endOffset":99449,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeNode","ranges":[{"startOffset":99470,"endOffset":99491,"count":0}],"isBlockCoverage":false},{"functionName":"isUrl","ranges":[{"startOffset":99502,"endOffset":99513,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBigIntString","ranges":[{"startOffset":99538,"endOffset":99563,"count":0}],"isBlockCoverage":false},{"functionName":"isValidESSymbolDeclaration","ranges":[{"startOffset":99595,"endOffset":99627,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTypeOnlyAliasUseSite","ranges":[{"startOffset":99660,"endOffset":99693,"count":0}],"isBlockCoverage":false},{"functionName":"isValueSignatureDeclaration","ranges":[{"startOffset":99726,"endOffset":99759,"count":0}],"isBlockCoverage":false},{"functionName":"isVarAwaitUsing","ranges":[{"startOffset":99780,"endOffset":99801,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConst","ranges":[{"startOffset":99817,"endOffset":99833,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConstLike","ranges":[{"startOffset":99853,"endOffset":99873,"count":0}],"isBlockCoverage":false},{"functionName":"isVarUsing","ranges":[{"startOffset":99889,"endOffset":99905,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":99932,"endOffset":99959,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInVariableStatement","ranges":[{"startOffset":100005,"endOffset":100051,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToBareOrAccessedRequire","ranges":[{"startOffset":100112,"endOffset":100173,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToRequire","ranges":[{"startOffset":100220,"endOffset":100267,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationList","ranges":[{"startOffset":100298,"endOffset":100329,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike","ranges":[{"startOffset":100349,"endOffset":100369,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableStatement","ranges":[{"startOffset":100394,"endOffset":100419,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidExpression","ranges":[{"startOffset":100441,"endOffset":100463,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchSet","ranges":[{"startOffset":100479,"endOffset":100495,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":100517,"endOffset":100539,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceLike","ranges":[{"startOffset":100561,"endOffset":100583,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceSingleLine","ranges":[{"startOffset":100611,"endOffset":100639,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":100660,"endOffset":100681,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccess","ranges":[{"startOffset":100700,"endOffset":100719,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteOnlyAccess","ranges":[{"startOffset":100742,"endOffset":100765,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":100788,"endOffset":100811,"count":0}],"isBlockCoverage":false},{"functionName":"jsxModeNeedsExplicitImport","ranges":[{"startOffset":100843,"endOffset":100875,"count":0}],"isBlockCoverage":false},{"functionName":"keywordPart","ranges":[{"startOffset":100892,"endOffset":100909,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":100919,"endOffset":100929,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":100950,"endOffset":100971,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":100983,"endOffset":100995,"count":0}],"isBlockCoverage":false},{"functionName":"libMap","ranges":[{"startOffset":101007,"endOffset":101019,"count":0}],"isBlockCoverage":false},{"functionName":"libs","ranges":[{"startOffset":101029,"endOffset":101039,"count":0}],"isBlockCoverage":false},{"functionName":"lineBreakPart","ranges":[{"startOffset":101058,"endOffset":101077,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromGlobalCache","ranges":[{"startOffset":101108,"endOffset":101139,"count":0}],"isBlockCoverage":false},{"functionName":"loadWithModeAwareCache","ranges":[{"startOffset":101167,"endOffset":101195,"count":0}],"isBlockCoverage":false},{"functionName":"makeIdentifierFromModuleName","ranges":[{"startOffset":101229,"endOffset":101263,"count":0}],"isBlockCoverage":false},{"functionName":"makeImport","ranges":[{"startOffset":101279,"endOffset":101295,"count":0}],"isBlockCoverage":false},{"functionName":"makeStringLiteral","ranges":[{"startOffset":101318,"endOffset":101341,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageName","ranges":[{"startOffset":101370,"endOffset":101399,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":101408,"endOffset":101417,"count":0}],"isBlockCoverage":false},{"functionName":"mapAllOrFail","ranges":[{"startOffset":101435,"endOffset":101453,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefined","ranges":[{"startOffset":101469,"endOffset":101485,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinedIterator","ranges":[{"startOffset":101509,"endOffset":101533,"count":0}],"isBlockCoverage":false},{"functionName":"mapEntries","ranges":[{"startOffset":101549,"endOffset":101565,"count":0}],"isBlockCoverage":false},{"functionName":"mapIterator","ranges":[{"startOffset":101582,"endOffset":101599,"count":0}],"isBlockCoverage":false},{"functionName":"mapOneOrMany","ranges":[{"startOffset":101617,"endOffset":101635,"count":0}],"isBlockCoverage":false},{"functionName":"mapToDisplayParts","ranges":[{"startOffset":101658,"endOffset":101681,"count":0}],"isBlockCoverage":false},{"functionName":"matchFiles","ranges":[{"startOffset":101697,"endOffset":101713,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatternOrExact","ranges":[{"startOffset":101738,"endOffset":101763,"count":0}],"isBlockCoverage":false},{"functionName":"matchedText","ranges":[{"startOffset":101780,"endOffset":101797,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExclude","ranges":[{"startOffset":101817,"endOffset":101837,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExcludeWorker","ranges":[{"startOffset":101863,"endOffset":101889,"count":0}],"isBlockCoverage":false},{"functionName":"maxBy","ranges":[{"startOffset":101900,"endOffset":101911,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind","ranges":[{"startOffset":101926,"endOffset":101941,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSetLocalizedDiagnosticMessages","ranges":[{"startOffset":101982,"endOffset":102023,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":102036,"endOffset":102049,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeOne","ranges":[{"startOffset":102065,"endOffset":102081,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":102090,"endOffset":102099,"count":0}],"isBlockCoverage":false},{"functionName":"minAndMax","ranges":[{"startOffset":102114,"endOffset":102129,"count":0}],"isBlockCoverage":false},{"functionName":"missingFileModifiedTime","ranges":[{"startOffset":102158,"endOffset":102187,"count":0}],"isBlockCoverage":false},{"functionName":"modifierToFlag","ranges":[{"startOffset":102207,"endOffset":102227,"count":0}],"isBlockCoverage":false},{"functionName":"modifiersToFlags","ranges":[{"startOffset":102249,"endOffset":102271,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameIsDefault","ranges":[{"startOffset":102302,"endOffset":102333,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameTextEscaped","ranges":[{"startOffset":102366,"endOffset":102399,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameTextUnescaped","ranges":[{"startOffset":102434,"endOffset":102469,"count":0}],"isBlockCoverage":false},{"functionName":"moduleOptionDeclaration","ranges":[{"startOffset":102498,"endOffset":102527,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionIsEqualTo","ranges":[{"startOffset":102558,"endOffset":102589,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionNameAndModeGetter","ranges":[{"startOffset":102628,"endOffset":102667,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionOptionDeclarations","ranges":[{"startOffset":102707,"endOffset":102747,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionSupportsPackageJsonExportsAndImports","ranges":[{"startOffset":102805,"endOffset":102863,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionUsesNodeModules","ranges":[{"startOffset":102900,"endOffset":102937,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierToValidIdentifier","ranges":[{"startOffset":102975,"endOffset":103013,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifiers","ranges":[{"startOffset":103035,"endOffset":103068,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSupportsImportAttributes","ranges":[{"startOffset":103104,"endOffset":103140,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSymbolToValidIdentifier","ranges":[{"startOffset":103175,"endOffset":103210,"count":0}],"isBlockCoverage":false},{"functionName":"moveEmitHelpers","ranges":[{"startOffset":103231,"endOffset":103252,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangeEnd","ranges":[{"startOffset":103270,"endOffset":103288,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastDecorators","ranges":[{"startOffset":103317,"endOffset":103346,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastModifiers","ranges":[{"startOffset":103374,"endOffset":103402,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePos","ranges":[{"startOffset":103420,"endOffset":103438,"count":0}],"isBlockCoverage":false},{"functionName":"moveSyntheticComments","ranges":[{"startOffset":103465,"endOffset":103492,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMap","ranges":[{"startOffset":103507,"endOffset":103522,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMapSkippingNewValues","ranges":[{"startOffset":103554,"endOffset":103586,"count":0}],"isBlockCoverage":false},{"functionName":"needsParentheses","ranges":[{"startOffset":103608,"endOffset":103630,"count":0}],"isBlockCoverage":false},{"functionName":"needsScopeMarker","ranges":[{"startOffset":103652,"endOffset":103674,"count":0}],"isBlockCoverage":false},{"functionName":"newCaseClauseTracker","ranges":[{"startOffset":103700,"endOffset":103726,"count":0}],"isBlockCoverage":false},{"functionName":"newPrivateEnvironment","ranges":[{"startOffset":103753,"endOffset":103780,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitNotification","ranges":[{"startOffset":103804,"endOffset":103828,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitSubstitution","ranges":[{"startOffset":103852,"endOffset":103876,"count":0}],"isBlockCoverage":false},{"functionName":"noTransformers","ranges":[{"startOffset":103896,"endOffset":103916,"count":0}],"isBlockCoverage":false},{"functionName":"noTruncationMaximumTruncationLength","ranges":[{"startOffset":103957,"endOffset":103998,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCanBeDecorated","ranges":[{"startOffset":104022,"endOffset":104046,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCoreModules","ranges":[{"startOffset":104067,"endOffset":104088,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasName","ranges":[{"startOffset":104105,"endOffset":104122,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsDecorated","ranges":[{"startOffset":104143,"endOffset":104164,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsMissing","ranges":[{"startOffset":104183,"endOffset":104202,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsPresent","ranges":[{"startOffset":104221,"endOffset":104240,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsSynthesized","ranges":[{"startOffset":104263,"endOffset":104286,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolver","ranges":[{"startOffset":104314,"endOffset":104342,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModulesPathPart","ranges":[{"startOffset":104367,"endOffset":104392,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextJsonConfigResolver","ranges":[{"startOffset":104424,"endOffset":104456,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOrChildIsDecorated","ranges":[{"startOffset":104484,"endOffset":104512,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOverlapsWithStartEnd","ranges":[{"startOffset":104542,"endOffset":104572,"count":0}],"isBlockCoverage":false},{"functionName":"nodePosToString","ranges":[{"startOffset":104593,"endOffset":104614,"count":0}],"isBlockCoverage":false},{"functionName":"nodeSeenTracker","ranges":[{"startOffset":104635,"endOffset":104656,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStartsNewLexicalEnvironment","ranges":[{"startOffset":104693,"endOffset":104730,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":104740,"endOffset":104750,"count":0}],"isBlockCoverage":false},{"functionName":"noopFileWatcher","ranges":[{"startOffset":104771,"endOffset":104792,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":104811,"endOffset":104830,"count":5}],"isBlockCoverage":true},{"functionName":"normalizeSlashes","ranges":[{"startOffset":104852,"endOffset":104874,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpans","ranges":[{"startOffset":104894,"endOffset":104914,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":104923,"endOffset":104932,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":104952,"endOffset":104972,"count":0}],"isBlockCoverage":false},{"functionName":"notImplementedResolver","ranges":[{"startOffset":105000,"endOffset":105028,"count":0}],"isBlockCoverage":false},{"functionName":"nullNodeConverters","ranges":[{"startOffset":105052,"endOffset":105076,"count":0}],"isBlockCoverage":false},{"functionName":"nullParenthesizerRules","ranges":[{"startOffset":105104,"endOffset":105132,"count":0}],"isBlockCoverage":false},{"functionName":"nullTransformationContext","ranges":[{"startOffset":105163,"endOffset":105194,"count":0}],"isBlockCoverage":false},{"functionName":"objectAllocator","ranges":[{"startOffset":105215,"endOffset":105236,"count":0}],"isBlockCoverage":false},{"functionName":"operatorPart","ranges":[{"startOffset":105254,"endOffset":105272,"count":0}],"isBlockCoverage":false},{"functionName":"optionDeclarations","ranges":[{"startOffset":105296,"endOffset":105320,"count":0}],"isBlockCoverage":false},{"functionName":"optionMapToObject","ranges":[{"startOffset":105343,"endOffset":105366,"count":0}],"isBlockCoverage":false},{"functionName":"optionsAffectingProgramStructure","ranges":[{"startOffset":105404,"endOffset":105442,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForBuild","ranges":[{"startOffset":105463,"endOffset":105484,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForWatch","ranges":[{"startOffset":105505,"endOffset":105526,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveChanges","ranges":[{"startOffset":105550,"endOffset":105574,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":105582,"endOffset":105590,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItem","ranges":[{"startOffset":105613,"endOffset":105636,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItemAt","ranges":[{"startOffset":105661,"endOffset":105686,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToPackageName","ranges":[{"startOffset":105714,"endOffset":105742,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToString","ranges":[{"startOffset":105765,"endOffset":105788,"count":0}],"isBlockCoverage":false},{"functionName":"parameterIsThisKeyword","ranges":[{"startOffset":105816,"endOffset":105844,"count":0}],"isBlockCoverage":false},{"functionName":"parameterNamePart","ranges":[{"startOffset":105867,"endOffset":105890,"count":0}],"isBlockCoverage":false},{"functionName":"parseBaseNodeFactory","ranges":[{"startOffset":105916,"endOffset":105942,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigInt","ranges":[{"startOffset":105959,"endOffset":105976,"count":0}],"isBlockCoverage":false},{"functionName":"parseBuildCommand","ranges":[{"startOffset":105999,"endOffset":106022,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLine","ranges":[{"startOffset":106044,"endOffset":106066,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLineWorker","ranges":[{"startOffset":106094,"endOffset":106122,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileTextToJson","ranges":[{"startOffset":106153,"endOffset":106184,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileWithSystem","ranges":[{"startOffset":106215,"endOffset":106246,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigHostFromCompilerHostLike","ranges":[{"startOffset":106287,"endOffset":106328,"count":0}],"isBlockCoverage":false},{"functionName":"parseCustomTypeOption","ranges":[{"startOffset":106355,"endOffset":106382,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName","ranges":[{"startOffset":106411,"endOffset":106440,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment","ranges":[{"startOffset":106471,"endOffset":106502,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpressionForTests","ranges":[{"startOffset":106540,"endOffset":106578,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonConfigFileContent","ranges":[{"startOffset":106610,"endOffset":106642,"count":1}],"isBlockCoverage":true},{"functionName":"parseJsonSourceFileConfigFileContent","ranges":[{"startOffset":106684,"endOffset":106726,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText","ranges":[{"startOffset":106745,"endOffset":106764,"count":0}],"isBlockCoverage":false},{"functionName":"parseListTypeOption","ranges":[{"startOffset":106789,"endOffset":106814,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeFactory","ranges":[{"startOffset":106836,"endOffset":106858,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeModuleFromPath","ranges":[{"startOffset":106887,"endOffset":106916,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":106938,"endOffset":106960,"count":0}],"isBlockCoverage":false},{"functionName":"parsePseudoBigInt","ranges":[{"startOffset":106983,"endOffset":107006,"count":0}],"isBlockCoverage":false},{"functionName":"parseValidBigInt","ranges":[{"startOffset":107028,"endOffset":107050,"count":0}],"isBlockCoverage":false},{"functionName":"pasteEdits","ranges":[{"startOffset":107066,"endOffset":107093,"count":0}],"isBlockCoverage":false},{"functionName":"patchWriteFileEnsuringDirectory","ranges":[{"startOffset":107130,"endOffset":107167,"count":0}],"isBlockCoverage":false},{"functionName":"pathContainsNodeModules","ranges":[{"startOffset":107196,"endOffset":107225,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsAbsolute","ranges":[{"startOffset":107245,"endOffset":107265,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsBareSpecifier","ranges":[{"startOffset":107290,"endOffset":107315,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsRelative","ranges":[{"startOffset":107335,"endOffset":107355,"count":0}],"isBlockCoverage":false},{"functionName":"patternText","ranges":[{"startOffset":107372,"endOffset":107389,"count":0}],"isBlockCoverage":false},{"functionName":"performIncrementalCompilation","ranges":[{"startOffset":107424,"endOffset":107459,"count":0}],"isBlockCoverage":false},{"functionName":"performance","ranges":[{"startOffset":107476,"endOffset":107504,"count":0}],"isBlockCoverage":false},{"functionName":"positionBelongsToNode","ranges":[{"startOffset":107531,"endOffset":107558,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsASICandidate","ranges":[{"startOffset":107586,"endOffset":107614,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsSynthesized","ranges":[{"startOffset":107641,"endOffset":107668,"count":0}],"isBlockCoverage":false},{"functionName":"positionsAreOnSameLine","ranges":[{"startOffset":107696,"endOffset":107724,"count":0}],"isBlockCoverage":false},{"functionName":"preProcessFile","ranges":[{"startOffset":107744,"endOffset":107764,"count":0}],"isBlockCoverage":false},{"functionName":"probablyUsesSemicolons","ranges":[{"startOffset":107792,"endOffset":107820,"count":0}],"isBlockCoverage":false},{"functionName":"processCommentPragmas","ranges":[{"startOffset":107847,"endOffset":107874,"count":0}],"isBlockCoverage":false},{"functionName":"processPragmasIntoFields","ranges":[{"startOffset":107904,"endOffset":107934,"count":0}],"isBlockCoverage":false},{"functionName":"processTaggedTemplateExpression","ranges":[{"startOffset":107971,"endOffset":108008,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsEsModules","ranges":[{"startOffset":108038,"endOffset":108068,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsModules","ranges":[{"startOffset":108096,"endOffset":108124,"count":0}],"isBlockCoverage":false},{"functionName":"projectReferenceIsEqualTo","ranges":[{"startOffset":108155,"endOffset":108186,"count":0}],"isBlockCoverage":false},{"functionName":"propertyNamePart","ranges":[{"startOffset":108208,"endOffset":108230,"count":0}],"isBlockCoverage":false},{"functionName":"pseudoBigIntToString","ranges":[{"startOffset":108256,"endOffset":108282,"count":0}],"isBlockCoverage":false},{"functionName":"punctuationPart","ranges":[{"startOffset":108303,"endOffset":108324,"count":0}],"isBlockCoverage":false},{"functionName":"pushIfUnique","ranges":[{"startOffset":108342,"endOffset":108360,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":108371,"endOffset":108382,"count":0}],"isBlockCoverage":false},{"functionName":"quotePreferenceFromString","ranges":[{"startOffset":108413,"endOffset":108444,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPosition","ranges":[{"startOffset":108471,"endOffset":108498,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPositionExclusive","ranges":[{"startOffset":108534,"endOffset":108570,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRange","ranges":[{"startOffset":108594,"endOffset":108618,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRangeExclusive","ranges":[{"startOffset":108651,"endOffset":108684,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsStartEnd","ranges":[{"startOffset":108711,"endOffset":108738,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndIsOnSameLineAsRangeStart","ranges":[{"startOffset":108776,"endOffset":108814,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndPositionsAreOnSameLine","ranges":[{"startOffset":108850,"endOffset":108886,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEquals","ranges":[{"startOffset":108903,"endOffset":108920,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnSingleLine","ranges":[{"startOffset":108945,"endOffset":108970,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfNode","ranges":[{"startOffset":108987,"endOffset":109004,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfTypeParameters","ranges":[{"startOffset":109031,"endOffset":109058,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOverlapsWithStartEnd","ranges":[{"startOffset":109089,"endOffset":109120,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartIsOnSameLineAsRangeEnd","ranges":[{"startOffset":109158,"endOffset":109196,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartPositionsAreOnSameLine","ranges":[{"startOffset":109234,"endOffset":109272,"count":0}],"isBlockCoverage":false},{"functionName":"readBuilderProgram","ranges":[{"startOffset":109296,"endOffset":109320,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigFile","ranges":[{"startOffset":109340,"endOffset":109360,"count":1}],"isBlockCoverage":true},{"functionName":"readJson","ranges":[{"startOffset":109374,"endOffset":109388,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonConfigFile","ranges":[{"startOffset":109412,"endOffset":109436,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonOrUndefined","ranges":[{"startOffset":109461,"endOffset":109486,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachLeadingCommentRange","ranges":[{"startOffset":109521,"endOffset":109556,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachTrailingCommentRange","ranges":[{"startOffset":109592,"endOffset":109628,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeft","ranges":[{"startOffset":109644,"endOffset":109660,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeftIterator","ranges":[{"startOffset":109684,"endOffset":109708,"count":0}],"isBlockCoverage":false},{"functionName":"reducePathComponents","ranges":[{"startOffset":109734,"endOffset":109760,"count":0}],"isBlockCoverage":false},{"functionName":"refactor","ranges":[{"startOffset":109774,"endOffset":109799,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":109817,"endOffset":109835,"count":0}],"isBlockCoverage":false},{"functionName":"regularExpressionFlagToCharacterCode","ranges":[{"startOffset":109877,"endOffset":109919,"count":0}],"isBlockCoverage":false},{"functionName":"relativeComplement","ranges":[{"startOffset":109943,"endOffset":109967,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllComments","ranges":[{"startOffset":109990,"endOffset":110013,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmitHelper","ranges":[{"startOffset":110035,"endOffset":110057,"count":0}],"isBlockCoverage":false},{"functionName":"removeExtension","ranges":[{"startOffset":110078,"endOffset":110099,"count":0}],"isBlockCoverage":false},{"functionName":"removeFileExtension","ranges":[{"startOffset":110124,"endOffset":110149,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPath","ranges":[{"startOffset":110172,"endOffset":110195,"count":0}],"isBlockCoverage":false},{"functionName":"removeMinAndVersionNumbers","ranges":[{"startOffset":110227,"endOffset":110259,"count":0}],"isBlockCoverage":false},{"functionName":"removePrefix","ranges":[{"startOffset":110277,"endOffset":110295,"count":0}],"isBlockCoverage":false},{"functionName":"removeSuffix","ranges":[{"startOffset":110313,"endOffset":110331,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":110369,"endOffset":110407,"count":0}],"isBlockCoverage":false},{"functionName":"repeatString","ranges":[{"startOffset":110425,"endOffset":110443,"count":0}],"isBlockCoverage":false},{"functionName":"replaceElement","ranges":[{"startOffset":110463,"endOffset":110483,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstStar","ranges":[{"startOffset":110505,"endOffset":110527,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionExtensionIsTSOrJson","ranges":[{"startOffset":110562,"endOffset":110597,"count":0}],"isBlockCoverage":false},{"functionName":"resolveConfigFileProjectName","ranges":[{"startOffset":110631,"endOffset":110665,"count":0}],"isBlockCoverage":false},{"functionName":"resolveJSModule","ranges":[{"startOffset":110686,"endOffset":110707,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":110727,"endOffset":110747,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleName","ranges":[{"startOffset":110770,"endOffset":110793,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameFromCache","ranges":[{"startOffset":110825,"endOffset":110857,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageNameToPackageJson","ranges":[{"startOffset":110894,"endOffset":110931,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePath","ranges":[{"startOffset":110948,"endOffset":110965,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectReferencePath","ranges":[{"startOffset":110998,"endOffset":111031,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTripleslashReference","ranges":[{"startOffset":111064,"endOffset":111097,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirective","ranges":[{"startOffset":111132,"endOffset":111167,"count":0}],"isBlockCoverage":false},{"functionName":"resolvingEmptyArray","ranges":[{"startOffset":111192,"endOffset":111217,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":111234,"endOffset":111251,"count":0}],"isBlockCoverage":false},{"functionName":"returnNoopFileWatcher","ranges":[{"startOffset":111278,"endOffset":111305,"count":0}],"isBlockCoverage":false},{"functionName":"returnTrue","ranges":[{"startOffset":111321,"endOffset":111337,"count":0}],"isBlockCoverage":false},{"functionName":"returnUndefined","ranges":[{"startOffset":111358,"endOffset":111379,"count":0}],"isBlockCoverage":false},{"functionName":"returnsPromise","ranges":[{"startOffset":111399,"endOffset":111419,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteModuleSpecifier","ranges":[{"startOffset":111447,"endOffset":111475,"count":0}],"isBlockCoverage":false},{"functionName":"sameFlatMap","ranges":[{"startOffset":111492,"endOffset":111509,"count":0}],"isBlockCoverage":false},{"functionName":"sameMap","ranges":[{"startOffset":111522,"endOffset":111535,"count":0}],"isBlockCoverage":false},{"functionName":"sameMapping","ranges":[{"startOffset":111552,"endOffset":111569,"count":0}],"isBlockCoverage":false},{"functionName":"scanTokenAtPosition","ranges":[{"startOffset":111594,"endOffset":111619,"count":0}],"isBlockCoverage":false},{"functionName":"scanner","ranges":[{"startOffset":111632,"endOffset":111645,"count":0}],"isBlockCoverage":false},{"functionName":"semanticDiagnosticsOptionDeclarations","ranges":[{"startOffset":111688,"endOffset":111731,"count":0}],"isBlockCoverage":false},{"functionName":"serializeCompilerOptions","ranges":[{"startOffset":111761,"endOffset":111791,"count":0}],"isBlockCoverage":false},{"functionName":"server","ranges":[{"startOffset":111803,"endOffset":111827,"count":0}],"isBlockCoverage":false},{"functionName":"servicesVersion","ranges":[{"startOffset":111848,"endOffset":111869,"count":0}],"isBlockCoverage":false},{"functionName":"setCommentRange","ranges":[{"startOffset":111890,"endOffset":111911,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigFileInOptions","ranges":[{"startOffset":111939,"endOffset":111967,"count":0}],"isBlockCoverage":false},{"functionName":"setConstantValue","ranges":[{"startOffset":111989,"endOffset":112011,"count":0}],"isBlockCoverage":false},{"functionName":"setEmitFlags","ranges":[{"startOffset":112029,"endOffset":112047,"count":0}],"isBlockCoverage":false},{"functionName":"setGetSourceFileAsHashVersioned","ranges":[{"startOffset":112084,"endOffset":112121,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierAutoGenerate","ranges":[{"startOffset":112152,"endOffset":112183,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierGeneratedImportReference","ranges":[{"startOffset":112226,"endOffset":112269,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierTypeArguments","ranges":[{"startOffset":112301,"endOffset":112333,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalEmitFlags","ranges":[{"startOffset":112359,"endOffset":112385,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalizedDiagnosticMessages","ranges":[{"startOffset":112421,"endOffset":112457,"count":0}],"isBlockCoverage":false},{"functionName":"setNodeChildren","ranges":[{"startOffset":112478,"endOffset":112499,"count":0}],"isBlockCoverage":false},{"functionName":"setNodeFlags","ranges":[{"startOffset":112517,"endOffset":112535,"count":0}],"isBlockCoverage":false},{"functionName":"setObjectAllocator","ranges":[{"startOffset":112559,"endOffset":112583,"count":0}],"isBlockCoverage":false},{"functionName":"setOriginalNode","ranges":[{"startOffset":112604,"endOffset":112625,"count":0}],"isBlockCoverage":false},{"functionName":"setParent","ranges":[{"startOffset":112640,"endOffset":112655,"count":0}],"isBlockCoverage":false},{"functionName":"setParentRecursive","ranges":[{"startOffset":112679,"endOffset":112703,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateIdentifier","ranges":[{"startOffset":112729,"endOffset":112755,"count":0}],"isBlockCoverage":false},{"functionName":"setSnippetElement","ranges":[{"startOffset":112778,"endOffset":112801,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapRange","ranges":[{"startOffset":112824,"endOffset":112847,"count":0}],"isBlockCoverage":false},{"functionName":"setStackTraceLimit","ranges":[{"startOffset":112871,"endOffset":112895,"count":0}],"isBlockCoverage":false},{"functionName":"setStartsOnNewLine","ranges":[{"startOffset":112919,"endOffset":112943,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticLeadingComments","ranges":[{"startOffset":112976,"endOffset":113009,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticTrailingComments","ranges":[{"startOffset":113043,"endOffset":113077,"count":0}],"isBlockCoverage":false},{"functionName":"setSys","ranges":[{"startOffset":113089,"endOffset":113101,"count":0}],"isBlockCoverage":false},{"functionName":"setSysLog","ranges":[{"startOffset":113116,"endOffset":113131,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRange","ranges":[{"startOffset":113149,"endOffset":113167,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangeEnd","ranges":[{"startOffset":113188,"endOffset":113209,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePos","ranges":[{"startOffset":113230,"endOffset":113251,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosEnd","ranges":[{"startOffset":113275,"endOffset":113299,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosWidth","ranges":[{"startOffset":113325,"endOffset":113351,"count":0}],"isBlockCoverage":false},{"functionName":"setTokenSourceMapRange","ranges":[{"startOffset":113379,"endOffset":113407,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeNode","ranges":[{"startOffset":113424,"endOffset":113441,"count":0}],"isBlockCoverage":false},{"functionName":"setUILocale","ranges":[{"startOffset":113458,"endOffset":113475,"count":0}],"isBlockCoverage":false},{"functionName":"setValueDeclaration","ranges":[{"startOffset":113500,"endOffset":113525,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAllowImportingTsExtension","ranges":[{"startOffset":113562,"endOffset":113599,"count":0}],"isBlockCoverage":false},{"functionName":"shouldPreserveConstEnums","ranges":[{"startOffset":113629,"endOffset":113659,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRewriteModuleSpecifier","ranges":[{"startOffset":113693,"endOffset":113727,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseUriStyleNodeCoreModules","ranges":[{"startOffset":113765,"endOffset":113803,"count":0}],"isBlockCoverage":false},{"functionName":"showModuleSpecifier","ranges":[{"startOffset":113828,"endOffset":113853,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasRestParameter","ranges":[{"startOffset":113884,"endOffset":113915,"count":0}],"isBlockCoverage":false},{"functionName":"signatureToDisplayParts","ranges":[{"startOffset":113944,"endOffset":113973,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":113985,"endOffset":113997,"count":0}],"isBlockCoverage":false},{"functionName":"singleElementArray","ranges":[{"startOffset":114021,"endOffset":114045,"count":0}],"isBlockCoverage":false},{"functionName":"singleIterator","ranges":[{"startOffset":114065,"endOffset":114085,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrMany","ranges":[{"startOffset":114103,"endOffset":114121,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrUndefined","ranges":[{"startOffset":114144,"endOffset":114167,"count":0}],"isBlockCoverage":false},{"functionName":"skipAlias","ranges":[{"startOffset":114182,"endOffset":114197,"count":0}],"isBlockCoverage":false},{"functionName":"skipConstraint","ranges":[{"startOffset":114217,"endOffset":114237,"count":0}],"isBlockCoverage":false},{"functionName":"skipOuterExpressions","ranges":[{"startOffset":114263,"endOffset":114289,"count":0}],"isBlockCoverage":false},{"functionName":"skipParentheses","ranges":[{"startOffset":114310,"endOffset":114331,"count":0}],"isBlockCoverage":false},{"functionName":"skipPartiallyEmittedExpressions","ranges":[{"startOffset":114368,"endOffset":114405,"count":0}],"isBlockCoverage":false},{"functionName":"skipTrivia","ranges":[{"startOffset":114421,"endOffset":114437,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeChecking","ranges":[{"startOffset":114459,"endOffset":114481,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeCheckingIgnoringNoCheck","ranges":[{"startOffset":114518,"endOffset":114555,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeParentheses","ranges":[{"startOffset":114580,"endOffset":114605,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhile","ranges":[{"startOffset":114620,"endOffset":114635,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAfter","ranges":[{"startOffset":114651,"endOffset":114667,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":114677,"endOffset":114687,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicate","ranges":[{"startOffset":114711,"endOffset":114735,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicateDiagnostics","ranges":[{"startOffset":114770,"endOffset":114805,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileAffectingCompilerOptions","ranges":[{"startOffset":114845,"endOffset":114885,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileMayBeEmitted","ranges":[{"startOffset":114913,"endOffset":114941,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExp","ranges":[{"startOffset":114969,"endOffset":114997,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExpDontCareLineStart","ranges":[{"startOffset":115042,"endOffset":115087,"count":0}],"isBlockCoverage":false},{"functionName":"spacePart","ranges":[{"startOffset":115102,"endOffset":115117,"count":0}],"isBlockCoverage":false},{"functionName":"spanMap","ranges":[{"startOffset":115130,"endOffset":115143,"count":0}],"isBlockCoverage":false},{"functionName":"startEndContainsRange","ranges":[{"startOffset":115170,"endOffset":115197,"count":0}],"isBlockCoverage":false},{"functionName":"startEndOverlapsWithStartEnd","ranges":[{"startOffset":115231,"endOffset":115265,"count":0}],"isBlockCoverage":false},{"functionName":"startOnNewLine","ranges":[{"startOffset":115285,"endOffset":115305,"count":0}],"isBlockCoverage":false},{"functionName":"startTracing","ranges":[{"startOffset":115323,"endOffset":115341,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":115357,"endOffset":115373,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithDirectory","ranges":[{"startOffset":115398,"endOffset":115423,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUnderscore","ranges":[{"startOffset":115449,"endOffset":115475,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUseStrict","ranges":[{"startOffset":115500,"endOffset":115525,"count":0}],"isBlockCoverage":false},{"functionName":"stringContainsAt","ranges":[{"startOffset":115547,"endOffset":115569,"count":0}],"isBlockCoverage":false},{"functionName":"stringToToken","ranges":[{"startOffset":115588,"endOffset":115607,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":115624,"endOffset":115641,"count":0}],"isBlockCoverage":false},{"functionName":"supportedDeclarationExtensions","ranges":[{"startOffset":115677,"endOffset":115713,"count":0}],"isBlockCoverage":false},{"functionName":"supportedJSExtensionsFlat","ranges":[{"startOffset":115744,"endOffset":115775,"count":0}],"isBlockCoverage":false},{"functionName":"supportedLocaleDirectories","ranges":[{"startOffset":115807,"endOffset":115839,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSExtensionsFlat","ranges":[{"startOffset":115870,"endOffset":115901,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSImplementationExtensions","ranges":[{"startOffset":115942,"endOffset":115983,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingAndTrailingTrivia","ranges":[{"startOffset":116021,"endOffset":116059,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingTrivia","ranges":[{"startOffset":116086,"endOffset":116113,"count":0}],"isBlockCoverage":false},{"functionName":"suppressTrailingTrivia","ranges":[{"startOffset":116141,"endOffset":116169,"count":0}],"isBlockCoverage":false},{"functionName":"symbolEscapedNameNoDefault","ranges":[{"startOffset":116201,"endOffset":116233,"count":0}],"isBlockCoverage":false},{"functionName":"symbolName","ranges":[{"startOffset":116249,"endOffset":116265,"count":0}],"isBlockCoverage":false},{"functionName":"symbolNameNoDefault","ranges":[{"startOffset":116290,"endOffset":116315,"count":0}],"isBlockCoverage":false},{"functionName":"symbolToDisplayParts","ranges":[{"startOffset":116341,"endOffset":116367,"count":0}],"isBlockCoverage":false},{"functionName":"sys","ranges":[{"startOffset":116376,"endOffset":116385,"count":14}],"isBlockCoverage":true},{"functionName":"sysLog","ranges":[{"startOffset":116397,"endOffset":116409,"count":0}],"isBlockCoverage":false},{"functionName":"tagNamesAreEquivalent","ranges":[{"startOffset":116436,"endOffset":116463,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":116478,"endOffset":116493,"count":0}],"isBlockCoverage":false},{"functionName":"targetOptionDeclaration","ranges":[{"startOffset":116522,"endOffset":116551,"count":0}],"isBlockCoverage":false},{"functionName":"targetToLibMap","ranges":[{"startOffset":116571,"endOffset":116591,"count":0}],"isBlockCoverage":false},{"functionName":"testFormatSettings","ranges":[{"startOffset":116615,"endOffset":116639,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeIsUnchanged","ranges":[{"startOffset":116671,"endOffset":116703,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeNewSpan","ranges":[{"startOffset":116731,"endOffset":116759,"count":0}],"isBlockCoverage":false},{"functionName":"textChanges","ranges":[{"startOffset":116776,"endOffset":116804,"count":0}],"isBlockCoverage":false},{"functionName":"textOrKeywordPart","ranges":[{"startOffset":116827,"endOffset":116850,"count":0}],"isBlockCoverage":false},{"functionName":"textPart","ranges":[{"startOffset":116864,"endOffset":116878,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsPositionInclusive","ranges":[{"startOffset":116918,"endOffset":116958,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsTextSpan","ranges":[{"startOffset":116989,"endOffset":117020,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeIntersectsWithTextSpan","ranges":[{"startOffset":117057,"endOffset":117094,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsPosition","ranges":[{"startOffset":117124,"endOffset":117154,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextRange","ranges":[{"startOffset":117185,"endOffset":117216,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextSpan","ranges":[{"startOffset":117246,"endOffset":117276,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanEnd","ranges":[{"startOffset":117293,"endOffset":117310,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersection","ranges":[{"startOffset":117336,"endOffset":117362,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWith","ranges":[{"startOffset":117390,"endOffset":117418,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithPosition","ranges":[{"startOffset":117454,"endOffset":117490,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithTextSpan","ranges":[{"startOffset":117526,"endOffset":117562,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIsEmpty","ranges":[{"startOffset":117583,"endOffset":117604,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlap","ranges":[{"startOffset":117625,"endOffset":117646,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlapsWith","ranges":[{"startOffset":117672,"endOffset":117698,"count":0}],"isBlockCoverage":false},{"functionName":"textSpansEqual","ranges":[{"startOffset":117718,"endOffset":117738,"count":0}],"isBlockCoverage":false},{"functionName":"textToKeywordObj","ranges":[{"startOffset":117760,"endOffset":117782,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":117797,"endOffset":117812,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":117825,"endOffset":117838,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderFileEmit","ranges":[{"startOffset":117861,"endOffset":117884,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderStateFileInfoForMultiEmit","ranges":[{"startOffset":117924,"endOffset":117964,"count":0}],"isBlockCoverage":false},{"functionName":"toEditorSettings","ranges":[{"startOffset":117986,"endOffset":118008,"count":0}],"isBlockCoverage":false},{"functionName":"toFileNameLowerCase","ranges":[{"startOffset":118033,"endOffset":118058,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":118070,"endOffset":118082,"count":5}],"isBlockCoverage":true},{"functionName":"toProgramEmitPending","ranges":[{"startOffset":118108,"endOffset":118134,"count":0}],"isBlockCoverage":false},{"functionName":"toSorted","ranges":[{"startOffset":118148,"endOffset":118162,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeyword","ranges":[{"startOffset":118194,"endOffset":118226,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":118271,"endOffset":118316,"count":0}],"isBlockCoverage":false},{"functionName":"tokenToString","ranges":[{"startOffset":118335,"endOffset":118354,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":118365,"endOffset":118376,"count":0}],"isBlockCoverage":false},{"functionName":"tracing","ranges":[{"startOffset":118389,"endOffset":118402,"count":0}],"isBlockCoverage":false},{"functionName":"tracingEnabled","ranges":[{"startOffset":118422,"endOffset":118442,"count":0}],"isBlockCoverage":false},{"functionName":"transferSourceFileChildren","ranges":[{"startOffset":118474,"endOffset":118506,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":118521,"endOffset":118536,"count":0}],"isBlockCoverage":false},{"functionName":"transformClassFields","ranges":[{"startOffset":118562,"endOffset":118588,"count":0}],"isBlockCoverage":false},{"functionName":"transformDeclarations","ranges":[{"startOffset":118615,"endOffset":118642,"count":0}],"isBlockCoverage":false},{"functionName":"transformECMAScriptModule","ranges":[{"startOffset":118673,"endOffset":118704,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2015","ranges":[{"startOffset":118725,"endOffset":118746,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2016","ranges":[{"startOffset":118767,"endOffset":118788,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2017","ranges":[{"startOffset":118809,"endOffset":118830,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2018","ranges":[{"startOffset":118851,"endOffset":118872,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2019","ranges":[{"startOffset":118893,"endOffset":118914,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2020","ranges":[{"startOffset":118935,"endOffset":118956,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2021","ranges":[{"startOffset":118977,"endOffset":118998,"count":0}],"isBlockCoverage":false},{"functionName":"transformESDecorators","ranges":[{"startOffset":119025,"endOffset":119052,"count":0}],"isBlockCoverage":false},{"functionName":"transformESNext","ranges":[{"startOffset":119073,"endOffset":119094,"count":0}],"isBlockCoverage":false},{"functionName":"transformGenerators","ranges":[{"startOffset":119119,"endOffset":119144,"count":0}],"isBlockCoverage":false},{"functionName":"transformImpliedNodeFormatDependentModule","ranges":[{"startOffset":119191,"endOffset":119238,"count":0}],"isBlockCoverage":false},{"functionName":"transformJsx","ranges":[{"startOffset":119256,"endOffset":119274,"count":0}],"isBlockCoverage":false},{"functionName":"transformLegacyDecorators","ranges":[{"startOffset":119305,"endOffset":119336,"count":0}],"isBlockCoverage":false},{"functionName":"transformModule","ranges":[{"startOffset":119357,"endOffset":119378,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluation","ranges":[{"startOffset":119408,"endOffset":119438,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodes","ranges":[{"startOffset":119458,"endOffset":119478,"count":0}],"isBlockCoverage":false},{"functionName":"transformSystemModule","ranges":[{"startOffset":119505,"endOffset":119532,"count":0}],"isBlockCoverage":false},{"functionName":"transformTypeScript","ranges":[{"startOffset":119557,"endOffset":119582,"count":0}],"isBlockCoverage":false},{"functionName":"transpile","ranges":[{"startOffset":119597,"endOffset":119612,"count":0}],"isBlockCoverage":false},{"functionName":"transpileDeclaration","ranges":[{"startOffset":119638,"endOffset":119664,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":119685,"endOffset":119706,"count":0}],"isBlockCoverage":false},{"functionName":"transpileOptionValueCompilerOptions","ranges":[{"startOffset":119747,"endOffset":119788,"count":5}],"isBlockCoverage":true},{"functionName":"tryAddToSet","ranges":[{"startOffset":119805,"endOffset":119822,"count":0}],"isBlockCoverage":false},{"functionName":"tryAndIgnoreErrors","ranges":[{"startOffset":119846,"endOffset":119870,"count":0}],"isBlockCoverage":false},{"functionName":"tryCast","ranges":[{"startOffset":119883,"endOffset":119896,"count":0}],"isBlockCoverage":false},{"functionName":"tryDirectoryExists","ranges":[{"startOffset":119920,"endOffset":119944,"count":0}],"isBlockCoverage":false},{"functionName":"tryExtractTSExtension","ranges":[{"startOffset":119971,"endOffset":119998,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileExists","ranges":[{"startOffset":120017,"endOffset":120036,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassExtendingExpressionWithTypeArguments","ranges":[{"startOffset":120089,"endOffset":120142,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassImplementingOrExtendingExpressionWithTypeArguments","ranges":[{"startOffset":120209,"endOffset":120276,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDirectories","ranges":[{"startOffset":120299,"endOffset":120322,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExtensionFromPath","ranges":[{"startOffset":120351,"endOffset":120381,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportFromModuleSpecifier","ranges":[{"startOffset":120418,"endOffset":120455,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocSatisfiesTypeNode","ranges":[{"startOffset":120489,"endOffset":120523,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromFile","ranges":[{"startOffset":120553,"endOffset":120583,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifierFromDeclaration","ranges":[{"startOffset":120625,"endOffset":120667,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNativePerformanceHooks","ranges":[{"startOffset":120701,"endOffset":120735,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyAccessOrIdentifierToString","ranges":[{"startOffset":120781,"endOffset":120827,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":120879,"endOffset":120931,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSourceMappingURL","ranges":[{"startOffset":120959,"endOffset":120987,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetTextOfPropertyName","ranges":[{"startOffset":121017,"endOffset":121047,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseJson","ranges":[{"startOffset":121065,"endOffset":121083,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePattern","ranges":[{"startOffset":121104,"endOffset":121125,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePatterns","ranges":[{"startOffset":121147,"endOffset":121169,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseRawSourceMap","ranges":[{"startOffset":121195,"endOffset":121221,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadDirectory","ranges":[{"startOffset":121243,"endOffset":121265,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadFile","ranges":[{"startOffset":121282,"endOffset":121299,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveDirectoryPrefix","ranges":[{"startOffset":121329,"endOffset":121359,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveExtension","ranges":[{"startOffset":121383,"endOffset":121407,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemovePrefix","ranges":[{"startOffset":121428,"endOffset":121449,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveSuffix","ranges":[{"startOffset":121470,"endOffset":121491,"count":0}],"isBlockCoverage":false},{"functionName":"tscBuildOption","ranges":[{"startOffset":121511,"endOffset":121531,"count":0}],"isBlockCoverage":false},{"functionName":"typeAcquisitionDeclarations","ranges":[{"startOffset":121564,"endOffset":121597,"count":0}],"isBlockCoverage":false},{"functionName":"typeAliasNamePart","ranges":[{"startOffset":121620,"endOffset":121643,"count":0}],"isBlockCoverage":false},{"functionName":"typeDirectiveIsEqualTo","ranges":[{"startOffset":121671,"endOffset":121699,"count":0}],"isBlockCoverage":false},{"functionName":"typeKeywords","ranges":[{"startOffset":121717,"endOffset":121735,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterNamePart","ranges":[{"startOffset":121762,"endOffset":121789,"count":0}],"isBlockCoverage":false},{"functionName":"typeToDisplayParts","ranges":[{"startOffset":121813,"endOffset":121837,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedPollThresholds","ranges":[{"startOffset":121866,"endOffset":121895,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedTextChangeRange","ranges":[{"startOffset":121925,"endOffset":121955,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeLeadingUnderscores","ranges":[{"startOffset":121987,"endOffset":122019,"count":0}],"isBlockCoverage":false},{"functionName":"unmangleScopedPackageName","ranges":[{"startOffset":122050,"endOffset":122081,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItem","ranges":[{"startOffset":122106,"endOffset":122131,"count":0}],"isBlockCoverage":false},{"functionName":"unprefixedNodeCoreModules","ranges":[{"startOffset":122162,"endOffset":122193,"count":0}],"isBlockCoverage":false},{"functionName":"unreachableCodeIsError","ranges":[{"startOffset":122221,"endOffset":122249,"count":0}],"isBlockCoverage":false},{"functionName":"unsetNodeChildren","ranges":[{"startOffset":122272,"endOffset":122295,"count":0}],"isBlockCoverage":false},{"functionName":"unusedLabelIsError","ranges":[{"startOffset":122319,"endOffset":122343,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapInnermostStatementOfLabel","ranges":[{"startOffset":122380,"endOffset":122417,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":122452,"endOffset":122487,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorForNoInputFiles","ranges":[{"startOffset":122519,"endOffset":122551,"count":0}],"isBlockCoverage":false},{"functionName":"updateLanguageServiceSourceFile","ranges":[{"startOffset":122588,"endOffset":122625,"count":0}],"isBlockCoverage":false},{"functionName":"updateMissingFilePathsWatch","ranges":[{"startOffset":122658,"endOffset":122691,"count":0}],"isBlockCoverage":false},{"functionName":"updateResolutionField","ranges":[{"startOffset":122718,"endOffset":122745,"count":0}],"isBlockCoverage":false},{"functionName":"updateSharedExtendedConfigFileWatcher","ranges":[{"startOffset":122788,"endOffset":122831,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceFile","ranges":[{"startOffset":122853,"endOffset":122875,"count":0}],"isBlockCoverage":false},{"functionName":"updateWatchingWildcardDirectories","ranges":[{"startOffset":122914,"endOffset":122953,"count":0}],"isBlockCoverage":false},{"functionName":"usingSingleLineStringWriter","ranges":[{"startOffset":122986,"endOffset":123019,"count":0}],"isBlockCoverage":false},{"functionName":"utf16EncodeAsString","ranges":[{"startOffset":123044,"endOffset":123069,"count":0}],"isBlockCoverage":false},{"functionName":"validateLocaleAndSetLanguage","ranges":[{"startOffset":123103,"endOffset":123137,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":123150,"endOffset":123163,"count":7}],"isBlockCoverage":true},{"functionName":"versionMajorMinor","ranges":[{"startOffset":123186,"endOffset":123209,"count":0}],"isBlockCoverage":false},{"functionName":"visitArray","ranges":[{"startOffset":123225,"endOffset":123241,"count":0}],"isBlockCoverage":false},{"functionName":"visitCommaListElements","ranges":[{"startOffset":123269,"endOffset":123297,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChild","ranges":[{"startOffset":123317,"endOffset":123337,"count":0}],"isBlockCoverage":false},{"functionName":"visitFunctionBody","ranges":[{"startOffset":123360,"endOffset":123383,"count":0}],"isBlockCoverage":false},{"functionName":"visitIterationBody","ranges":[{"startOffset":123407,"endOffset":123431,"count":0}],"isBlockCoverage":false},{"functionName":"visitLexicalEnvironment","ranges":[{"startOffset":123460,"endOffset":123489,"count":0}],"isBlockCoverage":false},{"functionName":"visitNode","ranges":[{"startOffset":123504,"endOffset":123519,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes","ranges":[{"startOffset":123535,"endOffset":123552,"count":0}],"isBlockCoverage":false},{"functionName":"visitParameterList","ranges":[{"startOffset":123576,"endOffset":123600,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpBindingElementsAndPatterns","ranges":[{"startOffset":123638,"endOffset":123676,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpOuterExpressions","ranges":[{"startOffset":123704,"endOffset":123732,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedExpressions","ranges":[{"startOffset":123768,"endOffset":123804,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypes","ranges":[{"startOffset":123834,"endOffset":123864,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypesAndGetParentAndChild","ranges":[{"startOffset":123914,"endOffset":123964,"count":0}],"isBlockCoverage":false},{"functionName":"whitespaceOrMapCommentRegExp","ranges":[{"startOffset":123998,"endOffset":124032,"count":0}],"isBlockCoverage":false},{"functionName":"writeCommentRange","ranges":[{"startOffset":124055,"endOffset":124078,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":124093,"endOffset":124108,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileEnsuringDirectories","ranges":[{"startOffset":124142,"endOffset":124176,"count":0}],"isBlockCoverage":false},{"functionName":"zipWith","ranges":[{"startOffset":124189,"endOffset":124202,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":124377,"endOffset":124595,"count":1}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":124704,"endOffset":124776,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":124777,"endOffset":125007,"count":5},{"startOffset":124882,"endOffset":124984,"count":0}],"isBlockCoverage":true},{"functionName":"forEachRight","ranges":[{"startOffset":125008,"endOffset":125248,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefined","ranges":[{"startOffset":125249,"endOffset":125502,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefinedIterator","ranges":[{"startOffset":125503,"endOffset":125695,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeftIterator","ranges":[{"startOffset":125696,"endOffset":125922,"count":0}],"isBlockCoverage":false},{"functionName":"zipWith","ranges":[{"startOffset":125923,"endOffset":126158,"count":0}],"isBlockCoverage":false},{"functionName":"intersperse","ranges":[{"startOffset":126159,"endOffset":126406,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":126407,"endOffset":126604,"count":4},{"startOffset":126546,"endOffset":126577,"count":0}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":126605,"endOffset":126854,"count":0}],"isBlockCoverage":false},{"functionName":"findLast","ranges":[{"startOffset":126855,"endOffset":127113,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":127114,"endOffset":127331,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":127332,"endOffset":127558,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":127559,"endOffset":127800,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfAnyCharCode","ranges":[{"startOffset":127801,"endOffset":127997,"count":0}],"isBlockCoverage":false},{"functionName":"countWhere","ranges":[{"startOffset":127998,"endOffset":128233,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":128234,"endOffset":128629,"count":4},{"startOffset":128286,"endOffset":128611,"count":3},{"startOffset":128352,"endOffset":128366,"count":4},{"startOffset":128390,"endOffset":128607,"count":1},{"startOffset":128465,"endOffset":128580,"count":126},{"startOffset":128519,"endOffset":128559,"count":7},{"startOffset":128611,"endOffset":128628,"count":3}],"isBlockCoverage":true},{"functionName":"filterMutate","ranges":[{"startOffset":128630,"endOffset":128850,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":128851,"endOffset":128896,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":128897,"endOffset":129087,"count":0}],"isBlockCoverage":false},{"functionName":"mapIterator","ranges":[{"startOffset":129088,"endOffset":129176,"count":1},{"startOffset":129149,"endOffset":129174,"count":5}],"isBlockCoverage":true},{"functionName":"sameMap","ranges":[{"startOffset":129177,"endOffset":129589,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":129590,"endOffset":129845,"count":3},{"startOffset":129678,"endOffset":129826,"count":10},{"startOffset":129777,"endOffset":129816,"count":0}],"isBlockCoverage":true},{"functionName":"flatMap","ranges":[{"startOffset":129846,"endOffset":130196,"count":1},{"startOffset":129962,"endOffset":130159,"count":2},{"startOffset":130039,"endOffset":130090,"count":0},{"startOffset":130180,"endOffset":130193,"count":0}],"isBlockCoverage":true},{"functionName":"flatMapToMutable","ranges":[{"startOffset":130197,"endOffset":130528,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapIterator","ranges":[{"startOffset":130529,"endOffset":130673,"count":0}],"isBlockCoverage":false},{"functionName":"sameFlatMap","ranges":[{"startOffset":130674,"endOffset":131161,"count":0}],"isBlockCoverage":false},{"functionName":"mapAllOrFail","ranges":[{"startOffset":131162,"endOffset":131406,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefined","ranges":[{"startOffset":131407,"endOffset":131672,"count":1},{"startOffset":131533,"endOffset":131649,"count":2103},{"startOffset":131605,"endOffset":131643,"count":1336}],"isBlockCoverage":true},{"functionName":"mapDefinedIterator","ranges":[{"startOffset":131673,"endOffset":131829,"count":0}],"isBlockCoverage":false},{"functionName":"getOrUpdate","ranges":[{"startOffset":131830,"endOffset":131996,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddToSet","ranges":[{"startOffset":131997,"endOffset":132115,"count":0}],"isBlockCoverage":false},{"functionName":"singleIterator","ranges":[{"startOffset":132116,"endOffset":132166,"count":0}],"isBlockCoverage":false},{"functionName":"spanMap","ranges":[{"startOffset":132167,"endOffset":132877,"count":0}],"isBlockCoverage":false},{"functionName":"mapEntries","ranges":[{"startOffset":132878,"endOffset":133138,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":133139,"endOffset":133425,"count":4},{"startOffset":133229,"endOffset":133359,"count":1},{"startOffset":133276,"endOffset":133353,"count":2},{"startOffset":133311,"endOffset":133345,"count":0},{"startOffset":133359,"endOffset":133403,"count":3},{"startOffset":133407,"endOffset":133424,"count":1}],"isBlockCoverage":true},{"functionName":"getRangesWhere","ranges":[{"startOffset":133426,"endOffset":133744,"count":0}],"isBlockCoverage":false},{"functionName":"concatenate","ranges":[{"startOffset":133745,"endOffset":133944,"count":0}],"isBlockCoverage":false},{"functionName":"selectIndex","ranges":[{"startOffset":133945,"endOffset":133987,"count":0}],"isBlockCoverage":false},{"functionName":"indicesOf","ranges":[{"startOffset":133988,"endOffset":134050,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicateRelational","ranges":[{"startOffset":134051,"endOffset":134550,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicateEquality","ranges":[{"startOffset":134551,"endOffset":134747,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicate","ranges":[{"startOffset":134748,"endOffset":134995,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicateSorted","ranges":[{"startOffset":134996,"endOffset":135546,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":135547,"endOffset":135592,"count":0}],"isBlockCoverage":false},{"functionName":"insertSorted","ranges":[{"startOffset":135593,"endOffset":136333,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicate","ranges":[{"startOffset":136334,"endOffset":136516,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsEqualTo","ranges":[{"startOffset":136517,"endOffset":136881,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":136882,"endOffset":137191,"count":0}],"isBlockCoverage":false},{"functionName":"relativeComplement","ranges":[{"startOffset":137192,"endOffset":138175,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":138176,"endOffset":138309,"count":2},{"startOffset":138229,"endOffset":138239,"count":0},{"startOffset":138261,"endOffset":138308,"count":1}],"isBlockCoverage":true},{"functionName":"combine","ranges":[{"startOffset":138310,"endOffset":138541,"count":0}],"isBlockCoverage":false},{"functionName":"toOffset","ranges":[{"startOffset":138542,"endOffset":138632,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":138633,"endOffset":139033,"count":10},{"startOffset":138719,"endOffset":138729,"count":0},{"startOffset":138751,"endOffset":138781,"count":0},{"startOffset":138813,"endOffset":138836,"count":0},{"startOffset":138875,"endOffset":138896,"count":0},{"startOffset":138928,"endOffset":138946,"count":19},{"startOffset":138953,"endOffset":139018,"count":19}],"isBlockCoverage":true},{"functionName":"pushIfUnique","ranges":[{"startOffset":139034,"endOffset":139214,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfUnique","ranges":[{"startOffset":139215,"endOffset":139403,"count":0}],"isBlockCoverage":false},{"functionName":"stableSortIndices","ranges":[{"startOffset":139404,"endOffset":139539,"count":0}],"isBlockCoverage":false},{"functionName":"toSorted","ranges":[{"startOffset":139540,"endOffset":139651,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReverseIterator","ranges":[{"startOffset":139652,"endOffset":139765,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEquals","ranges":[{"startOffset":139766,"endOffset":139933,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":139973,"endOffset":140033,"count":0}],"isBlockCoverage":false},{"functionName":"elementAt","ranges":[{"startOffset":140036,"endOffset":140210,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefined","ranges":[{"startOffset":140212,"endOffset":140317,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefinedIterator","ranges":[{"startOffset":140318,"endOffset":140465,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":140466,"endOffset":140546,"count":0}],"isBlockCoverage":false},{"functionName":"firstIterator","ranges":[{"startOffset":140547,"endOffset":140666,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":140667,"endOffset":140786,"count":4},{"startOffset":140749,"endOffset":140757,"count":0}],"isBlockCoverage":true},{"functionName":"last","ranges":[{"startOffset":140787,"endOffset":140881,"count":2}],"isBlockCoverage":true},{"functionName":"singleOrUndefined","ranges":[{"startOffset":140882,"endOffset":140988,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":140989,"endOffset":141070,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrMany","ranges":[{"startOffset":141071,"endOffset":141171,"count":0}],"isBlockCoverage":false},{"functionName":"replaceElement","ranges":[{"startOffset":141172,"endOffset":141295,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":141296,"endOffset":141456,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearchKey","ranges":[{"startOffset":141457,"endOffset":142012,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeft","ranges":[{"startOffset":142013,"endOffset":142591,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":142646,"endOffset":142722,"count":201}],"isBlockCoverage":true},{"functionName":"getProperty","ranges":[{"startOffset":142723,"endOffset":142820,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnKeys","ranges":[{"startOffset":142821,"endOffset":142986,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":142987,"endOffset":143229,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnValues","ranges":[{"startOffset":143230,"endOffset":143433,"count":1},{"startOffset":143319,"endOffset":143414,"count":3}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":143434,"endOffset":143578,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFrom","ranges":[{"startOffset":143579,"endOffset":143738,"count":3},{"startOffset":143669,"endOffset":143719,"count":0}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":143739,"endOffset":143945,"count":0}],"isBlockCoverage":false},{"functionName":"equalOwnProperties","ranges":[{"startOffset":143946,"endOffset":144453,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMap","ranges":[{"startOffset":144454,"endOffset":144742,"count":3},{"startOffset":144599,"endOffset":144723,"count":137}],"isBlockCoverage":true},{"functionName":"arrayToNumericMap","ranges":[{"startOffset":144743,"endOffset":144971,"count":1},{"startOffset":144872,"endOffset":144952,"count":13}],"isBlockCoverage":true},{"functionName":"arrayToMultiMap","ranges":[{"startOffset":144972,"endOffset":145218,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":145219,"endOffset":145366,"count":0}],"isBlockCoverage":false},{"functionName":"groupBy","ranges":[{"startOffset":145367,"endOffset":145683,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":145684,"endOffset":145861,"count":5},{"startOffset":145757,"endOffset":145842,"count":80}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":145862,"endOffset":146161,"count":1},{"startOffset":145944,"endOffset":146029,"count":16},{"startOffset":146057,"endOffset":146142,"count":0}],"isBlockCoverage":true},{"functionName":"copyProperties","ranges":[{"startOffset":146162,"endOffset":146318,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind","ranges":[{"startOffset":146319,"endOffset":146395,"count":4},{"startOffset":146369,"endOffset":146377,"count":2},{"startOffset":146378,"endOffset":146392,"count":2}],"isBlockCoverage":true},{"functionName":"createMultiMap","ranges":[{"startOffset":146396,"endOffset":146540,"count":1}],"isBlockCoverage":true},{"functionName":"multiMapAdd","ranges":[{"startOffset":146541,"endOffset":146727,"count":1562},{"startOffset":146631,"endOffset":146660,"count":209},{"startOffset":146660,"endOffset":146708,"count":1353}],"isBlockCoverage":true},{"functionName":"multiMapRemove","ranges":[{"startOffset":146728,"endOffset":146926,"count":0}],"isBlockCoverage":false},{"functionName":"createQueue","ranges":[{"startOffset":146927,"endOffset":147720,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":147721,"endOffset":150518,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":150519,"endOffset":150577,"count":20}],"isBlockCoverage":true},{"functionName":"toArray","ranges":[{"startOffset":150578,"endOffset":150648,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":150649,"endOffset":150711,"count":186}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":150712,"endOffset":150768,"count":0}],"isBlockCoverage":false},{"functionName":"tryCast","ranges":[{"startOffset":150769,"endOffset":150861,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":150862,"endOffset":151067,"count":2},{"startOffset":150943,"endOffset":151066,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":151068,"endOffset":151088,"count":1}],"isBlockCoverage":true},{"functionName":"returnFalse","ranges":[{"startOffset":151089,"endOffset":151131,"count":0}],"isBlockCoverage":false},{"functionName":"returnTrue","ranges":[{"startOffset":151132,"endOffset":151172,"count":0}],"isBlockCoverage":false},{"functionName":"returnUndefined","ranges":[{"startOffset":151173,"endOffset":151220,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":151221,"endOffset":151257,"count":151}],"isBlockCoverage":true},{"functionName":"toLowerCase","ranges":[{"startOffset":151258,"endOffset":151311,"count":4}],"isBlockCoverage":true},{"functionName":"toFileNameLowerCase","ranges":[{"startOffset":151384,"endOffset":151515,"count":2},{"startOffset":151509,"endOffset":151512,"count":0}],"isBlockCoverage":true},{"functionName":"notImplemented","ranges":[{"startOffset":151516,"endOffset":151583,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":151584,"endOffset":151744,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":151635,"endOffset":151741,"count":16},{"startOffset":151661,"endOffset":151719,"count":1}],"isBlockCoverage":true},{"functionName":"memoizeOne","ranges":[{"startOffset":151745,"endOffset":152043,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":151828,"endOffset":152040,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":152082,"endOffset":152396,"count":1}],"isBlockCoverage":false},{"functionName":"equateValues","ranges":[{"startOffset":152421,"endOffset":152470,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseInsensitive","ranges":[{"startOffset":152471,"endOffset":152607,"count":7}],"isBlockCoverage":true},{"functionName":"equateStringsCaseSensitive","ranges":[{"startOffset":152608,"endOffset":152682,"count":0}],"isBlockCoverage":false},{"functionName":"compareComparableValues","ranges":[{"startOffset":152683,"endOffset":152883,"count":0}],"isBlockCoverage":false},{"functionName":"compareValues","ranges":[{"startOffset":152884,"endOffset":152956,"count":0}],"isBlockCoverage":false},{"functionName":"compareTextSpans","ranges":[{"startOffset":152957,"endOffset":153155,"count":0}],"isBlockCoverage":false},{"functionName":"maxBy","ranges":[{"startOffset":153156,"endOffset":153296,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":153297,"endOffset":153412,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitive","ranges":[{"startOffset":153413,"endOffset":153724,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitiveEslintCompatible","ranges":[{"startOffset":153725,"endOffset":154052,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitive","ranges":[{"startOffset":154053,"endOffset":154139,"count":0}],"isBlockCoverage":false},{"functionName":"getStringComparer","ranges":[{"startOffset":154140,"endOffset":154265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":154312,"endOffset":154914,"count":1}],"isBlockCoverage":false},{"functionName":"compareWithCallback","ranges":[{"startOffset":154365,"endOffset":154682,"count":0}],"isBlockCoverage":false},{"functionName":"createIntlCollatorStringComparer","ranges":[{"startOffset":154685,"endOffset":154912,"count":0}],"isBlockCoverage":false},{"functionName":"getUILocale","ranges":[{"startOffset":154962,"endOffset":155007,"count":0}],"isBlockCoverage":false},{"functionName":"setUILocale","ranges":[{"startOffset":155008,"endOffset":155131,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitiveUI","ranges":[{"startOffset":155132,"endOffset":155311,"count":0}],"isBlockCoverage":false},{"functionName":"compareProperties","ranges":[{"startOffset":155312,"endOffset":155498,"count":0}],"isBlockCoverage":false},{"functionName":"compareBooleans","ranges":[{"startOffset":155499,"endOffset":155579,"count":0}],"isBlockCoverage":false},{"functionName":"getSpellingSuggestion","ranges":[{"startOffset":155580,"endOffset":156460,"count":0}],"isBlockCoverage":false},{"functionName":"levenshteinWithMax","ranges":[{"startOffset":156461,"endOffset":157740,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":157741,"endOffset":157994,"count":1},{"startOffset":157877,"endOffset":157939,"count":0}],"isBlockCoverage":true},{"functionName":"removeSuffix","ranges":[{"startOffset":157995,"endOffset":158114,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveSuffix","ranges":[{"startOffset":158115,"endOffset":158240,"count":0}],"isBlockCoverage":false},{"functionName":"removeMinAndVersionNumbers","ranges":[{"startOffset":158241,"endOffset":159153,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItem","ranges":[{"startOffset":159154,"endOffset":159351,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItemAt","ranges":[{"startOffset":159352,"endOffset":159497,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItemAt","ranges":[{"startOffset":159498,"endOffset":159603,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItem","ranges":[{"startOffset":159604,"endOffset":159727,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveFirstItemWhere","ranges":[{"startOffset":159728,"endOffset":159946,"count":0}],"isBlockCoverage":false},{"functionName":"createGetCanonicalFileName","ranges":[{"startOffset":159947,"endOffset":160084,"count":6},{"startOffset":160049,"endOffset":160059,"count":0}],"isBlockCoverage":true},{"functionName":"patternText","ranges":[{"startOffset":160085,"endOffset":160161,"count":0}],"isBlockCoverage":false},{"functionName":"matchedText","ranges":[{"startOffset":160162,"endOffset":160353,"count":0}],"isBlockCoverage":false},{"functionName":"findBestPatternMatch","ranges":[{"startOffset":160354,"endOffset":160790,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":160791,"endOffset":160963,"count":10},{"startOffset":160858,"endOffset":160925,"count":7},{"startOffset":160926,"endOffset":160960,"count":3}],"isBlockCoverage":true},{"functionName":"removePrefix","ranges":[{"startOffset":160964,"endOffset":161070,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemovePrefix","ranges":[{"startOffset":161071,"endOffset":161263,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternMatch","ranges":[{"startOffset":161264,"endOffset":161446,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":161447,"endOffset":161505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":161477,"endOffset":161502,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":161506,"endOffset":161722,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":161536,"endOffset":161719,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":161723,"endOffset":161779,"count":0}],"isBlockCoverage":false},{"functionName":"assertType","ranges":[{"startOffset":161780,"endOffset":161806,"count":0}],"isBlockCoverage":false},{"functionName":"singleElementArray","ranges":[{"startOffset":161807,"endOffset":161879,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateInsertsAndDeletes","ranges":[{"startOffset":161880,"endOffset":162871,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProduct","ranges":[{"startOffset":162872,"endOffset":163034,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProductWorker","ranges":[{"startOffset":163035,"endOffset":163425,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":163426,"endOffset":163653,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhile","ranges":[{"startOffset":163654,"endOffset":163878,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeLikeSystem","ranges":[{"startOffset":163879,"endOffset":164027,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164086,"endOffset":164361,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164392,"endOffset":202246,"count":1}],"isBlockCoverage":false},{"functionName":"shouldLog","ranges":[{"startOffset":164526,"endOffset":164601,"count":0}],"isBlockCoverage":false},{"functionName":"logMessage","ranges":[{"startOffset":164636,"endOffset":164767,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":164770,"endOffset":164824,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164848,"endOffset":165223,"count":1}],"isBlockCoverage":false},{"functionName":"error2","ranges":[{"startOffset":164864,"endOffset":164926,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":164956,"endOffset":165018,"count":0}],"isBlockCoverage":false},{"functionName":"log2","ranges":[{"startOffset":165045,"endOffset":165104,"count":0}],"isBlockCoverage":false},{"functionName":"trace2","ranges":[{"startOffset":165130,"endOffset":165194,"count":0}],"isBlockCoverage":false},{"functionName":"getAssertionLevel","ranges":[{"startOffset":165296,"endOffset":165364,"count":0}],"isBlockCoverage":false},{"functionName":"setAssertionLevel","ranges":[{"startOffset":165415,"endOffset":165889,"count":1},{"startOffset":165576,"endOffset":165885,"count":0}],"isBlockCoverage":true},{"functionName":"shouldAssert","ranges":[{"startOffset":165940,"endOffset":166017,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAssertFunction","ranges":[{"startOffset":166058,"endOffset":166273,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":166276,"endOffset":166529,"count":0}],"isBlockCoverage":false},{"functionName":"failBadSyntaxKind","ranges":[{"startOffset":166554,"endOffset":166779,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":166830,"endOffset":167235,"count":235},{"startOffset":166924,"endOffset":167231,"count":0}],"isBlockCoverage":true},{"functionName":"assertEqual","ranges":[{"startOffset":167264,"endOffset":167493,"count":0}],"isBlockCoverage":false},{"functionName":"assertLessThan","ranges":[{"startOffset":167532,"endOffset":167696,"count":0}],"isBlockCoverage":false},{"functionName":"assertLessThanOrEqual","ranges":[{"startOffset":167741,"endOffset":167900,"count":0}],"isBlockCoverage":false},{"functionName":"assertGreaterThanOrEqual","ranges":[{"startOffset":167959,"endOffset":168124,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsDefined","ranges":[{"startOffset":168189,"endOffset":168359,"count":17},{"startOffset":168292,"endOffset":168355,"count":0}],"isBlockCoverage":true},{"functionName":"checkDefined","ranges":[{"startOffset":168406,"endOffset":168552,"count":17}],"isBlockCoverage":true},{"functionName":"assertEachIsDefined","ranges":[{"startOffset":168593,"endOffset":168768,"count":0}],"isBlockCoverage":false},{"functionName":"checkEachDefined","ranges":[{"startOffset":168823,"endOffset":168981,"count":0}],"isBlockCoverage":false},{"functionName":"assertNever","ranges":[{"startOffset":169030,"endOffset":169362,"count":0}],"isBlockCoverage":false},{"functionName":"assertEachNode","ranges":[{"startOffset":169401,"endOffset":169764,"count":0}],"isBlockCoverage":false},{"functionName":"assertNode","ranges":[{"startOffset":169809,"endOffset":170221,"count":0}],"isBlockCoverage":false},{"functionName":"assertNotNode","ranges":[{"startOffset":170258,"endOffset":170664,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalNode","ranges":[{"startOffset":170707,"endOffset":171141,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalToken","ranges":[{"startOffset":171194,"endOffset":171638,"count":0}],"isBlockCoverage":false},{"functionName":"assertMissingNode","ranges":[{"startOffset":171693,"endOffset":172032,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":172083,"endOffset":172110,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionName","ranges":[{"startOffset":172135,"endOffset":172468,"count":0}],"isBlockCoverage":false},{"functionName":"formatSymbol","ranges":[{"startOffset":172515,"endOffset":172749,"count":0}],"isBlockCoverage":false},{"functionName":"formatEnum","ranges":[{"startOffset":172790,"endOffset":173592,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumMembers","ranges":[{"startOffset":173682,"endOffset":174151,"count":0}],"isBlockCoverage":false},{"functionName":"formatSyntaxKind","ranges":[{"startOffset":174154,"endOffset":174281,"count":0}],"isBlockCoverage":false},{"functionName":"formatSnippetKind","ranges":[{"startOffset":174330,"endOffset":174459,"count":0}],"isBlockCoverage":false},{"functionName":"formatScriptKind","ranges":[{"startOffset":174510,"endOffset":174637,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeFlags","ranges":[{"startOffset":174686,"endOffset":174812,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeCheckFlags","ranges":[{"startOffset":174859,"endOffset":174995,"count":0}],"isBlockCoverage":false},{"functionName":"formatModifierFlags","ranges":[{"startOffset":175052,"endOffset":175186,"count":0}],"isBlockCoverage":false},{"functionName":"formatTransformFlags","ranges":[{"startOffset":175241,"endOffset":175377,"count":0}],"isBlockCoverage":false},{"functionName":"formatEmitFlags","ranges":[{"startOffset":175434,"endOffset":175560,"count":0}],"isBlockCoverage":false},{"functionName":"formatSymbolFlags","ranges":[{"startOffset":175607,"endOffset":175737,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypeFlags","ranges":[{"startOffset":175788,"endOffset":175914,"count":0}],"isBlockCoverage":false},{"functionName":"formatSignatureFlags","ranges":[{"startOffset":175961,"endOffset":176097,"count":0}],"isBlockCoverage":false},{"functionName":"formatObjectFlags","ranges":[{"startOffset":176154,"endOffset":176284,"count":0}],"isBlockCoverage":false},{"functionName":"formatFlowFlags","ranges":[{"startOffset":176335,"endOffset":176461,"count":0}],"isBlockCoverage":false},{"functionName":"formatRelationComparisonResult","ranges":[{"startOffset":176508,"endOffset":176666,"count":0}],"isBlockCoverage":false},{"functionName":"formatCheckMode","ranges":[{"startOffset":176743,"endOffset":176867,"count":0}],"isBlockCoverage":false},{"functionName":"formatSignatureCheckMode","ranges":[{"startOffset":176914,"endOffset":177056,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypeFacts","ranges":[{"startOffset":177121,"endOffset":177247,"count":0}],"isBlockCoverage":false},{"functionName":"attachFlowNodeDebugInfoWorker","ranges":[{"startOffset":177349,"endOffset":178822,"count":0}],"isBlockCoverage":false},{"functionName":"attachFlowNodeDebugInfo","ranges":[{"startOffset":178825,"endOffset":179270,"count":2},{"startOffset":178898,"endOffset":179245,"count":0}],"isBlockCoverage":true},{"functionName":"attachNodeArrayDebugInfoWorker","ranges":[{"startOffset":179355,"endOffset":179728,"count":0}],"isBlockCoverage":false},{"functionName":"attachNodeArrayDebugInfo","ranges":[{"startOffset":179731,"endOffset":180152,"count":10},{"startOffset":179802,"endOffset":180148,"count":0}],"isBlockCoverage":true},{"functionName":"enableDebugInfo","ranges":[{"startOffset":180217,"endOffset":188037,"count":0}],"isBlockCoverage":false},{"functionName":"formatVariance","ranges":[{"startOffset":188084,"endOffset":188634,"count":0}],"isBlockCoverage":false},{"functionName":"__debugToString","ranges":[{"startOffset":188707,"endOffset":189807,"count":0}],"isBlockCoverage":false},{"functionName":"attachDebugPrototypeIfDebug","ranges":[{"startOffset":189858,"endOffset":190034,"count":0}],"isBlockCoverage":false},{"functionName":"printControlFlowGraph","ranges":[{"startOffset":190105,"endOffset":190209,"count":0}],"isBlockCoverage":false},{"functionName":"formatControlFlowGraph","ranges":[{"startOffset":190268,"endOffset":202186,"count":0}],"isBlockCoverage":false},{"functionName":"_Version","ranges":[{"startOffset":202754,"endOffset":203750,"count":1},{"startOffset":202862,"endOffset":203025,"count":0},{"startOffset":203271,"endOffset":203294,"count":0},{"startOffset":203295,"endOffset":203307,"count":0},{"startOffset":203339,"endOffset":203385,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":203440,"endOffset":203475,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":203546,"endOffset":203576,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":203760,"endOffset":203994,"count":0}],"isBlockCoverage":false},{"functionName":"compareTo","ranges":[{"startOffset":203997,"endOffset":204323,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":204326,"endOffset":204671,"count":0}],"isBlockCoverage":false},{"functionName":"with","ranges":[{"startOffset":204674,"endOffset":204933,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":204936,"endOffset":205171,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseComponents","ranges":[{"startOffset":205245,"endOffset":205711,"count":0}],"isBlockCoverage":false},{"functionName":"comparePrereleaseIdentifiers","ranges":[{"startOffset":205712,"endOffset":206768,"count":0}],"isBlockCoverage":false},{"functionName":"_VersionRange","ranges":[{"startOffset":206812,"endOffset":206941,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":206951,"endOffset":207144,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":207310,"endOffset":207460,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":207463,"endOffset":207529,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":207849,"endOffset":208473,"count":0}],"isBlockCoverage":false},{"functionName":"parsePartial","ranges":[{"startOffset":208474,"endOffset":208976,"count":0}],"isBlockCoverage":false},{"functionName":"parseHyphen","ranges":[{"startOffset":208977,"endOffset":209617,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":209618,"endOffset":211646,"count":0}],"isBlockCoverage":false},{"functionName":"isWildcard","ranges":[{"startOffset":211647,"endOffset":211731,"count":0}],"isBlockCoverage":false},{"functionName":"createComparator","ranges":[{"startOffset":211732,"endOffset":211812,"count":0}],"isBlockCoverage":false},{"functionName":"testDisjunction","ranges":[{"startOffset":211813,"endOffset":212036,"count":0}],"isBlockCoverage":false},{"functionName":"testAlternative","ranges":[{"startOffset":212037,"endOffset":212239,"count":0}],"isBlockCoverage":false},{"functionName":"testComparator","ranges":[{"startOffset":212240,"endOffset":212606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDisjunction","ranges":[{"startOffset":212607,"endOffset":212718,"count":0}],"isBlockCoverage":false},{"functionName":"formatAlternative","ranges":[{"startOffset":212719,"endOffset":212817,"count":0}],"isBlockCoverage":false},{"functionName":"formatComparator","ranges":[{"startOffset":212818,"endOffset":212915,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPerformance","ranges":[{"startOffset":212952,"endOffset":213390,"count":1},{"startOffset":213234,"endOffset":213247,"count":0},{"startOffset":213251,"endOffset":213389,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetPerformanceHooks","ranges":[{"startOffset":213391,"endOffset":214079,"count":1},{"startOffset":213470,"endOffset":213484,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetNativePerformanceHooks","ranges":[{"startOffset":214245,"endOffset":214321,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":214362,"endOffset":214395,"count":1}],"isBlockCoverage":true},{"functionName":"clearMarks","ranges":[{"startOffset":214537,"endOffset":214553,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":214572,"endOffset":214591,"count":0}],"isBlockCoverage":false},{"functionName":"createTimer","ranges":[{"startOffset":214608,"endOffset":214625,"count":0}],"isBlockCoverage":false},{"functionName":"createTimerIf","ranges":[{"startOffset":214644,"endOffset":214663,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":214676,"endOffset":214689,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":214701,"endOffset":214713,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMark","ranges":[{"startOffset":214730,"endOffset":214747,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMeasure","ranges":[{"startOffset":214767,"endOffset":214787,"count":0}],"isBlockCoverage":false},{"functionName":"getCount","ranges":[{"startOffset":214801,"endOffset":214815,"count":0}],"isBlockCoverage":false},{"functionName":"getDuration","ranges":[{"startOffset":214832,"endOffset":214849,"count":0}],"isBlockCoverage":false},{"functionName":"isEnabled","ranges":[{"startOffset":214864,"endOffset":214879,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":214889,"endOffset":214899,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":214912,"endOffset":214925,"count":0}],"isBlockCoverage":false},{"functionName":"nullTimer","ranges":[{"startOffset":214940,"endOffset":214955,"count":0}],"isBlockCoverage":false},{"functionName":"createTimerIf","ranges":[{"startOffset":215028,"endOffset":215193,"count":0}],"isBlockCoverage":false},{"functionName":"createTimer","ranges":[{"startOffset":215194,"endOffset":215633,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":215852,"endOffset":216179,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":216180,"endOffset":216682,"count":0}],"isBlockCoverage":false},{"functionName":"getCount","ranges":[{"startOffset":216683,"endOffset":216750,"count":0}],"isBlockCoverage":false},{"functionName":"getDuration","ranges":[{"startOffset":216751,"endOffset":216830,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMeasure","ranges":[{"startOffset":216831,"endOffset":216937,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMark","ranges":[{"startOffset":216938,"endOffset":217018,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":217019,"endOffset":217198,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":217199,"endOffset":217427,"count":0}],"isBlockCoverage":false},{"functionName":"isEnabled","ranges":[{"startOffset":217428,"endOffset":217470,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":217471,"endOffset":218007,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":218008,"endOffset":218164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":218227,"endOffset":228524,"count":1}],"isBlockCoverage":false},{"functionName":"startTracing2","ranges":[{"startOffset":218380,"endOffset":219747,"count":0}],"isBlockCoverage":false},{"functionName":"stopTracing","ranges":[{"startOffset":219798,"endOffset":220161,"count":0}],"isBlockCoverage":false},{"functionName":"recordType","ranges":[{"startOffset":220209,"endOffset":220305,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":220365,"endOffset":220613,"count":1}],"isBlockCoverage":false},{"functionName":"instant","ranges":[{"startOffset":220681,"endOffset":220773,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":220838,"endOffset":221074,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":221108,"endOffset":221273,"count":0}],"isBlockCoverage":false},{"functionName":"popAll","ranges":[{"startOffset":221305,"endOffset":221490,"count":0}],"isBlockCoverage":false},{"functionName":"writeStackEvent","ranges":[{"startOffset":221563,"endOffset":222134,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":222137,"endOffset":222681,"count":0}],"isBlockCoverage":false},{"functionName":"getLocation","ranges":[{"startOffset":222684,"endOffset":223090,"count":0}],"isBlockCoverage":false},{"functionName":"dumpTypes","ranges":[{"startOffset":223093,"endOffset":228348,"count":0}],"isBlockCoverage":false},{"functionName":"dumpLegend","ranges":[{"startOffset":228351,"endOffset":228479,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":228727,"endOffset":258397,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":258451,"endOffset":261548,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":261605,"endOffset":264517,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":264573,"endOffset":264887,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":264954,"endOffset":265870,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":265947,"endOffset":266281,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":266358,"endOffset":267305,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":267386,"endOffset":268358,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":268425,"endOffset":270197,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":270251,"endOffset":271182,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":271246,"endOffset":271464,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":271578,"endOffset":272399,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":272481,"endOffset":273024,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":273099,"endOffset":273290,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":273350,"endOffset":273619,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":273681,"endOffset":274208,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":274273,"endOffset":274584,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":274653,"endOffset":274886,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":274952,"endOffset":275263,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":275327,"endOffset":275710,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":275773,"endOffset":279022,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":279097,"endOffset":279678,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":279752,"endOffset":282106,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":282173,"endOffset":282912,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":282983,"endOffset":283373,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":283444,"endOffset":283804,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":283886,"endOffset":285302,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":285378,"endOffset":290235,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":290291,"endOffset":292011,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":292074,"endOffset":293087,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":293154,"endOffset":295667,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":295725,"endOffset":300738,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":300793,"endOffset":304427,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":304486,"endOffset":305177,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":305237,"endOffset":305764,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":305822,"endOffset":306663,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":306719,"endOffset":307021,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":307082,"endOffset":307339,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":307403,"endOffset":307571,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":307633,"endOffset":308598,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":308656,"endOffset":308798,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":308853,"endOffset":309239,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":309302,"endOffset":310677,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":310743,"endOffset":311079,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":311135,"endOffset":311354,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":311421,"endOffset":312521,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":312599,"endOffset":312943,"count":1}],"isBlockCoverage":false},{"functionName":"diagnosticCategoryName","ranges":[{"startOffset":312972,"endOffset":313123,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":313168,"endOffset":313679,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":313753,"endOffset":314020,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":314087,"endOffset":314667,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":314733,"endOffset":315167,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":315236,"endOffset":315618,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":315679,"endOffset":316415,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316467,"endOffset":316807,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316871,"endOffset":317170,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":317238,"endOffset":317428,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":317484,"endOffset":317928,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":317985,"endOffset":318921,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":318983,"endOffset":319159,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":319228,"endOffset":319432,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":319500,"endOffset":327238,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":327296,"endOffset":327747,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":327805,"endOffset":334112,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":334172,"endOffset":334452,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":334507,"endOffset":336575,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":336636,"endOffset":337317,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":338689,"endOffset":341905,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":341967,"endOffset":342545,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":342608,"endOffset":343521,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":343599,"endOffset":343956,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":344024,"endOffset":349634,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":349694,"endOffset":350156,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":351285,"endOffset":351653,"count":1}],"isBlockCoverage":false},{"functionName":"generateDjb2Hash","ranges":[{"startOffset":351704,"endOffset":351877,"count":0}],"isBlockCoverage":false},{"functionName":"setStackTraceLimit","ranges":[{"startOffset":351878,"endOffset":351985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":352030,"endOffset":352317,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":352387,"endOffset":352624,"count":1}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":352709,"endOffset":352821,"count":0}],"isBlockCoverage":false},{"functionName":"createPollingIntervalBasedLevels","ranges":[{"startOffset":352822,"endOffset":352997,"count":2}],"isBlockCoverage":true},{"functionName":"setCustomPollingValues","ranges":[{"startOffset":353220,"endOffset":354820,"count":1},{"startOffset":353300,"endOffset":353317,"count":0}],"isBlockCoverage":true},{"functionName":"getLevel","ranges":[{"startOffset":353677,"endOffset":353793,"count":9}],"isBlockCoverage":true},{"functionName":"getCustomLevels","ranges":[{"startOffset":353796,"endOffset":354181,"count":3}],"isBlockCoverage":true},{"functionName":"setCustomLevel","ranges":[{"startOffset":353973,"endOffset":354177,"count":9},{"startOffset":354086,"endOffset":354171,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomLevels","ranges":[{"startOffset":354184,"endOffset":354529,"count":1},{"startOffset":354311,"endOffset":354410,"count":0}],"isBlockCoverage":true},{"functionName":"setLevel","ranges":[{"startOffset":354433,"endOffset":354525,"count":0}],"isBlockCoverage":false},{"functionName":"getCustomPollingBasedLevels","ranges":[{"startOffset":354532,"endOffset":354818,"count":2},{"startOffset":354708,"endOffset":354813,"count":0}],"isBlockCoverage":true},{"functionName":"pollWatchedFileQueue","ranges":[{"startOffset":354821,"endOffset":356029,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicPriorityPollingWatchFile","ranges":[{"startOffset":356030,"endOffset":360012,"count":0}],"isBlockCoverage":false},{"functionName":"createUseFsEventsOnParentDirectoryWatchFile","ranges":[{"startOffset":360013,"endOffset":362830,"count":0}],"isBlockCoverage":false},{"functionName":"createFixedChunkSizePollingWatchFile","ranges":[{"startOffset":362831,"endOffset":363659,"count":0}],"isBlockCoverage":false},{"functionName":"createSingleWatcherPerName","ranges":[{"startOffset":363660,"endOffset":364615,"count":0}],"isBlockCoverage":false},{"functionName":"onWatchedFileStat","ranges":[{"startOffset":364616,"endOffset":364971,"count":0}],"isBlockCoverage":false},{"functionName":"getFileWatcherEventKind","ranges":[{"startOffset":364972,"endOffset":365120,"count":0}],"isBlockCoverage":false},{"functionName":"sysLog","ranges":[{"startOffset":365199,"endOffset":365244,"count":0}],"isBlockCoverage":false},{"functionName":"setSysLog","ranges":[{"startOffset":365245,"endOffset":365297,"count":0}],"isBlockCoverage":false},{"functionName":"createDirectoryWatcherSupportingRecursive","ranges":[{"startOffset":365298,"endOffset":374889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":374933,"endOffset":375137,"count":1}],"isBlockCoverage":false},{"functionName":"createFileWatcherCallback","ranges":[{"startOffset":375167,"endOffset":375345,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchCallbackForFileWatcherCallback","ranges":[{"startOffset":375346,"endOffset":375826,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredByWatchOptions","ranges":[{"startOffset":375827,"endOffset":376325,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchCallbackForDirectoryWatcherCallback","ranges":[{"startOffset":376326,"endOffset":376843,"count":0}],"isBlockCoverage":false},{"functionName":"createSystemWatchFunctions","ranges":[{"startOffset":376844,"endOffset":389781,"count":1}],"isBlockCoverage":true},{"functionName":"watchFile2","ranges":[{"startOffset":377721,"endOffset":379511,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDynamicPollingWatchFile","ranges":[{"startOffset":379514,"endOffset":379729,"count":0}],"isBlockCoverage":false},{"functionName":"ensureFixedChunkSizePollingWatchFile","ranges":[{"startOffset":379732,"endOffset":379967,"count":0}],"isBlockCoverage":false},{"functionName":"updateOptionsForWatchFile","ranges":[{"startOffset":379970,"endOffset":381074,"count":0}],"isBlockCoverage":false},{"functionName":"generateWatchFileOptions","ranges":[{"startOffset":381077,"endOffset":381390,"count":0}],"isBlockCoverage":false},{"functionName":"watchDirectory","ranges":[{"startOffset":381393,"endOffset":382348,"count":0}],"isBlockCoverage":false},{"functionName":"nonRecursiveWatchDirectory","ranges":[{"startOffset":382351,"endOffset":383814,"count":0}],"isBlockCoverage":false},{"functionName":"updateOptionsForWatchDirectory","ranges":[{"startOffset":383817,"endOffset":384497,"count":0}],"isBlockCoverage":false},{"functionName":"pollingWatchFile","ranges":[{"startOffset":384500,"endOffset":384788,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatch","ranges":[{"startOffset":384791,"endOffset":385203,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchHandlingExistenceOnHost","ranges":[{"startOffset":385206,"endOffset":389087,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchWorkerHandlingTimestamp","ranges":[{"startOffset":389090,"endOffset":389779,"count":0}],"isBlockCoverage":false},{"functionName":"patchWriteFileEnsuringDirectory","ranges":[{"startOffset":389782,"endOffset":390185,"count":1}],"isBlockCoverage":true},{"functionName":"sys2.writeFile","ranges":[{"startOffset":389894,"endOffset":390182,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":390197,"endOffset":403722,"count":1}],"isBlockCoverage":false},{"functionName":"getNodeSystem","ranges":[{"startOffset":390250,"endOffset":403572,"count":1},{"startOffset":390529,"endOffset":390566,"count":0},{"startOffset":390995,"endOffset":391023,"count":0},{"startOffset":391050,"endOffset":391068,"count":0},{"startOffset":391130,"endOffset":391183,"count":0},{"startOffset":393597,"endOffset":393615,"count":0},{"startOffset":393668,"endOffset":393676,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":391318,"endOffset":391337,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessibleSortedChildDirectories","ranges":[{"startOffset":391973,"endOffset":392031,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":392466,"endOffset":392517,"count":0}],"isBlockCoverage":false},{"functionName":"getWidthOfTerminal","ranges":[{"startOffset":392525,"endOffset":392594,"count":0}],"isBlockCoverage":false},{"functionName":"writeOutputIsTTY","ranges":[{"startOffset":392602,"endOffset":392667,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePath","ranges":[{"startOffset":392844,"endOffset":392873,"count":0}],"isBlockCoverage":false},{"functionName":"createDirectory","ranges":[{"startOffset":392960,"endOffset":393238,"count":0}],"isBlockCoverage":false},{"functionName":"getExecutingFilePath","ranges":[{"startOffset":393246,"endOffset":393312,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentVariable","ranges":[{"startOffset":393369,"endOffset":393447,"count":10}],"isBlockCoverage":true},{"functionName":"getMemoryUsage","ranges":[{"startOffset":393684,"endOffset":393815,"count":0}],"isBlockCoverage":false},{"functionName":"getFileSize","ranges":[{"startOffset":393823,"endOffset":393996,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":394004,"endOffset":394086,"count":0}],"isBlockCoverage":false},{"functionName":"cpuProfilingEnabled","ranges":[{"startOffset":394166,"endOffset":394271,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":394407,"endOffset":394468,"count":2}],"isBlockCoverage":true},{"functionName":"tryEnableSourceMapsForHost","ranges":[{"startOffset":394503,"endOffset":394634,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreen","ranges":[{"startOffset":394693,"endOffset":394762,"count":0}],"isBlockCoverage":false},{"functionName":"setBlocking","ranges":[{"startOffset":394783,"endOffset":394980,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":395002,"endOffset":395058,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":395080,"endOffset":395128,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":395145,"endOffset":395458,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":395493,"endOffset":395635,"count":2},{"startOffset":395591,"endOffset":395629,"count":0}],"isBlockCoverage":true},{"functionName":"enableCPUProfiler","ranges":[{"startOffset":395640,"endOffset":396178,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupPaths","ranges":[{"startOffset":396183,"endOffset":397267,"count":0}],"isBlockCoverage":false},{"functionName":"disableCPUProfiler","ranges":[{"startOffset":397272,"endOffset":398188,"count":0}],"isBlockCoverage":false},{"functionName":"isFileSystemCaseSensitive","ranges":[{"startOffset":398193,"endOffset":398373,"count":1},{"startOffset":398288,"endOffset":398319,"count":0}],"isBlockCoverage":true},{"functionName":"swapCase","ranges":[{"startOffset":398378,"endOffset":398543,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":398431,"endOffset":398535,"count":109},{"startOffset":398503,"endOffset":398521,"count":7},{"startOffset":398522,"endOffset":398526,"count":102}],"isBlockCoverage":true},{"functionName":"fsWatchFileWorker","ranges":[{"startOffset":398548,"endOffset":399361,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchWorker","ranges":[{"startOffset":399366,"endOffset":399615,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":399620,"endOffset":400404,"count":1},{"startOffset":399744,"endOffset":399782,"count":0},{"startOffset":399854,"endOffset":399874,"count":0},{"startOffset":399876,"endOffset":400106,"count":0},{"startOffset":400147,"endOffset":400167,"count":0},{"startOffset":400169,"endOffset":400224,"count":0},{"startOffset":400265,"endOffset":400285,"count":0},{"startOffset":400286,"endOffset":400306,"count":0},{"startOffset":400308,"endOffset":400360,"count":0}],"isBlockCoverage":true},{"functionName":"writeFile2","ranges":[{"startOffset":400409,"endOffset":400842,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessibleFileSystemEntries","ranges":[{"startOffset":400847,"endOffset":401862,"count":0}],"isBlockCoverage":false},{"functionName":"readDirectory","ranges":[{"startOffset":401867,"endOffset":402097,"count":0}],"isBlockCoverage":false},{"functionName":"fileSystemEntryExists","ranges":[{"startOffset":402102,"endOffset":402445,"count":2},{"startOffset":402204,"endOffset":402235,"count":0},{"startOffset":402330,"endOffset":402390,"count":0},{"startOffset":402399,"endOffset":402431,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":402450,"endOffset":402539,"count":2}],"isBlockCoverage":true},{"functionName":"directoryExists","ranges":[{"startOffset":402544,"endOffset":402643,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectories","ranges":[{"startOffset":402648,"endOffset":402756,"count":0}],"isBlockCoverage":false},{"functionName":"fsRealPathHandlingLongPath","ranges":[{"startOffset":402761,"endOffset":402899,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":402904,"endOffset":403025,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime3","ranges":[{"startOffset":403030,"endOffset":403147,"count":0}],"isBlockCoverage":false},{"functionName":"setModifiedTime","ranges":[{"startOffset":403152,"endOffset":403290,"count":0}],"isBlockCoverage":false},{"functionName":"deleteFile","ranges":[{"startOffset":403295,"endOffset":403417,"count":0}],"isBlockCoverage":false},{"functionName":"createSHA256Hash","ranges":[{"startOffset":403422,"endOffset":403568,"count":0}],"isBlockCoverage":false},{"functionName":"setSys","ranges":[{"startOffset":403727,"endOffset":403760,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":404173,"endOffset":404292,"count":16},{"startOffset":404255,"endOffset":404273,"count":14}],"isBlockCoverage":true},{"functionName":"isUrl","ranges":[{"startOffset":404293,"endOffset":404358,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":404359,"endOffset":404435,"count":0}],"isBlockCoverage":false},{"functionName":"isDiskPathRoot","ranges":[{"startOffset":404436,"endOffset":404573,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsAbsolute","ranges":[{"startOffset":404574,"endOffset":404650,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsRelative","ranges":[{"startOffset":404651,"endOffset":404725,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsBareSpecifier","ranges":[{"startOffset":404726,"endOffset":404821,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":404822,"endOffset":404907,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIs","ranges":[{"startOffset":404908,"endOffset":405023,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIsOneOf","ranges":[{"startOffset":405024,"endOffset":405204,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":405205,"endOffset":405340,"count":16}],"isBlockCoverage":true},{"functionName":"isVolumeCharacter","ranges":[{"startOffset":405341,"endOffset":405493,"count":9},{"startOffset":405412,"endOffset":405430,"count":4},{"startOffset":405439,"endOffset":405482,"count":5},{"startOffset":405465,"endOffset":405482,"count":0}],"isBlockCoverage":true},{"functionName":"getFileUrlVolumeSeparatorEnd","ranges":[{"startOffset":405494,"endOffset":405839,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedRootLength","ranges":[{"startOffset":405840,"endOffset":407392,"count":20},{"startOffset":405891,"endOffset":405900,"count":0},{"startOffset":405964,"endOffset":405977,"count":9},{"startOffset":405995,"endOffset":406202,"count":11},{"startOffset":406042,"endOffset":406114,"count":0},{"startOffset":406115,"endOffset":406138,"count":0},{"startOffset":406160,"endOffset":406202,"count":0},{"startOffset":406202,"endOffset":406232,"count":9},{"startOffset":406232,"endOffset":406260,"count":4},{"startOffset":406274,"endOffset":406424,"count":0},{"startOffset":406424,"endOffset":406503,"count":9},{"startOffset":406503,"endOffset":407378,"count":0},{"startOffset":407378,"endOffset":407391,"count":9}],"isBlockCoverage":true},{"functionName":"getRootLength","ranges":[{"startOffset":407393,"endOffset":407526,"count":20},{"startOffset":407497,"endOffset":407510,"count":0}],"isBlockCoverage":true},{"functionName":"getDirectoryPath","ranges":[{"startOffset":407527,"endOffset":407817,"count":1},{"startOffset":407670,"endOffset":407682,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseFileName","ranges":[{"startOffset":407818,"endOffset":408353,"count":2},{"startOffset":407984,"endOffset":407994,"count":0},{"startOffset":408186,"endOffset":408210,"count":0},{"startOffset":408211,"endOffset":408266,"count":0},{"startOffset":408296,"endOffset":408343,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetExtensionFromPath","ranges":[{"startOffset":408354,"endOffset":408772,"count":0}],"isBlockCoverage":false},{"functionName":"getAnyExtensionFromPathWorker","ranges":[{"startOffset":408773,"endOffset":409158,"count":0}],"isBlockCoverage":false},{"functionName":"getAnyExtensionFromPath","ranges":[{"startOffset":409159,"endOffset":409614,"count":0}],"isBlockCoverage":false},{"functionName":"pathComponents","ranges":[{"startOffset":409615,"endOffset":409858,"count":2},{"startOffset":409819,"endOffset":409830,"count":0}],"isBlockCoverage":true},{"functionName":"getPathComponents","ranges":[{"startOffset":409859,"endOffset":410017,"count":2}],"isBlockCoverage":true},{"functionName":"getPathFromPathComponents","ranges":[{"startOffset":410018,"endOffset":410296,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSlashes","ranges":[{"startOffset":410297,"endOffset":410421,"count":28},{"startOffset":410360,"endOffset":410411,"count":0}],"isBlockCoverage":true},{"functionName":"reducePathComponents","ranges":[{"startOffset":410422,"endOffset":410955,"count":2},{"startOffset":410491,"endOffset":410501,"count":0},{"startOffset":410583,"endOffset":410935,"count":12},{"startOffset":410642,"endOffset":410651,"count":0},{"startOffset":410679,"endOffset":410688,"count":0},{"startOffset":410717,"endOffset":410902,"count":0}],"isBlockCoverage":true},{"functionName":"combinePaths","ranges":[{"startOffset":410956,"endOffset":411347,"count":7},{"startOffset":411098,"endOffset":411107,"count":0},{"startOffset":411211,"endOffset":411245,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePath","ranges":[{"startOffset":411348,"endOffset":411481,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":411482,"endOffset":411620,"count":2}],"isBlockCoverage":true},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":411621,"endOffset":414464,"count":4},{"startOffset":411745,"endOffset":411764,"count":2},{"startOffset":411766,"endOffset":411904,"count":2},{"startOffset":412097,"endOffset":412115,"count":0},{"startOffset":412120,"endOffset":414461,"count":0}],"isBlockCoverage":true},{"functionName":"normalizePath","ranges":[{"startOffset":414465,"endOffset":414806,"count":4},{"startOffset":414632,"endOffset":414743,"count":0},{"startOffset":414744,"endOffset":414790,"count":0},{"startOffset":414791,"endOffset":414803,"count":0}],"isBlockCoverage":true},{"functionName":"simpleNormalizePath","ranges":[{"startOffset":414807,"endOffset":415188,"count":8},{"startOffset":414889,"endOffset":414911,"count":7},{"startOffset":414911,"endOffset":414996,"count":1},{"startOffset":414996,"endOffset":415039,"count":0},{"startOffset":415039,"endOffset":415169,"count":1},{"startOffset":415169,"endOffset":415187,"count":0}],"isBlockCoverage":true},{"functionName":"getPathWithoutRoot","ranges":[{"startOffset":415189,"endOffset":415344,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePathWithoutRoot","ranges":[{"startOffset":415345,"endOffset":415508,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":415509,"endOffset":415756,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":415757,"endOffset":415916,"count":9},{"startOffset":415850,"endOffset":415899,"count":2},{"startOffset":415899,"endOffset":415915,"count":7}],"isBlockCoverage":true},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":415917,"endOffset":416071,"count":7},{"startOffset":416054,"endOffset":416070,"count":0}],"isBlockCoverage":true},{"functionName":"ensurePathIsNonModuleName","ranges":[{"startOffset":416072,"endOffset":416194,"count":0}],"isBlockCoverage":false},{"functionName":"changeAnyExtension","ranges":[{"startOffset":416195,"endOffset":416529,"count":0}],"isBlockCoverage":false},{"functionName":"changeFullExtension","ranges":[{"startOffset":416530,"endOffset":416870,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsWorker","ranges":[{"startOffset":416933,"endOffset":418021,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseSensitive","ranges":[{"startOffset":418022,"endOffset":418130,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseInsensitive","ranges":[{"startOffset":418131,"endOffset":418243,"count":0}],"isBlockCoverage":false},{"functionName":"comparePaths","ranges":[{"startOffset":418244,"endOffset":418596,"count":0}],"isBlockCoverage":false},{"functionName":"containsPath","ranges":[{"startOffset":418597,"endOffset":419616,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithDirectory","ranges":[{"startOffset":419617,"endOffset":419960,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponentsRelativeTo","ranges":[{"startOffset":419961,"endOffset":420831,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromDirectory","ranges":[{"startOffset":420832,"endOffset":421533,"count":0}],"isBlockCoverage":false},{"functionName":"convertToRelativePath","ranges":[{"startOffset":421534,"endOffset":421860,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromFile","ranges":[{"startOffset":421861,"endOffset":422045,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathToDirectoryOrUrl","ranges":[{"startOffset":422046,"endOffset":422736,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectory","ranges":[{"startOffset":422737,"endOffset":423055,"count":1},{"startOffset":422906,"endOffset":423053,"count":0}],"isBlockCoverage":true},{"functionName":"isNodeModulesDirectory","ranges":[{"startOffset":423056,"endOffset":423145,"count":0}],"isBlockCoverage":false},{"functionName":"diag","ranges":[{"startOffset":423201,"endOffset":423429,"count":2103}],"isBlockCoverage":true},{"functionName":"tokenIsIdentifierOrKeyword","ranges":[{"startOffset":921139,"endOffset":921224,"count":13}],"isBlockCoverage":true},{"functionName":"tokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":921225,"endOffset":921367,"count":0}],"isBlockCoverage":false},{"functionName":"lookupInUnicodeMap","ranges":[{"startOffset":956872,"endOffset":957266,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierStart","ranges":[{"startOffset":957267,"endOffset":957482,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierPart","ranges":[{"startOffset":957483,"endOffset":957695,"count":0}],"isBlockCoverage":false},{"functionName":"makeReverseMap","ranges":[{"startOffset":957696,"endOffset":957837,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":957768,"endOffset":957816,"count":152}],"isBlockCoverage":true},{"functionName":"tokenToString","ranges":[{"startOffset":957886,"endOffset":957941,"count":1}],"isBlockCoverage":true},{"functionName":"stringToToken","ranges":[{"startOffset":957942,"endOffset":958000,"count":0}],"isBlockCoverage":false},{"functionName":"regularExpressionFlagToCharacterCode","ranges":[{"startOffset":958065,"endOffset":958150,"count":0}],"isBlockCoverage":false},{"functionName":"characterCodeToRegularExpressionFlag","ranges":[{"startOffset":958151,"endOffset":958243,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineStarts","ranges":[{"startOffset":958244,"endOffset":958900,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":958901,"endOffset":959216,"count":0}],"isBlockCoverage":false},{"functionName":"computePositionOfLineAndCharacter","ranges":[{"startOffset":959217,"endOffset":960099,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":960100,"endOffset":960228,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineAndCharacterOfPosition","ranges":[{"startOffset":960229,"endOffset":960450,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineOfPosition","ranges":[{"startOffset":960451,"endOffset":960784,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositions","ranges":[{"startOffset":960785,"endOffset":961246,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":961247,"endOffset":961392,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceLike","ranges":[{"startOffset":961393,"endOffset":961482,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceSingleLine","ranges":[{"startOffset":961483,"endOffset":961944,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":961945,"endOffset":962117,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":962118,"endOffset":962191,"count":5},{"startOffset":962168,"endOffset":962179,"count":0}],"isBlockCoverage":true},{"functionName":"isHexDigit","ranges":[{"startOffset":962192,"endOffset":962322,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIILetter","ranges":[{"startOffset":962323,"endOffset":962441,"count":25},{"startOffset":962378,"endOffset":962389,"count":20},{"startOffset":962418,"endOffset":962430,"count":20}],"isBlockCoverage":true},{"functionName":"isWordCharacter","ranges":[{"startOffset":962442,"endOffset":962538,"count":20},{"startOffset":962500,"endOffset":962514,"count":5},{"startOffset":962515,"endOffset":962527,"count":5}],"isBlockCoverage":true},{"functionName":"isOctalDigit","ranges":[{"startOffset":962539,"endOffset":962617,"count":0}],"isBlockCoverage":false},{"functionName":"couldStartTrivia","ranges":[{"startOffset":962618,"endOffset":963194,"count":0}],"isBlockCoverage":false},{"functionName":"skipTrivia","ranges":[{"startOffset":963195,"endOffset":965509,"count":21},{"startOffset":963307,"endOffset":963328,"count":0},{"startOffset":963374,"endOffset":965507,"count":86},{"startOffset":963437,"endOffset":963555,"count":0},{"startOffset":963585,"endOffset":963743,"count":13},{"startOffset":963656,"endOffset":963689,"count":0},{"startOffset":963750,"endOffset":963767,"count":0},{"startOffset":963774,"endOffset":963800,"count":0},{"startOffset":963807,"endOffset":963830,"count":0},{"startOffset":963837,"endOffset":963890,"count":52},{"startOffset":963897,"endOffset":964672,"count":0},{"startOffset":964679,"endOffset":964702,"count":0},{"startOffset":964709,"endOffset":964728,"count":0},{"startOffset":964735,"endOffset":964756,"count":0},{"startOffset":964763,"endOffset":964970,"count":0},{"startOffset":964977,"endOffset":965176,"count":0},{"startOffset":965183,"endOffset":965332,"count":0},{"startOffset":965339,"endOffset":965481,"count":21},{"startOffset":965393,"endOffset":965416,"count":0},{"startOffset":965418,"endOffset":965466,"count":0},{"startOffset":965487,"endOffset":965507,"count":21}],"isBlockCoverage":true},{"functionName":"isConflictMarkerTrivia","ranges":[{"startOffset":965560,"endOffset":966069,"count":0}],"isBlockCoverage":false},{"functionName":"scanConflictMarkerTrivia","ranges":[{"startOffset":966070,"endOffset":966800,"count":0}],"isBlockCoverage":false},{"functionName":"isShebangTrivia","ranges":[{"startOffset":966835,"endOffset":966941,"count":0}],"isBlockCoverage":false},{"functionName":"scanShebangTrivia","ranges":[{"startOffset":966942,"endOffset":967079,"count":0}],"isBlockCoverage":false},{"functionName":"iterateCommentRanges","ranges":[{"startOffset":967080,"endOffset":970179,"count":0}],"isBlockCoverage":false},{"functionName":"forEachLeadingCommentRange","ranges":[{"startOffset":970180,"endOffset":970368,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTrailingCommentRange","ranges":[{"startOffset":970369,"endOffset":970557,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachLeadingCommentRange","ranges":[{"startOffset":970558,"endOffset":970770,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachTrailingCommentRange","ranges":[{"startOffset":970771,"endOffset":970983,"count":0}],"isBlockCoverage":false},{"functionName":"appendCommentRange","ranges":[{"startOffset":970984,"endOffset":971150,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRanges","ranges":[{"startOffset":971151,"endOffset":971339,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingCommentRanges","ranges":[{"startOffset":971340,"endOffset":971530,"count":0}],"isBlockCoverage":false},{"functionName":"getShebang","ranges":[{"startOffset":971531,"endOffset":971647,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":971648,"endOffset":971854,"count":5},{"startOffset":971725,"endOffset":971737,"count":0},{"startOffset":971746,"endOffset":971758,"count":0},{"startOffset":971767,"endOffset":971851,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierPart","ranges":[{"startOffset":971855,"endOffset":972201,"count":20},{"startOffset":971952,"endOffset":971964,"count":5},{"startOffset":971973,"endOffset":972114,"count":5},{"startOffset":972057,"endOffset":972093,"count":0},{"startOffset":972115,"endOffset":972198,"count":5},{"startOffset":972151,"endOffset":972198,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierText","ranges":[{"startOffset":972202,"endOffset":972581,"count":0}],"isBlockCoverage":false},{"functionName":"createScanner","ranges":[{"startOffset":972582,"endOffset":1066367,"count":4},{"startOffset":974989,"endOffset":975261,"count":0}],"isBlockCoverage":true},{"functionName":"getTokenFullStart","ranges":[{"startOffset":973062,"endOffset":973080,"count":221}],"isBlockCoverage":true},{"functionName":"getStartPos","ranges":[{"startOffset":973099,"endOffset":973117,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenEnd","ranges":[{"startOffset":973136,"endOffset":973145,"count":0}],"isBlockCoverage":false},{"functionName":"getTextPos","ranges":[{"startOffset":973163,"endOffset":973172,"count":0}],"isBlockCoverage":false},{"functionName":"getToken","ranges":[{"startOffset":973188,"endOffset":973199,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenStart","ranges":[{"startOffset":973220,"endOffset":973236,"count":20}],"isBlockCoverage":true},{"functionName":"getTokenPos","ranges":[{"startOffset":973255,"endOffset":973271,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenText","ranges":[{"startOffset":973291,"endOffset":973328,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenValue","ranges":[{"startOffset":973349,"endOffset":973365,"count":21}],"isBlockCoverage":true},{"functionName":"hasUnicodeEscape","ranges":[{"startOffset":973389,"endOffset":973440,"count":5}],"isBlockCoverage":true},{"functionName":"hasExtendedUnicodeEscape","ranges":[{"startOffset":973472,"endOffset":973528,"count":47}],"isBlockCoverage":true},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":973557,"endOffset":973610,"count":4}],"isBlockCoverage":true},{"functionName":"hasPrecedingJSDocComment","ranges":[{"startOffset":973642,"endOffset":973698,"count":29}],"isBlockCoverage":true},{"functionName":"hasPrecedingJSDocLeadingAsterisks","ranges":[{"startOffset":973739,"endOffset":973808,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":973828,"endOffset":973878,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWord","ranges":[{"startOffset":973923,"endOffset":973980,"count":0}],"isBlockCoverage":false},{"functionName":"isUnterminated","ranges":[{"startOffset":974025,"endOffset":974072,"count":21}],"isBlockCoverage":true},{"functionName":"getCommentDirectives","ranges":[{"startOffset":974100,"endOffset":974123,"count":0}],"isBlockCoverage":false},{"functionName":"getNumericLiteralFlags","ranges":[{"startOffset":974153,"endOffset":974177,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFlags","ranges":[{"startOffset":974224,"endOffset":974240,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":975076,"endOffset":975249,"count":0}],"isBlockCoverage":false},{"functionName":"codePointUnchecked","ranges":[{"startOffset":975283,"endOffset":975358,"count":157}],"isBlockCoverage":true},{"functionName":"codePointChecked","ranges":[{"startOffset":975361,"endOffset":975476,"count":0}],"isBlockCoverage":false},{"functionName":"charCodeUnchecked","ranges":[{"startOffset":975479,"endOffset":975551,"count":251}],"isBlockCoverage":true},{"functionName":"charCodeChecked","ranges":[{"startOffset":975554,"endOffset":975667,"count":0}],"isBlockCoverage":false},{"functionName":"error2","ranges":[{"startOffset":975670,"endOffset":975864,"count":0}],"isBlockCoverage":false},{"functionName":"scanNumberFragment","ranges":[{"startOffset":975867,"endOffset":977125,"count":0}],"isBlockCoverage":false},{"functionName":"scanNumber","ranges":[{"startOffset":977128,"endOffset":979924,"count":0}],"isBlockCoverage":false},{"functionName":"checkForIdentifierStartAfterNumericLiteral","ranges":[{"startOffset":979927,"endOffset":980712,"count":0}],"isBlockCoverage":false},{"functionName":"scanDigits","ranges":[{"startOffset":980715,"endOffset":981003,"count":0}],"isBlockCoverage":false},{"functionName":"scanExactNumberOfHexDigits","ranges":[{"startOffset":981006,"endOffset":981276,"count":0}],"isBlockCoverage":false},{"functionName":"scanMinimumNumberOfHexDigits","ranges":[{"startOffset":981279,"endOffset":981480,"count":0}],"isBlockCoverage":false},{"functionName":"scanHexDigits","ranges":[{"startOffset":981483,"endOffset":982865,"count":0}],"isBlockCoverage":false},{"functionName":"scanString","ranges":[{"startOffset":982868,"endOffset":983925,"count":21},{"startOffset":983032,"endOffset":983902,"count":230},{"startOffset":983056,"endOffset":983228,"count":0},{"startOffset":983295,"endOffset":983381,"count":21},{"startOffset":983381,"endOffset":983418,"count":209},{"startOffset":983418,"endOffset":983440,"count":0},{"startOffset":983442,"endOffset":983615,"count":0},{"startOffset":983615,"endOffset":983664,"count":209},{"startOffset":983687,"endOffset":983709,"count":0},{"startOffset":983711,"endOffset":983883,"count":0},{"startOffset":983883,"endOffset":983902,"count":209}],"isBlockCoverage":true},{"functionName":"scanTemplateAndSetTokenValue","ranges":[{"startOffset":983928,"endOffset":985735,"count":0}],"isBlockCoverage":false},{"functionName":"scanEscapeSequence","ranges":[{"startOffset":985738,"endOffset":991652,"count":0}],"isBlockCoverage":false},{"functionName":"scanExtendedUnicodeEscape","ranges":[{"startOffset":991655,"endOffset":993128,"count":0}],"isBlockCoverage":false},{"functionName":"peekUnicodeEscape","ranges":[{"startOffset":993131,"endOffset":993451,"count":0}],"isBlockCoverage":false},{"functionName":"peekExtendedUnicodeEscape","ranges":[{"startOffset":993454,"endOffset":993930,"count":0}],"isBlockCoverage":false},{"functionName":"scanIdentifierParts","ranges":[{"startOffset":993933,"endOffset":994896,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierToken","ranges":[{"startOffset":994899,"endOffset":995283,"count":5},{"startOffset":995239,"endOffset":995282,"count":0}],"isBlockCoverage":true},{"functionName":"scanBinaryOrOctalDigits","ranges":[{"startOffset":995286,"endOffset":996319,"count":0}],"isBlockCoverage":false},{"functionName":"checkBigIntSuffix","ranges":[{"startOffset":996322,"endOffset":996891,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":996894,"endOffset":1014814,"count":61},{"startOffset":996984,"endOffset":1014810,"count":139},{"startOffset":997032,"endOffset":997088,"count":2},{"startOffset":997088,"endOffset":997152,"count":137},{"startOffset":997152,"endOffset":997415,"count":1},{"startOffset":997187,"endOffset":997216,"count":0},{"startOffset":997218,"endOffset":997407,"count":0},{"startOffset":997415,"endOffset":997444,"count":137},{"startOffset":997444,"endOffset":997467,"count":16},{"startOffset":997476,"endOffset":997907,"count":16},{"startOffset":997639,"endOffset":997907,"count":0},{"startOffset":997916,"endOffset":997933,"count":0},{"startOffset":997942,"endOffset":997968,"count":0},{"startOffset":997977,"endOffset":998000,"count":0},{"startOffset":998009,"endOffset":998029,"count":62},{"startOffset":998038,"endOffset":998070,"count":62},{"startOffset":998079,"endOffset":998101,"count":62},{"startOffset":998110,"endOffset":998133,"count":62},{"startOffset":998142,"endOffset":998165,"count":62},{"startOffset":998174,"endOffset":998198,"count":62},{"startOffset":998207,"endOffset":998231,"count":62},{"startOffset":998240,"endOffset":998272,"count":62},{"startOffset":998281,"endOffset":998312,"count":62},{"startOffset":998321,"endOffset":998351,"count":62},{"startOffset":998360,"endOffset":998388,"count":62},{"startOffset":998397,"endOffset":998430,"count":62},{"startOffset":998439,"endOffset":998465,"count":62},{"startOffset":998474,"endOffset":998500,"count":62},{"startOffset":998509,"endOffset":998540,"count":62},{"startOffset":998549,"endOffset":998584,"count":62},{"startOffset":998593,"endOffset":998627,"count":62},{"startOffset":998636,"endOffset":998670,"count":62},{"startOffset":998679,"endOffset":998981,"count":62},{"startOffset":998792,"endOffset":998981,"count":0},{"startOffset":998990,"endOffset":999389,"count":0},{"startOffset":999398,"endOffset":999424,"count":21},{"startOffset":999433,"endOffset":999545,"count":21},{"startOffset":999554,"endOffset":999708,"count":0},{"startOffset":999717,"endOffset":999946,"count":0},{"startOffset":999955,"endOffset":1000499,"count":0},{"startOffset":1000508,"endOffset":1000599,"count":0},{"startOffset":1000608,"endOffset":1000701,"count":0},{"startOffset":1000710,"endOffset":1001503,"count":0},{"startOffset":1001512,"endOffset":1001867,"count":0},{"startOffset":1001876,"endOffset":1001959,"count":12},{"startOffset":1001968,"endOffset":1002329,"count":0},{"startOffset":1002338,"endOffset":1002741,"count":0},{"startOffset":1002750,"endOffset":1005019,"count":0},{"startOffset":1005028,"endOffset":1006698,"count":0},{"startOffset":1006732,"endOffset":1006749,"count":0},{"startOffset":1006758,"endOffset":1006775,"count":0},{"startOffset":1006784,"endOffset":1006801,"count":0},{"startOffset":1006810,"endOffset":1006827,"count":0},{"startOffset":1006836,"endOffset":1006853,"count":0},{"startOffset":1006862,"endOffset":1006879,"count":0},{"startOffset":1006888,"endOffset":1006905,"count":0},{"startOffset":1006914,"endOffset":1006931,"count":0},{"startOffset":1006940,"endOffset":1006996,"count":0},{"startOffset":1007005,"endOffset":1007088,"count":13},{"startOffset":1007097,"endOffset":1007188,"count":0},{"startOffset":1007197,"endOffset":1008236,"count":0},{"startOffset":1008245,"endOffset":1009050,"count":0},{"startOffset":1009059,"endOffset":1009429,"count":0},{"startOffset":1009438,"endOffset":1010008,"count":0},{"startOffset":1010017,"endOffset":1010112,"count":2},{"startOffset":1010121,"endOffset":1010218,"count":2},{"startOffset":1010227,"endOffset":1010450,"count":0},{"startOffset":1010459,"endOffset":1010551,"count":2},{"startOffset":1010560,"endOffset":1011333,"count":0},{"startOffset":1011342,"endOffset":1011436,"count":2},{"startOffset":1011445,"endOffset":1011529,"count":0},{"startOffset":1011538,"endOffset":1011615,"count":0},{"startOffset":1011624,"endOffset":1012489,"count":0},{"startOffset":1012498,"endOffset":1014016,"count":0},{"startOffset":1014025,"endOffset":1014205,"count":0},{"startOffset":1014214,"endOffset":1014796,"count":5},{"startOffset":1014379,"endOffset":1014796,"count":0},{"startOffset":1014804,"endOffset":1014810,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseJSDoc","ranges":[{"startOffset":1014817,"endOffset":1015228,"count":0}],"isBlockCoverage":false},{"functionName":"reScanInvalidIdentifier","ranges":[{"startOffset":1015231,"endOffset":1015688,"count":0}],"isBlockCoverage":false},{"functionName":"scanIdentifier","ranges":[{"startOffset":1015691,"endOffset":1016159,"count":5},{"startOffset":1015881,"endOffset":1015948,"count":20},{"startOffset":1015950,"endOffset":1015970,"count":15},{"startOffset":1016060,"endOffset":1016114,"count":0}],"isBlockCoverage":true},{"functionName":"reScanGreaterToken","ranges":[{"startOffset":1016162,"endOffset":1017028,"count":32},{"startOffset":1016239,"endOffset":1017006,"count":0}],"isBlockCoverage":true},{"functionName":"reScanAsteriskEqualsToken","ranges":[{"startOffset":1017031,"endOffset":1017261,"count":0}],"isBlockCoverage":false},{"functionName":"reScanSlashToken","ranges":[{"startOffset":1017264,"endOffset":1021505,"count":0}],"isBlockCoverage":false},{"functionName":"scanRegularExpressionWorker","ranges":[{"startOffset":1021508,"endOffset":1055167,"count":0}],"isBlockCoverage":false},{"functionName":"checkRegularExpressionFlagAvailability","ranges":[{"startOffset":1055170,"endOffset":1055529,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfCommentDirective","ranges":[{"startOffset":1055532,"endOffset":1055908,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectiveFromComment","ranges":[{"startOffset":1055911,"endOffset":1056247,"count":0}],"isBlockCoverage":false},{"functionName":"reScanTemplateToken","ranges":[{"startOffset":1056250,"endOffset":1056392,"count":0}],"isBlockCoverage":false},{"functionName":"reScanTemplateHeadOrNoSubstitutionTemplate","ranges":[{"startOffset":1056395,"endOffset":1056582,"count":0}],"isBlockCoverage":false},{"functionName":"reScanJsxToken","ranges":[{"startOffset":1056585,"endOffset":1056737,"count":0}],"isBlockCoverage":false},{"functionName":"reScanLessThanToken","ranges":[{"startOffset":1056740,"endOffset":1056925,"count":0}],"isBlockCoverage":false},{"functionName":"reScanHashToken","ranges":[{"startOffset":1056928,"endOffset":1057101,"count":0}],"isBlockCoverage":false},{"functionName":"reScanQuestionToken","ranges":[{"startOffset":1057104,"endOffset":1057326,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxToken","ranges":[{"startOffset":1057329,"endOffset":1058971,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxIdentifier","ranges":[{"startOffset":1058974,"endOffset":1059432,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxAttributeValue","ranges":[{"startOffset":1059435,"endOffset":1059784,"count":0}],"isBlockCoverage":false},{"functionName":"reScanJsxAttributeValue","ranges":[{"startOffset":1059787,"endOffset":1059900,"count":0}],"isBlockCoverage":false},{"functionName":"scanJSDocCommentTextToken","ranges":[{"startOffset":1059903,"endOffset":1060707,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsDocToken","ranges":[{"startOffset":1060710,"endOffset":1063924,"count":0}],"isBlockCoverage":false},{"functionName":"speculationHelper","ranges":[{"startOffset":1063927,"endOffset":1064464,"count":32},{"startOffset":1064234,"endOffset":1064248,"count":0}],"isBlockCoverage":true},{"functionName":"scanRange","ranges":[{"startOffset":1064467,"endOffset":1065128,"count":0}],"isBlockCoverage":false},{"functionName":"lookAhead","ranges":[{"startOffset":1065131,"endOffset":1065251,"count":0}],"isBlockCoverage":false},{"functionName":"tryScan","ranges":[{"startOffset":1065254,"endOffset":1065373,"count":32}],"isBlockCoverage":true},{"functionName":"getText","ranges":[{"startOffset":1065376,"endOffset":1065417,"count":0}],"isBlockCoverage":false},{"functionName":"clearCommentDirectives","ranges":[{"startOffset":1065420,"endOffset":1065491,"count":1}],"isBlockCoverage":true},{"functionName":"setText","ranges":[{"startOffset":1065494,"endOffset":1065665,"count":6},{"startOffset":1065558,"endOffset":1065563,"count":5},{"startOffset":1065608,"endOffset":1065626,"count":0}],"isBlockCoverage":true},{"functionName":"setOnError","ranges":[{"startOffset":1065668,"endOffset":1065737,"count":2}],"isBlockCoverage":true},{"functionName":"setScriptTarget","ranges":[{"startOffset":1065740,"endOffset":1065820,"count":1}],"isBlockCoverage":true},{"functionName":"setLanguageVariant","ranges":[{"startOffset":1065823,"endOffset":1065896,"count":1}],"isBlockCoverage":true},{"functionName":"setScriptKind","ranges":[{"startOffset":1065899,"endOffset":1065956,"count":2}],"isBlockCoverage":true},{"functionName":"setJSDocParsingMode","ranges":[{"startOffset":1065959,"endOffset":1066028,"count":2}],"isBlockCoverage":true},{"functionName":"resetTokenState","ranges":[{"startOffset":1066031,"endOffset":1066265,"count":6}],"isBlockCoverage":true},{"functionName":"setSkipJsDocLeadingAsterisks","ranges":[{"startOffset":1066268,"endOffset":1066365,"count":0}],"isBlockCoverage":false},{"functionName":"codePointAt","ranges":[{"startOffset":1066368,"endOffset":1066425,"count":157}],"isBlockCoverage":true},{"functionName":"charSize","ranges":[{"startOffset":1066426,"endOffset":1066549,"count":20},{"startOffset":1066469,"endOffset":1066488,"count":0},{"startOffset":1066516,"endOffset":1066535,"count":0}],"isBlockCoverage":true},{"functionName":"utf16EncodeAsStringFallback","ranges":[{"startOffset":1066550,"endOffset":1066908,"count":0}],"isBlockCoverage":false},{"functionName":"utf16EncodeAsStringWorker","ranges":[{"startOffset":1066964,"endOffset":1067010,"count":0}],"isBlockCoverage":false},{"functionName":"utf16EncodeAsString","ranges":[{"startOffset":1067042,"endOffset":1067132,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleNameRelative","ranges":[{"startOffset":1073523,"endOffset":1073645,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicateDiagnostics","ranges":[{"startOffset":1073646,"endOffset":1073792,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":1074385,"endOffset":1074856,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanEnd","ranges":[{"startOffset":1074857,"endOffset":1074922,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIsEmpty","ranges":[{"startOffset":1074923,"endOffset":1074985,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsPosition","ranges":[{"startOffset":1074986,"endOffset":1075104,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsPositionInclusive","ranges":[{"startOffset":1075105,"endOffset":1075226,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextSpan","ranges":[{"startOffset":1075227,"endOffset":1075356,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextRange","ranges":[{"startOffset":1075357,"endOffset":1075476,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsTextSpan","ranges":[{"startOffset":1075477,"endOffset":1075596,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlapsWith","ranges":[{"startOffset":1075597,"endOffset":1075693,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlap","ranges":[{"startOffset":1075694,"endOffset":1075851,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithTextSpan","ranges":[{"startOffset":1075852,"endOffset":1076000,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWith","ranges":[{"startOffset":1076001,"endOffset":1076139,"count":0}],"isBlockCoverage":false},{"functionName":"decodedTextSpanIntersectsWith","ranges":[{"startOffset":1076140,"endOffset":1076325,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithPosition","ranges":[{"startOffset":1076326,"endOffset":1076451,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeIntersectsWithTextSpan","ranges":[{"startOffset":1076452,"endOffset":1076582,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersection","ranges":[{"startOffset":1076583,"endOffset":1076817,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpans","ranges":[{"startOffset":1076818,"endOffset":1077438,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpan","ranges":[{"startOffset":1077439,"endOffset":1077636,"count":1},{"startOffset":1077498,"endOffset":1077537,"count":0},{"startOffset":1077557,"endOffset":1077597,"count":0}],"isBlockCoverage":true},{"functionName":"createTextSpanFromBounds","ranges":[{"startOffset":1077637,"endOffset":1077731,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeNewSpan","ranges":[{"startOffset":1077732,"endOffset":1077834,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeIsUnchanged","ranges":[{"startOffset":1077835,"endOffset":1077944,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeRange","ranges":[{"startOffset":1077945,"endOffset":1078091,"count":1},{"startOffset":1078016,"endOffset":1078059,"count":0}],"isBlockCoverage":true},{"functionName":"collapseTextChangeRangesAcrossMultipleVersions","ranges":[{"startOffset":1078171,"endOffset":1079154,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterOwner","ranges":[{"startOffset":1079155,"endOffset":1079458,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyDeclaration","ranges":[{"startOffset":1079459,"endOffset":1079653,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingPattern","ranges":[{"startOffset":1079654,"endOffset":1079802,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingElement","ranges":[{"startOffset":1079803,"endOffset":1079942,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpBindingElementsAndPatterns","ranges":[{"startOffset":1079943,"endOffset":1080125,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedFlags","ranges":[{"startOffset":1080126,"endOffset":1080599,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedModifierFlags","ranges":[{"startOffset":1080600,"endOffset":1080703,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":1080704,"endOffset":1080839,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlags","ranges":[{"startOffset":1080840,"endOffset":1080926,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeFlags","ranges":[{"startOffset":1080927,"endOffset":1080979,"count":0}],"isBlockCoverage":false},{"functionName":"validateLocaleAndSetLanguage","ranges":[{"startOffset":1081102,"endOffset":1082845,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNode","ranges":[{"startOffset":1082846,"endOffset":1083071,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestor","ranges":[{"startOffset":1083072,"endOffset":1083310,"count":21},{"startOffset":1083191,"endOffset":1083219,"count":0},{"startOffset":1083237,"endOffset":1083263,"count":0}],"isBlockCoverage":true},{"functionName":"isParseTreeNode","ranges":[{"startOffset":1083311,"endOffset":1083397,"count":0}],"isBlockCoverage":false},{"functionName":"getParseTreeNode","ranges":[{"startOffset":1083398,"endOffset":1083682,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLeadingUnderscores","ranges":[{"startOffset":1083683,"endOffset":1083883,"count":13},{"startOffset":1083806,"endOffset":1083840,"count":0},{"startOffset":1083849,"endOffset":1083867,"count":0}],"isBlockCoverage":true},{"functionName":"unescapeLeadingUnderscores","ranges":[{"startOffset":1083884,"endOffset":1084110,"count":13},{"startOffset":1084018,"endOffset":1084044,"count":0},{"startOffset":1084053,"endOffset":1084079,"count":0},{"startOffset":1084088,"endOffset":1084102,"count":0}],"isBlockCoverage":true},{"functionName":"idText","ranges":[{"startOffset":1084111,"endOffset":1084229,"count":0}],"isBlockCoverage":false},{"functionName":"identifierToKeywordKind","ranges":[{"startOffset":1084230,"endOffset":1084374,"count":0}],"isBlockCoverage":false},{"functionName":"symbolName","ranges":[{"startOffset":1084375,"endOffset":1084620,"count":0}],"isBlockCoverage":false},{"functionName":"nameForNamelessJSDocTypedef","ranges":[{"startOffset":1084621,"endOffset":1085932,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationIdentifier","ranges":[{"startOffset":1085933,"endOffset":1086072,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasName","ranges":[{"startOffset":1086073,"endOffset":1086403,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfJSDocTypedef","ranges":[{"startOffset":1086404,"endOffset":1086522,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDeclaration","ranges":[{"startOffset":1086523,"endOffset":1086582,"count":45}],"isBlockCoverage":true},{"functionName":"getNonAssignedNameOfDeclaration","ranges":[{"startOffset":1086583,"endOffset":1088107,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfDeclaration","ranges":[{"startOffset":1088108,"endOffset":1088399,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedName","ranges":[{"startOffset":1088400,"endOffset":1089000,"count":0}],"isBlockCoverage":false},{"functionName":"getDecorators","ranges":[{"startOffset":1089001,"endOffset":1089114,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers","ranges":[{"startOffset":1089115,"endOffset":1089255,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsWorker","ranges":[{"startOffset":1089256,"endOffset":1089928,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTags","ranges":[{"startOffset":1089929,"endOffset":1090050,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsNoCache","ranges":[{"startOffset":1090051,"endOffset":1090178,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsWorker","ranges":[{"startOffset":1090179,"endOffset":1090436,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTags","ranges":[{"startOffset":1090437,"endOffset":1090566,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsNoCache","ranges":[{"startOffset":1090567,"endOffset":1090702,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocParameterTags","ranges":[{"startOffset":1090703,"endOffset":1090799,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocAugmentsTag","ranges":[{"startOffset":1090800,"endOffset":1090891,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocImplementsTags","ranges":[{"startOffset":1090892,"endOffset":1090987,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocClassTag","ranges":[{"startOffset":1090988,"endOffset":1091073,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTag","ranges":[{"startOffset":1091074,"endOffset":1091161,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTagNoCache","ranges":[{"startOffset":1091162,"endOffset":1091294,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTag","ranges":[{"startOffset":1091295,"endOffset":1091384,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTagNoCache","ranges":[{"startOffset":1091385,"endOffset":1091519,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTag","ranges":[{"startOffset":1091520,"endOffset":1091613,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTagNoCache","ranges":[{"startOffset":1091614,"endOffset":1091752,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTag","ranges":[{"startOffset":1091753,"endOffset":1091844,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTagNoCache","ranges":[{"startOffset":1091845,"endOffset":1091981,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverrideTagNoCache","ranges":[{"startOffset":1091982,"endOffset":1092118,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTag","ranges":[{"startOffset":1092119,"endOffset":1092214,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTagNoCache","ranges":[{"startOffset":1092215,"endOffset":1092355,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocEnumTag","ranges":[{"startOffset":1092356,"endOffset":1092439,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocThisTag","ranges":[{"startOffset":1092440,"endOffset":1092523,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnTag","ranges":[{"startOffset":1092524,"endOffset":1092611,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTemplateTag","ranges":[{"startOffset":1092612,"endOffset":1092703,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesTag","ranges":[{"startOffset":1092704,"endOffset":1092797,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeTag","ranges":[{"startOffset":1092798,"endOffset":1092985,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocType","ranges":[{"startOffset":1092986,"endOffset":1093249,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnType","ranges":[{"startOffset":1093250,"endOffset":1093791,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagsWorker","ranges":[{"startOffset":1093792,"endOffset":1094308,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTags","ranges":[{"startOffset":1094309,"endOffset":1094410,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstJSDocTag","ranges":[{"startOffset":1094411,"endOffset":1094527,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTags","ranges":[{"startOffset":1094528,"endOffset":1094620,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTagsOfKind","ranges":[{"startOffset":1094621,"endOffset":1094731,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJSDocComment","ranges":[{"startOffset":1094732,"endOffset":1094942,"count":0}],"isBlockCoverage":false},{"functionName":"formatJSDocLink","ranges":[{"startOffset":1094943,"endOffset":1095308,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeParameterDeclarations","ranges":[{"startOffset":1095309,"endOffset":1096350,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveConstraintOfTypeParameter","ranges":[{"startOffset":1096351,"endOffset":1096561,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberName","ranges":[{"startOffset":1096562,"endOffset":1096681,"count":0}],"isBlockCoverage":false},{"functionName":"isGetOrSetAccessorDeclaration","ranges":[{"startOffset":1096682,"endOffset":1096815,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessChain","ranges":[{"startOffset":1096816,"endOffset":1096942,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessChain","ranges":[{"startOffset":1096943,"endOffset":1097067,"count":0}],"isBlockCoverage":false},{"functionName":"isCallChain","ranges":[{"startOffset":1097068,"endOffset":1097174,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":1097175,"endOffset":1097457,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChainRoot","ranges":[{"startOffset":1097458,"endOffset":1097585,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfOptionalChainRoot","ranges":[{"startOffset":1097586,"endOffset":1097714,"count":0}],"isBlockCoverage":false},{"functionName":"isOutermostOptionalChain","ranges":[{"startOffset":1097715,"endOffset":1097869,"count":0}],"isBlockCoverage":false},{"functionName":"isNullishCoalesce","ranges":[{"startOffset":1097870,"endOffset":1098019,"count":0}],"isBlockCoverage":false},{"functionName":"isConstTypeReference","ranges":[{"startOffset":1098020,"endOffset":1098190,"count":0}],"isBlockCoverage":false},{"functionName":"skipPartiallyEmittedExpressions","ranges":[{"startOffset":1098191,"endOffset":1098315,"count":32}],"isBlockCoverage":true},{"functionName":"isNonNullChain","ranges":[{"startOffset":1098316,"endOffset":1098428,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakOrContinueStatement","ranges":[{"startOffset":1098429,"endOffset":1098568,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExportBindings","ranges":[{"startOffset":1098569,"endOffset":1098699,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyLikeTag","ranges":[{"startOffset":1098700,"endOffset":1098837,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeKind","ranges":[{"startOffset":1098838,"endOffset":1098905,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenKind","ranges":[{"startOffset":1098906,"endOffset":1099004,"count":0}],"isBlockCoverage":false},{"functionName":"isToken","ranges":[{"startOffset":1099005,"endOffset":1099058,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArray","ranges":[{"startOffset":1099059,"endOffset":1099155,"count":12},{"startOffset":1099124,"endOffset":1099152,"count":7}],"isBlockCoverage":true},{"functionName":"isLiteralKind","ranges":[{"startOffset":1099156,"endOffset":1099269,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpression","ranges":[{"startOffset":1099270,"endOffset":1099343,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpressionOfObject","ranges":[{"startOffset":1099344,"endOffset":1099658,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralKind","ranges":[{"startOffset":1099659,"endOffset":1099783,"count":21},{"startOffset":1099743,"endOffset":1099756,"count":0}],"isBlockCoverage":true},{"functionName":"isTemplateLiteralToken","ranges":[{"startOffset":1099784,"endOffset":1099868,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddleOrTemplateTail","ranges":[{"startOffset":1099869,"endOffset":1100021,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifier","ranges":[{"startOffset":1100022,"endOffset":1100127,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportDeclaration","ranges":[{"startOffset":1100128,"endOffset":1100496,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyExportDeclaration","ranges":[{"startOffset":1100497,"endOffset":1100874,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":1100875,"endOffset":1101010,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":1101011,"endOffset":1101148,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTextContainingNode","ranges":[{"startOffset":1101149,"endOffset":1101277,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributeName","ranges":[{"startOffset":1101278,"endOffset":1101372,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedIdentifier","ranges":[{"startOffset":1101373,"endOffset":1101524,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedPrivateIdentifier","ranges":[{"startOffset":1101525,"endOffset":1101690,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelReservedGeneratedIdentifier","ranges":[{"startOffset":1101691,"endOffset":1101920,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierClassElementDeclaration","ranges":[{"startOffset":1101921,"endOffset":1102084,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierPropertyAccessExpression","ranges":[{"startOffset":1102085,"endOffset":1102224,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierKind","ranges":[{"startOffset":1102225,"endOffset":1102829,"count":13},{"startOffset":1102281,"endOffset":1102312,"count":0},{"startOffset":1102317,"endOffset":1102348,"count":0},{"startOffset":1102353,"endOffset":1102381,"count":0},{"startOffset":1102386,"endOffset":1102413,"count":0},{"startOffset":1102418,"endOffset":1102448,"count":0},{"startOffset":1102453,"endOffset":1102482,"count":0},{"startOffset":1102487,"endOffset":1102515,"count":0},{"startOffset":1102520,"endOffset":1102545,"count":0},{"startOffset":1102550,"endOffset":1102579,"count":0},{"startOffset":1102584,"endOffset":1102614,"count":0},{"startOffset":1102619,"endOffset":1102651,"count":0},{"startOffset":1102656,"endOffset":1102687,"count":0},{"startOffset":1102692,"endOffset":1102721,"count":0},{"startOffset":1102726,"endOffset":1102752,"count":0},{"startOffset":1102757,"endOffset":1102807,"count":0}],"isBlockCoverage":true},{"functionName":"isParameterPropertyModifier","ranges":[{"startOffset":1102830,"endOffset":1102948,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberModifier","ranges":[{"startOffset":1102949,"endOffset":1103160,"count":0}],"isBlockCoverage":false},{"functionName":"isModifier","ranges":[{"startOffset":1103161,"endOffset":1103226,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityName","ranges":[{"startOffset":1103227,"endOffset":1103359,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyName","ranges":[{"startOffset":1103360,"endOffset":1103610,"count":13},{"startOffset":1103530,"endOffset":1103543,"count":0},{"startOffset":1103565,"endOffset":1103580,"count":0}],"isBlockCoverage":true},{"functionName":"isBindingName","ranges":[{"startOffset":1103611,"endOffset":1103793,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLike","ranges":[{"startOffset":1103794,"endOffset":1103877,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeOrClassStaticBlockDeclaration","ranges":[{"startOffset":1103878,"endOffset":1104031,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclaration","ranges":[{"startOffset":1104032,"endOffset":1104135,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":1104136,"endOffset":1104256,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclarationKind","ranges":[{"startOffset":1104257,"endOffset":1104626,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeKind","ranges":[{"startOffset":1104627,"endOffset":1105054,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrModuleBlock","ranges":[{"startOffset":1105055,"endOffset":1105197,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElement","ranges":[{"startOffset":1105198,"endOffset":1105579,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLike","ranges":[{"startOffset":1105580,"endOffset":1105714,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessor","ranges":[{"startOffset":1105715,"endOffset":1105839,"count":0}],"isBlockCoverage":false},{"functionName":"isAutoAccessorPropertyDeclaration","ranges":[{"startOffset":1105840,"endOffset":1105959,"count":0}],"isBlockCoverage":false},{"functionName":"isClassInstanceProperty","ranges":[{"startOffset":1105960,"endOffset":1106368,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodOrAccessor","ranges":[{"startOffset":1106369,"endOffset":1106587,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike","ranges":[{"startOffset":1106588,"endOffset":1106669,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeElement","ranges":[{"startOffset":1106670,"endOffset":1107039,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrTypeElement","ranges":[{"startOffset":1107040,"endOffset":1107133,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElementLike","ranges":[{"startOffset":1107134,"endOffset":1107450,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNode","ranges":[{"startOffset":1107451,"endOffset":1107516,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrConstructorTypeNode","ranges":[{"startOffset":1107517,"endOffset":1107698,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingPattern","ranges":[{"startOffset":1107699,"endOffset":1107890,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":1107891,"endOffset":1108053,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingElement","ranges":[{"startOffset":1108054,"endOffset":1108204,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationBindingElement","ranges":[{"startOffset":1108205,"endOffset":1108438,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentElement","ranges":[{"startOffset":1108439,"endOffset":1108632,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentPattern","ranges":[{"startOffset":1108633,"endOffset":1108774,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentPattern","ranges":[{"startOffset":1108775,"endOffset":1108975,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentElement","ranges":[{"startOffset":1108976,"endOffset":1109302,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentPattern","ranges":[{"startOffset":1109303,"endOffset":1109500,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentElement","ranges":[{"startOffset":1109501,"endOffset":1110182,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedNameOrImportTypeNode","ranges":[{"startOffset":1110183,"endOffset":1110398,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedName","ranges":[{"startOffset":1110399,"endOffset":1110565,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeOrFunctionLikeExpression","ranges":[{"startOffset":1110566,"endOffset":1110701,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeExpression","ranges":[{"startOffset":1110702,"endOffset":1111190,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpression","ranges":[{"startOffset":1111191,"endOffset":1111321,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":1111322,"endOffset":1111483,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideExpression","ranges":[{"startOffset":1111484,"endOffset":1111610,"count":32}],"isBlockCoverage":true},{"functionName":"isLeftHandSideExpressionKind","ranges":[{"startOffset":1111611,"endOffset":1113064,"count":32},{"startOffset":1111679,"endOffset":1111719,"count":0},{"startOffset":1111724,"endOffset":1111763,"count":0},{"startOffset":1111768,"endOffset":1111797,"count":0},{"startOffset":1111802,"endOffset":1111832,"count":0},{"startOffset":1111837,"endOffset":1111863,"count":0},{"startOffset":1111868,"endOffset":1111905,"count":0},{"startOffset":1111910,"endOffset":1111937,"count":0},{"startOffset":1111942,"endOffset":1111982,"count":0},{"startOffset":1111987,"endOffset":1112025,"count":4},{"startOffset":1112030,"endOffset":1112069,"count":4},{"startOffset":1112074,"endOffset":1112113,"count":6},{"startOffset":1112118,"endOffset":1112149,"count":6},{"startOffset":1112154,"endOffset":1112188,"count":6},{"startOffset":1112193,"endOffset":1112218,"count":6},{"startOffset":1112223,"endOffset":1112255,"count":6},{"startOffset":1112353,"endOffset":1112392,"count":6},{"startOffset":1112397,"endOffset":1112425,"count":6},{"startOffset":1112430,"endOffset":1112458,"count":6},{"startOffset":1112463,"endOffset":1112491,"count":22},{"startOffset":1112496,"endOffset":1112540,"count":22},{"startOffset":1112545,"endOffset":1112579,"count":22},{"startOffset":1112584,"endOffset":1112611,"count":22},{"startOffset":1112616,"endOffset":1112643,"count":22},{"startOffset":1112648,"endOffset":1112675,"count":22},{"startOffset":1113030,"endOffset":1113058,"count":0}],"isBlockCoverage":true},{"functionName":"isUnaryExpression","ranges":[{"startOffset":1113065,"endOffset":1113177,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionKind","ranges":[{"startOffset":1113178,"endOffset":1113595,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionWithWrite","ranges":[{"startOffset":1113596,"endOffset":1113906,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLiteral","ranges":[{"startOffset":1113907,"endOffset":1114183,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":1114184,"endOffset":1114286,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionKind","ranges":[{"startOffset":1114287,"endOffset":1114799,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertionExpression","ranges":[{"startOffset":1114800,"endOffset":1114954,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":1114955,"endOffset":1115391,"count":0}],"isBlockCoverage":false},{"functionName":"isScopeMarker","ranges":[{"startOffset":1115392,"endOffset":1115488,"count":0}],"isBlockCoverage":false},{"functionName":"hasScopeMarker","ranges":[{"startOffset":1115489,"endOffset":1115570,"count":0}],"isBlockCoverage":false},{"functionName":"needsScopeMarker","ranges":[{"startOffset":1115571,"endOffset":1115758,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleIndicator","ranges":[{"startOffset":1115759,"endOffset":1115924,"count":0}],"isBlockCoverage":false},{"functionName":"isForInOrOfStatement","ranges":[{"startOffset":1115925,"endOffset":1116055,"count":0}],"isBlockCoverage":false},{"functionName":"isConciseBody","ranges":[{"startOffset":1116056,"endOffset":1116134,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBody","ranges":[{"startOffset":1116135,"endOffset":1116192,"count":0}],"isBlockCoverage":false},{"functionName":"isForInitializer","ranges":[{"startOffset":1116193,"endOffset":1116292,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBody","ranges":[{"startOffset":1116293,"endOffset":1116463,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceBody","ranges":[{"startOffset":1116464,"endOffset":1116605,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamespaceBody","ranges":[{"startOffset":1116606,"endOffset":1116750,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportBindings","ranges":[{"startOffset":1116751,"endOffset":1116897,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleOrEnumDeclaration","ranges":[{"startOffset":1116898,"endOffset":1117037,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveSymbol","ranges":[{"startOffset":1117038,"endOffset":1119513,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLocals","ranges":[{"startOffset":1119514,"endOffset":1120680,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationKind","ranges":[{"startOffset":1120681,"endOffset":1122139,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatementKind","ranges":[{"startOffset":1122140,"endOffset":1122692,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementKindButNotDeclarationKind","ranges":[{"startOffset":1122693,"endOffset":1123470,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":1123471,"endOffset":1123688,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatement","ranges":[{"startOffset":1123689,"endOffset":1123778,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementButNotDeclaration","ranges":[{"startOffset":1123779,"endOffset":1123884,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":1123885,"endOffset":1124056,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":1124057,"endOffset":1124339,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":1124340,"endOffset":1124520,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleReference","ranges":[{"startOffset":1124521,"endOffset":1124704,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxTagNameExpression","ranges":[{"startOffset":1124705,"endOffset":1124932,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxChild","ranges":[{"startOffset":1124933,"endOffset":1125171,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeLike","ranges":[{"startOffset":1125172,"endOffset":1125318,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrJsxExpression","ranges":[{"startOffset":1125319,"endOffset":1125472,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElement","ranges":[{"startOffset":1125473,"endOffset":1125632,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxCallLike","ranges":[{"startOffset":1125633,"endOffset":1125823,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseOrDefaultClause","ranges":[{"startOffset":1125824,"endOffset":1125966,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNode","ranges":[{"startOffset":1125967,"endOffset":1126085,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCommentContainingNode","ranges":[{"startOffset":1126086,"endOffset":1126354,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTag","ranges":[{"startOffset":1126355,"endOffset":1126478,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessor","ranges":[{"startOffset":1126479,"endOffset":1126557,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessor","ranges":[{"startOffset":1126558,"endOffset":1126636,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocNodes","ranges":[{"startOffset":1126637,"endOffset":1126774,"count":0}],"isBlockCoverage":false},{"functionName":"hasType","ranges":[{"startOffset":1126775,"endOffset":1126823,"count":0}],"isBlockCoverage":false},{"functionName":"hasInitializer","ranges":[{"startOffset":1126824,"endOffset":1126886,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyExpressionInitializer","ranges":[{"startOffset":1126887,"endOffset":1127228,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElement","ranges":[{"startOffset":1127229,"endOffset":1127399,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceType","ranges":[{"startOffset":1127400,"endOffset":1127541,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentation","ranges":[{"startOffset":1127572,"endOffset":1128038,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralLike","ranges":[{"startOffset":1128039,"endOffset":1128180,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkLike","ranges":[{"startOffset":1128181,"endOffset":1128342,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestParameter","ranges":[{"startOffset":1128343,"endOffset":1128466,"count":0}],"isBlockCoverage":false},{"functionName":"isRestParameter","ranges":[{"startOffset":1128467,"endOffset":1128701,"count":0}],"isBlockCoverage":false},{"functionName":"hasInternalAnnotation","ranges":[{"startOffset":1128702,"endOffset":1128862,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalDeclaration","ranges":[{"startOffset":1128863,"endOffset":1130164,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationOfKind","ranges":[{"startOffset":1130359,"endOffset":1130620,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationsOfKind","ranges":[{"startOffset":1130621,"endOffset":1130745,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbolTable","ranges":[{"startOffset":1130746,"endOffset":1130955,"count":0}],"isBlockCoverage":false},{"functionName":"isTransientSymbol","ranges":[{"startOffset":1130956,"endOffset":1131052,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleSymbol","ranges":[{"startOffset":1131053,"endOffset":1131222,"count":0}],"isBlockCoverage":false},{"functionName":"createSingleLineStringWriter","ranges":[{"startOffset":1131274,"endOffset":1132302,"count":1}],"isBlockCoverage":true},{"functionName":"writeText","ranges":[{"startOffset":1131352,"endOffset":1131373,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":1131399,"endOffset":1131408,"count":0}],"isBlockCoverage":false},{"functionName":"writeSymbol","ranges":[{"startOffset":1131718,"endOffset":1131740,"count":0}],"isBlockCoverage":false},{"functionName":"getTextPos","ranges":[{"startOffset":1131826,"endOffset":1131842,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":1131857,"endOffset":1131864,"count":0}],"isBlockCoverage":false},{"functionName":"getColumn","ranges":[{"startOffset":1131881,"endOffset":1131888,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":1131905,"endOffset":1131912,"count":0}],"isBlockCoverage":false},{"functionName":"isAtStartOfLine","ranges":[{"startOffset":1131935,"endOffset":1131946,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingComment","ranges":[{"startOffset":1131972,"endOffset":1131983,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingWhitespace","ranges":[{"startOffset":1132012,"endOffset":1132082,"count":0}],"isBlockCoverage":false},{"functionName":"writeLine","ranges":[{"startOffset":1132200,"endOffset":1132216,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1132281,"endOffset":1132295,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectModuleResolution","ranges":[{"startOffset":1132303,"endOffset":1132497,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveModuleResolutionChanges","ranges":[{"startOffset":1132498,"endOffset":1132658,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectingProgramStructure","ranges":[{"startOffset":1132659,"endOffset":1132815,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveChanges","ranges":[{"startOffset":1132816,"endOffset":1133055,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestor","ranges":[{"startOffset":1133056,"endOffset":1133295,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEntry","ranges":[{"startOffset":1133296,"endOffset":1133520,"count":22},{"startOffset":1133410,"endOffset":1133501,"count":177},{"startOffset":1133469,"endOffset":1133497,"count":15},{"startOffset":1133501,"endOffset":1133519,"count":7}],"isBlockCoverage":true},{"functionName":"forEachKey","ranges":[{"startOffset":1133521,"endOffset":1133724,"count":0}],"isBlockCoverage":false},{"functionName":"copyEntries","ranges":[{"startOffset":1133725,"endOffset":1133834,"count":0}],"isBlockCoverage":false},{"functionName":"usingSingleLineStringWriter","ranges":[{"startOffset":1133835,"endOffset":1134082,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":1134083,"endOffset":1134144,"count":0}],"isBlockCoverage":false},{"functionName":"projectReferenceIsEqualTo","ranges":[{"startOffset":1134145,"endOffset":1134317,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionIsEqualTo","ranges":[{"startOffset":1134318,"endOffset":1135116,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedModuleFromResolution","ranges":[{"startOffset":1135117,"endOffset":1135209,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedTypeReferenceDirectiveFromResolution","ranges":[{"startOffset":1135210,"endOffset":1135334,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleNotFoundChain","ranges":[{"startOffset":1135335,"endOffset":1137423,"count":0}],"isBlockCoverage":false},{"functionName":"createModeMismatchDetails","ranges":[{"startOffset":1137424,"endOffset":1138743,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdIsEqual","ranges":[{"startOffset":1138744,"endOffset":1138943,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToPackageName","ranges":[{"startOffset":1138944,"endOffset":1139064,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToString","ranges":[{"startOffset":1139065,"endOffset":1139211,"count":0}],"isBlockCoverage":false},{"functionName":"typeDirectiveIsEqualTo","ranges":[{"startOffset":1139212,"endOffset":1139887,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangesInResolutions","ranges":[{"startOffset":1139888,"endOffset":1140373,"count":0}],"isBlockCoverage":false},{"functionName":"containsParseError","ranges":[{"startOffset":1140374,"endOffset":1140514,"count":0}],"isBlockCoverage":false},{"functionName":"aggregateChildData","ranges":[{"startOffset":1140515,"endOffset":1140922,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfNode","ranges":[{"startOffset":1140923,"endOffset":1141059,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfModule","ranges":[{"startOffset":1141060,"endOffset":1141201,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainJsFile","ranges":[{"startOffset":1141202,"endOffset":1141379,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementWithLocals","ranges":[{"startOffset":1141380,"endOffset":1141641,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfLine","ranges":[{"startOffset":1141642,"endOffset":1141764,"count":0}],"isBlockCoverage":false},{"functionName":"nodePosToString","ranges":[{"startOffset":1141765,"endOffset":1141969,"count":0}],"isBlockCoverage":false},{"functionName":"getEndLinePosition","ranges":[{"startOffset":1141970,"endOffset":1142502,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelUniqueName","ranges":[{"startOffset":1142503,"endOffset":1142657,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsMissing","ranges":[{"startOffset":1142658,"endOffset":1142825,"count":21},{"startOffset":1142712,"endOffset":1142734,"count":0},{"startOffset":1142766,"endOffset":1142782,"count":0},{"startOffset":1142783,"endOffset":1142801,"count":0}],"isBlockCoverage":true},{"functionName":"nodeIsPresent","ranges":[{"startOffset":1142826,"endOffset":1142889,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarError","ranges":[{"startOffset":1142890,"endOffset":1144554,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarErrorElement","ranges":[{"startOffset":1144555,"endOffset":1144726,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterPrologue","ranges":[{"startOffset":1144727,"endOffset":1145069,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterPrologue","ranges":[{"startOffset":1145070,"endOffset":1145402,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyPrologueDirective","ranges":[{"startOffset":1145403,"endOffset":1145537,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterStandardPrologue","ranges":[{"startOffset":1145538,"endOffset":1145669,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterCustomPrologue","ranges":[{"startOffset":1145670,"endOffset":1145802,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterStandardPrologue","ranges":[{"startOffset":1145803,"endOffset":1145942,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterCustomPrologue","ranges":[{"startOffset":1145943,"endOffset":1146083,"count":0}],"isBlockCoverage":false},{"functionName":"isRecognizedTripleSlashComment","ranges":[{"startOffset":1146084,"endOffset":1146740,"count":0}],"isBlockCoverage":false},{"functionName":"isPinnedComment","ranges":[{"startOffset":1146741,"endOffset":1146896,"count":0}],"isBlockCoverage":false},{"functionName":"createCommentDirectivesMap","ranges":[{"startOffset":1146897,"endOffset":1147643,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenPosOfNode","ranges":[{"startOffset":1147644,"endOffset":1148563,"count":0}],"isBlockCoverage":false},{"functionName":"getNonDecoratorTokenPosOfNode","ranges":[{"startOffset":1148564,"endOffset":1148909,"count":0}],"isBlockCoverage":false},{"functionName":"getNonModifierTokenPosOfNode","ranges":[{"startOffset":1148910,"endOffset":1149252,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTextOfNodeFromSourceFile","ranges":[{"startOffset":1149253,"endOffset":1149416,"count":21}],"isBlockCoverage":true},{"functionName":"isJSDocTypeExpressionOrChild","ranges":[{"startOffset":1149417,"endOffset":1149518,"count":21}],"isBlockCoverage":true},{"functionName":"isExportNamespaceAsDefaultDeclaration","ranges":[{"startOffset":1149519,"endOffset":1149729,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameTextUnescaped","ranges":[{"startOffset":1149730,"endOffset":1149884,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameTextEscaped","ranges":[{"startOffset":1149885,"endOffset":1150035,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameIsDefault","ranges":[{"startOffset":1150036,"endOffset":1150188,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNodeFromSourceText","ranges":[{"startOffset":1150189,"endOffset":1150589,"count":21},{"startOffset":1150296,"endOffset":1150316,"count":0},{"startOffset":1150365,"endOffset":1150375,"count":0},{"startOffset":1150465,"endOffset":1150572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1150507,"endOffset":1150555,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNode","ranges":[{"startOffset":1150590,"endOffset":1150737,"count":0}],"isBlockCoverage":false},{"functionName":"getPos","ranges":[{"startOffset":1150738,"endOffset":1150784,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfNode","ranges":[{"startOffset":1150785,"endOffset":1150889,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitFlags","ranges":[{"startOffset":1150890,"endOffset":1150997,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalEmitFlags","ranges":[{"startOffset":1150998,"endOffset":1151121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1151179,"endOffset":1160833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1160880,"endOffset":1161411,"count":1}],"isBlockCoverage":false},{"functionName":"getLiteralText","ranges":[{"startOffset":1161441,"endOffset":1163305,"count":0}],"isBlockCoverage":false},{"functionName":"canUseOriginalText","ranges":[{"startOffset":1163306,"endOffset":1163776,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfConstantValue","ranges":[{"startOffset":1163777,"endOffset":1163887,"count":0}],"isBlockCoverage":false},{"functionName":"makeIdentifierFromModuleName","ranges":[{"startOffset":1163888,"endOffset":1164023,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockOrCatchScoped","ranges":[{"startOffset":1164024,"endOffset":1164209,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclarationOrBindingElement","ranges":[{"startOffset":1164210,"endOffset":1164432,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModule","ranges":[{"startOffset":1164433,"endOffset":1164585,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleWithStringLiteralName","ranges":[{"startOffset":1164586,"endOffset":1164715,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalAmbientModule","ranges":[{"startOffset":1164716,"endOffset":1164825,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveModuleDeclaration","ranges":[{"startOffset":1164826,"endOffset":1164931,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModuleSymbol","ranges":[{"startOffset":1164932,"endOffset":1165055,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModule","ranges":[{"startOffset":1165056,"endOffset":1165175,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScopedContainerTopLevel","ranges":[{"startOffset":1165176,"endOffset":1165368,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalScopeAugmentation","ranges":[{"startOffset":1165369,"endOffset":1165476,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleAugmentation","ranges":[{"startOffset":1165477,"endOffset":1165594,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleAugmentationExternal","ranges":[{"startOffset":1165595,"endOffset":1165940,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAugmentationDeclaration","ranges":[{"startOffset":1165941,"endOffset":1166167,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJSContainingModuleKind","ranges":[{"startOffset":1166168,"endOffset":1166311,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveExternalModule","ranges":[{"startOffset":1166312,"endOffset":1166510,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveStrictModeSourceFile","ranges":[{"startOffset":1166511,"endOffset":1167056,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientPropertyDeclaration","ranges":[{"startOffset":1167057,"endOffset":1167203,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScope","ranges":[{"startOffset":1167204,"endOffset":1167975,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameters","ranges":[{"startOffset":1167976,"endOffset":1168296,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameterChildren","ranges":[{"startOffset":1168297,"endOffset":1169167,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportSyntax","ranges":[{"startOffset":1169168,"endOffset":1169365,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrBareOrAccessedRequire","ranges":[{"startOffset":1169366,"endOffset":1169518,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrRequireStatement","ranges":[{"startOffset":1169519,"endOffset":1169637,"count":0}],"isBlockCoverage":false},{"functionName":"isLateVisibilityPaintedStatement","ranges":[{"startOffset":1169638,"endOffset":1170121,"count":0}],"isBlockCoverage":false},{"functionName":"hasPossibleExternalModuleReference","ranges":[{"startOffset":1170122,"endOffset":1170290,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrReExport","ranges":[{"startOffset":1170291,"endOffset":1170394,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingContainer","ranges":[{"startOffset":1170395,"endOffset":1170526,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingBlockScopeContainer","ranges":[{"startOffset":1170527,"endOffset":1170665,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnclosingBlockScopeContainer","ranges":[{"startOffset":1170666,"endOffset":1170886,"count":0}],"isBlockCoverage":false},{"functionName":"declarationNameToString","ranges":[{"startOffset":1170887,"endOffset":1171009,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromIndexInfo","ranges":[{"startOffset":1171010,"endOffset":1171148,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedNonLiteralName","ranges":[{"startOffset":1171149,"endOffset":1171297,"count":13},{"startOffset":1171245,"endOffset":1171294,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetTextOfPropertyName","ranges":[{"startOffset":1171298,"endOffset":1172060,"count":13},{"startOffset":1171377,"endOffset":1171402,"count":0},{"startOffset":1171407,"endOffset":1171539,"count":0},{"startOffset":1171742,"endOffset":1171911,"count":0},{"startOffset":1171916,"endOffset":1172003,"count":0},{"startOffset":1172008,"endOffset":1172054,"count":0}],"isBlockCoverage":true},{"functionName":"getTextOfPropertyName","ranges":[{"startOffset":1172061,"endOffset":1172162,"count":13}],"isBlockCoverage":true},{"functionName":"entityNameToString","ranges":[{"startOffset":1172163,"endOffset":1173109,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNode","ranges":[{"startOffset":1173110,"endOffset":1173300,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArray","ranges":[{"startOffset":1173301,"endOffset":1173522,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeInSourceFile","ranges":[{"startOffset":1173523,"endOffset":1173747,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeFromMessageChain","ranges":[{"startOffset":1173748,"endOffset":1174024,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArrayFromMessageChain","ranges":[{"startOffset":1174025,"endOffset":1174310,"count":0}],"isBlockCoverage":false},{"functionName":"assertDiagnosticLocation","ranges":[{"startOffset":1174311,"endOffset":1174590,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnosticFromMessageChain","ranges":[{"startOffset":1174591,"endOffset":1175023,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForFileFromMessageChain","ranges":[{"startOffset":1175024,"endOffset":1175356,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticMessageChainFromDiagnostic","ranges":[{"startOffset":1175357,"endOffset":1175639,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForRange","ranges":[{"startOffset":1175640,"endOffset":1175889,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalDiagnostic","ranges":[{"startOffset":1175890,"endOffset":1176032,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfTokenAtPosition","ranges":[{"startOffset":1176033,"endOffset":1176403,"count":0}],"isBlockCoverage":false},{"functionName":"scanTokenAtPosition","ranges":[{"startOffset":1176404,"endOffset":1176691,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForArrowFunction","ranges":[{"startOffset":1176692,"endOffset":1177217,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForNode","ranges":[{"startOffset":1177218,"endOffset":1180811,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalSourceFile","ranges":[{"startOffset":1180812,"endOffset":1180931,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalOrCommonJsModule","ranges":[{"startOffset":1180932,"endOffset":1181061,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonSourceFile","ranges":[{"startOffset":1181062,"endOffset":1181140,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumConst","ranges":[{"startOffset":1181141,"endOffset":1181235,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationReadonly","ranges":[{"startOffset":1181236,"endOffset":1181422,"count":0}],"isBlockCoverage":false},{"functionName":"isVarAwaitUsing","ranges":[{"startOffset":1181423,"endOffset":1181541,"count":0}],"isBlockCoverage":false},{"functionName":"isVarUsing","ranges":[{"startOffset":1181542,"endOffset":1181650,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConst","ranges":[{"startOffset":1181651,"endOffset":1181759,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConstLike","ranges":[{"startOffset":1181760,"endOffset":1181988,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":1181989,"endOffset":1182090,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperCall","ranges":[{"startOffset":1182091,"endOffset":1182212,"count":0}],"isBlockCoverage":false},{"functionName":"isImportCall","ranges":[{"startOffset":1182213,"endOffset":1182336,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta","ranges":[{"startOffset":1182337,"endOffset":1182472,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralImportTypeNode","ranges":[{"startOffset":1182473,"endOffset":1182614,"count":0}],"isBlockCoverage":false},{"functionName":"isPrologueDirective","ranges":[{"startOffset":1182615,"endOffset":1182758,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomPrologue","ranges":[{"startOffset":1182759,"endOffset":1182858,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedFunction","ranges":[{"startOffset":1182859,"endOffset":1182959,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariable","ranges":[{"startOffset":1182960,"endOffset":1183051,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariableStatement","ranges":[{"startOffset":1183052,"endOffset":1183222,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRangesOfNode","ranges":[{"startOffset":1183223,"endOffset":1183398,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentRanges","ranges":[{"startOffset":1183399,"endOffset":1184270,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeNode","ranges":[{"startOffset":1184890,"endOffset":1188268,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeExpressionWithTypeArguments","ranges":[{"startOffset":1188269,"endOffset":1188499,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReturnStatement","ranges":[{"startOffset":1188500,"endOffset":1189276,"count":0}],"isBlockCoverage":false},{"functionName":"forEachYieldExpression","ranges":[{"startOffset":1189277,"endOffset":1190078,"count":0}],"isBlockCoverage":false},{"functionName":"getRestParameterElementType","ranges":[{"startOffset":1190079,"endOffset":1190351,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOfDeclaration","ranges":[{"startOffset":1190352,"endOffset":1190668,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike","ranges":[{"startOffset":1190669,"endOffset":1191105,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInVariableStatement","ranges":[{"startOffset":1191106,"endOffset":1191289,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportedExpression","ranges":[{"startOffset":1191290,"endOffset":1191596,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportPropertyAssignment","ranges":[{"startOffset":1191597,"endOffset":1191790,"count":0}],"isBlockCoverage":false},{"functionName":"isValidESSymbolDeclaration","ranges":[{"startOffset":1191791,"endOffset":1192176,"count":0}],"isBlockCoverage":false},{"functionName":"introducesArgumentsExoticObject","ranges":[{"startOffset":1192177,"endOffset":1192538,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapInnermostStatementOfLabel","ranges":[{"startOffset":1192539,"endOffset":1192843,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBlock","ranges":[{"startOffset":1192844,"endOffset":1192957,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralMethod","ranges":[{"startOffset":1192958,"endOffset":1193116,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralOrClassExpressionMethodOrAccessor","ranges":[{"startOffset":1193117,"endOffset":1193426,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypePredicate","ranges":[{"startOffset":1193427,"endOffset":1193537,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypePredicate","ranges":[{"startOffset":1193538,"endOffset":1193636,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPropertyAssignment","ranges":[{"startOffset":1193637,"endOffset":1194015,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigObjectLiteralExpression","ranges":[{"startOffset":1194016,"endOffset":1194282,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigPropArrayElementValue","ranges":[{"startOffset":1194283,"endOffset":1194616,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTsConfigPropArray","ranges":[{"startOffset":1194617,"endOffset":1194804,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunction","ranges":[{"startOffset":1194805,"endOffset":1194897,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionDeclaration","ranges":[{"startOffset":1194898,"endOffset":1195012,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClass","ranges":[{"startOffset":1195013,"endOffset":1195099,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassStaticBlock","ranges":[{"startOffset":1195100,"endOffset":1195317,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionOrClassStaticBlock","ranges":[{"startOffset":1195318,"endOffset":1195457,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassExcludingClassDecorators","ranges":[{"startOffset":1195458,"endOffset":1195747,"count":0}],"isBlockCoverage":false},{"functionName":"getThisContainer","ranges":[{"startOffset":1195748,"endOffset":1197263,"count":0}],"isBlockCoverage":false},{"functionName":"isThisContainerOrFunctionBlock","ranges":[{"startOffset":1197264,"endOffset":1198009,"count":0}],"isBlockCoverage":false},{"functionName":"isInTopLevelContext","ranges":[{"startOffset":1198010,"endOffset":1198386,"count":0}],"isBlockCoverage":false},{"functionName":"getNewTargetContainer","ranges":[{"startOffset":1198387,"endOffset":1198791,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperContainer","ranges":[{"startOffset":1198792,"endOffset":1199856,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":1199857,"endOffset":1200301,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperProperty","ranges":[{"startOffset":1200302,"endOffset":1200515,"count":0}],"isBlockCoverage":false},{"functionName":"isThisProperty","ranges":[{"startOffset":1200516,"endOffset":1200727,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedDeclaration","ranges":[{"startOffset":1200728,"endOffset":1200915,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedObjectBindingExpression","ranges":[{"startOffset":1200916,"endOffset":1201230,"count":0}],"isBlockCoverage":false},{"functionName":"getEntityNameFromTypeNode","ranges":[{"startOffset":1201231,"endOffset":1201760,"count":0}],"isBlockCoverage":false},{"functionName":"getInvokedExpression","ranges":[{"startOffset":1201761,"endOffset":1202165,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCanBeDecorated","ranges":[{"startOffset":1202166,"endOffset":1203361,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsDecorated","ranges":[{"startOffset":1203362,"endOffset":1203540,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOrChildIsDecorated","ranges":[{"startOffset":1203541,"endOffset":1203756,"count":0}],"isBlockCoverage":false},{"functionName":"childIsDecorated","ranges":[{"startOffset":1203757,"endOffset":1204386,"count":0}],"isBlockCoverage":false},{"functionName":"classOrConstructorParameterIsDecorated","ranges":[{"startOffset":1204387,"endOffset":1204669,"count":0}],"isBlockCoverage":false},{"functionName":"classElementOrClassElementParameterIsDecorated","ranges":[{"startOffset":1204670,"endOffset":1205651,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStringLiteral","ranges":[{"startOffset":1205652,"endOffset":1205992,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXTagName","ranges":[{"startOffset":1205993,"endOffset":1206271,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionNode","ranges":[{"startOffset":1206272,"endOffset":1209141,"count":0}],"isBlockCoverage":false},{"functionName":"isInExpressionContext","ranges":[{"startOffset":1209142,"endOffset":1211240,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeQuery","ranges":[{"startOffset":1211241,"endOffset":1211436,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReexportDeclaration","ranges":[{"startOffset":1211437,"endOffset":1211553,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":1211554,"endOffset":1211737,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleImportEqualsDeclarationExpression","ranges":[{"startOffset":1211738,"endOffset":1211912,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleRequireArgument","ranges":[{"startOffset":1211913,"endOffset":1212098,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalModuleImportEqualsDeclaration","ranges":[{"startOffset":1212099,"endOffset":1212282,"count":0}],"isBlockCoverage":false},{"functionName":"isFullSourceFile","ranges":[{"startOffset":1212283,"endOffset":1212407,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileJS","ranges":[{"startOffset":1212408,"endOffset":1212468,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSFile","ranges":[{"startOffset":1212469,"endOffset":1212563,"count":0}],"isBlockCoverage":false},{"functionName":"isInJsonFile","ranges":[{"startOffset":1212564,"endOffset":1212657,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJson","ranges":[{"startOffset":1212658,"endOffset":1212730,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSDoc","ranges":[{"startOffset":1212731,"endOffset":1212817,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocIndexSignature","ranges":[{"startOffset":1212818,"endOffset":1213142,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCall","ranges":[{"startOffset":1213143,"endOffset":1213612,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToRequire","ranges":[{"startOffset":1213613,"endOffset":1213787,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToBareOrAccessedRequire","ranges":[{"startOffset":1213788,"endOffset":1213975,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElementOfBareOrAccessedRequire","ranges":[{"startOffset":1213976,"endOffset":1214146,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedWithRequireHelper","ranges":[{"startOffset":1214147,"endOffset":1214462,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireVariableStatement","ranges":[{"startOffset":1214463,"endOffset":1214695,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleOrDoubleQuote","ranges":[{"startOffset":1214696,"endOffset":1214821,"count":0}],"isBlockCoverage":false},{"functionName":"isStringDoubleQuoted","ranges":[{"startOffset":1214822,"endOffset":1214972,"count":21}],"isBlockCoverage":true},{"functionName":"isAssignmentDeclaration","ranges":[{"startOffset":1214973,"endOffset":1215126,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveInitializer","ranges":[{"startOffset":1215127,"endOffset":1215565,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaredExpandoInitializer","ranges":[{"startOffset":1215566,"endOffset":1215736,"count":0}],"isBlockCoverage":false},{"functionName":"hasExpandoValueProperty","ranges":[{"startOffset":1215737,"endOffset":1216007,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedExpandoInitializer","ranges":[{"startOffset":1216008,"endOffset":1216660,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandoInitializer","ranges":[{"startOffset":1216661,"endOffset":1217269,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultedExpandoInitializer","ranges":[{"startOffset":1217270,"endOffset":1217670,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultedExpandoInitializer","ranges":[{"startOffset":1217671,"endOffset":1218056,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfExpando","ranges":[{"startOffset":1218057,"endOffset":1218568,"count":0}],"isBlockCoverage":false},{"functionName":"isSameEntityName","ranges":[{"startOffset":1218569,"endOffset":1219425,"count":0}],"isBlockCoverage":false},{"functionName":"getRightMostAssignedExpression","ranges":[{"startOffset":1219426,"endOffset":1219610,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsIdentifier","ranges":[{"startOffset":1219611,"endOffset":1219712,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleIdentifier","ranges":[{"startOffset":1219713,"endOffset":1219812,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsAccessExpression","ranges":[{"startOffset":1219813,"endOffset":1220037,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKind","ranges":[{"startOffset":1220038,"endOffset":1220229,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableObjectDefinePropertyCall","ranges":[{"startOffset":1220230,"endOffset":1220666,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeAccess","ranges":[{"startOffset":1220667,"endOffset":1220784,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeElementAccess","ranges":[{"startOffset":1220785,"endOffset":1220929,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticAccessExpression","ranges":[{"startOffset":1220930,"endOffset":1221311,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticElementAccessExpression","ranges":[{"startOffset":1221312,"endOffset":1221649,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticNameExpression","ranges":[{"startOffset":1221650,"endOffset":1221820,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrArgument","ranges":[{"startOffset":1221821,"endOffset":1221959,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKindWorker","ranges":[{"startOffset":1221960,"endOffset":1223053,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidZero","ranges":[{"startOffset":1223054,"endOffset":1223185,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessArgumentExpressionOrName","ranges":[{"startOffset":1223186,"endOffset":1223473,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessName","ranges":[{"startOffset":1223474,"endOffset":1223817,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationPropertyAccessKind","ranges":[{"startOffset":1223818,"endOffset":1224921,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBinaryExpression","ranges":[{"startOffset":1224922,"endOffset":1225064,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypePropertyAssignment","ranges":[{"startOffset":1225065,"endOffset":1225216,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecialPropertyDeclaration","ranges":[{"startOffset":1225217,"endOffset":1225468,"count":0}],"isBlockCoverage":false},{"functionName":"setValueDeclaration","ranges":[{"startOffset":1225469,"endOffset":1225908,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionSymbol","ranges":[{"startOffset":1225909,"endOffset":1226194,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModuleSpecifier","ranges":[{"startOffset":1226195,"endOffset":1226725,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifierFromDeclaration","ranges":[{"startOffset":1226726,"endOffset":1228019,"count":0}],"isBlockCoverage":false},{"functionName":"importFromModuleSpecifier","ranges":[{"startOffset":1228020,"endOffset":1228152,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportFromModuleSpecifier","ranges":[{"startOffset":1228153,"endOffset":1228840,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRewriteModuleSpecifier","ranges":[{"startOffset":1228841,"endOffset":1229069,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName","ranges":[{"startOffset":1229070,"endOffset":1229789,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceDeclarationNode","ranges":[{"startOffset":1229790,"endOffset":1230229,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultImport","ranges":[{"startOffset":1230230,"endOffset":1230411,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportClauseDeclaration","ranges":[{"startOffset":1230412,"endOffset":1230753,"count":0}],"isBlockCoverage":false},{"functionName":"hasQuestionToken","ranges":[{"startOffset":1230754,"endOffset":1231145,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocConstructSignature","ranges":[{"startOffset":1231146,"endOffset":1231384,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAlias","ranges":[{"startOffset":1231385,"endOffset":1231554,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":1231555,"endOffset":1231650,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceOfAssignment","ranges":[{"startOffset":1231651,"endOffset":1231890,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceOfDefaultedAssignment","ranges":[{"startOffset":1231891,"endOffset":1232317,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleInitializerOfVariableStatementOrPropertyDeclaration","ranges":[{"startOffset":1232318,"endOffset":1232696,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleVariableOfVariableStatement","ranges":[{"startOffset":1232697,"endOffset":1232851,"count":0}],"isBlockCoverage":false},{"functionName":"getNestedModuleDeclaration","ranges":[{"startOffset":1232852,"endOffset":1233017,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveFlowNode","ranges":[{"startOffset":1233018,"endOffset":1233700,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveJSDoc","ranges":[{"startOffset":1233701,"endOffset":1236248,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentsAndTags","ranges":[{"startOffset":1236249,"endOffset":1237114,"count":0}],"isBlockCoverage":false},{"functionName":"filterOwnedJSDocTags","ranges":[{"startOffset":1237115,"endOffset":1237496,"count":0}],"isBlockCoverage":false},{"functionName":"ownsJSDocTag","ranges":[{"startOffset":1237497,"endOffset":1237720,"count":0}],"isBlockCoverage":false},{"functionName":"getNextJSDocCommentLocation","ranges":[{"startOffset":1237721,"endOffset":1238661,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterSymbolFromJSDoc","ranges":[{"startOffset":1238662,"endOffset":1239096,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveContainerForJSDocTemplateTag","ranges":[{"startOffset":1239097,"endOffset":1239367,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverloadTags","ranges":[{"startOffset":1239368,"endOffset":1239459,"count":0}],"isBlockCoverage":false},{"functionName":"getHostSignatureFromJSDoc","ranges":[{"startOffset":1239460,"endOffset":1239714,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveJSDocHost","ranges":[{"startOffset":1239715,"endOffset":1240048,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocHost","ranges":[{"startOffset":1240049,"endOffset":1240274,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocRoot","ranges":[{"startOffset":1240275,"endOffset":1240351,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterFromJsDoc","ranges":[{"startOffset":1240352,"endOffset":1240575,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeArguments","ranges":[{"startOffset":1240576,"endOffset":1240642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1240681,"endOffset":1240918,"count":1}],"isBlockCoverage":false},{"functionName":"getAssignmentTarget","ranges":[{"startOffset":1240943,"endOffset":1242532,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentTargetKind","ranges":[{"startOffset":1242533,"endOffset":1243155,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentTarget","ranges":[{"startOffset":1243156,"endOffset":1243231,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundLikeAssignment","ranges":[{"startOffset":1243232,"endOffset":1243437,"count":0}],"isBlockCoverage":false},{"functionName":"isInCompoundLikeAssignment","ranges":[{"startOffset":1243438,"endOffset":1243668,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeWithPossibleHoistedDeclaration","ranges":[{"startOffset":1243669,"endOffset":1244319,"count":0}],"isBlockCoverage":false},{"functionName":"isValueSignatureDeclaration","ranges":[{"startOffset":1244320,"endOffset":1244521,"count":0}],"isBlockCoverage":false},{"functionName":"walkUp","ranges":[{"startOffset":1244522,"endOffset":1244635,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypes","ranges":[{"startOffset":1244636,"endOffset":1244731,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedExpressions","ranges":[{"startOffset":1244732,"endOffset":1244839,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypesAndGetParentAndChild","ranges":[{"startOffset":1244840,"endOffset":1245048,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeParentheses","ranges":[{"startOffset":1245049,"endOffset":1245160,"count":0}],"isBlockCoverage":false},{"functionName":"skipParentheses","ranges":[{"startOffset":1245161,"endOffset":1245401,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteTarget","ranges":[{"startOffset":1245402,"endOffset":1245679,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeDescendantOf","ranges":[{"startOffset":1245680,"endOffset":1245828,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationName","ranges":[{"startOffset":1245829,"endOffset":1245981,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFromName","ranges":[{"startOffset":1245982,"endOffset":1246981,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralComputedPropertyDeclarationName","ranges":[{"startOffset":1246982,"endOffset":1247178,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":1247179,"endOffset":1248050,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasDeclarationFromName","ranges":[{"startOffset":1248051,"endOffset":1248598,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasableExpression","ranges":[{"startOffset":1248599,"endOffset":1248696,"count":0}],"isBlockCoverage":false},{"functionName":"exportAssignmentIsAlias","ranges":[{"startOffset":1248697,"endOffset":1248823,"count":0}],"isBlockCoverage":false},{"functionName":"getExportAssignmentExpression","ranges":[{"startOffset":1248824,"endOffset":1248938,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentAliasLikeExpression","ranges":[{"startOffset":1248939,"endOffset":1249156,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveBaseTypeNode","ranges":[{"startOffset":1249157,"endOffset":1249406,"count":0}],"isBlockCoverage":false},{"functionName":"getClassExtendsHeritageElement","ranges":[{"startOffset":1249407,"endOffset":1249642,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveImplementsTypeNodes","ranges":[{"startOffset":1249643,"endOffset":1249959,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSuperTypeNodes","ranges":[{"startOffset":1249960,"endOffset":1250238,"count":0}],"isBlockCoverage":false},{"functionName":"getInterfaceBaseTypeNodes","ranges":[{"startOffset":1250239,"endOffset":1250431,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClause","ranges":[{"startOffset":1250432,"endOffset":1250623,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestor","ranges":[{"startOffset":1250624,"endOffset":1250777,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1250778,"endOffset":1250882,"count":61},{"startOffset":1250846,"endOffset":1250861,"count":5}],"isBlockCoverage":true},{"functionName":"isPunctuation","ranges":[{"startOffset":1250883,"endOffset":1250998,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordOrPunctuation","ranges":[{"startOffset":1250999,"endOffset":1251092,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeyword","ranges":[{"startOffset":1251093,"endOffset":1251228,"count":0}],"isBlockCoverage":false},{"functionName":"isNonContextualKeyword","ranges":[{"startOffset":1251229,"endOffset":1251329,"count":0}],"isBlockCoverage":false},{"functionName":"isStringANonContextualKeyword","ranges":[{"startOffset":1251330,"endOffset":1251475,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierANonContextualKeyword","ranges":[{"startOffset":1251476,"endOffset":1251666,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia","ranges":[{"startOffset":1251667,"endOffset":1251775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1251813,"endOffset":1252178,"count":1}],"isBlockCoverage":false},{"functionName":"getFunctionFlags","ranges":[{"startOffset":1252202,"endOffset":1252770,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":1252771,"endOffset":1253115,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteralLike","ranges":[{"startOffset":1253116,"endOffset":1253225,"count":0}],"isBlockCoverage":false},{"functionName":"isSignedNumericLiteral","ranges":[{"startOffset":1253226,"endOffset":1253424,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicName","ranges":[{"startOffset":1253425,"endOffset":1253555,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicName","ranges":[{"startOffset":1253556,"endOffset":1253906,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForPropertyNameNode","ranges":[{"startOffset":1253907,"endOffset":1254925,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyNameLiteral","ranges":[{"startOffset":1254926,"endOffset":1255190,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfIdentifierOrLiteral","ranges":[{"startOffset":1255191,"endOffset":1255357,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfIdentifierOrLiteral","ranges":[{"startOffset":1255358,"endOffset":1255568,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNameForPrivateIdentifier","ranges":[{"startOffset":1255569,"endOffset":1255721,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownSymbol","ranges":[{"startOffset":1255722,"endOffset":1255804,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierSymbol","ranges":[{"startOffset":1255805,"endOffset":1255899,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoSetter","ranges":[{"startOffset":1255900,"endOffset":1256045,"count":0}],"isBlockCoverage":false},{"functionName":"isAnonymousFunctionDefinition","ranges":[{"startOffset":1256046,"endOffset":1256539,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluationSource","ranges":[{"startOffset":1256540,"endOffset":1257584,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluation","ranges":[{"startOffset":1257585,"endOffset":1258349,"count":0}],"isBlockCoverage":false},{"functionName":"isPushOrUnshiftIdentifier","ranges":[{"startOffset":1258350,"endOffset":1258466,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfParameterDeclaration","ranges":[{"startOffset":1258467,"endOffset":1258599,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDeclaration","ranges":[{"startOffset":1258600,"endOffset":1258738,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStartsNewLexicalEnvironment","ranges":[{"startOffset":1258739,"endOffset":1259156,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsSynthesized","ranges":[{"startOffset":1259157,"endOffset":1259273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1259311,"endOffset":1259471,"count":1}],"isBlockCoverage":false},{"functionName":"getExpressionAssociativity","ranges":[{"startOffset":1259495,"endOffset":1259769,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorAssociativity","ranges":[{"startOffset":1259770,"endOffset":1261148,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionPrecedence","ranges":[{"startOffset":1261149,"endOffset":1261417,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":1261418,"endOffset":1261751,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1261794,"endOffset":1263750,"count":1}],"isBlockCoverage":false},{"functionName":"getOperatorPrecedence","ranges":[{"startOffset":1263779,"endOffset":1266980,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryOperatorPrecedence","ranges":[{"startOffset":1266981,"endOffset":1268462,"count":16},{"startOffset":1267048,"endOffset":1267115,"count":0},{"startOffset":1267120,"endOffset":1267178,"count":0},{"startOffset":1267183,"endOffset":1267254,"count":0},{"startOffset":1267259,"endOffset":1267314,"count":0},{"startOffset":1267319,"endOffset":1267377,"count":0},{"startOffset":1267382,"endOffset":1267444,"count":0},{"startOffset":1267449,"endOffset":1267481,"count":0},{"startOffset":1267486,"endOffset":1267523,"count":0},{"startOffset":1267528,"endOffset":1267566,"count":0},{"startOffset":1267571,"endOffset":1267646,"count":0},{"startOffset":1267651,"endOffset":1267679,"count":0},{"startOffset":1267684,"endOffset":1267715,"count":0},{"startOffset":1267720,"endOffset":1267754,"count":0},{"startOffset":1267759,"endOffset":1267796,"count":0},{"startOffset":1267801,"endOffset":1267834,"count":0},{"startOffset":1267839,"endOffset":1267864,"count":0},{"startOffset":1267869,"endOffset":1267894,"count":0},{"startOffset":1267899,"endOffset":1267965,"count":0},{"startOffset":1267970,"endOffset":1268006,"count":0},{"startOffset":1268011,"endOffset":1268053,"count":0},{"startOffset":1268058,"endOffset":1268140,"count":0},{"startOffset":1268145,"endOffset":1268169,"count":0},{"startOffset":1268174,"endOffset":1268231,"count":0},{"startOffset":1268236,"endOffset":1268264,"count":0},{"startOffset":1268269,"endOffset":1268294,"count":0},{"startOffset":1268299,"endOffset":1268364,"count":0},{"startOffset":1268369,"endOffset":1268443,"count":0}],"isBlockCoverage":true},{"functionName":"getSemanticJsxChildren","ranges":[{"startOffset":1268463,"endOffset":1268758,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticCollection","ranges":[{"startOffset":1268759,"endOffset":1270801,"count":0}],"isBlockCoverage":false},{"functionName":"escapeTemplateSubstitution","ranges":[{"startOffset":1270844,"endOffset":1270946,"count":0}],"isBlockCoverage":false},{"functionName":"containsInvalidEscapeFlag","ranges":[{"startOffset":1270947,"endOffset":1271066,"count":0}],"isBlockCoverage":false},{"functionName":"hasInvalidEscape","ranges":[{"startOffset":1271067,"endOffset":1271338,"count":0}],"isBlockCoverage":false},{"functionName":"encodeUtf16EscapeSequence","ranges":[{"startOffset":1271973,"endOffset":1272170,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacement","ranges":[{"startOffset":1272171,"endOffset":1272519,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":1272520,"endOffset":1272812,"count":0}],"isBlockCoverage":false},{"functionName":"escapeNonAsciiString","ranges":[{"startOffset":1272859,"endOffset":1273064,"count":0}],"isBlockCoverage":false},{"functionName":"encodeJsxCharacterEntity","ranges":[{"startOffset":1273309,"endOffset":1273451,"count":0}],"isBlockCoverage":false},{"functionName":"getJsxAttributeStringReplacement","ranges":[{"startOffset":1273452,"endOffset":1273655,"count":0}],"isBlockCoverage":false},{"functionName":"escapeJsxAttributeString","ranges":[{"startOffset":1273656,"endOffset":1273916,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":1273917,"endOffset":1274158,"count":0}],"isBlockCoverage":false},{"functionName":"isQuoteOrBacktick","ranges":[{"startOffset":1274159,"endOffset":1274314,"count":0}],"isBlockCoverage":false},{"functionName":"isIntrinsicJsxName","ranges":[{"startOffset":1274315,"endOffset":1274455,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":1274490,"endOffset":1274740,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentSize","ranges":[{"startOffset":1274741,"endOffset":1274803,"count":0}],"isBlockCoverage":false},{"functionName":"createTextWriter","ranges":[{"startOffset":1274804,"endOffset":1277155,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingSemicolonDeferringWriter","ranges":[{"startOffset":1277156,"endOffset":1278848,"count":0}],"isBlockCoverage":false},{"functionName":"hostUsesCaseSensitiveFileNames","ranges":[{"startOffset":1278849,"endOffset":1278982,"count":1},{"startOffset":1278972,"endOffset":1278979,"count":0}],"isBlockCoverage":true},{"functionName":"hostGetCanonicalFileName","ranges":[{"startOffset":1278983,"endOffset":1279101,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedExternalModuleName","ranges":[{"startOffset":1279102,"endOffset":1279292,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalAbsolutePath","ranges":[{"startOffset":1279293,"endOffset":1279439,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromDeclaration","ranges":[{"startOffset":1279440,"endOffset":1280030,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromPath","ranges":[{"startOffset":1280031,"endOffset":1280710,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEmitOutputFilePath","ranges":[{"startOffset":1280711,"endOffset":1281175,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePath","ranges":[{"startOffset":1281176,"endOffset":1281329,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePathWorker","ranges":[{"startOffset":1281330,"endOffset":1281790,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitExtensionForPath","ranges":[{"startOffset":1281791,"endOffset":1282233,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputExtensionForExtension","ranges":[{"startOffset":1282234,"endOffset":1282699,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputPathWithoutChangingExt","ranges":[{"startOffset":1282700,"endOffset":1282968,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsBasePath","ranges":[{"startOffset":1282969,"endOffset":1283289,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilesToEmit","ranges":[{"startOffset":1283290,"endOffset":1284027,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileMayBeEmitted","ranges":[{"startOffset":1284028,"endOffset":1285238,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDir","ranges":[{"startOffset":1285239,"endOffset":1285467,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDirWorker","ranges":[{"startOffset":1285468,"endOffset":1285999,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":1286000,"endOffset":1286349,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDirectoriesExist","ranges":[{"startOffset":1286350,"endOffset":1286710,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileEnsuringDirectories","ranges":[{"startOffset":1286711,"endOffset":1287051,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPosition","ranges":[{"startOffset":1287052,"endOffset":1287201,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPositionFromLineMap","ranges":[{"startOffset":1287202,"endOffset":1287308,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstConstructorWithBody","ranges":[{"startOffset":1287309,"endOffset":1287460,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorValueParameter","ranges":[{"startOffset":1287461,"endOffset":1287721,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorTypeAnnotationNode","ranges":[{"startOffset":1287722,"endOffset":1287875,"count":0}],"isBlockCoverage":false},{"functionName":"getThisParameter","ranges":[{"startOffset":1287876,"endOffset":1288123,"count":0}],"isBlockCoverage":false},{"functionName":"parameterIsThisKeyword","ranges":[{"startOffset":1288124,"endOffset":1288213,"count":0}],"isBlockCoverage":false},{"functionName":"isThisIdentifier","ranges":[{"startOffset":1288214,"endOffset":1288336,"count":0}],"isBlockCoverage":false},{"functionName":"isInTypeQuery","ranges":[{"startOffset":1288337,"endOffset":1288546,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInTypeQuery","ranges":[{"startOffset":1288547,"endOffset":1288787,"count":0}],"isBlockCoverage":false},{"functionName":"identifierIsThisKeyword","ranges":[{"startOffset":1288788,"endOffset":1288864,"count":0}],"isBlockCoverage":false},{"functionName":"getAllAccessorDeclarations","ranges":[{"startOffset":1288865,"endOffset":1290140,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeAnnotationNode","ranges":[{"startOffset":1290141,"endOffset":1290494,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationNode","ranges":[{"startOffset":1290495,"endOffset":1290555,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveReturnTypeNode","ranges":[{"startOffset":1290556,"endOffset":1290777,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterDeclarations","ranges":[{"startOffset":1290778,"endOffset":1290936,"count":0}],"isBlockCoverage":false},{"functionName":"isNonTypeAliasTemplate","ranges":[{"startOffset":1290937,"endOffset":1291141,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveSetAccessorTypeAnnotationNode","ranges":[{"startOffset":1291142,"endOffset":1291323,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingComments","ranges":[{"startOffset":1291324,"endOffset":1291499,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentsOfPosition","ranges":[{"startOffset":1291500,"endOffset":1291829,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentOfPosition","ranges":[{"startOffset":1291830,"endOffset":1292084,"count":0}],"isBlockCoverage":false},{"functionName":"emitComments","ranges":[{"startOffset":1292085,"endOffset":1292821,"count":0}],"isBlockCoverage":false},{"functionName":"emitDetachedComments","ranges":[{"startOffset":1292822,"endOffset":1294565,"count":0}],"isBlockCoverage":false},{"functionName":"writeCommentRange","ranges":[{"startOffset":1294566,"endOffset":1296190,"count":0}],"isBlockCoverage":false},{"functionName":"writeTrimmedCurrentLine","ranges":[{"startOffset":1296191,"endOffset":1296570,"count":0}],"isBlockCoverage":false},{"functionName":"calculateIndent","ranges":[{"startOffset":1296571,"endOffset":1296929,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifiers","ranges":[{"startOffset":1296930,"endOffset":1297029,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifiers","ranges":[{"startOffset":1297030,"endOffset":1297129,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifier","ranges":[{"startOffset":1297130,"endOffset":1297235,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifier","ranges":[{"startOffset":1297236,"endOffset":1297341,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":1297342,"endOffset":1297466,"count":0}],"isBlockCoverage":false},{"functionName":"hasStaticModifier","ranges":[{"startOffset":1297467,"endOffset":1297558,"count":0}],"isBlockCoverage":false},{"functionName":"hasOverrideModifier","ranges":[{"startOffset":1297559,"endOffset":1297653,"count":0}],"isBlockCoverage":false},{"functionName":"hasAbstractModifier","ranges":[{"startOffset":1297654,"endOffset":1297748,"count":0}],"isBlockCoverage":false},{"functionName":"hasAmbientModifier","ranges":[{"startOffset":1297749,"endOffset":1297842,"count":0}],"isBlockCoverage":false},{"functionName":"hasAccessorModifier","ranges":[{"startOffset":1297843,"endOffset":1297938,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveReadonlyModifier","ranges":[{"startOffset":1297939,"endOffset":1298041,"count":0}],"isBlockCoverage":false},{"functionName":"hasDecorators","ranges":[{"startOffset":1298042,"endOffset":1298134,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedEffectiveModifierFlags","ranges":[{"startOffset":1298135,"endOffset":1298244,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedSyntacticModifierFlags","ranges":[{"startOffset":1298245,"endOffset":1298354,"count":0}],"isBlockCoverage":false},{"functionName":"getModifierFlagsWorker","ranges":[{"startOffset":1298355,"endOffset":1299133,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlags","ranges":[{"startOffset":1299134,"endOffset":1299256,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":1299257,"endOffset":1299434,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlags","ranges":[{"startOffset":1299435,"endOffset":1299558,"count":0}],"isBlockCoverage":false},{"functionName":"getRawJSDocModifierFlagsNoCache","ranges":[{"startOffset":1299559,"endOffset":1300224,"count":0}],"isBlockCoverage":false},{"functionName":"selectSyntacticModifierFlags","ranges":[{"startOffset":1300225,"endOffset":1300322,"count":0}],"isBlockCoverage":false},{"functionName":"selectEffectiveModifierFlags","ranges":[{"startOffset":1300323,"endOffset":1300483,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocModifierFlagsNoCache","ranges":[{"startOffset":1300484,"endOffset":1300609,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsNoCache","ranges":[{"startOffset":1300610,"endOffset":1300747,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlagsNoCache","ranges":[{"startOffset":1300748,"endOffset":1301076,"count":0}],"isBlockCoverage":false},{"functionName":"modifiersToFlags","ranges":[{"startOffset":1301077,"endOffset":1301276,"count":0}],"isBlockCoverage":false},{"functionName":"modifierToFlag","ranges":[{"startOffset":1301277,"endOffset":1302400,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryLogicalOperator","ranges":[{"startOffset":1302401,"endOffset":1302531,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator","ranges":[{"startOffset":1302532,"endOffset":1302649,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentOperator","ranges":[{"startOffset":1302650,"endOffset":1302858,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentExpression","ranges":[{"startOffset":1302859,"endOffset":1303022,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryOperator","ranges":[{"startOffset":1303023,"endOffset":1303163,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryExpression","ranges":[{"startOffset":1303164,"endOffset":1303319,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperator","ranges":[{"startOffset":1303320,"endOffset":1303440,"count":16},{"startOffset":1303402,"endOffset":1303416,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetClassExtendingExpressionWithTypeArguments","ranges":[{"startOffset":1303441,"endOffset":1303646,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassImplementingOrExtendingExpressionWithTypeArguments","ranges":[{"startOffset":1303647,"endOffset":1304188,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":1304189,"endOffset":1304461,"count":0}],"isBlockCoverage":false},{"functionName":"isDestructuringAssignment","ranges":[{"startOffset":1304462,"endOffset":1304749,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArgumentsInClassExtendsClause","ranges":[{"startOffset":1304750,"endOffset":1304893,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityNameExpression","ranges":[{"startOffset":1304894,"endOffset":1305025,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIdentifier","ranges":[{"startOffset":1305026,"endOffset":1305438,"count":0}],"isBlockCoverage":false},{"functionName":"isDottedName","ranges":[{"startOffset":1305439,"endOffset":1305802,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessEntityNameExpression","ranges":[{"startOffset":1305803,"endOffset":1305971,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyAccessOrIdentifierToString","ranges":[{"startOffset":1305972,"endOffset":1306744,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypeAccess","ranges":[{"startOffset":1306745,"endOffset":1306886,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess","ranges":[{"startOffset":1306887,"endOffset":1307197,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfAccessExpression","ranges":[{"startOffset":1307198,"endOffset":1307429,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName","ranges":[{"startOffset":1307430,"endOffset":1307713,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceOfExpression","ranges":[{"startOffset":1307714,"endOffset":1307849,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfInstanceofExpression","ranges":[{"startOffset":1307850,"endOffset":1307978,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObjectLiteral","ranges":[{"startOffset":1307979,"endOffset":1308126,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyArrayLiteral","ranges":[{"startOffset":1308127,"endOffset":1308270,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportDefault","ranges":[{"startOffset":1308271,"endOffset":1308515,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSymbol","ranges":[{"startOffset":1308516,"endOffset":1308678,"count":0}],"isBlockCoverage":false},{"functionName":"tryExtractTSExtension","ranges":[{"startOffset":1308679,"endOffset":1308833,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandedCharCodes","ranges":[{"startOffset":1308834,"endOffset":1309637,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBase64","ranges":[{"startOffset":1309726,"endOffset":1310404,"count":0}],"isBlockCoverage":false},{"functionName":"getStringFromExpandedCharCodes","ranges":[{"startOffset":1310405,"endOffset":1311053,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":1311054,"endOffset":1311201,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":1311202,"endOffset":1312155,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonOrUndefined","ranges":[{"startOffset":1312156,"endOffset":1312429,"count":0}],"isBlockCoverage":false},{"functionName":"readJson","ranges":[{"startOffset":1312430,"endOffset":1312511,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseJson","ranges":[{"startOffset":1312512,"endOffset":1312615,"count":0}],"isBlockCoverage":false},{"functionName":"directoryProbablyExists","ranges":[{"startOffset":1312616,"endOffset":1312744,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineCharacter","ranges":[{"startOffset":1312803,"endOffset":1313022,"count":5},{"startOffset":1312876,"endOffset":1312949,"count":0},{"startOffset":1312954,"endOffset":1312976,"count":0}],"isBlockCoverage":true},{"functionName":"createRange","ranges":[{"startOffset":1313023,"endOffset":1313128,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangeEnd","ranges":[{"startOffset":1313129,"endOffset":1313204,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePos","ranges":[{"startOffset":1313205,"endOffset":1313280,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastDecorators","ranges":[{"startOffset":1313281,"endOffset":1313536,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastModifiers","ranges":[{"startOffset":1313537,"endOffset":1313922,"count":0}],"isBlockCoverage":false},{"functionName":"createTokenRange","ranges":[{"startOffset":1313923,"endOffset":1314026,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnSingleLine","ranges":[{"startOffset":1314027,"endOffset":1314147,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartPositionsAreOnSameLine","ranges":[{"startOffset":1314148,"endOffset":1314486,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndPositionsAreOnSameLine","ranges":[{"startOffset":1314487,"endOffset":1314627,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartIsOnSameLineAsRangeEnd","ranges":[{"startOffset":1314628,"endOffset":1314850,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndIsOnSameLineAsRangeStart","ranges":[{"startOffset":1314851,"endOffset":1315073,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndAndRangeStart","ranges":[{"startOffset":1315074,"endOffset":1315346,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndPositions","ranges":[{"startOffset":1315347,"endOffset":1315491,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArrayMultiLine","ranges":[{"startOffset":1315492,"endOffset":1315609,"count":0}],"isBlockCoverage":false},{"functionName":"positionsAreOnSameLine","ranges":[{"startOffset":1315610,"endOffset":1315734,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfRange","ranges":[{"startOffset":1315735,"endOffset":1315967,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter","ranges":[{"startOffset":1315968,"endOffset":1316365,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndNextNonWhitespaceCharacter","ranges":[{"startOffset":1316366,"endOffset":1316677,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRange","ranges":[{"startOffset":1316678,"endOffset":1316769,"count":0}],"isBlockCoverage":false},{"functionName":"startEndContainsRange","ranges":[{"startOffset":1316770,"endOffset":1316872,"count":0}],"isBlockCoverage":false},{"functionName":"getPreviousNonWhitespacePosition","ranges":[{"startOffset":1316873,"endOffset":1317066,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOfEnumOrNamespace","ranges":[{"startOffset":1317067,"endOffset":1317376,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializedVariables","ranges":[{"startOffset":1317377,"endOffset":1317478,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedVariable","ranges":[{"startOffset":1317479,"endOffset":1317588,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchSet","ranges":[{"startOffset":1317589,"endOffset":1317678,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcher","ranges":[{"startOffset":1317679,"endOffset":1317736,"count":0}],"isBlockCoverage":false},{"functionName":"getCheckFlags","ranges":[{"startOffset":1317737,"endOffset":1317851,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationModifierFlagsFromSymbol","ranges":[{"startOffset":1317852,"endOffset":1318821,"count":0}],"isBlockCoverage":false},{"functionName":"skipAlias","ranges":[{"startOffset":1318822,"endOffset":1318950,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedLocalAndExportSymbolFlags","ranges":[{"startOffset":1318951,"endOffset":1319096,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteOnlyAccess","ranges":[{"startOffset":1319097,"endOffset":1319178,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccess","ranges":[{"startOffset":1319179,"endOffset":1319255,"count":0}],"isBlockCoverage":false},{"functionName":"accessKind","ranges":[{"startOffset":1319256,"endOffset":1320673,"count":0}],"isBlockCoverage":false},{"functionName":"reverseAccessKind","ranges":[{"startOffset":1320674,"endOffset":1320936,"count":0}],"isBlockCoverage":false},{"functionName":"compareDataObjects","ranges":[{"startOffset":1320937,"endOffset":1321352,"count":0}],"isBlockCoverage":false},{"functionName":"clearMap","ranges":[{"startOffset":1321353,"endOffset":1321442,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMapSkippingNewValues","ranges":[{"startOffset":1321443,"endOffset":1321881,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMap","ranges":[{"startOffset":1321882,"endOffset":1322182,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractConstructorSymbol","ranges":[{"startOffset":1322183,"endOffset":1322437,"count":0}],"isBlockCoverage":false},{"functionName":"getClassLikeDeclarationOfSymbol","ranges":[{"startOffset":1322438,"endOffset":1322577,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectFlags","ranges":[{"startOffset":1322578,"endOffset":1322687,"count":0}],"isBlockCoverage":false},{"functionName":"isUMDExportSymbol","ranges":[{"startOffset":1322688,"endOffset":1322854,"count":0}],"isBlockCoverage":false},{"functionName":"showModuleSpecifier","ranges":[{"startOffset":1322855,"endOffset":1323007,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChild","ranges":[{"startOffset":1323008,"endOffset":1323341,"count":0}],"isBlockCoverage":false},{"functionName":"addToSeen","ranges":[{"startOffset":1323342,"endOffset":1323452,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeDeclaration","ranges":[{"startOffset":1323453,"endOffset":1323582,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNodeKind","ranges":[{"startOffset":1323583,"endOffset":1324453,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessExpression","ranges":[{"startOffset":1324454,"endOffset":1324601,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfAccessExpression","ranges":[{"startOffset":1324602,"endOffset":1324829,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportsOrExports","ranges":[{"startOffset":1324830,"endOffset":1324959,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostAccessExpression","ranges":[{"startOffset":1324960,"endOffset":1325090,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameInAccessChainWalkingLeft","ranges":[{"startOffset":1325091,"endOffset":1326043,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostExpression","ranges":[{"startOffset":1326044,"endOffset":1326973,"count":0}],"isBlockCoverage":false},{"functionName":"Symbol4","ranges":[{"startOffset":1326974,"endOffset":1327384,"count":0}],"isBlockCoverage":false},{"functionName":"Type3","ranges":[{"startOffset":1327385,"endOffset":1327511,"count":0}],"isBlockCoverage":false},{"functionName":"Signature2","ranges":[{"startOffset":1327512,"endOffset":1327632,"count":0}],"isBlockCoverage":false},{"functionName":"Node4","ranges":[{"startOffset":1327633,"endOffset":1327923,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":1327924,"endOffset":1328146,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier2","ranges":[{"startOffset":1328147,"endOffset":1328401,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapSource","ranges":[{"startOffset":1328402,"endOffset":1328558,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeConstructor","ranges":[{"startOffset":1328605,"endOffset":1328616,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenConstructor","ranges":[{"startOffset":1328641,"endOffset":1328652,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierConstructor","ranges":[{"startOffset":1328682,"endOffset":1328699,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifierConstructor","ranges":[{"startOffset":1328736,"endOffset":1328747,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileConstructor","ranges":[{"startOffset":1328777,"endOffset":1328788,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolConstructor","ranges":[{"startOffset":1328814,"endOffset":1328827,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeConstructor","ranges":[{"startOffset":1328851,"endOffset":1328862,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureConstructor","ranges":[{"startOffset":1328891,"endOffset":1328907,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapSourceConstructor","ranges":[{"startOffset":1328942,"endOffset":1328963,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectAllocatorPatcher","ranges":[{"startOffset":1329001,"endOffset":1329102,"count":0}],"isBlockCoverage":false},{"functionName":"setObjectAllocator","ranges":[{"startOffset":1329103,"endOffset":1329247,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1329216,"endOffset":1329243,"count":0}],"isBlockCoverage":false},{"functionName":"formatStringFromArgs","ranges":[{"startOffset":1329248,"endOffset":1329388,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1329328,"endOffset":1329384,"count":3}],"isBlockCoverage":true},{"functionName":"setLocalizedDiagnosticMessages","ranges":[{"startOffset":1329422,"endOffset":1329517,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSetLocalizedDiagnosticMessages","ranges":[{"startOffset":1329518,"endOffset":1329685,"count":1},{"startOffset":1329629,"endOffset":1329683,"count":0}],"isBlockCoverage":true},{"functionName":"getLocaleSpecificMessage","ranges":[{"startOffset":1329686,"endOffset":1329833,"count":27},{"startOffset":1329768,"endOffset":1329811,"count":0}],"isBlockCoverage":true},{"functionName":"createDetachedDiagnostic","ranges":[{"startOffset":1329834,"endOffset":1330400,"count":0}],"isBlockCoverage":false},{"functionName":"isDiagnosticWithDetachedLocation","ranges":[{"startOffset":1330401,"endOffset":1330601,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostic","ranges":[{"startOffset":1330602,"endOffset":1331789,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostics","ranges":[{"startOffset":1331790,"endOffset":1332039,"count":1},{"startOffset":1331922,"endOffset":1332003,"count":0}],"isBlockCoverage":true},{"functionName":"createFileDiagnostic","ranges":[{"startOffset":1332040,"endOffset":1332523,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":1332524,"endOffset":1332700,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnostic","ranges":[{"startOffset":1332701,"endOffset":1333126,"count":1}],"isBlockCoverage":true},{"functionName":"createCompilerDiagnosticFromMessageChain","ranges":[{"startOffset":1333127,"endOffset":1333412,"count":0}],"isBlockCoverage":false},{"functionName":"chainDiagnosticMessages","ranges":[{"startOffset":1333413,"endOffset":1333765,"count":0}],"isBlockCoverage":false},{"functionName":"concatenateDiagnosticMessageChains","ranges":[{"startOffset":1333766,"endOffset":1333962,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticFilePath","ranges":[{"startOffset":1333963,"endOffset":1334067,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnostics","ranges":[{"startOffset":1334068,"endOffset":1334222,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnosticsSkipRelatedInformation","ranges":[{"startOffset":1334223,"endOffset":1334610,"count":0}],"isBlockCoverage":false},{"functionName":"compareRelatedInformation","ranges":[{"startOffset":1334611,"endOffset":1335136,"count":0}],"isBlockCoverage":false},{"functionName":"compareMessageText","ranges":[{"startOffset":1335137,"endOffset":1335950,"count":0}],"isBlockCoverage":false},{"functionName":"compareMessageChain","ranges":[{"startOffset":1335951,"endOffset":1336259,"count":0}],"isBlockCoverage":false},{"functionName":"compareMessageChainSize","ranges":[{"startOffset":1336260,"endOffset":1336742,"count":0}],"isBlockCoverage":false},{"functionName":"compareMessageChainContent","ranges":[{"startOffset":1336743,"endOffset":1337143,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticsEqualityComparer","ranges":[{"startOffset":1337144,"endOffset":1337674,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticCode","ranges":[{"startOffset":1337675,"endOffset":1337790,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticMessage","ranges":[{"startOffset":1337791,"endOffset":1337923,"count":0}],"isBlockCoverage":false},{"functionName":"messageTextEqualityComparer","ranges":[{"startOffset":1337924,"endOffset":1338156,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageVariant","ranges":[{"startOffset":1338157,"endOffset":1338360,"count":2},{"startOffset":1338339,"endOffset":1338342,"count":0}],"isBlockCoverage":true},{"functionName":"walkTreeForJSXTags","ranges":[{"startOffset":1338361,"endOffset":1338576,"count":0}],"isBlockCoverage":false},{"functionName":"isFileModuleFromUsingJSXTag","ranges":[{"startOffset":1338577,"endOffset":1338693,"count":0}],"isBlockCoverage":false},{"functionName":"isFileForcedToBeModuleByFormat","ranges":[{"startOffset":1338694,"endOffset":1338989,"count":0}],"isBlockCoverage":false},{"functionName":"getSetExternalModuleIndicator","ranges":[{"startOffset":1338990,"endOffset":1339825,"count":0}],"isBlockCoverage":false},{"functionName":"importSyntaxAffectsModuleResolution","ranges":[{"startOffset":1339826,"endOffset":1340116,"count":0}],"isBlockCoverage":false},{"functionName":"createComputedCompilerOptions","ranges":[{"startOffset":1340117,"endOffset":1340186,"count":1}],"isBlockCoverage":true},{"functionName":"computeValue","ranges":[{"startOffset":1340347,"endOffset":1340487,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1340553,"endOffset":1340912,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1340978,"endOffset":1341198,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1341284,"endOffset":1342063,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1342148,"endOffset":1342480,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1342569,"endOffset":1342687,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1342772,"endOffset":1343162,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1343280,"endOffset":1343688,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1343783,"endOffset":1344332,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1344456,"endOffset":1345005,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1345112,"endOffset":1345356,"count":1},{"startOffset":1345250,"endOffset":1345355,"count":0}],"isBlockCoverage":true},{"functionName":"computeValue","ranges":[{"startOffset":1345430,"endOffset":1345533,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1345644,"endOffset":1345791,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1345865,"endOffset":1345968,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1346060,"endOffset":1346199,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1346267,"endOffset":1346398,"count":1},{"startOffset":1346366,"endOffset":1346391,"count":0}],"isBlockCoverage":true},{"functionName":"computeValue","ranges":[{"startOffset":1346491,"endOffset":1346700,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1346773,"endOffset":1346870,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1346944,"endOffset":1347042,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1347118,"endOffset":1347218,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1347297,"endOffset":1347400,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1347479,"endOffset":1347582,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1347670,"endOffset":1347782,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1347869,"endOffset":1347980,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1348052,"endOffset":1348148,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1348234,"endOffset":1348344,"count":0}],"isBlockCoverage":false},{"functionName":"emitModuleKindIsNonNodeESM","ranges":[{"startOffset":1349740,"endOffset":1349863,"count":0}],"isBlockCoverage":false},{"functionName":"hasJsonModuleEmitEnabled","ranges":[{"startOffset":1349864,"endOffset":1350059,"count":0}],"isBlockCoverage":false},{"functionName":"unreachableCodeIsError","ranges":[{"startOffset":1350060,"endOffset":1350153,"count":0}],"isBlockCoverage":false},{"functionName":"unusedLabelIsError","ranges":[{"startOffset":1350154,"endOffset":1350240,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionSupportsPackageJsonExportsAndImports","ranges":[{"startOffset":1350241,"endOffset":1350452,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSupportsImportAttributes","ranges":[{"startOffset":1350453,"endOffset":1350656,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptionValue","ranges":[{"startOffset":1350657,"endOffset":1350809,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfScriptTarget","ranges":[{"startOffset":1350810,"endOffset":1350966,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitStandardClassFields","ranges":[{"startOffset":1350967,"endOffset":1351141,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectSemanticDiagnostics","ranges":[{"startOffset":1351142,"endOffset":1351311,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectEmit","ranges":[{"startOffset":1351312,"endOffset":1351458,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectDeclarationPath","ranges":[{"startOffset":1351459,"endOffset":1351627,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionValue","ranges":[{"startOffset":1351628,"endOffset":1351833,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXTransformEnabled","ranges":[{"startOffset":1351834,"endOffset":1351996,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXImplicitImportBase","ranges":[{"startOffset":1351997,"endOffset":1353019,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXRuntimeImport","ranges":[{"startOffset":1353020,"endOffset":1353178,"count":0}],"isBlockCoverage":false},{"functionName":"hasZeroOrOneAsteriskCharacter","ranges":[{"startOffset":1353179,"endOffset":1353472,"count":0}],"isBlockCoverage":false},{"functionName":"createSymlinkCache","ranges":[{"startOffset":1353473,"endOffset":1356249,"count":0}],"isBlockCoverage":false},{"functionName":"guessDirectorySymlink","ranges":[{"startOffset":1356250,"endOffset":1356992,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModulesOrScopedPackageDirectory","ranges":[{"startOffset":1356993,"endOffset":1357161,"count":0}],"isBlockCoverage":false},{"functionName":"stripLeadingDirectorySeparator","ranges":[{"startOffset":1357162,"endOffset":1357281,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveDirectoryPrefix","ranges":[{"startOffset":1357282,"endOffset":1357526,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":1357571,"endOffset":1357674,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRegExpCharacter","ranges":[{"startOffset":1357675,"endOffset":1357739,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1358700,"endOffset":1358784,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1359160,"endOffset":1359250,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1359387,"endOffset":1359473,"count":6}],"isBlockCoverage":true},{"functionName":"getRegularExpressionForWildcard","ranges":[{"startOffset":1359589,"endOffset":1359967,"count":1},{"startOffset":1359771,"endOffset":1359795,"count":0},{"startOffset":1359920,"endOffset":1359925,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1359827,"endOffset":1359856,"count":2}],"isBlockCoverage":true},{"functionName":"getRegularExpressionsForWildcards","ranges":[{"startOffset":1359968,"endOffset":1360223,"count":1},{"startOffset":1360083,"endOffset":1360107,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1360132,"endOffset":1360219,"count":2}],"isBlockCoverage":true},{"functionName":"isImplicitGlob","ranges":[{"startOffset":1360224,"endOffset":1360313,"count":2}],"isBlockCoverage":true},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":1360314,"endOffset":1360540,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":1360541,"endOffset":1362381,"count":2},{"startOffset":1360930,"endOffset":1360955,"count":0},{"startOffset":1360957,"endOffset":1360981,"count":0},{"startOffset":1361185,"endOffset":1362279,"count":18},{"startOffset":1361215,"endOffset":1361271,"count":2},{"startOffset":1361271,"endOffset":1362243,"count":16},{"startOffset":1361314,"endOffset":1361375,"count":0},{"startOffset":1361407,"endOffset":1361458,"count":14},{"startOffset":1361490,"endOffset":1362128,"count":0},{"startOffset":1362308,"endOffset":1362358,"count":0}],"isBlockCoverage":true},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1362382,"endOffset":1362549,"count":6},{"startOffset":1362477,"endOffset":1362506,"count":2},{"startOffset":1362507,"endOffset":1362546,"count":4},{"startOffset":1362523,"endOffset":1362531,"count":0}],"isBlockCoverage":true},{"functionName":"getFileMatcherPatterns","ranges":[{"startOffset":1362550,"endOffset":1363296,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexFromPattern","ranges":[{"startOffset":1363297,"endOffset":1363435,"count":0}],"isBlockCoverage":false},{"functionName":"matchFiles","ranges":[{"startOffset":1363436,"endOffset":1365953,"count":0}],"isBlockCoverage":false},{"functionName":"getBasePaths","ranges":[{"startOffset":1365954,"endOffset":1366639,"count":0}],"isBlockCoverage":false},{"functionName":"getIncludeBasePath","ranges":[{"startOffset":1366640,"endOffset":1366987,"count":0}],"isBlockCoverage":false},{"functionName":"ensureScriptKind","ranges":[{"startOffset":1366988,"endOffset":1367113,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKindFromFileName","ranges":[{"startOffset":1367114,"endOffset":1367668,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensions","ranges":[{"startOffset":1369045,"endOffset":1369716,"count":1},{"startOffset":1369276,"endOffset":1369300,"count":0},{"startOffset":1369329,"endOffset":1369390,"count":0},{"startOffset":1369391,"endOffset":1369414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1369537,"endOffset":1369687,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsWithJsonIfResolveJsonModule","ranges":[{"startOffset":1369717,"endOffset":1370128,"count":1},{"startOffset":1369858,"endOffset":1369885,"count":0},{"startOffset":1369940,"endOffset":1369978,"count":0},{"startOffset":1370069,"endOffset":1370127,"count":0}],"isBlockCoverage":true},{"functionName":"isJSLike","ranges":[{"startOffset":1370129,"endOffset":1370228,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSFileExtension","ranges":[{"startOffset":1370229,"endOffset":1370365,"count":0}],"isBlockCoverage":false},{"functionName":"hasTSFileExtension","ranges":[{"startOffset":1370366,"endOffset":1370502,"count":0}],"isBlockCoverage":false},{"functionName":"hasImplementationTSFileExtension","ranges":[{"startOffset":1370503,"endOffset":1370699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1370745,"endOffset":1371129,"count":1}],"isBlockCoverage":false},{"functionName":"usesExtensionsOnImports","ranges":[{"startOffset":1371161,"endOffset":1371457,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierEndingPreference","ranges":[{"startOffset":1371458,"endOffset":1373352,"count":0}],"isBlockCoverage":false},{"functionName":"getRequiresAtTopOfFile","ranges":[{"startOffset":1373353,"endOffset":1374021,"count":0}],"isBlockCoverage":false},{"functionName":"isSupportedSourceFileName","ranges":[{"startOffset":1374022,"endOffset":1374450,"count":0}],"isBlockCoverage":false},{"functionName":"numberOfDirectorySeparators","ranges":[{"startOffset":1374451,"endOffset":1374565,"count":0}],"isBlockCoverage":false},{"functionName":"compareNumberOfDirectorySeparators","ranges":[{"startOffset":1374566,"endOffset":1374735,"count":0}],"isBlockCoverage":false},{"functionName":"removeFileExtension","ranges":[{"startOffset":1374984,"endOffset":1375210,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveExtension","ranges":[{"startOffset":1375211,"endOffset":1375346,"count":0}],"isBlockCoverage":false},{"functionName":"removeExtension","ranges":[{"startOffset":1375347,"endOffset":1375452,"count":0}],"isBlockCoverage":false},{"functionName":"changeExtension","ranges":[{"startOffset":1375453,"endOffset":1375616,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePattern","ranges":[{"startOffset":1375617,"endOffset":1375910,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePatterns","ranges":[{"startOffset":1375968,"endOffset":1376663,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsSynthesized","ranges":[{"startOffset":1376664,"endOffset":1376725,"count":21}],"isBlockCoverage":true},{"functionName":"extensionIsTS","ranges":[{"startOffset":1376726,"endOffset":1377015,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionExtensionIsTSOrJson","ranges":[{"startOffset":1377016,"endOffset":1377122,"count":0}],"isBlockCoverage":false},{"functionName":"extensionFromPath","ranges":[{"startOffset":1377123,"endOffset":1377288,"count":0}],"isBlockCoverage":false},{"functionName":"isAnySupportedFileExtension","ranges":[{"startOffset":1377289,"endOffset":1377387,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExtensionFromPath2","ranges":[{"startOffset":1377388,"endOffset":1377499,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckJsEnabledForFile","ranges":[{"startOffset":1377500,"endOffset":1377667,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatternOrExact","ranges":[{"startOffset":1377749,"endOffset":1378113,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAfter","ranges":[{"startOffset":1378114,"endOffset":1378242,"count":0}],"isBlockCoverage":false},{"functionName":"addRelatedInfo","ranges":[{"startOffset":1378243,"endOffset":1378686,"count":0}],"isBlockCoverage":false},{"functionName":"minAndMax","ranges":[{"startOffset":1378687,"endOffset":1379016,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfNode","ranges":[{"startOffset":1379017,"endOffset":1379105,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfTypeParameters","ranges":[{"startOffset":1379106,"endOffset":1379330,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeChecking","ranges":[{"startOffset":1379331,"endOffset":1379496,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeCheckingIgnoringNoCheck","ranges":[{"startOffset":1379497,"endOffset":1379676,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeCheckingWorker","ranges":[{"startOffset":1379677,"endOffset":1380038,"count":0}],"isBlockCoverage":false},{"functionName":"canIncludeBindAndCheckDiagnostics","ranges":[{"startOffset":1380039,"endOffset":1380661,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonEqual","ranges":[{"startOffset":1380662,"endOffset":1380829,"count":0}],"isBlockCoverage":false},{"functionName":"parsePseudoBigInt","ranges":[{"startOffset":1380830,"endOffset":1382785,"count":0}],"isBlockCoverage":false},{"functionName":"pseudoBigIntToString","ranges":[{"startOffset":1382786,"endOffset":1382915,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigInt","ranges":[{"startOffset":1382916,"endOffset":1383079,"count":0}],"isBlockCoverage":false},{"functionName":"parseValidBigInt","ranges":[{"startOffset":1383080,"endOffset":1383272,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBigIntString","ranges":[{"startOffset":1383273,"endOffset":1383978,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTypeOnlyAliasUseSite","ranges":[{"startOffset":1383979,"endOffset":1384328,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyNameUseSite","ranges":[{"startOffset":1384329,"endOffset":1384497,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfPossiblyValidTypeOrAbstractComputedPropertyName","ranges":[{"startOffset":1384498,"endOffset":1385008,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierInNonEmittingHeritageClause","ranges":[{"startOffset":1385009,"endOffset":1385643,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypeReference","ranges":[{"startOffset":1385644,"endOffset":1385755,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsHomogeneous","ranges":[{"startOffset":1385756,"endOffset":1386042,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePos","ranges":[{"startOffset":1386043,"endOffset":1386118,"count":51}],"isBlockCoverage":true},{"functionName":"setTextRangeEnd","ranges":[{"startOffset":1386119,"endOffset":1386194,"count":51}],"isBlockCoverage":true},{"functionName":"setTextRangePosEnd","ranges":[{"startOffset":1386195,"endOffset":1386303,"count":51}],"isBlockCoverage":true},{"functionName":"setTextRangePosWidth","ranges":[{"startOffset":1386304,"endOffset":1386410,"count":1}],"isBlockCoverage":true},{"functionName":"setNodeFlags","ranges":[{"startOffset":1386411,"endOffset":1386512,"count":0}],"isBlockCoverage":false},{"functionName":"setParent","ranges":[{"startOffset":1386513,"endOffset":1386625,"count":0}],"isBlockCoverage":false},{"functionName":"setParentRecursive","ranges":[{"startOffset":1386626,"endOffset":1387390,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedElement","ranges":[{"startOffset":1387391,"endOffset":1387462,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedArrayLiteral","ranges":[{"startOffset":1387463,"endOffset":1387584,"count":0}],"isBlockCoverage":false},{"functionName":"expressionResultIsUnused","ranges":[{"startOffset":1387585,"endOffset":1388342,"count":0}],"isBlockCoverage":false},{"functionName":"containsIgnoredPath","ranges":[{"startOffset":1388343,"endOffset":1388435,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeArray","ranges":[{"startOffset":1388436,"endOffset":1390825,"count":0}],"isBlockCoverage":false},{"functionName":"hasContextSensitiveParameters","ranges":[{"startOffset":1390826,"endOffset":1391231,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinityOrNaNString","ranges":[{"startOffset":1391232,"endOffset":1391344,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclaration","ranges":[{"startOffset":1391345,"endOffset":1391496,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpressionOrArrowFunction","ranges":[{"startOffset":1391497,"endOffset":1391645,"count":0}],"isBlockCoverage":false},{"functionName":"escapeSnippetText","ranges":[{"startOffset":1391646,"endOffset":1391725,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteralName","ranges":[{"startOffset":1391726,"endOffset":1391803,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameNodeForIdentifierOrLiteral","ranges":[{"startOffset":1391804,"endOffset":1392230,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeParameter","ranges":[{"startOffset":1392231,"endOffset":1392342,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulePathParts","ranges":[{"startOffset":1392343,"endOffset":1394000,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDeclaration","ranges":[{"startOffset":1394001,"endOffset":1394590,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveExportModifier","ranges":[{"startOffset":1394591,"endOffset":1394916,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalJSDocPropertyLikeTag","ranges":[{"startOffset":1394917,"endOffset":1395177,"count":0}],"isBlockCoverage":false},{"functionName":"canUsePropertyAccess","ranges":[{"startOffset":1395178,"endOffset":1395485,"count":0}],"isBlockCoverage":false},{"functionName":"hasTabstop","ranges":[{"startOffset":1395486,"endOffset":1395615,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalParameter","ranges":[{"startOffset":1395616,"endOffset":1395917,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalDeclaration","ranges":[{"startOffset":1395918,"endOffset":1396398,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAccess","ranges":[{"startOffset":1396399,"endOffset":1396601,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesExpression","ranges":[{"startOffset":1396602,"endOffset":1396764,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesExpressionType","ranges":[{"startOffset":1396765,"endOffset":1396880,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocSatisfiesTypeNode","ranges":[{"startOffset":1396881,"endOffset":1397033,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxAttributeName","ranges":[{"startOffset":1397034,"endOffset":1397175,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxAttributeName","ranges":[{"startOffset":1397176,"endOffset":1397299,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeName","ranges":[{"startOffset":1397300,"endOffset":1397442,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxNamespacedName","ranges":[{"startOffset":1397443,"endOffset":1397558,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxNamespacedName","ranges":[{"startOffset":1397559,"endOffset":1397663,"count":0}],"isBlockCoverage":false},{"functionName":"intrinsicTagNameToString","ranges":[{"startOffset":1397664,"endOffset":1397786,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeUsableAsPropertyName","ranges":[{"startOffset":1397787,"endOffset":1397900,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameFromType","ranges":[{"startOffset":1397901,"endOffset":1398179,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoPropertyDeclaration","ranges":[{"startOffset":1398180,"endOffset":1398380,"count":0}],"isBlockCoverage":false},{"functionName":"hasResolutionModeOverride","ranges":[{"startOffset":1398381,"endOffset":1398527,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstStar","ranges":[{"startOffset":1398574,"endOffset":1398669,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromImportAttribute","ranges":[{"startOffset":1398670,"endOffset":1398816,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":1398817,"endOffset":1402219,"count":0}],"isBlockCoverage":false},{"functionName":"evaluatorResult","ranges":[{"startOffset":1402220,"endOffset":1402431,"count":0}],"isBlockCoverage":false},{"functionName":"createEvaluator","ranges":[{"startOffset":1402432,"endOffset":1408466,"count":0}],"isBlockCoverage":false},{"functionName":"isConstAssertion","ranges":[{"startOffset":1408467,"endOffset":1408664,"count":0}],"isBlockCoverage":false},{"functionName":"findConstructorDeclaration","ranges":[{"startOffset":1408665,"endOffset":1408886,"count":0}],"isBlockCoverage":false},{"functionName":"createNameResolver","ranges":[{"startOffset":1408887,"endOffset":1426565,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitiveLiteralValue","ranges":[{"startOffset":1426566,"endOffset":1427316,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":1427317,"endOffset":1427457,"count":0}],"isBlockCoverage":false},{"functionName":"hasInferredType","ranges":[{"startOffset":1427458,"endOffset":1428123,"count":0}],"isBlockCoverage":false},{"functionName":"isSideEffectImport","ranges":[{"startOffset":1428124,"endOffset":1428268,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1429420,"endOffset":1429444,"count":55}],"isBlockCoverage":true},{"functionName":"forEachDynamicImportOrRequireCall","ranges":[{"startOffset":1429491,"endOffset":1430529,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeAtPosition","ranges":[{"startOffset":1430530,"endOffset":1431131,"count":0}],"isBlockCoverage":false},{"functionName":"isNewScopeNode","ranges":[{"startOffset":1431132,"endOffset":1431248,"count":0}],"isBlockCoverage":false},{"functionName":"getLibNameFromLibReference","ranges":[{"startOffset":1431249,"endOffset":1431355,"count":0}],"isBlockCoverage":false},{"functionName":"getLibFileNameFromLibReference","ranges":[{"startOffset":1431356,"endOffset":1431503,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":1431504,"endOffset":1431757,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProjectReference","ranges":[{"startOffset":1431758,"endOffset":1433029,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsSyntaxByArrayElementValue","ranges":[{"startOffset":1433030,"endOffset":1433190,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyArrayElementValue","ranges":[{"startOffset":1433191,"endOffset":1433511,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsSyntaxByValue","ranges":[{"startOffset":1433512,"endOffset":1433758,"count":0}],"isBlockCoverage":false},{"functionName":"forEachOptionsSyntaxByName","ranges":[{"startOffset":1433759,"endOffset":1433896,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNodeFactory","ranges":[{"startOffset":1433941,"endOffset":1435400,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1434281,"endOffset":1434506,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1434509,"endOffset":1434734,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1434737,"endOffset":1434990,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1434993,"endOffset":1435198,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNode","ranges":[{"startOffset":1435201,"endOffset":1435398,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizerRules","ranges":[{"startOffset":1435448,"endOffset":1450629,"count":0}],"isBlockCoverage":false},{"functionName":"getParenthesizeLeftSideOfBinaryForOperator","ranges":[{"startOffset":1450707,"endOffset":1450722,"count":0}],"isBlockCoverage":false},{"functionName":"getParenthesizeRightSideOfBinaryForOperator","ranges":[{"startOffset":1450771,"endOffset":1450786,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeLeftSideOfBinary","ranges":[{"startOffset":1450820,"endOffset":1450859,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeRightSideOfBinary","ranges":[{"startOffset":1450894,"endOffset":1450946,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeExpressionOfNew","ranges":[{"startOffset":1451201,"endOffset":1451259,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeLeftSideOfAccess","ranges":[{"startOffset":1451293,"endOffset":1451351,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeOperandOfPostfixUnary","ranges":[{"startOffset":1451390,"endOffset":1451442,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeOperandOfPrefixUnary","ranges":[{"startOffset":1451480,"endOffset":1451525,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeExpressionsOfCommaDelimitedList","ranges":[{"startOffset":1451574,"endOffset":1451609,"count":2}],"isBlockCoverage":true},{"functionName":"parenthesizeConstituentTypesOfUnionType","ranges":[{"startOffset":1451923,"endOffset":1451958,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeConstituentTypesOfIntersectionType","ranges":[{"startOffset":1452062,"endOffset":1452097,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeElementTypesOfTupleType","ranges":[{"startOffset":1452350,"endOffset":1452385,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeTypeArguments","ranges":[{"startOffset":1452508,"endOffset":1452552,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeConverters","ranges":[{"startOffset":1452644,"endOffset":1457361,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1457936,"endOffset":1458431,"count":1}],"isBlockCoverage":false},{"functionName":"addNodeFactoryPatcher","ranges":[{"startOffset":1458488,"endOffset":1458558,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeFactory","ranges":[{"startOffset":1458559,"endOffset":1658042,"count":4},{"startOffset":1458662,"endOffset":1458672,"count":1},{"startOffset":1458673,"endOffset":1458690,"count":3},{"startOffset":1464129,"endOffset":1464243,"count":2},{"startOffset":1464244,"endOffset":1464276,"count":2},{"startOffset":1464396,"endOffset":1464541,"count":2},{"startOffset":1464542,"endOffset":1464569,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1458729,"endOffset":1458833,"count":1},{"startOffset":1458797,"endOffset":1458833,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1458865,"endOffset":1458957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459005,"endOffset":1459081,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459134,"endOffset":1459207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459261,"endOffset":1459335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459393,"endOffset":1459443,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459499,"endOffset":1459557,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459613,"endOffset":1459683,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459749,"endOffset":1459835,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1459901,"endOffset":1459981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1460037,"endOffset":1460119,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1460175,"endOffset":1460269,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1460327,"endOffset":1460443,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1460501,"endOffset":1460629,"count":0}],"isBlockCoverage":false},{"functionName":"get parenthesizer","ranges":[{"startOffset":1460657,"endOffset":1460719,"count":0}],"isBlockCoverage":false},{"functionName":"get converters","ranges":[{"startOffset":1460725,"endOffset":1460776,"count":0}],"isBlockCoverage":false},{"functionName":"factory2.createPropertyAccessExpression","ranges":[{"startOffset":1464131,"endOffset":1464243,"count":0}],"isBlockCoverage":false},{"functionName":"factory2.createPropertyAccessChain","ranges":[{"startOffset":1464398,"endOffset":1464541,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocAllType","ranges":[{"startOffset":1469165,"endOffset":1469269,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocUnknownType","ranges":[{"startOffset":1469275,"endOffset":1469387,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocNonNullableType","ranges":[{"startOffset":1469393,"endOffset":1469521,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocNonNullableType","ranges":[{"startOffset":1469527,"endOffset":1469655,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocNullableType","ranges":[{"startOffset":1469661,"endOffset":1469783,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocNullableType","ranges":[{"startOffset":1469789,"endOffset":1469911,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocOptionalType","ranges":[{"startOffset":1469917,"endOffset":1470029,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocOptionalType","ranges":[{"startOffset":1470035,"endOffset":1470147,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocVariadicType","ranges":[{"startOffset":1470153,"endOffset":1470265,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocVariadicType","ranges":[{"startOffset":1470271,"endOffset":1470383,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocNamepathType","ranges":[{"startOffset":1470389,"endOffset":1470501,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocNamepathType","ranges":[{"startOffset":1470507,"endOffset":1470619,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocTypeTag","ranges":[{"startOffset":1471734,"endOffset":1471838,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocTypeTag","ranges":[{"startOffset":1471844,"endOffset":1471948,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocReturnTag","ranges":[{"startOffset":1471954,"endOffset":1472062,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocReturnTag","ranges":[{"startOffset":1472068,"endOffset":1472176,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocThisTag","ranges":[{"startOffset":1472182,"endOffset":1472286,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocThisTag","ranges":[{"startOffset":1472292,"endOffset":1472396,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocAuthorTag","ranges":[{"startOffset":1472402,"endOffset":1472508,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocAuthorTag","ranges":[{"startOffset":1472514,"endOffset":1472620,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocClassTag","ranges":[{"startOffset":1472626,"endOffset":1472730,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocClassTag","ranges":[{"startOffset":1472736,"endOffset":1472840,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocPublicTag","ranges":[{"startOffset":1472846,"endOffset":1472952,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocPublicTag","ranges":[{"startOffset":1472958,"endOffset":1473064,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocPrivateTag","ranges":[{"startOffset":1473070,"endOffset":1473178,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocPrivateTag","ranges":[{"startOffset":1473184,"endOffset":1473292,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocProtectedTag","ranges":[{"startOffset":1473298,"endOffset":1473410,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocProtectedTag","ranges":[{"startOffset":1473416,"endOffset":1473528,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocReadonlyTag","ranges":[{"startOffset":1473534,"endOffset":1473644,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocReadonlyTag","ranges":[{"startOffset":1473650,"endOffset":1473760,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocOverrideTag","ranges":[{"startOffset":1473766,"endOffset":1473876,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocOverrideTag","ranges":[{"startOffset":1473882,"endOffset":1473992,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocDeprecatedTag","ranges":[{"startOffset":1473998,"endOffset":1474112,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocDeprecatedTag","ranges":[{"startOffset":1474118,"endOffset":1474232,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocThrowsTag","ranges":[{"startOffset":1474238,"endOffset":1474346,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocThrowsTag","ranges":[{"startOffset":1474352,"endOffset":1474460,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocSatisfiesTag","ranges":[{"startOffset":1474466,"endOffset":1474580,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocSatisfiesTag","ranges":[{"startOffset":1474586,"endOffset":1474700,"count":0}],"isBlockCoverage":false},{"functionName":"get createComma","ranges":[{"startOffset":1476565,"endOffset":1476649,"count":0}],"isBlockCoverage":false},{"functionName":"get createAssignment","ranges":[{"startOffset":1476655,"endOffset":1476745,"count":0}],"isBlockCoverage":false},{"functionName":"get createLogicalOr","ranges":[{"startOffset":1476751,"endOffset":1476840,"count":0}],"isBlockCoverage":false},{"functionName":"get createLogicalAnd","ranges":[{"startOffset":1476846,"endOffset":1476948,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseOr","ranges":[{"startOffset":1476954,"endOffset":1477040,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseXor","ranges":[{"startOffset":1477046,"endOffset":1477135,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseAnd","ranges":[{"startOffset":1477141,"endOffset":1477234,"count":0}],"isBlockCoverage":false},{"functionName":"get createStrictEquality","ranges":[{"startOffset":1477240,"endOffset":1477346,"count":0}],"isBlockCoverage":false},{"functionName":"get createStrictInequality","ranges":[{"startOffset":1477352,"endOffset":1477465,"count":0}],"isBlockCoverage":false},{"functionName":"get createEquality","ranges":[{"startOffset":1477471,"endOffset":1477565,"count":0}],"isBlockCoverage":false},{"functionName":"get createInequality","ranges":[{"startOffset":1477571,"endOffset":1477672,"count":0}],"isBlockCoverage":false},{"functionName":"get createLessThan","ranges":[{"startOffset":1477678,"endOffset":1477768,"count":0}],"isBlockCoverage":false},{"functionName":"get createLessThanEquals","ranges":[{"startOffset":1477774,"endOffset":1477876,"count":0}],"isBlockCoverage":false},{"functionName":"get createGreaterThan","ranges":[{"startOffset":1477882,"endOffset":1477978,"count":0}],"isBlockCoverage":false},{"functionName":"get createGreaterThanEquals","ranges":[{"startOffset":1477984,"endOffset":1478092,"count":0}],"isBlockCoverage":false},{"functionName":"get createLeftShift","ranges":[{"startOffset":1478098,"endOffset":1478197,"count":0}],"isBlockCoverage":false},{"functionName":"get createRightShift","ranges":[{"startOffset":1478203,"endOffset":1478309,"count":0}],"isBlockCoverage":false},{"functionName":"get createUnsignedRightShift","ranges":[{"startOffset":1478315,"endOffset":1478440,"count":0}],"isBlockCoverage":false},{"functionName":"get createAdd","ranges":[{"startOffset":1478446,"endOffset":1478527,"count":0}],"isBlockCoverage":false},{"functionName":"get createSubtract","ranges":[{"startOffset":1478533,"endOffset":1478620,"count":0}],"isBlockCoverage":false},{"functionName":"get createMultiply","ranges":[{"startOffset":1478626,"endOffset":1478716,"count":0}],"isBlockCoverage":false},{"functionName":"get createDivide","ranges":[{"startOffset":1478722,"endOffset":1478807,"count":0}],"isBlockCoverage":false},{"functionName":"get createModulo","ranges":[{"startOffset":1478813,"endOffset":1478900,"count":0}],"isBlockCoverage":false},{"functionName":"get createExponent","ranges":[{"startOffset":1478906,"endOffset":1479004,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixPlus","ranges":[{"startOffset":1479010,"endOffset":1479103,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixMinus","ranges":[{"startOffset":1479109,"endOffset":1479204,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixIncrement","ranges":[{"startOffset":1479210,"endOffset":1479312,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixDecrement","ranges":[{"startOffset":1479318,"endOffset":1479422,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseNot","ranges":[{"startOffset":1479428,"endOffset":1479522,"count":0}],"isBlockCoverage":false},{"functionName":"get createLogicalNot","ranges":[{"startOffset":1479528,"endOffset":1479628,"count":0}],"isBlockCoverage":false},{"functionName":"get createPostfixIncrement","ranges":[{"startOffset":1479634,"endOffset":1479738,"count":0}],"isBlockCoverage":false},{"functionName":"get createPostfixDecrement","ranges":[{"startOffset":1479744,"endOffset":1479850,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1481030,"endOffset":1481050,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeArray","ranges":[{"startOffset":1481074,"endOffset":1482153,"count":10},{"startOffset":1481185,"endOffset":1481213,"count":0},{"startOffset":1481246,"endOffset":1481808,"count":5},{"startOffset":1481286,"endOffset":1481335,"count":0},{"startOffset":1481387,"endOffset":1481442,"count":0},{"startOffset":1481525,"endOffset":1481808,"count":0},{"startOffset":1481808,"endOffset":1481892,"count":5},{"startOffset":1481893,"endOffset":1481911,"count":4},{"startOffset":1481912,"endOffset":1481922,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseNode","ranges":[{"startOffset":1482156,"endOffset":1482237,"count":39}],"isBlockCoverage":true},{"functionName":"createBaseDeclaration","ranges":[{"startOffset":1482240,"endOffset":1482395,"count":36}],"isBlockCoverage":true},{"functionName":"finishUpdateBaseSignatureDeclaration","ranges":[{"startOffset":1482398,"endOffset":1482598,"count":0}],"isBlockCoverage":false},{"functionName":"createNumericLiteral","ranges":[{"startOffset":1482601,"endOffset":1483156,"count":0}],"isBlockCoverage":false},{"functionName":"createBigIntLiteral","ranges":[{"startOffset":1483159,"endOffset":1483414,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseStringLiteral","ranges":[{"startOffset":1483417,"endOffset":1483617,"count":21}],"isBlockCoverage":true},{"functionName":"createStringLiteral","ranges":[{"startOffset":1483620,"endOffset":1483927,"count":21},{"startOffset":1483857,"endOffset":1483906,"count":0}],"isBlockCoverage":true},{"functionName":"createStringLiteralFromNode","ranges":[{"startOffset":1483930,"endOffset":1484173,"count":0}],"isBlockCoverage":false},{"functionName":"createRegularExpressionLiteral","ranges":[{"startOffset":1484176,"endOffset":1484335,"count":0}],"isBlockCoverage":false},{"functionName":"createLiteralLikeNode","ranges":[{"startOffset":1484338,"endOffset":1485401,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifier","ranges":[{"startOffset":1485404,"endOffset":1485661,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseGeneratedIdentifier","ranges":[{"startOffset":1485664,"endOffset":1485998,"count":0}],"isBlockCoverage":false},{"functionName":"createIdentifier","ranges":[{"startOffset":1486001,"endOffset":1486721,"count":0}],"isBlockCoverage":false},{"functionName":"createTempVariable","ranges":[{"startOffset":1486724,"endOffset":1487083,"count":0}],"isBlockCoverage":false},{"functionName":"createLoopVariable","ranges":[{"startOffset":1487086,"endOffset":1487382,"count":0}],"isBlockCoverage":false},{"functionName":"createUniqueName","ranges":[{"startOffset":1487385,"endOffset":1487835,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratedNameForNode","ranges":[{"startOffset":1487838,"endOffset":1488383,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifier","ranges":[{"startOffset":1488386,"endOffset":1488648,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateIdentifier","ranges":[{"startOffset":1488651,"endOffset":1488871,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseGeneratedPrivateIdentifier","ranges":[{"startOffset":1488874,"endOffset":1489222,"count":0}],"isBlockCoverage":false},{"functionName":"createUniquePrivateName","ranges":[{"startOffset":1489225,"endOffset":1489596,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratedPrivateNameForNode","ranges":[{"startOffset":1489599,"endOffset":1490070,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseToken","ranges":[{"startOffset":1490073,"endOffset":1490160,"count":6}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1490163,"endOffset":1492522,"count":6},{"startOffset":1490343,"endOffset":1490357,"count":5},{"startOffset":1490519,"endOffset":1490533,"count":5},{"startOffset":1490844,"endOffset":1490965,"count":0},{"startOffset":1490972,"endOffset":1491064,"count":0},{"startOffset":1491071,"endOffset":1491100,"count":0},{"startOffset":1491107,"endOffset":1491137,"count":0},{"startOffset":1491144,"endOffset":1491176,"count":0},{"startOffset":1491183,"endOffset":1491214,"count":0},{"startOffset":1491221,"endOffset":1491252,"count":0},{"startOffset":1491259,"endOffset":1491289,"count":0},{"startOffset":1491296,"endOffset":1491323,"count":0},{"startOffset":1491330,"endOffset":1491356,"count":0},{"startOffset":1491363,"endOffset":1491392,"count":0},{"startOffset":1491399,"endOffset":1491428,"count":0},{"startOffset":1491435,"endOffset":1491463,"count":0},{"startOffset":1491470,"endOffset":1491499,"count":0},{"startOffset":1491506,"endOffset":1491531,"count":0},{"startOffset":1491538,"endOffset":1491564,"count":0},{"startOffset":1491571,"endOffset":1491602,"count":0},{"startOffset":1491609,"endOffset":1491638,"count":0},{"startOffset":1491645,"endOffset":1491675,"count":0},{"startOffset":1491682,"endOffset":1491711,"count":0},{"startOffset":1491718,"endOffset":1491745,"count":0},{"startOffset":1491752,"endOffset":1491782,"count":0},{"startOffset":1491789,"endOffset":1491889,"count":0},{"startOffset":1491896,"endOffset":1492062,"count":0},{"startOffset":1492069,"endOffset":1492165,"count":0},{"startOffset":1492172,"endOffset":1492279,"count":0},{"startOffset":1492286,"endOffset":1492418,"count":0},{"startOffset":1492449,"endOffset":1492501,"count":0}],"isBlockCoverage":true},{"functionName":"createSuper","ranges":[{"startOffset":1492525,"endOffset":1492601,"count":0}],"isBlockCoverage":false},{"functionName":"createThis","ranges":[{"startOffset":1492604,"endOffset":1492678,"count":0}],"isBlockCoverage":false},{"functionName":"createNull","ranges":[{"startOffset":1492681,"endOffset":1492755,"count":0}],"isBlockCoverage":false},{"functionName":"createTrue","ranges":[{"startOffset":1492758,"endOffset":1492832,"count":0}],"isBlockCoverage":false},{"functionName":"createFalse","ranges":[{"startOffset":1492835,"endOffset":1492910,"count":0}],"isBlockCoverage":false},{"functionName":"createModifier","ranges":[{"startOffset":1492913,"endOffset":1492978,"count":0}],"isBlockCoverage":false},{"functionName":"createModifiersFromModifierFlags","ranges":[{"startOffset":1492981,"endOffset":1494440,"count":0}],"isBlockCoverage":false},{"functionName":"createQualifiedName","ranges":[{"startOffset":1494443,"endOffset":1494749,"count":0}],"isBlockCoverage":false},{"functionName":"updateQualifiedName","ranges":[{"startOffset":1494752,"endOffset":1494916,"count":0}],"isBlockCoverage":false},{"functionName":"createComputedPropertyName","ranges":[{"startOffset":1494919,"endOffset":1495292,"count":0}],"isBlockCoverage":false},{"functionName":"updateComputedPropertyName","ranges":[{"startOffset":1495295,"endOffset":1495459,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeParameterDeclaration","ranges":[{"startOffset":1495462,"endOffset":1495881,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeParameterDeclaration","ranges":[{"startOffset":1495884,"endOffset":1496202,"count":0}],"isBlockCoverage":false},{"functionName":"createParameterDeclaration","ranges":[{"startOffset":1496205,"endOffset":1497284,"count":0}],"isBlockCoverage":false},{"functionName":"updateParameterDeclaration","ranges":[{"startOffset":1497287,"endOffset":1497721,"count":0}],"isBlockCoverage":false},{"functionName":"createDecorator","ranges":[{"startOffset":1497724,"endOffset":1498144,"count":0}],"isBlockCoverage":false},{"functionName":"updateDecorator","ranges":[{"startOffset":1498147,"endOffset":1498289,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertySignature","ranges":[{"startOffset":1498292,"endOffset":1498701,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertySignature","ranges":[{"startOffset":1498704,"endOffset":1499019,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdatePropertySignature","ranges":[{"startOffset":1499022,"endOffset":1499211,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyDeclaration","ranges":[{"startOffset":1499214,"endOffset":1500440,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyDeclaration2","ranges":[{"startOffset":1500443,"endOffset":1501096,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodSignature","ranges":[{"startOffset":1501099,"endOffset":1501695,"count":0}],"isBlockCoverage":false},{"functionName":"updateMethodSignature","ranges":[{"startOffset":1501698,"endOffset":1502148,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodDeclaration","ranges":[{"startOffset":1502151,"endOffset":1503850,"count":0}],"isBlockCoverage":false},{"functionName":"updateMethodDeclaration","ranges":[{"startOffset":1503853,"endOffset":1504404,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateMethodDeclaration","ranges":[{"startOffset":1504407,"endOffset":1504606,"count":0}],"isBlockCoverage":false},{"functionName":"createClassStaticBlockDeclaration","ranges":[{"startOffset":1504609,"endOffset":1505049,"count":0}],"isBlockCoverage":false},{"functionName":"updateClassStaticBlockDeclaration","ranges":[{"startOffset":1505052,"endOffset":1505239,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateClassStaticBlockDeclaration","ranges":[{"startOffset":1505242,"endOffset":1505437,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorDeclaration","ranges":[{"startOffset":1505440,"endOffset":1506266,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorDeclaration","ranges":[{"startOffset":1506269,"endOffset":1506553,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateConstructorDeclaration","ranges":[{"startOffset":1506556,"endOffset":1506822,"count":0}],"isBlockCoverage":false},{"functionName":"createGetAccessorDeclaration","ranges":[{"startOffset":1506825,"endOffset":1507814,"count":0}],"isBlockCoverage":false},{"functionName":"updateGetAccessorDeclaration","ranges":[{"startOffset":1507817,"endOffset":1508169,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateGetAccessorDeclaration","ranges":[{"startOffset":1508172,"endOffset":1508402,"count":0}],"isBlockCoverage":false},{"functionName":"createSetAccessorDeclaration","ranges":[{"startOffset":1508405,"endOffset":1509357,"count":0}],"isBlockCoverage":false},{"functionName":"updateSetAccessorDeclaration","ranges":[{"startOffset":1509360,"endOffset":1509678,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateSetAccessorDeclaration","ranges":[{"startOffset":1509681,"endOffset":1509947,"count":0}],"isBlockCoverage":false},{"functionName":"createCallSignature","ranges":[{"startOffset":1509950,"endOffset":1510395,"count":0}],"isBlockCoverage":false},{"functionName":"updateCallSignature","ranges":[{"startOffset":1510398,"endOffset":1510686,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructSignature","ranges":[{"startOffset":1510689,"endOffset":1511144,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructSignature","ranges":[{"startOffset":1511147,"endOffset":1511445,"count":0}],"isBlockCoverage":false},{"functionName":"createIndexSignature","ranges":[{"startOffset":1511448,"endOffset":1511880,"count":0}],"isBlockCoverage":false},{"functionName":"updateIndexSignature","ranges":[{"startOffset":1511883,"endOffset":1512153,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralTypeSpan","ranges":[{"startOffset":1512156,"endOffset":1512404,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateLiteralTypeSpan","ranges":[{"startOffset":1512407,"endOffset":1512599,"count":0}],"isBlockCoverage":false},{"functionName":"createKeywordTypeNode","ranges":[{"startOffset":1512602,"endOffset":1512674,"count":0}],"isBlockCoverage":false},{"functionName":"createTypePredicateNode","ranges":[{"startOffset":1512677,"endOffset":1512996,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypePredicateNode","ranges":[{"startOffset":1512999,"endOffset":1513281,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceNode","ranges":[{"startOffset":1513284,"endOffset":1513636,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeReferenceNode","ranges":[{"startOffset":1513639,"endOffset":1513859,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionTypeNode","ranges":[{"startOffset":1513862,"endOffset":1514338,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionTypeNode","ranges":[{"startOffset":1514341,"endOffset":1514627,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateFunctionTypeNode","ranges":[{"startOffset":1514630,"endOffset":1514844,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorTypeNode","ranges":[{"startOffset":1514847,"endOffset":1515079,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorTypeNode1","ranges":[{"startOffset":1515082,"endOffset":1515592,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorTypeNode2","ranges":[{"startOffset":1515595,"endOffset":1515801,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorTypeNode","ranges":[{"startOffset":1515804,"endOffset":1516036,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorTypeNode1","ranges":[{"startOffset":1516039,"endOffset":1516394,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorTypeNode2","ranges":[{"startOffset":1516397,"endOffset":1516573,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeQueryNode","ranges":[{"startOffset":1516576,"endOffset":1516895,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeQueryNode","ranges":[{"startOffset":1516898,"endOffset":1517110,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeLiteralNode","ranges":[{"startOffset":1517113,"endOffset":1517337,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeLiteralNode","ranges":[{"startOffset":1517340,"endOffset":1517482,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayTypeNode","ranges":[{"startOffset":1517485,"endOffset":1517753,"count":0}],"isBlockCoverage":false},{"functionName":"updateArrayTypeNode","ranges":[{"startOffset":1517756,"endOffset":1517910,"count":0}],"isBlockCoverage":false},{"functionName":"createTupleTypeNode","ranges":[{"startOffset":1517913,"endOffset":1518187,"count":0}],"isBlockCoverage":false},{"functionName":"updateTupleTypeNode","ranges":[{"startOffset":1518190,"endOffset":1518332,"count":0}],"isBlockCoverage":false},{"functionName":"createNamedTupleMember","ranges":[{"startOffset":1518335,"endOffset":1518705,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamedTupleMember","ranges":[{"startOffset":1518708,"endOffset":1519018,"count":0}],"isBlockCoverage":false},{"functionName":"createOptionalTypeNode","ranges":[{"startOffset":1519021,"endOffset":1519267,"count":0}],"isBlockCoverage":false},{"functionName":"updateOptionalTypeNode","ranges":[{"startOffset":1519270,"endOffset":1519402,"count":0}],"isBlockCoverage":false},{"functionName":"createRestTypeNode","ranges":[{"startOffset":1519405,"endOffset":1519590,"count":0}],"isBlockCoverage":false},{"functionName":"updateRestTypeNode","ranges":[{"startOffset":1519593,"endOffset":1519717,"count":0}],"isBlockCoverage":false},{"functionName":"createUnionOrIntersectionTypeNode","ranges":[{"startOffset":1519720,"endOffset":1519969,"count":0}],"isBlockCoverage":false},{"functionName":"updateUnionOrIntersectionTypeNode","ranges":[{"startOffset":1519972,"endOffset":1520169,"count":0}],"isBlockCoverage":false},{"functionName":"createUnionTypeNode","ranges":[{"startOffset":1520172,"endOffset":1520349,"count":0}],"isBlockCoverage":false},{"functionName":"updateUnionTypeNode","ranges":[{"startOffset":1520352,"endOffset":1520520,"count":0}],"isBlockCoverage":false},{"functionName":"createIntersectionTypeNode","ranges":[{"startOffset":1520523,"endOffset":1520721,"count":0}],"isBlockCoverage":false},{"functionName":"updateIntersectionTypeNode","ranges":[{"startOffset":1520724,"endOffset":1520906,"count":0}],"isBlockCoverage":false},{"functionName":"createConditionalTypeNode","ranges":[{"startOffset":1520909,"endOffset":1521438,"count":0}],"isBlockCoverage":false},{"functionName":"updateConditionalTypeNode","ranges":[{"startOffset":1521441,"endOffset":1521765,"count":0}],"isBlockCoverage":false},{"functionName":"createInferTypeNode","ranges":[{"startOffset":1521768,"endOffset":1521982,"count":0}],"isBlockCoverage":false},{"functionName":"updateInferTypeNode","ranges":[{"startOffset":1521985,"endOffset":1522147,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralType","ranges":[{"startOffset":1522150,"endOffset":1522425,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateLiteralType","ranges":[{"startOffset":1522428,"endOffset":1522636,"count":0}],"isBlockCoverage":false},{"functionName":"createImportTypeNode","ranges":[{"startOffset":1522639,"endOffset":1523235,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportTypeNode","ranges":[{"startOffset":1523238,"endOffset":1523630,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizedType","ranges":[{"startOffset":1523633,"endOffset":1523832,"count":0}],"isBlockCoverage":false},{"functionName":"updateParenthesizedType","ranges":[{"startOffset":1523835,"endOffset":1523969,"count":0}],"isBlockCoverage":false},{"functionName":"createThisTypeNode","ranges":[{"startOffset":1523972,"endOffset":1524131,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeOperatorNode","ranges":[{"startOffset":1524134,"endOffset":1524535,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeOperatorNode","ranges":[{"startOffset":1524538,"endOffset":1524685,"count":0}],"isBlockCoverage":false},{"functionName":"createIndexedAccessTypeNode","ranges":[{"startOffset":1524688,"endOffset":1525012,"count":0}],"isBlockCoverage":false},{"functionName":"updateIndexedAccessTypeNode","ranges":[{"startOffset":1525015,"endOffset":1525235,"count":0}],"isBlockCoverage":false},{"functionName":"createMappedTypeNode","ranges":[{"startOffset":1525238,"endOffset":1525763,"count":0}],"isBlockCoverage":false},{"functionName":"updateMappedTypeNode","ranges":[{"startOffset":1525766,"endOffset":1526200,"count":0}],"isBlockCoverage":false},{"functionName":"createLiteralTypeNode","ranges":[{"startOffset":1526203,"endOffset":1526403,"count":0}],"isBlockCoverage":false},{"functionName":"updateLiteralTypeNode","ranges":[{"startOffset":1526406,"endOffset":1526548,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectBindingPattern","ranges":[{"startOffset":1526551,"endOffset":1527031,"count":0}],"isBlockCoverage":false},{"functionName":"updateObjectBindingPattern","ranges":[{"startOffset":1527034,"endOffset":1527190,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayBindingPattern","ranges":[{"startOffset":1527193,"endOffset":1527503,"count":0}],"isBlockCoverage":false},{"functionName":"updateArrayBindingPattern","ranges":[{"startOffset":1527506,"endOffset":1527660,"count":0}],"isBlockCoverage":false},{"functionName":"createBindingElement","ranges":[{"startOffset":1527663,"endOffset":1528310,"count":0}],"isBlockCoverage":false},{"functionName":"updateBindingElement","ranges":[{"startOffset":1528313,"endOffset":1528643,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayLiteralExpression","ranges":[{"startOffset":1528646,"endOffset":1529174,"count":2},{"startOffset":1528937,"endOffset":1528943,"count":0}],"isBlockCoverage":true},{"functionName":"updateArrayLiteralExpression","ranges":[{"startOffset":1529177,"endOffset":1529353,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectLiteralExpression","ranges":[{"startOffset":1529356,"endOffset":1529691,"count":2}],"isBlockCoverage":true},{"functionName":"updateObjectLiteralExpression","ranges":[{"startOffset":1529694,"endOffset":1529880,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePropertyAccessExpression","ranges":[{"startOffset":1529883,"endOffset":1530484,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyAccessExpression","ranges":[{"startOffset":1530487,"endOffset":1530939,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyAccessExpression","ranges":[{"startOffset":1530942,"endOffset":1531300,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyAccessChain","ranges":[{"startOffset":1531303,"endOffset":1531718,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyAccessChain","ranges":[{"startOffset":1531721,"endOffset":1532169,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseElementAccessExpression","ranges":[{"startOffset":1532172,"endOffset":1532702,"count":0}],"isBlockCoverage":false},{"functionName":"createElementAccessExpression","ranges":[{"startOffset":1532705,"endOffset":1533163,"count":0}],"isBlockCoverage":false},{"functionName":"updateElementAccessExpression","ranges":[{"startOffset":1533166,"endOffset":1533570,"count":0}],"isBlockCoverage":false},{"functionName":"createElementAccessChain","ranges":[{"startOffset":1533573,"endOffset":1533994,"count":0}],"isBlockCoverage":false},{"functionName":"updateElementAccessChain","ranges":[{"startOffset":1533997,"endOffset":1534496,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseCallExpression","ranges":[{"startOffset":1534499,"endOffset":1535240,"count":0}],"isBlockCoverage":false},{"functionName":"createCallExpression","ranges":[{"startOffset":1535243,"endOffset":1535809,"count":0}],"isBlockCoverage":false},{"functionName":"updateCallExpression","ranges":[{"startOffset":1535812,"endOffset":1536240,"count":0}],"isBlockCoverage":false},{"functionName":"createCallChain","ranges":[{"startOffset":1536243,"endOffset":1536782,"count":0}],"isBlockCoverage":false},{"functionName":"updateCallChain","ranges":[{"startOffset":1536785,"endOffset":1537288,"count":0}],"isBlockCoverage":false},{"functionName":"createNewExpression","ranges":[{"startOffset":1537291,"endOffset":1537986,"count":0}],"isBlockCoverage":false},{"functionName":"updateNewExpression","ranges":[{"startOffset":1537989,"endOffset":1538278,"count":0}],"isBlockCoverage":false},{"functionName":"createTaggedTemplateExpression","ranges":[{"startOffset":1538281,"endOffset":1539010,"count":0}],"isBlockCoverage":false},{"functionName":"updateTaggedTemplateExpression","ranges":[{"startOffset":1539013,"endOffset":1539277,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAssertion","ranges":[{"startOffset":1539280,"endOffset":1539655,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeAssertion","ranges":[{"startOffset":1539658,"endOffset":1539842,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizedExpression","ranges":[{"startOffset":1539845,"endOffset":1540109,"count":0}],"isBlockCoverage":false},{"functionName":"updateParenthesizedExpression","ranges":[{"startOffset":1540112,"endOffset":1540282,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionExpression","ranges":[{"startOffset":1540285,"endOffset":1541753,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionExpression","ranges":[{"startOffset":1541756,"endOffset":1542246,"count":0}],"isBlockCoverage":false},{"functionName":"createArrowFunction","ranges":[{"startOffset":1542249,"endOffset":1543601,"count":0}],"isBlockCoverage":false},{"functionName":"updateArrowFunction","ranges":[{"startOffset":1543604,"endOffset":1544086,"count":0}],"isBlockCoverage":false},{"functionName":"createDeleteExpression","ranges":[{"startOffset":1544089,"endOffset":1544370,"count":0}],"isBlockCoverage":false},{"functionName":"updateDeleteExpression","ranges":[{"startOffset":1544373,"endOffset":1544529,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeOfExpression","ranges":[{"startOffset":1544532,"endOffset":1544813,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeOfExpression","ranges":[{"startOffset":1544816,"endOffset":1544972,"count":0}],"isBlockCoverage":false},{"functionName":"createVoidExpression","ranges":[{"startOffset":1544975,"endOffset":1545252,"count":0}],"isBlockCoverage":false},{"functionName":"updateVoidExpression","ranges":[{"startOffset":1545255,"endOffset":1545407,"count":0}],"isBlockCoverage":false},{"functionName":"createAwaitExpression","ranges":[{"startOffset":1545410,"endOffset":1545773,"count":0}],"isBlockCoverage":false},{"functionName":"updateAwaitExpression","ranges":[{"startOffset":1545776,"endOffset":1545930,"count":0}],"isBlockCoverage":false},{"functionName":"createPrefixUnaryExpression","ranges":[{"startOffset":1545933,"endOffset":1546532,"count":0}],"isBlockCoverage":false},{"functionName":"updatePrefixUnaryExpression","ranges":[{"startOffset":1546535,"endOffset":1546704,"count":0}],"isBlockCoverage":false},{"functionName":"createPostfixUnaryExpression","ranges":[{"startOffset":1546707,"endOffset":1547227,"count":0}],"isBlockCoverage":false},{"functionName":"updatePostfixUnaryExpression","ranges":[{"startOffset":1547230,"endOffset":1547401,"count":0}],"isBlockCoverage":false},{"functionName":"createBinaryExpression","ranges":[{"startOffset":1547404,"endOffset":1549115,"count":0}],"isBlockCoverage":false},{"functionName":"propagateAssignmentPatternFlags","ranges":[{"startOffset":1549118,"endOffset":1549271,"count":0}],"isBlockCoverage":false},{"functionName":"updateBinaryExpression","ranges":[{"startOffset":1549274,"endOffset":1549499,"count":0}],"isBlockCoverage":false},{"functionName":"createConditionalExpression","ranges":[{"startOffset":1549502,"endOffset":1550417,"count":0}],"isBlockCoverage":false},{"functionName":"updateConditionalExpression","ranges":[{"startOffset":1550420,"endOffset":1550814,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateExpression","ranges":[{"startOffset":1550817,"endOffset":1551168,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateExpression","ranges":[{"startOffset":1551171,"endOffset":1551377,"count":0}],"isBlockCoverage":false},{"functionName":"checkTemplateLiteralLikeNode","ranges":[{"startOffset":1551380,"endOffset":1552168,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformFlagsOfTemplateLiteralLike","ranges":[{"startOffset":1552171,"endOffset":1552399,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralLikeToken","ranges":[{"startOffset":1552402,"endOffset":1552754,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralLikeDeclaration","ranges":[{"startOffset":1552757,"endOffset":1553121,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralLikeNode","ranges":[{"startOffset":1553124,"endOffset":1553435,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateHead","ranges":[{"startOffset":1553438,"endOffset":1553690,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateMiddle","ranges":[{"startOffset":1553693,"endOffset":1553949,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateTail","ranges":[{"startOffset":1553952,"endOffset":1554204,"count":0}],"isBlockCoverage":false},{"functionName":"createNoSubstitutionTemplateLiteral","ranges":[{"startOffset":1554207,"endOffset":1554500,"count":0}],"isBlockCoverage":false},{"functionName":"createYieldExpression","ranges":[{"startOffset":1554503,"endOffset":1555106,"count":0}],"isBlockCoverage":false},{"functionName":"updateYieldExpression","ranges":[{"startOffset":1555109,"endOffset":1555333,"count":0}],"isBlockCoverage":false},{"functionName":"createSpreadElement","ranges":[{"startOffset":1555336,"endOffset":1555682,"count":0}],"isBlockCoverage":false},{"functionName":"updateSpreadElement","ranges":[{"startOffset":1555685,"endOffset":1555835,"count":0}],"isBlockCoverage":false},{"functionName":"createClassExpression","ranges":[{"startOffset":1555838,"endOffset":1556601,"count":0}],"isBlockCoverage":false},{"functionName":"updateClassExpression","ranges":[{"startOffset":1556604,"endOffset":1556986,"count":0}],"isBlockCoverage":false},{"functionName":"createOmittedExpression","ranges":[{"startOffset":1556989,"endOffset":1557085,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionWithTypeArguments","ranges":[{"startOffset":1557088,"endOffset":1557629,"count":0}],"isBlockCoverage":false},{"functionName":"updateExpressionWithTypeArguments","ranges":[{"startOffset":1557632,"endOffset":1557880,"count":0}],"isBlockCoverage":false},{"functionName":"createAsExpression","ranges":[{"startOffset":1557883,"endOffset":1558191,"count":0}],"isBlockCoverage":false},{"functionName":"updateAsExpression","ranges":[{"startOffset":1558194,"endOffset":1558376,"count":0}],"isBlockCoverage":false},{"functionName":"createNonNullExpression","ranges":[{"startOffset":1558379,"endOffset":1558736,"count":0}],"isBlockCoverage":false},{"functionName":"updateNonNullExpression","ranges":[{"startOffset":1558739,"endOffset":1558986,"count":0}],"isBlockCoverage":false},{"functionName":"createSatisfiesExpression","ranges":[{"startOffset":1558989,"endOffset":1559311,"count":0}],"isBlockCoverage":false},{"functionName":"updateSatisfiesExpression","ranges":[{"startOffset":1559314,"endOffset":1559510,"count":0}],"isBlockCoverage":false},{"functionName":"createNonNullChain","ranges":[{"startOffset":1559513,"endOffset":1559906,"count":0}],"isBlockCoverage":false},{"functionName":"updateNonNullChain","ranges":[{"startOffset":1559909,"endOffset":1560216,"count":0}],"isBlockCoverage":false},{"functionName":"createMetaProperty","ranges":[{"startOffset":1560219,"endOffset":1560803,"count":0}],"isBlockCoverage":false},{"functionName":"updateMetaProperty","ranges":[{"startOffset":1560806,"endOffset":1560949,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateSpan","ranges":[{"startOffset":1560952,"endOffset":1561271,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateSpan","ranges":[{"startOffset":1561274,"endOffset":1561468,"count":0}],"isBlockCoverage":false},{"functionName":"createSemicolonClassElement","ranges":[{"startOffset":1561471,"endOffset":1561652,"count":0}],"isBlockCoverage":false},{"functionName":"createBlock","ranges":[{"startOffset":1561655,"endOffset":1562006,"count":0}],"isBlockCoverage":false},{"functionName":"updateBlock","ranges":[{"startOffset":1562009,"endOffset":1562159,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableStatement","ranges":[{"startOffset":1562162,"endOffset":1562762,"count":0}],"isBlockCoverage":false},{"functionName":"updateVariableStatement","ranges":[{"startOffset":1562765,"endOffset":1562997,"count":0}],"isBlockCoverage":false},{"functionName":"createEmptyStatement","ranges":[{"startOffset":1563000,"endOffset":1563138,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionStatement","ranges":[{"startOffset":1563141,"endOffset":1563492,"count":1}],"isBlockCoverage":true},{"functionName":"updateExpressionStatement","ranges":[{"startOffset":1563495,"endOffset":1563657,"count":0}],"isBlockCoverage":false},{"functionName":"createIfStatement","ranges":[{"startOffset":1563660,"endOffset":1564165,"count":0}],"isBlockCoverage":false},{"functionName":"updateIfStatement","ranges":[{"startOffset":1564168,"endOffset":1564454,"count":0}],"isBlockCoverage":false},{"functionName":"createDoStatement","ranges":[{"startOffset":1564457,"endOffset":1564828,"count":0}],"isBlockCoverage":false},{"functionName":"updateDoStatement","ranges":[{"startOffset":1564831,"endOffset":1565031,"count":0}],"isBlockCoverage":false},{"functionName":"createWhileStatement","ranges":[{"startOffset":1565034,"endOffset":1565411,"count":0}],"isBlockCoverage":false},{"functionName":"updateWhileStatement","ranges":[{"startOffset":1565414,"endOffset":1565620,"count":0}],"isBlockCoverage":false},{"functionName":"createForStatement","ranges":[{"startOffset":1565623,"endOffset":1566229,"count":0}],"isBlockCoverage":false},{"functionName":"updateForStatement","ranges":[{"startOffset":1566232,"endOffset":1566554,"count":0}],"isBlockCoverage":false},{"functionName":"createForInStatement","ranges":[{"startOffset":1566557,"endOffset":1567082,"count":0}],"isBlockCoverage":false},{"functionName":"updateForInStatement","ranges":[{"startOffset":1567085,"endOffset":1567353,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfStatement","ranges":[{"startOffset":1567356,"endOffset":1568141,"count":0}],"isBlockCoverage":false},{"functionName":"updateForOfStatement","ranges":[{"startOffset":1568144,"endOffset":1568482,"count":0}],"isBlockCoverage":false},{"functionName":"createContinueStatement","ranges":[{"startOffset":1568485,"endOffset":1568809,"count":0}],"isBlockCoverage":false},{"functionName":"updateContinueStatement","ranges":[{"startOffset":1568812,"endOffset":1568950,"count":0}],"isBlockCoverage":false},{"functionName":"createBreakStatement","ranges":[{"startOffset":1568953,"endOffset":1569271,"count":0}],"isBlockCoverage":false},{"functionName":"updateBreakStatement","ranges":[{"startOffset":1569274,"endOffset":1569406,"count":0}],"isBlockCoverage":false},{"functionName":"createReturnStatement","ranges":[{"startOffset":1569409,"endOffset":1569768,"count":0}],"isBlockCoverage":false},{"functionName":"updateReturnStatement","ranges":[{"startOffset":1569771,"endOffset":1569925,"count":0}],"isBlockCoverage":false},{"functionName":"createWithStatement","ranges":[{"startOffset":1569928,"endOffset":1570303,"count":0}],"isBlockCoverage":false},{"functionName":"updateWithStatement","ranges":[{"startOffset":1570306,"endOffset":1570510,"count":0}],"isBlockCoverage":false},{"functionName":"createSwitchStatement","ranges":[{"startOffset":1570513,"endOffset":1570971,"count":0}],"isBlockCoverage":false},{"functionName":"updateSwitchStatement","ranges":[{"startOffset":1570974,"endOffset":1571182,"count":0}],"isBlockCoverage":false},{"functionName":"createLabeledStatement","ranges":[{"startOffset":1571185,"endOffset":1571554,"count":0}],"isBlockCoverage":false},{"functionName":"updateLabeledStatement","ranges":[{"startOffset":1571557,"endOffset":1571747,"count":0}],"isBlockCoverage":false},{"functionName":"createThrowStatement","ranges":[{"startOffset":1571750,"endOffset":1572025,"count":0}],"isBlockCoverage":false},{"functionName":"updateThrowStatement","ranges":[{"startOffset":1572028,"endOffset":1572180,"count":0}],"isBlockCoverage":false},{"functionName":"createTryStatement","ranges":[{"startOffset":1572183,"endOffset":1572628,"count":0}],"isBlockCoverage":false},{"functionName":"updateTryStatement","ranges":[{"startOffset":1572631,"endOffset":1572899,"count":0}],"isBlockCoverage":false},{"functionName":"createDebuggerStatement","ranges":[{"startOffset":1572902,"endOffset":1573074,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableDeclaration","ranges":[{"startOffset":1573077,"endOffset":1573603,"count":0}],"isBlockCoverage":false},{"functionName":"updateVariableDeclaration","ranges":[{"startOffset":1573606,"endOffset":1573922,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableDeclarationList","ranges":[{"startOffset":1573925,"endOffset":1574556,"count":0}],"isBlockCoverage":false},{"functionName":"updateVariableDeclarationList","ranges":[{"startOffset":1574559,"endOffset":1574749,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionDeclaration","ranges":[{"startOffset":1574752,"endOffset":1576355,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionDeclaration","ranges":[{"startOffset":1576358,"endOffset":1576845,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateFunctionDeclaration","ranges":[{"startOffset":1576848,"endOffset":1577129,"count":0}],"isBlockCoverage":false},{"functionName":"createClassDeclaration","ranges":[{"startOffset":1577132,"endOffset":1578181,"count":0}],"isBlockCoverage":false},{"functionName":"updateClassDeclaration","ranges":[{"startOffset":1578184,"endOffset":1578568,"count":0}],"isBlockCoverage":false},{"functionName":"createInterfaceDeclaration","ranges":[{"startOffset":1578571,"endOffset":1579071,"count":0}],"isBlockCoverage":false},{"functionName":"updateInterfaceDeclaration","ranges":[{"startOffset":1579074,"endOffset":1579466,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAliasDeclaration","ranges":[{"startOffset":1579469,"endOffset":1579928,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeAliasDeclaration","ranges":[{"startOffset":1579931,"endOffset":1580233,"count":0}],"isBlockCoverage":false},{"functionName":"createEnumDeclaration","ranges":[{"startOffset":1580236,"endOffset":1580769,"count":0}],"isBlockCoverage":false},{"functionName":"updateEnumDeclaration","ranges":[{"startOffset":1580772,"endOffset":1581002,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleDeclaration","ranges":[{"startOffset":1581005,"endOffset":1581832,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleDeclaration","ranges":[{"startOffset":1581835,"endOffset":1582069,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleBlock","ranges":[{"startOffset":1582072,"endOffset":1582333,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleBlock","ranges":[{"startOffset":1582336,"endOffset":1582482,"count":0}],"isBlockCoverage":false},{"functionName":"createCaseBlock","ranges":[{"startOffset":1582485,"endOffset":1582764,"count":0}],"isBlockCoverage":false},{"functionName":"updateCaseBlock","ranges":[{"startOffset":1582767,"endOffset":1582897,"count":0}],"isBlockCoverage":false},{"functionName":"createNamespaceExportDeclaration","ranges":[{"startOffset":1582900,"endOffset":1583229,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceExportDeclaration","ranges":[{"startOffset":1583232,"endOffset":1583416,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateNamespaceExportDeclaration","ranges":[{"startOffset":1583419,"endOffset":1583613,"count":0}],"isBlockCoverage":false},{"functionName":"createImportEqualsDeclaration","ranges":[{"startOffset":1583616,"endOffset":1584326,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportEqualsDeclaration","ranges":[{"startOffset":1584329,"endOffset":1584665,"count":0}],"isBlockCoverage":false},{"functionName":"createImportDeclaration","ranges":[{"startOffset":1584668,"endOffset":1585230,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportDeclaration","ranges":[{"startOffset":1585233,"endOffset":1585589,"count":0}],"isBlockCoverage":false},{"functionName":"createImportClause2","ranges":[{"startOffset":1585592,"endOffset":1586096,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportClause","ranges":[{"startOffset":1586099,"endOffset":1586352,"count":0}],"isBlockCoverage":false},{"functionName":"createAssertClause","ranges":[{"startOffset":1586355,"endOffset":1586655,"count":0}],"isBlockCoverage":false},{"functionName":"updateAssertClause","ranges":[{"startOffset":1586658,"endOffset":1586852,"count":0}],"isBlockCoverage":false},{"functionName":"createAssertEntry","ranges":[{"startOffset":1586855,"endOffset":1587070,"count":0}],"isBlockCoverage":false},{"functionName":"updateAssertEntry","ranges":[{"startOffset":1587073,"endOffset":1587233,"count":0}],"isBlockCoverage":false},{"functionName":"createImportTypeAssertionContainer","ranges":[{"startOffset":1587236,"endOffset":1587458,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportTypeAssertionContainer","ranges":[{"startOffset":1587461,"endOffset":1587685,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAttributes","ranges":[{"startOffset":1587688,"endOffset":1588010,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportAttributes","ranges":[{"startOffset":1588013,"endOffset":1588227,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAttribute","ranges":[{"startOffset":1588230,"endOffset":1588453,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportAttribute","ranges":[{"startOffset":1588456,"endOffset":1588624,"count":0}],"isBlockCoverage":false},{"functionName":"createNamespaceImport","ranges":[{"startOffset":1588627,"endOffset":1588908,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceImport","ranges":[{"startOffset":1588911,"endOffset":1589041,"count":0}],"isBlockCoverage":false},{"functionName":"createNamespaceExport","ranges":[{"startOffset":1589044,"endOffset":1589351,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceExport","ranges":[{"startOffset":1589354,"endOffset":1589484,"count":0}],"isBlockCoverage":false},{"functionName":"createNamedImports","ranges":[{"startOffset":1589487,"endOffset":1589791,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamedImports","ranges":[{"startOffset":1589794,"endOffset":1589934,"count":0}],"isBlockCoverage":false},{"functionName":"createImportSpecifier","ranges":[{"startOffset":1589937,"endOffset":1590357,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportSpecifier","ranges":[{"startOffset":1590360,"endOffset":1590614,"count":0}],"isBlockCoverage":false},{"functionName":"createExportAssignment2","ranges":[{"startOffset":1590617,"endOffset":1591320,"count":0}],"isBlockCoverage":false},{"functionName":"updateExportAssignment","ranges":[{"startOffset":1591323,"endOffset":1591555,"count":0}],"isBlockCoverage":false},{"functionName":"createExportDeclaration","ranges":[{"startOffset":1591558,"endOffset":1592214,"count":0}],"isBlockCoverage":false},{"functionName":"updateExportDeclaration","ranges":[{"startOffset":1592217,"endOffset":1592654,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateExportDeclaration","ranges":[{"startOffset":1592657,"endOffset":1592906,"count":0}],"isBlockCoverage":false},{"functionName":"createNamedExports","ranges":[{"startOffset":1592909,"endOffset":1593213,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamedExports","ranges":[{"startOffset":1593216,"endOffset":1593356,"count":0}],"isBlockCoverage":false},{"functionName":"createExportSpecifier","ranges":[{"startOffset":1593359,"endOffset":1593813,"count":0}],"isBlockCoverage":false},{"functionName":"updateExportSpecifier","ranges":[{"startOffset":1593816,"endOffset":1594070,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingDeclaration","ranges":[{"startOffset":1594073,"endOffset":1594226,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalModuleReference","ranges":[{"startOffset":1594229,"endOffset":1594543,"count":0}],"isBlockCoverage":false},{"functionName":"updateExternalModuleReference","ranges":[{"startOffset":1594546,"endOffset":1594716,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocPrimaryTypeWorker","ranges":[{"startOffset":1594719,"endOffset":1594801,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocPrePostfixUnaryTypeWorker","ranges":[{"startOffset":1594804,"endOffset":1595089,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocUnaryTypeWorker","ranges":[{"startOffset":1595092,"endOffset":1595223,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocPrePostfixUnaryTypeWorker","ranges":[{"startOffset":1595226,"endOffset":1595412,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocUnaryTypeWorker","ranges":[{"startOffset":1595415,"endOffset":1595567,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocFunctionType","ranges":[{"startOffset":1595570,"endOffset":1596023,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocFunctionType","ranges":[{"startOffset":1596026,"endOffset":1596218,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypeLiteral","ranges":[{"startOffset":1596221,"endOffset":1596470,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypeLiteral","ranges":[{"startOffset":1596473,"endOffset":1596704,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypeExpression","ranges":[{"startOffset":1596707,"endOffset":1596856,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypeExpression","ranges":[{"startOffset":1596859,"endOffset":1596997,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocSignature","ranges":[{"startOffset":1597000,"endOffset":1597364,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocSignature","ranges":[{"startOffset":1597367,"endOffset":1597627,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTagName","ranges":[{"startOffset":1597630,"endOffset":1597864,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseJSDocTag","ranges":[{"startOffset":1597867,"endOffset":1598036,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseJSDocTagDeclaration","ranges":[{"startOffset":1598039,"endOffset":1598226,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTemplateTag","ranges":[{"startOffset":1598229,"endOffset":1598537,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTemplateTag","ranges":[{"startOffset":1598540,"endOffset":1598888,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypedefTag","ranges":[{"startOffset":1598891,"endOffset":1599292,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypedefTag","ranges":[{"startOffset":1599295,"endOffset":1599633,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocParameterTag","ranges":[{"startOffset":1599636,"endOffset":1600019,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocParameterTag","ranges":[{"startOffset":1600022,"endOffset":1600472,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocPropertyTag","ranges":[{"startOffset":1600475,"endOffset":1600855,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocPropertyTag","ranges":[{"startOffset":1600858,"endOffset":1601306,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocCallbackTag","ranges":[{"startOffset":1601309,"endOffset":1601713,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocCallbackTag","ranges":[{"startOffset":1601716,"endOffset":1602056,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocOverloadTag","ranges":[{"startOffset":1602059,"endOffset":1602304,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocOverloadTag","ranges":[{"startOffset":1602307,"endOffset":1602597,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocAugmentsTag","ranges":[{"startOffset":1602600,"endOffset":1602826,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocAugmentsTag","ranges":[{"startOffset":1602829,"endOffset":1603095,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocImplementsTag","ranges":[{"startOffset":1603098,"endOffset":1603330,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocSeeTag","ranges":[{"startOffset":1603333,"endOffset":1603533,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocSeeTag","ranges":[{"startOffset":1603536,"endOffset":1603750,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocNameReference","ranges":[{"startOffset":1603753,"endOffset":1603900,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocNameReference","ranges":[{"startOffset":1603903,"endOffset":1604039,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocMemberName","ranges":[{"startOffset":1604042,"endOffset":1604307,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocMemberName","ranges":[{"startOffset":1604310,"endOffset":1604478,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocLink","ranges":[{"startOffset":1604481,"endOffset":1604638,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocLink","ranges":[{"startOffset":1604641,"endOffset":1604771,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocLinkCode","ranges":[{"startOffset":1604774,"endOffset":1604939,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocLinkCode","ranges":[{"startOffset":1604942,"endOffset":1605080,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocLinkPlain","ranges":[{"startOffset":1605083,"endOffset":1605250,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocLinkPlain","ranges":[{"startOffset":1605253,"endOffset":1605393,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocImplementsTag","ranges":[{"startOffset":1605396,"endOffset":1605666,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocSimpleTagWorker","ranges":[{"startOffset":1605669,"endOffset":1605864,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocSimpleTagWorker","ranges":[{"startOffset":1605867,"endOffset":1606103,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypeLikeTagWorker","ranges":[{"startOffset":1606106,"endOffset":1606361,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypeLikeTagWorker","ranges":[{"startOffset":1606364,"endOffset":1606678,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocUnknownTag","ranges":[{"startOffset":1606681,"endOffset":1606827,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocUnknownTag","ranges":[{"startOffset":1606830,"endOffset":1607018,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocEnumTag","ranges":[{"startOffset":1607021,"endOffset":1607366,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocEnumTag","ranges":[{"startOffset":1607369,"endOffset":1607651,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocImportTag","ranges":[{"startOffset":1607654,"endOffset":1608022,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocImportTag","ranges":[{"startOffset":1608025,"endOffset":1608413,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocText","ranges":[{"startOffset":1608416,"endOffset":1608545,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocText","ranges":[{"startOffset":1608548,"endOffset":1608666,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocComment","ranges":[{"startOffset":1608669,"endOffset":1608847,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocComment","ranges":[{"startOffset":1608850,"endOffset":1609020,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxElement","ranges":[{"startOffset":1609023,"endOffset":1609473,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxElement","ranges":[{"startOffset":1609476,"endOffset":1609760,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxSelfClosingElement","ranges":[{"startOffset":1609763,"endOffset":1610300,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxSelfClosingElement","ranges":[{"startOffset":1610303,"endOffset":1610585,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxOpeningElement","ranges":[{"startOffset":1610588,"endOffset":1611112,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxOpeningElement","ranges":[{"startOffset":1611115,"endOffset":1611389,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxClosingElement","ranges":[{"startOffset":1611392,"endOffset":1611630,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxClosingElement","ranges":[{"startOffset":1611633,"endOffset":1611779,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFragment","ranges":[{"startOffset":1611782,"endOffset":1612242,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxFragment","ranges":[{"startOffset":1612245,"endOffset":1612539,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxText","ranges":[{"startOffset":1612542,"endOffset":1612819,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxText","ranges":[{"startOffset":1612822,"endOffset":1613070,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxOpeningFragment","ranges":[{"startOffset":1613073,"endOffset":1613242,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxJsxClosingFragment","ranges":[{"startOffset":1613245,"endOffset":1613417,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxAttribute","ranges":[{"startOffset":1613420,"endOffset":1613732,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxAttribute","ranges":[{"startOffset":1613735,"endOffset":1613921,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxAttributes","ranges":[{"startOffset":1613924,"endOffset":1614193,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxAttributes","ranges":[{"startOffset":1614196,"endOffset":1614346,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxSpreadAttribute","ranges":[{"startOffset":1614349,"endOffset":1614601,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxSpreadAttribute","ranges":[{"startOffset":1614604,"endOffset":1614764,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxExpression","ranges":[{"startOffset":1614767,"endOffset":1615110,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxExpression","ranges":[{"startOffset":1615113,"endOffset":1615284,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxNamespacedName","ranges":[{"startOffset":1615287,"endOffset":1615594,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxNamespacedName","ranges":[{"startOffset":1615597,"endOffset":1615785,"count":0}],"isBlockCoverage":false},{"functionName":"createCaseClause","ranges":[{"startOffset":1615788,"endOffset":1616195,"count":0}],"isBlockCoverage":false},{"functionName":"updateCaseClause","ranges":[{"startOffset":1616198,"endOffset":1616400,"count":0}],"isBlockCoverage":false},{"functionName":"createDefaultClause","ranges":[{"startOffset":1616403,"endOffset":1616642,"count":0}],"isBlockCoverage":false},{"functionName":"updateDefaultClause","ranges":[{"startOffset":1616645,"endOffset":1616795,"count":0}],"isBlockCoverage":false},{"functionName":"createHeritageClause","ranges":[{"startOffset":1616798,"endOffset":1617357,"count":0}],"isBlockCoverage":false},{"functionName":"updateHeritageClause","ranges":[{"startOffset":1617360,"endOffset":1617504,"count":0}],"isBlockCoverage":false},{"functionName":"createCatchClause","ranges":[{"startOffset":1617507,"endOffset":1617972,"count":0}],"isBlockCoverage":false},{"functionName":"updateCatchClause","ranges":[{"startOffset":1617975,"endOffset":1618195,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyAssignment","ranges":[{"startOffset":1618198,"endOffset":1618693,"count":13}],"isBlockCoverage":true},{"functionName":"updatePropertyAssignment","ranges":[{"startOffset":1618696,"endOffset":1618918,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdatePropertyAssignment","ranges":[{"startOffset":1618921,"endOffset":1619221,"count":0}],"isBlockCoverage":false},{"functionName":"createShorthandPropertyAssignment","ranges":[{"startOffset":1619224,"endOffset":1619901,"count":0}],"isBlockCoverage":false},{"functionName":"updateShorthandPropertyAssignment","ranges":[{"startOffset":1619904,"endOffset":1620217,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateShorthandPropertyAssignment","ranges":[{"startOffset":1620220,"endOffset":1620579,"count":0}],"isBlockCoverage":false},{"functionName":"createSpreadAssignment","ranges":[{"startOffset":1620582,"endOffset":1620971,"count":0}],"isBlockCoverage":false},{"functionName":"updateSpreadAssignment","ranges":[{"startOffset":1620974,"endOffset":1621130,"count":0}],"isBlockCoverage":false},{"functionName":"createEnumMember","ranges":[{"startOffset":1621133,"endOffset":1621559,"count":0}],"isBlockCoverage":false},{"functionName":"updateEnumMember","ranges":[{"startOffset":1621562,"endOffset":1621744,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile2","ranges":[{"startOffset":1621747,"endOffset":1623371,"count":1}],"isBlockCoverage":true},{"functionName":"createRedirectedSourceFile","ranges":[{"startOffset":1623374,"endOffset":1623976,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRedirectedSourceFile","ranges":[{"startOffset":1623979,"endOffset":1624472,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceFileWorker","ranges":[{"startOffset":1624475,"endOffset":1624908,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceFile","ranges":[{"startOffset":1624911,"endOffset":1625103,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceFileWithChanges","ranges":[{"startOffset":1625106,"endOffset":1625707,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceFile2","ranges":[{"startOffset":1625710,"endOffset":1626461,"count":0}],"isBlockCoverage":false},{"functionName":"createBundle","ranges":[{"startOffset":1626464,"endOffset":1626771,"count":0}],"isBlockCoverage":false},{"functionName":"updateBundle","ranges":[{"startOffset":1626774,"endOffset":1626914,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntheticExpression","ranges":[{"startOffset":1626917,"endOffset":1627175,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxList3","ranges":[{"startOffset":1627178,"endOffset":1627323,"count":0}],"isBlockCoverage":false},{"functionName":"createNotEmittedStatement","ranges":[{"startOffset":1627326,"endOffset":1627521,"count":0}],"isBlockCoverage":false},{"functionName":"createPartiallyEmittedExpression","ranges":[{"startOffset":1627524,"endOffset":1627873,"count":0}],"isBlockCoverage":false},{"functionName":"updatePartiallyEmittedExpression","ranges":[{"startOffset":1627876,"endOffset":1628067,"count":0}],"isBlockCoverage":false},{"functionName":"createNotEmittedTypeElement","ranges":[{"startOffset":1628070,"endOffset":1628174,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaElements","ranges":[{"startOffset":1628177,"endOffset":1628551,"count":0}],"isBlockCoverage":false},{"functionName":"createCommaListExpression","ranges":[{"startOffset":1628554,"endOffset":1628833,"count":0}],"isBlockCoverage":false},{"functionName":"updateCommaListExpression","ranges":[{"startOffset":1628836,"endOffset":1628990,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntheticReferenceExpression","ranges":[{"startOffset":1628993,"endOffset":1629316,"count":0}],"isBlockCoverage":false},{"functionName":"updateSyntheticReferenceExpression","ranges":[{"startOffset":1629319,"endOffset":1629545,"count":0}],"isBlockCoverage":false},{"functionName":"cloneGeneratedIdentifier","ranges":[{"startOffset":1629548,"endOffset":1629881,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIdentifier","ranges":[{"startOffset":1629884,"endOffset":1630369,"count":0}],"isBlockCoverage":false},{"functionName":"cloneGeneratedPrivateIdentifier","ranges":[{"startOffset":1630372,"endOffset":1630719,"count":0}],"isBlockCoverage":false},{"functionName":"clonePrivateIdentifier","ranges":[{"startOffset":1630722,"endOffset":1630986,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNode","ranges":[{"startOffset":1630989,"endOffset":1631938,"count":0}],"isBlockCoverage":false},{"functionName":"createImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":1631941,"endOffset":1632544,"count":0}],"isBlockCoverage":false},{"functionName":"createImmediatelyInvokedArrowFunction","ranges":[{"startOffset":1632547,"endOffset":1633116,"count":0}],"isBlockCoverage":false},{"functionName":"createVoidZero","ranges":[{"startOffset":1633119,"endOffset":1633210,"count":0}],"isBlockCoverage":false},{"functionName":"createExportDefault","ranges":[{"startOffset":1633213,"endOffset":1633391,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalModuleExport","ranges":[{"startOffset":1633394,"endOffset":1633743,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeCheck","ranges":[{"startOffset":1633746,"endOffset":1634036,"count":0}],"isBlockCoverage":false},{"functionName":"createIsNotTypeCheck","ranges":[{"startOffset":1634039,"endOffset":1634340,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodCall","ranges":[{"startOffset":1634343,"endOffset":1634884,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionBindCall","ranges":[{"startOffset":1634887,"endOffset":1635030,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionCallCall","ranges":[{"startOffset":1635033,"endOffset":1635176,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionApplyCall","ranges":[{"startOffset":1635179,"endOffset":1635333,"count":0}],"isBlockCoverage":false},{"functionName":"createGlobalMethodCall","ranges":[{"startOffset":1635336,"endOffset":1635510,"count":0}],"isBlockCoverage":false},{"functionName":"createArraySliceCall","ranges":[{"startOffset":1635513,"endOffset":1635654,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayConcatCall","ranges":[{"startOffset":1635657,"endOffset":1635776,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectDefinePropertyCall","ranges":[{"startOffset":1635779,"endOffset":1635971,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectGetOwnPropertyDescriptorCall","ranges":[{"startOffset":1635974,"endOffset":1636162,"count":0}],"isBlockCoverage":false},{"functionName":"createReflectGetCall","ranges":[{"startOffset":1636165,"endOffset":1636352,"count":0}],"isBlockCoverage":false},{"functionName":"createReflectSetCall","ranges":[{"startOffset":1636355,"endOffset":1636563,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddPropertyAssignment","ranges":[{"startOffset":1636566,"endOffset":1636783,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyDescriptor","ranges":[{"startOffset":1636786,"endOffset":1637630,"count":0}],"isBlockCoverage":false},{"functionName":"updateOuterExpression","ranges":[{"startOffset":1637633,"endOffset":1638646,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnorableParen","ranges":[{"startOffset":1638649,"endOffset":1638936,"count":0}],"isBlockCoverage":false},{"functionName":"restoreOuterExpressions","ranges":[{"startOffset":1638939,"endOffset":1639324,"count":0}],"isBlockCoverage":false},{"functionName":"restoreEnclosingLabel","ranges":[{"startOffset":1639327,"endOffset":1639868,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeCapturedInTempVariable","ranges":[{"startOffset":1639871,"endOffset":1640547,"count":0}],"isBlockCoverage":false},{"functionName":"createCallBinding","ranges":[{"startOffset":1640550,"endOffset":1642661,"count":0}],"isBlockCoverage":false},{"functionName":"createAssignmentTargetWrapper","ranges":[{"startOffset":1642664,"endOffset":1643555,"count":0}],"isBlockCoverage":false},{"functionName":"inlineExpressions","ranges":[{"startOffset":1643558,"endOffset":1643728,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1643731,"endOffset":1644405,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalName","ranges":[{"startOffset":1644408,"endOffset":1644584,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalName","ranges":[{"startOffset":1644587,"endOffset":1644773,"count":0}],"isBlockCoverage":false},{"functionName":"getExportName","ranges":[{"startOffset":1644776,"endOffset":1644924,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationName","ranges":[{"startOffset":1644927,"endOffset":1645056,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceMemberName","ranges":[{"startOffset":1645059,"endOffset":1645518,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleOrNamespaceExportName","ranges":[{"startOffset":1645521,"endOffset":1645835,"count":0}],"isBlockCoverage":false},{"functionName":"copyPrologue","ranges":[{"startOffset":1645838,"endOffset":1646050,"count":0}],"isBlockCoverage":false},{"functionName":"isUseStrictPrologue2","ranges":[{"startOffset":1646053,"endOffset":1646180,"count":0}],"isBlockCoverage":false},{"functionName":"createUseStrictPrologue","ranges":[{"startOffset":1646183,"endOffset":1646312,"count":0}],"isBlockCoverage":false},{"functionName":"copyStandardPrologue","ranges":[{"startOffset":1646315,"endOffset":1647061,"count":0}],"isBlockCoverage":false},{"functionName":"copyCustomPrologue","ranges":[{"startOffset":1647064,"endOffset":1647604,"count":0}],"isBlockCoverage":false},{"functionName":"ensureUseStrict","ranges":[{"startOffset":1647607,"endOffset":1647867,"count":0}],"isBlockCoverage":false},{"functionName":"liftToBlock","ranges":[{"startOffset":1647870,"endOffset":1648047,"count":0}],"isBlockCoverage":false},{"functionName":"findSpanEnd","ranges":[{"startOffset":1648050,"endOffset":1648195,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLexicalEnvironment","ranges":[{"startOffset":1648198,"endOffset":1650655,"count":0}],"isBlockCoverage":false},{"functionName":"replaceModifiers","ranges":[{"startOffset":1650658,"endOffset":1654282,"count":0}],"isBlockCoverage":false},{"functionName":"replaceDecoratorsAndModifiers","ranges":[{"startOffset":1654285,"endOffset":1655427,"count":0}],"isBlockCoverage":false},{"functionName":"replacePropertyName","ranges":[{"startOffset":1655430,"endOffset":1656607,"count":0}],"isBlockCoverage":false},{"functionName":"asNodeArray","ranges":[{"startOffset":1656610,"endOffset":1656695,"count":0}],"isBlockCoverage":false},{"functionName":"asName","ranges":[{"startOffset":1656698,"endOffset":1656794,"count":13},{"startOffset":1656758,"endOffset":1656782,"count":0}],"isBlockCoverage":true},{"functionName":"asExpression","ranges":[{"startOffset":1656797,"endOffset":1657032,"count":0}],"isBlockCoverage":false},{"functionName":"asInitializer","ranges":[{"startOffset":1657035,"endOffset":1657157,"count":0}],"isBlockCoverage":false},{"functionName":"asToken","ranges":[{"startOffset":1657160,"endOffset":1657256,"count":0}],"isBlockCoverage":false},{"functionName":"asEmbeddedStatement","ranges":[{"startOffset":1657259,"endOffset":1657448,"count":0}],"isBlockCoverage":false},{"functionName":"asVariableDeclaration","ranges":[{"startOffset":1657451,"endOffset":1657862,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1657865,"endOffset":1658040,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTagNameForKind","ranges":[{"startOffset":1658043,"endOffset":1659390,"count":0}],"isBlockCoverage":false},{"functionName":"getCookedText","ranges":[{"startOffset":1659442,"endOffset":1660818,"count":0}],"isBlockCoverage":false},{"functionName":"propagateNameFlags","ranges":[{"startOffset":1660819,"endOffset":1660958,"count":13},{"startOffset":1660891,"endOffset":1660927,"count":0}],"isBlockCoverage":true},{"functionName":"propagateIdentifierNameFlags","ranges":[{"startOffset":1660959,"endOffset":1661090,"count":0}],"isBlockCoverage":false},{"functionName":"propagatePropertyNameFlagsOfChild","ranges":[{"startOffset":1661091,"endOffset":1661253,"count":13}],"isBlockCoverage":true},{"functionName":"propagateChildFlags","ranges":[{"startOffset":1661254,"endOffset":1661560,"count":45},{"startOffset":1661306,"endOffset":1661326,"count":0},{"startOffset":1661455,"endOffset":1661484,"count":13},{"startOffset":1661485,"endOffset":1661544,"count":13},{"startOffset":1661545,"endOffset":1661557,"count":32}],"isBlockCoverage":true},{"functionName":"propagateChildrenFlags","ranges":[{"startOffset":1661561,"endOffset":1661666,"count":5},{"startOffset":1661649,"endOffset":1661652,"count":0}],"isBlockCoverage":true},{"functionName":"aggregateChildrenFlags","ranges":[{"startOffset":1661667,"endOffset":1661875,"count":5},{"startOffset":1661778,"endOffset":1661831,"count":17}],"isBlockCoverage":true},{"functionName":"getTransformFlagsSubtreeExclusions","ranges":[{"startOffset":1661876,"endOffset":1664632,"count":45},{"startOffset":1661966,"endOffset":1661980,"count":18},{"startOffset":1662001,"endOffset":1662040,"count":0},{"startOffset":1662063,"endOffset":1662093,"count":0},{"startOffset":1662098,"endOffset":1662127,"count":0},{"startOffset":1662132,"endOffset":1662234,"count":2},{"startOffset":1662239,"endOffset":1662319,"count":0},{"startOffset":1662324,"endOffset":1662399,"count":0},{"startOffset":1662404,"endOffset":1662487,"count":0},{"startOffset":1662492,"endOffset":1662526,"count":0},{"startOffset":1662531,"endOffset":1662615,"count":0},{"startOffset":1662620,"endOffset":1662723,"count":0},{"startOffset":1662728,"endOffset":1662760,"count":0},{"startOffset":1662765,"endOffset":1662842,"count":0},{"startOffset":1662847,"endOffset":1662926,"count":0},{"startOffset":1662931,"endOffset":1663015,"count":0},{"startOffset":1663020,"endOffset":1663053,"count":0},{"startOffset":1663058,"endOffset":1663085,"count":0},{"startOffset":1663090,"endOffset":1663174,"count":0},{"startOffset":1663179,"endOffset":1663205,"count":0},{"startOffset":1663210,"endOffset":1663239,"count":0},{"startOffset":1663244,"endOffset":1663273,"count":0},{"startOffset":1663278,"endOffset":1663306,"count":0},{"startOffset":1663311,"endOffset":1663340,"count":0},{"startOffset":1663345,"endOffset":1663374,"count":0},{"startOffset":1663379,"endOffset":1663409,"count":0},{"startOffset":1663414,"endOffset":1663443,"count":0},{"startOffset":1663448,"endOffset":1663475,"count":0},{"startOffset":1663480,"endOffset":1663509,"count":0},{"startOffset":1663514,"endOffset":1663547,"count":0},{"startOffset":1663552,"endOffset":1663583,"count":0},{"startOffset":1663588,"endOffset":1663617,"count":0},{"startOffset":1663622,"endOffset":1663656,"count":0},{"startOffset":1663661,"endOffset":1663691,"count":0},{"startOffset":1663696,"endOffset":1663732,"count":0},{"startOffset":1663737,"endOffset":1663809,"count":0},{"startOffset":1663814,"endOffset":1663907,"count":2},{"startOffset":1663912,"endOffset":1663991,"count":0},{"startOffset":1663996,"endOffset":1664032,"count":0},{"startOffset":1664037,"endOffset":1664127,"count":0},{"startOffset":1664132,"endOffset":1664171,"count":0},{"startOffset":1664176,"endOffset":1664211,"count":0},{"startOffset":1664216,"endOffset":1664244,"count":0},{"startOffset":1664249,"endOffset":1664291,"count":0},{"startOffset":1664296,"endOffset":1664335,"count":0},{"startOffset":1664340,"endOffset":1664424,"count":0},{"startOffset":1664429,"endOffset":1664469,"count":0},{"startOffset":1664474,"endOffset":1664568,"count":0},{"startOffset":1664573,"endOffset":1664626,"count":41}],"isBlockCoverage":true},{"functionName":"makeSynthetic","ranges":[{"startOffset":1664676,"endOffset":1664761,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1664815,"endOffset":1664882,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1664912,"endOffset":1664979,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1665016,"endOffset":1665090,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1665115,"endOffset":1665177,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNode","ranges":[{"startOffset":1665197,"endOffset":1665254,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapSource","ranges":[{"startOffset":1665375,"endOffset":1665572,"count":0}],"isBlockCoverage":false},{"functionName":"setOriginalNode","ranges":[{"startOffset":1665573,"endOffset":1665846,"count":0}],"isBlockCoverage":false},{"functionName":"mergeEmitNode","ranges":[{"startOffset":1665847,"endOffset":1667497,"count":0}],"isBlockCoverage":false},{"functionName":"mergeTokenSourceMapRanges","ranges":[{"startOffset":1667498,"endOffset":1667700,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateEmitNode","ranges":[{"startOffset":1667738,"endOffset":1668348,"count":0}],"isBlockCoverage":false},{"functionName":"disposeEmitNodes","ranges":[{"startOffset":1668349,"endOffset":1668667,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllComments","ranges":[{"startOffset":1668668,"endOffset":1668883,"count":0}],"isBlockCoverage":false},{"functionName":"setEmitFlags","ranges":[{"startOffset":1668884,"endOffset":1668988,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlags","ranges":[{"startOffset":1668989,"endOffset":1669139,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalEmitFlags","ranges":[{"startOffset":1669140,"endOffset":1669260,"count":0}],"isBlockCoverage":false},{"functionName":"addInternalEmitFlags","ranges":[{"startOffset":1669261,"endOffset":1669435,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapRange","ranges":[{"startOffset":1669436,"endOffset":1669560,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapRange","ranges":[{"startOffset":1669561,"endOffset":1669671,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenSourceMapRange","ranges":[{"startOffset":1669672,"endOffset":1669844,"count":0}],"isBlockCoverage":false},{"functionName":"setTokenSourceMapRange","ranges":[{"startOffset":1669845,"endOffset":1670102,"count":0}],"isBlockCoverage":false},{"functionName":"getStartsOnNewLine","ranges":[{"startOffset":1670103,"endOffset":1670219,"count":0}],"isBlockCoverage":false},{"functionName":"setStartsOnNewLine","ranges":[{"startOffset":1670220,"endOffset":1670336,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentRange","ranges":[{"startOffset":1670337,"endOffset":1670457,"count":0}],"isBlockCoverage":false},{"functionName":"setCommentRange","ranges":[{"startOffset":1670458,"endOffset":1670564,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticLeadingComments","ranges":[{"startOffset":1670565,"endOffset":1670690,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticLeadingComments","ranges":[{"startOffset":1670691,"endOffset":1670818,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticLeadingComment","ranges":[{"startOffset":1670819,"endOffset":1671037,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticTrailingComments","ranges":[{"startOffset":1671038,"endOffset":1671165,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticTrailingComments","ranges":[{"startOffset":1671166,"endOffset":1671295,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticTrailingComment","ranges":[{"startOffset":1671296,"endOffset":1671517,"count":0}],"isBlockCoverage":false},{"functionName":"moveSyntheticComments","ranges":[{"startOffset":1671518,"endOffset":1671850,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantValue","ranges":[{"startOffset":1671851,"endOffset":1671963,"count":0}],"isBlockCoverage":false},{"functionName":"setConstantValue","ranges":[{"startOffset":1671964,"endOffset":1672101,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelper","ranges":[{"startOffset":1672102,"endOffset":1672258,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelpers","ranges":[{"startOffset":1672259,"endOffset":1672500,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmitHelper","ranges":[{"startOffset":1672501,"endOffset":1672708,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitHelpers","ranges":[{"startOffset":1672709,"endOffset":1672813,"count":0}],"isBlockCoverage":false},{"functionName":"moveEmitHelpers","ranges":[{"startOffset":1672814,"endOffset":1673510,"count":0}],"isBlockCoverage":false},{"functionName":"getSnippetElement","ranges":[{"startOffset":1673511,"endOffset":1673625,"count":0}],"isBlockCoverage":false},{"functionName":"setSnippetElement","ranges":[{"startOffset":1673626,"endOffset":1673769,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreSourceNewlines","ranges":[{"startOffset":1673770,"endOffset":1673899,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeNode","ranges":[{"startOffset":1673900,"endOffset":1674025,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode","ranges":[{"startOffset":1674026,"endOffset":1674128,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierTypeArguments","ranges":[{"startOffset":1674129,"endOffset":1674273,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierTypeArguments","ranges":[{"startOffset":1674274,"endOffset":1674406,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierAutoGenerate","ranges":[{"startOffset":1674407,"endOffset":1674537,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierAutoGenerate","ranges":[{"startOffset":1674538,"endOffset":1674658,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierGeneratedImportReference","ranges":[{"startOffset":1674659,"endOffset":1674799,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierGeneratedImportReference","ranges":[{"startOffset":1674800,"endOffset":1674944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1675030,"endOffset":1675221,"count":1}],"isBlockCoverage":false},{"functionName":"createEmitHelperFactory","ranges":[{"startOffset":1675253,"endOffset":1694201,"count":0}],"isBlockCoverage":false},{"functionName":"compareEmitHelpers","ranges":[{"startOffset":1694202,"endOffset":1694495,"count":0}],"isBlockCoverage":false},{"functionName":"helperString","ranges":[{"startOffset":1694496,"endOffset":1694761,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1694545,"endOffset":1694758,"count":0}],"isBlockCoverage":false},{"functionName":"isCallToHelper","ranges":[{"startOffset":1720411,"endOffset":1720673,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":1720712,"endOffset":1720794,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":1720795,"endOffset":1720876,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":1720877,"endOffset":1720958,"count":21}],"isBlockCoverage":true},{"functionName":"isJsxText","ranges":[{"startOffset":1720959,"endOffset":1721028,"count":0}],"isBlockCoverage":false},{"functionName":"isRegularExpressionLiteral","ranges":[{"startOffset":1721029,"endOffset":1721132,"count":0}],"isBlockCoverage":false},{"functionName":"isNoSubstitutionTemplateLiteral","ranges":[{"startOffset":1721133,"endOffset":1721246,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateHead","ranges":[{"startOffset":1721247,"endOffset":1721326,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddle","ranges":[{"startOffset":1721327,"endOffset":1721410,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateTail","ranges":[{"startOffset":1721411,"endOffset":1721490,"count":0}],"isBlockCoverage":false},{"functionName":"isDotDotDotToken","ranges":[{"startOffset":1721491,"endOffset":1721574,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":1721575,"endOffset":1721650,"count":0}],"isBlockCoverage":false},{"functionName":"isPlusToken","ranges":[{"startOffset":1721651,"endOffset":1721724,"count":0}],"isBlockCoverage":false},{"functionName":"isMinusToken","ranges":[{"startOffset":1721725,"endOffset":1721800,"count":0}],"isBlockCoverage":false},{"functionName":"isAsteriskToken","ranges":[{"startOffset":1721801,"endOffset":1721882,"count":0}],"isBlockCoverage":false},{"functionName":"isExclamationToken","ranges":[{"startOffset":1721883,"endOffset":1721970,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionToken","ranges":[{"startOffset":1721971,"endOffset":1722052,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":1722053,"endOffset":1722128,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionDotToken","ranges":[{"startOffset":1722129,"endOffset":1722216,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualsGreaterThanToken","ranges":[{"startOffset":1722217,"endOffset":1722316,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":1722317,"endOffset":1722392,"count":13}],"isBlockCoverage":true},{"functionName":"isPrivateIdentifier","ranges":[{"startOffset":1722393,"endOffset":1722482,"count":0}],"isBlockCoverage":false},{"functionName":"isExportModifier","ranges":[{"startOffset":1722483,"endOffset":1722565,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier","ranges":[{"startOffset":1722566,"endOffset":1722650,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncModifier","ranges":[{"startOffset":1722651,"endOffset":1722732,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertsKeyword","ranges":[{"startOffset":1722733,"endOffset":1722817,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitKeyword","ranges":[{"startOffset":1722818,"endOffset":1722898,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeyword","ranges":[{"startOffset":1722899,"endOffset":1722985,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticModifier","ranges":[{"startOffset":1722986,"endOffset":1723069,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractModifier","ranges":[{"startOffset":1723070,"endOffset":1723157,"count":0}],"isBlockCoverage":false},{"functionName":"isOverrideModifier","ranges":[{"startOffset":1723158,"endOffset":1723245,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessorModifier","ranges":[{"startOffset":1723246,"endOffset":1723333,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperKeyword","ranges":[{"startOffset":1723334,"endOffset":1723414,"count":0}],"isBlockCoverage":false},{"functionName":"isImportKeyword","ranges":[{"startOffset":1723415,"endOffset":1723497,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseKeyword","ranges":[{"startOffset":1723498,"endOffset":1723575,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedName","ranges":[{"startOffset":1723576,"endOffset":1723658,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedPropertyName","ranges":[{"startOffset":1723659,"endOffset":1723755,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":1723756,"endOffset":1723849,"count":0}],"isBlockCoverage":false},{"functionName":"isParameter","ranges":[{"startOffset":1723850,"endOffset":1723924,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":1723925,"endOffset":1723999,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertySignature","ranges":[{"startOffset":1724000,"endOffset":1724090,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDeclaration","ranges":[{"startOffset":1724091,"endOffset":1724185,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodSignature","ranges":[{"startOffset":1724186,"endOffset":1724272,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodDeclaration","ranges":[{"startOffset":1724273,"endOffset":1724363,"count":0}],"isBlockCoverage":false},{"functionName":"isClassStaticBlockDeclaration","ranges":[{"startOffset":1724364,"endOffset":1724474,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorDeclaration","ranges":[{"startOffset":1724475,"endOffset":1724564,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessorDeclaration","ranges":[{"startOffset":1724565,"endOffset":1724654,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessorDeclaration","ranges":[{"startOffset":1724655,"endOffset":1724744,"count":0}],"isBlockCoverage":false},{"functionName":"isCallSignatureDeclaration","ranges":[{"startOffset":1724745,"endOffset":1724838,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructSignatureDeclaration","ranges":[{"startOffset":1724839,"endOffset":1724942,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignatureDeclaration","ranges":[{"startOffset":1724943,"endOffset":1725038,"count":0}],"isBlockCoverage":false},{"functionName":"isTypePredicateNode","ranges":[{"startOffset":1725039,"endOffset":1725125,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceNode","ranges":[{"startOffset":1725126,"endOffset":1725212,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeNode","ranges":[{"startOffset":1725213,"endOffset":1725297,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorTypeNode","ranges":[{"startOffset":1725298,"endOffset":1725388,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeQueryNode","ranges":[{"startOffset":1725389,"endOffset":1725467,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeLiteralNode","ranges":[{"startOffset":1725468,"endOffset":1725550,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeNode","ranges":[{"startOffset":1725551,"endOffset":1725629,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeNode","ranges":[{"startOffset":1725630,"endOffset":1725708,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedTupleMember","ranges":[{"startOffset":1725709,"endOffset":1725797,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalTypeNode","ranges":[{"startOffset":1725798,"endOffset":1725882,"count":0}],"isBlockCoverage":false},{"functionName":"isRestTypeNode","ranges":[{"startOffset":1725883,"endOffset":1725959,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeNode","ranges":[{"startOffset":1725960,"endOffset":1726038,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeNode","ranges":[{"startOffset":1726039,"endOffset":1726131,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalTypeNode","ranges":[{"startOffset":1726132,"endOffset":1726222,"count":0}],"isBlockCoverage":false},{"functionName":"isInferTypeNode","ranges":[{"startOffset":1726223,"endOffset":1726301,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedTypeNode","ranges":[{"startOffset":1726302,"endOffset":1726396,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeNode","ranges":[{"startOffset":1726397,"endOffset":1726473,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOperatorNode","ranges":[{"startOffset":1726474,"endOffset":1726558,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexedAccessTypeNode","ranges":[{"startOffset":1726559,"endOffset":1726653,"count":0}],"isBlockCoverage":false},{"functionName":"isMappedTypeNode","ranges":[{"startOffset":1726654,"endOffset":1726734,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeNode","ranges":[{"startOffset":1726735,"endOffset":1726817,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeNode","ranges":[{"startOffset":1726818,"endOffset":1726898,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeSpan","ranges":[{"startOffset":1726899,"endOffset":1727001,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeNode","ranges":[{"startOffset":1727002,"endOffset":1727100,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingPattern","ranges":[{"startOffset":1727101,"endOffset":1727197,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingPattern","ranges":[{"startOffset":1727198,"endOffset":1727292,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElement","ranges":[{"startOffset":1727293,"endOffset":1727377,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralExpression","ranges":[{"startOffset":1727378,"endOffset":1727478,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralExpression","ranges":[{"startOffset":1727479,"endOffset":1727581,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessExpression","ranges":[{"startOffset":1727582,"endOffset":1727686,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessExpression","ranges":[{"startOffset":1727687,"endOffset":1727789,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":1727790,"endOffset":1727874,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":1727875,"endOffset":1727957,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":1727958,"endOffset":1728062,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionExpression","ranges":[{"startOffset":1728063,"endOffset":1728165,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":1728166,"endOffset":1728268,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":1728269,"endOffset":1728361,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunction","ranges":[{"startOffset":1728362,"endOffset":1728444,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteExpression","ranges":[{"startOffset":1728445,"endOffset":1728533,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOfExpression","ranges":[{"startOffset":1728534,"endOffset":1728622,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidExpression","ranges":[{"startOffset":1728623,"endOffset":1728707,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":1728708,"endOffset":1728794,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpression","ranges":[{"startOffset":1728795,"endOffset":1728893,"count":0}],"isBlockCoverage":false},{"functionName":"isPostfixUnaryExpression","ranges":[{"startOffset":1728894,"endOffset":1728994,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":1728995,"endOffset":1729083,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":1729084,"endOffset":1729182,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateExpression","ranges":[{"startOffset":1729183,"endOffset":1729275,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":1729276,"endOffset":1729362,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":1729363,"endOffset":1729445,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":1729446,"endOffset":1729532,"count":0}],"isBlockCoverage":false},{"functionName":"isOmittedExpression","ranges":[{"startOffset":1729533,"endOffset":1729623,"count":2}],"isBlockCoverage":true},{"functionName":"isExpressionWithTypeArguments","ranges":[{"startOffset":1729624,"endOffset":1729734,"count":0}],"isBlockCoverage":false},{"functionName":"isAsExpression","ranges":[{"startOffset":1729735,"endOffset":1729815,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiesExpression","ranges":[{"startOffset":1729816,"endOffset":1729910,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullExpression","ranges":[{"startOffset":1729911,"endOffset":1730001,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":1730002,"endOffset":1730082,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticExpression","ranges":[{"startOffset":1730083,"endOffset":1730177,"count":0}],"isBlockCoverage":false},{"functionName":"isPartiallyEmittedExpression","ranges":[{"startOffset":1730178,"endOffset":1730286,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaListExpression","ranges":[{"startOffset":1730287,"endOffset":1730381,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateSpan","ranges":[{"startOffset":1730382,"endOffset":1730462,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonClassElement","ranges":[{"startOffset":1730463,"endOffset":1730561,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":1730562,"endOffset":1730628,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableStatement","ranges":[{"startOffset":1730629,"endOffset":1730719,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":1730720,"endOffset":1730804,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":1730805,"endOffset":1730899,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":1730900,"endOffset":1730978,"count":0}],"isBlockCoverage":false},{"functionName":"isDoStatement","ranges":[{"startOffset":1730979,"endOffset":1731057,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":1731058,"endOffset":1731142,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":1731143,"endOffset":1731223,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":1731224,"endOffset":1731308,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":1731309,"endOffset":1731393,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":1731394,"endOffset":1731484,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":1731485,"endOffset":1731569,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":1731570,"endOffset":1731656,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":1731657,"endOffset":1731739,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":1731740,"endOffset":1731826,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":1731827,"endOffset":1731915,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":1731916,"endOffset":1732000,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":1732001,"endOffset":1732081,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":1732082,"endOffset":1732172,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":1732173,"endOffset":1732267,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationList","ranges":[{"startOffset":1732268,"endOffset":1732370,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":1732371,"endOffset":1732465,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":1732466,"endOffset":1732554,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":1732555,"endOffset":1732651,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAliasDeclaration","ranges":[{"startOffset":1732652,"endOffset":1732748,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":1732749,"endOffset":1732835,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":1732836,"endOffset":1732926,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBlock","ranges":[{"startOffset":1732927,"endOffset":1733005,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseBlock","ranges":[{"startOffset":1733006,"endOffset":1733080,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExportDeclaration","ranges":[{"startOffset":1733081,"endOffset":1733189,"count":0}],"isBlockCoverage":false},{"functionName":"isImportEqualsDeclaration","ranges":[{"startOffset":1733190,"endOffset":1733292,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":1733293,"endOffset":1733383,"count":0}],"isBlockCoverage":false},{"functionName":"isImportClause","ranges":[{"startOffset":1733384,"endOffset":1733464,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeAssertionContainer","ranges":[{"startOffset":1733465,"endOffset":1733577,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertClause","ranges":[{"startOffset":1733578,"endOffset":1733658,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertEntry","ranges":[{"startOffset":1733659,"endOffset":1733737,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributes","ranges":[{"startOffset":1733738,"endOffset":1733826,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":1733827,"endOffset":1733913,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceImport","ranges":[{"startOffset":1733914,"endOffset":1734000,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExport","ranges":[{"startOffset":1734001,"endOffset":1734087,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImports","ranges":[{"startOffset":1734088,"endOffset":1734168,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":1734169,"endOffset":1734255,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAssignment","ranges":[{"startOffset":1734256,"endOffset":1734344,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":1734345,"endOffset":1734435,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExports","ranges":[{"startOffset":1734436,"endOffset":1734516,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":1734517,"endOffset":1734603,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportName","ranges":[{"startOffset":1734604,"endOffset":1734725,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingDeclaration","ranges":[{"startOffset":1734726,"endOffset":1734818,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedStatement","ranges":[{"startOffset":1734819,"endOffset":1734913,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticReference","ranges":[{"startOffset":1734914,"endOffset":1735016,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference","ranges":[{"startOffset":1735017,"endOffset":1735119,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxElement","ranges":[{"startOffset":1735120,"endOffset":1735196,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElement","ranges":[{"startOffset":1735197,"endOffset":1735295,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningElement","ranges":[{"startOffset":1735296,"endOffset":1735386,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingElement","ranges":[{"startOffset":1735387,"endOffset":1735477,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxFragment","ranges":[{"startOffset":1735478,"endOffset":1735556,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningFragment","ranges":[{"startOffset":1735557,"endOffset":1735649,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingFragment","ranges":[{"startOffset":1735650,"endOffset":1735742,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttribute","ranges":[{"startOffset":1735743,"endOffset":1735823,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributes","ranges":[{"startOffset":1735824,"endOffset":1735906,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSpreadAttribute","ranges":[{"startOffset":1735907,"endOffset":1735999,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpression","ranges":[{"startOffset":1736000,"endOffset":1736082,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxNamespacedName","ranges":[{"startOffset":1736083,"endOffset":1736173,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseClause","ranges":[{"startOffset":1736174,"endOffset":1736250,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultClause","ranges":[{"startOffset":1736251,"endOffset":1736333,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause","ranges":[{"startOffset":1736334,"endOffset":1736418,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":1736419,"endOffset":1736497,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAssignment","ranges":[{"startOffset":1736498,"endOffset":1736590,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyAssignment","ranges":[{"startOffset":1736591,"endOffset":1736701,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadAssignment","ranges":[{"startOffset":1736702,"endOffset":1736790,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":1736791,"endOffset":1736867,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFile","ranges":[{"startOffset":1736868,"endOffset":1736944,"count":0}],"isBlockCoverage":false},{"functionName":"isBundle","ranges":[{"startOffset":1736945,"endOffset":1737013,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeExpression","ranges":[{"startOffset":1737014,"endOffset":1737108,"count":21}],"isBlockCoverage":true},{"functionName":"isJSDocNameReference","ranges":[{"startOffset":1737109,"endOffset":1737201,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocMemberName","ranges":[{"startOffset":1737202,"endOffset":1737288,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLink","ranges":[{"startOffset":1737289,"endOffset":1737363,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkCode","ranges":[{"startOffset":1737364,"endOffset":1737446,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkPlain","ranges":[{"startOffset":1737447,"endOffset":1737531,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAllType","ranges":[{"startOffset":1737532,"endOffset":1737612,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownType","ranges":[{"startOffset":1737613,"endOffset":1737701,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNullableType","ranges":[{"startOffset":1737702,"endOffset":1737792,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNonNullableType","ranges":[{"startOffset":1737793,"endOffset":1737889,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalType","ranges":[{"startOffset":1737890,"endOffset":1737980,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocFunctionType","ranges":[{"startOffset":1737981,"endOffset":1738071,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocVariadicType","ranges":[{"startOffset":1738072,"endOffset":1738162,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamepathType","ranges":[{"startOffset":1738163,"endOffset":1738253,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDoc","ranges":[{"startOffset":1738254,"endOffset":1738320,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeLiteral","ranges":[{"startOffset":1738321,"endOffset":1738409,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSignature","ranges":[{"startOffset":1738410,"endOffset":1738494,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAugmentsTag","ranges":[{"startOffset":1738495,"endOffset":1738583,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAuthorTag","ranges":[{"startOffset":1738584,"endOffset":1738668,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocClassTag","ranges":[{"startOffset":1738669,"endOffset":1738751,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCallbackTag","ranges":[{"startOffset":1738752,"endOffset":1738840,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPublicTag","ranges":[{"startOffset":1738841,"endOffset":1738925,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPrivateTag","ranges":[{"startOffset":1738926,"endOffset":1739012,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocProtectedTag","ranges":[{"startOffset":1739013,"endOffset":1739103,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReadonlyTag","ranges":[{"startOffset":1739104,"endOffset":1739192,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverrideTag","ranges":[{"startOffset":1739193,"endOffset":1739281,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverloadTag","ranges":[{"startOffset":1739282,"endOffset":1739370,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocDeprecatedTag","ranges":[{"startOffset":1739371,"endOffset":1739463,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSeeTag","ranges":[{"startOffset":1739464,"endOffset":1739542,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocEnumTag","ranges":[{"startOffset":1739543,"endOffset":1739623,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocParameterTag","ranges":[{"startOffset":1739624,"endOffset":1739714,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReturnTag","ranges":[{"startOffset":1739715,"endOffset":1739799,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThisTag","ranges":[{"startOffset":1739800,"endOffset":1739880,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeTag","ranges":[{"startOffset":1739881,"endOffset":1739961,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTemplateTag","ranges":[{"startOffset":1739962,"endOffset":1740050,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypedefTag","ranges":[{"startOffset":1740051,"endOffset":1740137,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownTag","ranges":[{"startOffset":1740138,"endOffset":1740217,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyTag","ranges":[{"startOffset":1740218,"endOffset":1740306,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImplementsTag","ranges":[{"startOffset":1740307,"endOffset":1740399,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesTag","ranges":[{"startOffset":1740400,"endOffset":1740490,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThrowsTag","ranges":[{"startOffset":1740491,"endOffset":1740575,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImportTag","ranges":[{"startOffset":1740576,"endOffset":1740660,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxList","ranges":[{"startOffset":1740661,"endOffset":1740731,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeChildren","ranges":[{"startOffset":1740835,"endOffset":1741131,"count":0}],"isBlockCoverage":false},{"functionName":"setNodeChildren","ranges":[{"startOffset":1741132,"endOffset":1741536,"count":0}],"isBlockCoverage":false},{"functionName":"unsetNodeChildren","ranges":[{"startOffset":1741537,"endOffset":1741810,"count":0}],"isBlockCoverage":false},{"functionName":"transferSourceFileChildren","ranges":[{"startOffset":1741811,"endOffset":1742073,"count":0}],"isBlockCoverage":false},{"functionName":"createEmptyExports","ranges":[{"startOffset":1742112,"endOffset":1742333,"count":0}],"isBlockCoverage":false},{"functionName":"createMemberAccessForPropertyName","ranges":[{"startOffset":1742334,"endOffset":1742884,"count":0}],"isBlockCoverage":false},{"functionName":"createReactNamespace","ranges":[{"startOffset":1742885,"endOffset":1743084,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpressionFromEntityName","ranges":[{"startOffset":1743085,"endOffset":1743568,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpression","ranges":[{"startOffset":1743569,"endOffset":1743886,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFragmentFactoryExpression","ranges":[{"startOffset":1743887,"endOffset":1744231,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxElement","ranges":[{"startOffset":1744232,"endOffset":1744887,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxFragment","ranges":[{"startOffset":1744888,"endOffset":1745695,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfBindingStatement","ranges":[{"startOffset":1745696,"endOffset":1746568,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionFromEntityName","ranges":[{"startOffset":1746569,"endOffset":1747016,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyName","ranges":[{"startOffset":1747017,"endOffset":1747475,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForAccessorDeclaration","ranges":[{"startOffset":1747476,"endOffset":1749239,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyAssignment","ranges":[{"startOffset":1749240,"endOffset":1749641,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForShorthandPropertyAssignment","ranges":[{"startOffset":1749642,"endOffset":1750101,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForMethodDeclaration","ranges":[{"startOffset":1750102,"endOffset":1751025,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForObjectLiteralElementLike","ranges":[{"startOffset":1751026,"endOffset":1751878,"count":0}],"isBlockCoverage":false},{"functionName":"expandPreOrPostfixIncrementOrDecrementExpression","ranges":[{"startOffset":1751879,"endOffset":1752963,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalName","ranges":[{"startOffset":1752964,"endOffset":1753061,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalName","ranges":[{"startOffset":1753062,"endOffset":1753153,"count":0}],"isBlockCoverage":false},{"functionName":"isExportName","ranges":[{"startOffset":1753154,"endOffset":1753247,"count":0}],"isBlockCoverage":false},{"functionName":"isUseStrictPrologue","ranges":[{"startOffset":1753248,"endOffset":1753370,"count":0}],"isBlockCoverage":false},{"functionName":"findUseStrictPrologue","ranges":[{"startOffset":1753371,"endOffset":1753630,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUseStrict","ranges":[{"startOffset":1753631,"endOffset":1753844,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaExpression","ranges":[{"startOffset":1753845,"endOffset":1753983,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaSequence","ranges":[{"startOffset":1753984,"endOffset":1754083,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAssertion","ranges":[{"startOffset":1754084,"endOffset":1754212,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAssertionType","ranges":[{"startOffset":1754213,"endOffset":1754338,"count":0}],"isBlockCoverage":false},{"functionName":"isOuterExpression","ranges":[{"startOffset":1754339,"endOffset":1755228,"count":32},{"startOffset":1754423,"endOffset":1754637,"count":0},{"startOffset":1754642,"endOffset":1754681,"count":0},{"startOffset":1754686,"endOffset":1754767,"count":0},{"startOffset":1754772,"endOffset":1754883,"count":0},{"startOffset":1754888,"endOffset":1754999,"count":0},{"startOffset":1755004,"endOffset":1755093,"count":0},{"startOffset":1755098,"endOffset":1755206,"count":0}],"isBlockCoverage":true},{"functionName":"skipOuterExpressions","ranges":[{"startOffset":1755229,"endOffset":1755380,"count":32},{"startOffset":1755330,"endOffset":1755363,"count":0}],"isBlockCoverage":true},{"functionName":"walkUpOuterExpressions","ranges":[{"startOffset":1755381,"endOffset":1755598,"count":0}],"isBlockCoverage":false},{"functionName":"startOnNewLine","ranges":[{"startOffset":1755599,"endOffset":1755701,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalHelpersModuleName","ranges":[{"startOffset":1755702,"endOffset":1755915,"count":0}],"isBlockCoverage":false},{"functionName":"hasRecordedExternalHelpers","ranges":[{"startOffset":1755916,"endOffset":1756175,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalHelpersImportDeclarationIfNeeded","ranges":[{"startOffset":1756176,"endOffset":1759287,"count":0}],"isBlockCoverage":false},{"functionName":"getImportedHelpers","ranges":[{"startOffset":1759288,"endOffset":1759404,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateExternalHelpersModuleNameIfNeeded","ranges":[{"startOffset":1759405,"endOffset":1760203,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalNameForExternalImport","ranges":[{"startOffset":1760204,"endOffset":1761017,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameLiteral","ranges":[{"startOffset":1761018,"endOffset":1761448,"count":0}],"isBlockCoverage":false},{"functionName":"tryRenameExternalModule","ranges":[{"startOffset":1761449,"endOffset":1761688,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromFile","ranges":[{"startOffset":1761689,"endOffset":1762048,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromDeclaration","ranges":[{"startOffset":1762049,"endOffset":1762277,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBindingOrAssignmentElement","ranges":[{"startOffset":1762278,"endOffset":1763062,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetOfBindingOrAssignmentElement","ranges":[{"startOffset":1763063,"endOffset":1763985,"count":0}],"isBlockCoverage":false},{"functionName":"getRestIndicatorOfBindingOrAssignmentElement","ranges":[{"startOffset":1763986,"endOffset":1764322,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":1764323,"endOffset":1764621,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":1764622,"endOffset":1765910,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteral","ranges":[{"startOffset":1765911,"endOffset":1766057,"count":0}],"isBlockCoverage":false},{"functionName":"getElementsOfBindingOrAssignmentPattern","ranges":[{"startOffset":1766058,"endOffset":1766369,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAliasName","ranges":[{"startOffset":1766370,"endOffset":1766658,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalType","ranges":[{"startOffset":1766659,"endOffset":1766797,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalTypeParameters","ranges":[{"startOffset":1766798,"endOffset":1766980,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalDecorators","ranges":[{"startOffset":1766981,"endOffset":1767770,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalModifiers","ranges":[{"startOffset":1767771,"endOffset":1768077,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrExclamationToken","ranges":[{"startOffset":1768078,"endOffset":1768185,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierOrThisTypeNode","ranges":[{"startOffset":1768186,"endOffset":1768284,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeywordOrPlusOrMinusToken","ranges":[{"startOffset":1768285,"endOffset":1768416,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrPlusOrMinusToken","ranges":[{"startOffset":1768417,"endOffset":1768539,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleName","ranges":[{"startOffset":1768540,"endOffset":1768625,"count":0}],"isBlockCoverage":false},{"functionName":"isExponentiationOperator","ranges":[{"startOffset":1768626,"endOffset":1768719,"count":0}],"isBlockCoverage":false},{"functionName":"isMultiplicativeOperator","ranges":[{"startOffset":1768720,"endOffset":1768871,"count":0}],"isBlockCoverage":false},{"functionName":"isMultiplicativeOperatorOrHigher","ranges":[{"startOffset":1768872,"endOffset":1768998,"count":0}],"isBlockCoverage":false},{"functionName":"isAdditiveOperator","ranges":[{"startOffset":1768999,"endOffset":1769106,"count":0}],"isBlockCoverage":false},{"functionName":"isAdditiveOperatorOrHigher","ranges":[{"startOffset":1769107,"endOffset":1769229,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperator","ranges":[{"startOffset":1769230,"endOffset":1769423,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperatorOrHigher","ranges":[{"startOffset":1769424,"endOffset":1769534,"count":0}],"isBlockCoverage":false},{"functionName":"isRelationalOperator","ranges":[{"startOffset":1769535,"endOffset":1769811,"count":0}],"isBlockCoverage":false},{"functionName":"isRelationalOperatorOrHigher","ranges":[{"startOffset":1769812,"endOffset":1769929,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperator","ranges":[{"startOffset":1769930,"endOffset":1770152,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorOrHigher","ranges":[{"startOffset":1770153,"endOffset":1770271,"count":0}],"isBlockCoverage":false},{"functionName":"isBitwiseOperator","ranges":[{"startOffset":1770272,"endOffset":1770413,"count":0}],"isBlockCoverage":false},{"functionName":"isBitwiseOperatorOrHigher","ranges":[{"startOffset":1770414,"endOffset":1770528,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator2","ranges":[{"startOffset":1770529,"endOffset":1770651,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperatorOrHigher","ranges":[{"startOffset":1770652,"endOffset":1770766,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperatorOrHigher","ranges":[{"startOffset":1770767,"endOffset":1770929,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperator","ranges":[{"startOffset":1770930,"endOffset":1771042,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperatorToken","ranges":[{"startOffset":1771043,"endOffset":1771121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1771150,"endOffset":1775287,"count":1}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":1771182,"endOffset":1771606,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":1771649,"endOffset":1772214,"count":0}],"isBlockCoverage":false},{"functionName":"operator","ranges":[{"startOffset":1772255,"endOffset":1772664,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":1772713,"endOffset":1773284,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":1773327,"endOffset":1773960,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":1774001,"endOffset":1774187,"count":0}],"isBlockCoverage":false},{"functionName":"nextState","ranges":[{"startOffset":1774228,"endOffset":1774734,"count":0}],"isBlockCoverage":false},{"functionName":"pushStack","ranges":[{"startOffset":1774785,"endOffset":1775018,"count":0}],"isBlockCoverage":false},{"functionName":"checkCircularity","ranges":[{"startOffset":1775021,"endOffset":1775285,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpressionStateMachine","ranges":[{"startOffset":1775390,"endOffset":1775638,"count":1}],"isBlockCoverage":true},{"functionName":"createBinaryExpressionTrampoline","ranges":[{"startOffset":1775642,"endOffset":1776381,"count":1}],"isBlockCoverage":true},{"functionName":"trampoline","ranges":[{"startOffset":1775875,"endOffset":1776379,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultKeywordKind","ranges":[{"startOffset":1776382,"endOffset":1776507,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultModifier","ranges":[{"startOffset":1776508,"endOffset":1776623,"count":0}],"isBlockCoverage":false},{"functionName":"elideNodes","ranges":[{"startOffset":1776624,"endOffset":1776827,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeForGeneratedName","ranges":[{"startOffset":1776828,"endOffset":1777444,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedNamePart","ranges":[{"startOffset":1777445,"endOffset":1777773,"count":0}],"isBlockCoverage":false},{"functionName":"formatIdentifier","ranges":[{"startOffset":1777774,"endOffset":1777930,"count":0}],"isBlockCoverage":false},{"functionName":"formatIdentifierWorker","ranges":[{"startOffset":1777931,"endOffset":1778183,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedName","ranges":[{"startOffset":1778184,"endOffset":1778507,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyBackingField","ranges":[{"startOffset":1778508,"endOffset":1778884,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyGetRedirector","ranges":[{"startOffset":1778885,"endOffset":1779431,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertySetRedirector","ranges":[{"startOffset":1779432,"endOffset":1780195,"count":0}],"isBlockCoverage":false},{"functionName":"findComputedPropertyNameCacheAssignment","ranges":[{"startOffset":1780196,"endOffset":1780693,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticParenthesizedExpression","ranges":[{"startOffset":1780694,"endOffset":1780834,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaListWorker","ranges":[{"startOffset":1780835,"endOffset":1781326,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaList","ranges":[{"startOffset":1781327,"endOffset":1781455,"count":0}],"isBlockCoverage":false},{"functionName":"containsObjectRestOrSpread","ranges":[{"startOffset":1781456,"endOffset":1782115,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRange","ranges":[{"startOffset":1782160,"endOffset":1782285,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModifiers","ranges":[{"startOffset":1782286,"endOffset":1783324,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveDecorators","ranges":[{"startOffset":1783325,"endOffset":1783653,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1783869,"endOffset":1783992,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1784022,"endOffset":1784145,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1784182,"endOffset":1784326,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1784351,"endOffset":1784459,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNode","ranges":[{"startOffset":1784479,"endOffset":1784584,"count":0}],"isBlockCoverage":false},{"functionName":"visitNode2","ranges":[{"startOffset":1784682,"endOffset":1784750,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes","ranges":[{"startOffset":1784751,"endOffset":1784995,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLikeText","ranges":[{"startOffset":1784996,"endOffset":1785197,"count":0}],"isBlockCoverage":false},{"functionName":"isFileProbablyExternalModule","ranges":[{"startOffset":1785198,"endOffset":1785365,"count":0}],"isBlockCoverage":false},{"functionName":"isAnExternalModuleIndicatorNode","ranges":[{"startOffset":1785366,"endOffset":1785688,"count":0}],"isBlockCoverage":false},{"functionName":"getImportMetaIfNecessary","ranges":[{"startOffset":1785689,"endOffset":1785853,"count":0}],"isBlockCoverage":false},{"functionName":"walkTreeForImportMeta","ranges":[{"startOffset":1785854,"endOffset":1785975,"count":0}],"isBlockCoverage":false},{"functionName":"hasModifierOfKind","ranges":[{"startOffset":1785976,"endOffset":1786073,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta2","ranges":[{"startOffset":1786074,"endOffset":1786222,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInQualifiedName","ranges":[{"startOffset":1786278,"endOffset":1786420,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeParameter","ranges":[{"startOffset":1786451,"endOffset":1786719,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInShorthandPropertyAssignment","ranges":[{"startOffset":1786764,"endOffset":1787115,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSpreadAssignment","ranges":[{"startOffset":1787149,"endOffset":1787266,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInParameter","ranges":[{"startOffset":1787293,"endOffset":1787601,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertyDeclaration","ranges":[{"startOffset":1787638,"endOffset":1787958,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertySignature","ranges":[{"startOffset":1787993,"endOffset":1788266,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertyAssignment","ranges":[{"startOffset":1788302,"endOffset":1788588,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVariableDeclaration","ranges":[{"startOffset":1788625,"endOffset":1788857,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInBindingElement","ranges":[{"startOffset":1788889,"endOffset":1789122,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInIndexSignature","ranges":[{"startOffset":1789154,"endOffset":1789409,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConstructorType","ranges":[{"startOffset":1789442,"endOffset":1789698,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInFunctionType","ranges":[{"startOffset":1789728,"endOffset":1789981,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMethodDeclaration","ranges":[{"startOffset":1790159,"endOffset":1790612,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMethodSignature","ranges":[{"startOffset":1790645,"endOffset":1790976,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConstructor","ranges":[{"startOffset":1791005,"endOffset":1791323,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInGetAccessor","ranges":[{"startOffset":1791352,"endOffset":1791670,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSetAccessor","ranges":[{"startOffset":1791699,"endOffset":1792017,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInFunctionDeclaration","ranges":[{"startOffset":1792054,"endOffset":1792422,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInFunctionExpression","ranges":[{"startOffset":1792458,"endOffset":1792825,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInArrowFunction","ranges":[{"startOffset":1792856,"endOffset":1793194,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInClassStaticBlockDeclaration","ranges":[{"startOffset":1793239,"endOffset":1793407,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeReference","ranges":[{"startOffset":1793438,"endOffset":1793600,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypePredicate","ranges":[{"startOffset":1793631,"endOffset":1793825,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeQuery","ranges":[{"startOffset":1793852,"endOffset":1794010,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeLiteral","ranges":[{"startOffset":1794039,"endOffset":1794156,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInArrayType","ranges":[{"startOffset":1794183,"endOffset":1794294,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTupleType","ranges":[{"startOffset":1794321,"endOffset":1794437,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConditionalType","ranges":[{"startOffset":1794605,"endOffset":1794835,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInInferType","ranges":[{"startOffset":1794862,"endOffset":1794975,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportType","ranges":[{"startOffset":1795003,"endOffset":1795239,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportTypeAssertionContainer","ranges":[{"startOffset":1795285,"endOffset":1795416,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInIndexedAccessType","ranges":[{"startOffset":1795606,"endOffset":1795762,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMappedType","ranges":[{"startOffset":1795790,"endOffset":1796102,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInLiteralType","ranges":[{"startOffset":1796131,"endOffset":1796240,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamedTupleMember","ranges":[{"startOffset":1796274,"endOffset":1796503,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInArrayLiteralExpression","ranges":[{"startOffset":1796700,"endOffset":1796829,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInObjectLiteralExpression","ranges":[{"startOffset":1796870,"endOffset":1797002,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertyAccessExpression","ranges":[{"startOffset":1797044,"endOffset":1797247,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInElementAccessExpression","ranges":[{"startOffset":1797288,"endOffset":1797504,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTaggedTemplateExpression","ranges":[{"startOffset":1797675,"endOffset":1797925,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeAssertionExpression","ranges":[{"startOffset":1797966,"endOffset":1798123,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInParenthesizedExpression","ranges":[{"startOffset":1798164,"endOffset":1798288,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDeleteExpression","ranges":[{"startOffset":1798322,"endOffset":1798439,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeOfExpression","ranges":[{"startOffset":1798473,"endOffset":1798590,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVoidExpression","ranges":[{"startOffset":1798622,"endOffset":1798737,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPrefixUnaryExpression","ranges":[{"startOffset":1798776,"endOffset":1798895,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInYieldExpression","ranges":[{"startOffset":1798928,"endOffset":1799086,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInAwaitExpression","ranges":[{"startOffset":1799119,"endOffset":1799235,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPostfixUnaryExpression","ranges":[{"startOffset":1799275,"endOffset":1799395,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInBinaryExpression","ranges":[{"startOffset":1799429,"endOffset":1799616,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInAsExpression","ranges":[{"startOffset":1799646,"endOffset":1799792,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNonNullExpression","ranges":[{"startOffset":1799827,"endOffset":1799945,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSatisfiesExpression","ranges":[{"startOffset":1799982,"endOffset":1800135,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMetaProperty","ranges":[{"startOffset":1800165,"endOffset":1800272,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConditionalExpression","ranges":[{"startOffset":1800311,"endOffset":1800588,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSpreadElement","ranges":[{"startOffset":1800619,"endOffset":1800733,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSourceFile","ranges":[{"startOffset":1800851,"endOffset":1801013,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVariableStatement","ranges":[{"startOffset":1801048,"endOffset":1801217,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVariableDeclarationList","ranges":[{"startOffset":1801258,"endOffset":1801392,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExpressionStatement","ranges":[{"startOffset":1801429,"endOffset":1801549,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInIfStatement","ranges":[{"startOffset":1801578,"endOffset":1801774,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDoStatement","ranges":[{"startOffset":1801803,"endOffset":1801953,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInWhileStatement","ranges":[{"startOffset":1801985,"endOffset":1802138,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInForStatement","ranges":[{"startOffset":1802168,"endOffset":1802398,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInForInStatement","ranges":[{"startOffset":1802430,"endOffset":1802623,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInForOfStatement","ranges":[{"startOffset":1802655,"endOffset":1802890,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInReturnStatement","ranges":[{"startOffset":1803066,"endOffset":1803182,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInWithStatement","ranges":[{"startOffset":1803213,"endOffset":1803365,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSwitchStatement","ranges":[{"startOffset":1803398,"endOffset":1803552,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCaseBlock","ranges":[{"startOffset":1803579,"endOffset":1803694,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCaseClause","ranges":[{"startOffset":1803722,"endOffset":1803880,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDefaultClause","ranges":[{"startOffset":1803911,"endOffset":1804033,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInLabeledStatement","ranges":[{"startOffset":1804067,"endOffset":1804217,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInThrowStatement","ranges":[{"startOffset":1804249,"endOffset":1804364,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTryStatement","ranges":[{"startOffset":1804394,"endOffset":1804586,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCatchClause","ranges":[{"startOffset":1804615,"endOffset":1804770,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDecorator","ranges":[{"startOffset":1804797,"endOffset":1804907,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInInterfaceDeclaration","ranges":[{"startOffset":1805096,"endOffset":1805407,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeAliasDeclaration","ranges":[{"startOffset":1805445,"endOffset":1805691,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInEnumDeclaration","ranges":[{"startOffset":1805724,"endOffset":1805925,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInEnumMember","ranges":[{"startOffset":1805953,"endOffset":1806098,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInModuleDeclaration","ranges":[{"startOffset":1806133,"endOffset":1806324,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportEqualsDeclaration","ranges":[{"startOffset":1806365,"endOffset":1806573,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportDeclaration","ranges":[{"startOffset":1806608,"endOffset":1806857,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportClause","ranges":[{"startOffset":1806887,"endOffset":1807036,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportAttributes","ranges":[{"startOffset":1807070,"endOffset":1807193,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportAttribute","ranges":[{"startOffset":1807226,"endOffset":1807370,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamespaceExportDeclaration","ranges":[{"startOffset":1807414,"endOffset":1807581,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamespaceImport","ranges":[{"startOffset":1807614,"endOffset":1807724,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamespaceExport","ranges":[{"startOffset":1807757,"endOffset":1807867,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExportDeclaration","ranges":[{"startOffset":1808032,"endOffset":1808281,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExportAssignment","ranges":[{"startOffset":1808455,"endOffset":1808618,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateExpression","ranges":[{"startOffset":1808654,"endOffset":1808817,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateSpan","ranges":[{"startOffset":1808847,"endOffset":1808996,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateLiteralType","ranges":[{"startOffset":1809033,"endOffset":1809197,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateLiteralTypeSpan","ranges":[{"startOffset":1809238,"endOffset":1809392,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInComputedPropertyName","ranges":[{"startOffset":1809430,"endOffset":1809551,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInHeritageClause","ranges":[{"startOffset":1809583,"endOffset":1809701,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExpressionWithTypeArguments","ranges":[{"startOffset":1809746,"endOffset":1809924,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExternalModuleReference","ranges":[{"startOffset":1809965,"endOffset":1810089,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMissingDeclaration","ranges":[{"startOffset":1810125,"endOffset":1810251,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCommaListExpression","ranges":[{"startOffset":1810288,"endOffset":1810414,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxElement","ranges":[{"startOffset":1810442,"endOffset":1810645,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxFragment","ranges":[{"startOffset":1810674,"endOffset":1810880,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxAttributes","ranges":[{"startOffset":1811073,"endOffset":1811195,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxAttribute","ranges":[{"startOffset":1811225,"endOffset":1811372,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxSpreadAttribute","ranges":[{"startOffset":1811408,"endOffset":1811527,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxExpression","ranges":[{"startOffset":1811558,"endOffset":1811715,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxClosingElement","ranges":[{"startOffset":1811750,"endOffset":1811865,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxNamespacedName","ranges":[{"startOffset":1811900,"endOffset":1812050,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocFunctionType","ranges":[{"startOffset":1812671,"endOffset":1812830,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDoc","ranges":[{"startOffset":1812853,"endOffset":1813052,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocSeeTag","ranges":[{"startOffset":1813081,"endOffset":1813313,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocNameReference","ranges":[{"startOffset":1813349,"endOffset":1813462,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocMemberName","ranges":[{"startOffset":1813495,"endOffset":1813639,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocAuthorTag","ranges":[{"startOffset":1813822,"endOffset":1814024,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocImplementsTag","ranges":[{"startOffset":1814060,"endOffset":1814300,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocAugmentsTag","ranges":[{"startOffset":1814334,"endOffset":1814572,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTemplateTag","ranges":[{"startOffset":1814606,"endOffset":1814901,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTypedefTag","ranges":[{"startOffset":1814934,"endOffset":1815473,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocCallbackTag","ranges":[{"startOffset":1815507,"endOffset":1815791,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocSignature","ranges":[{"startOffset":1816256,"endOffset":1816441,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTypeLiteral","ranges":[{"startOffset":1816667,"endOffset":1816788,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCallOrConstructSignature","ranges":[{"startOffset":1817373,"endOffset":1817587,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInUnionOrIntersectionType","ranges":[{"startOffset":1817588,"endOffset":1817711,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInParenthesizedTypeOrTypeOperator","ranges":[{"startOffset":1817712,"endOffset":1817834,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInObjectOrArrayBindingPattern","ranges":[{"startOffset":1817835,"endOffset":1817965,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCallOrNewExpression","ranges":[{"startOffset":1817966,"endOffset":1818274,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInBlock","ranges":[{"startOffset":1818275,"endOffset":1818385,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInContinueOrBreakStatement","ranges":[{"startOffset":1818386,"endOffset":1818502,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInClassDeclarationOrExpression","ranges":[{"startOffset":1818503,"endOffset":1818818,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamedImportsOrExports","ranges":[{"startOffset":1818819,"endOffset":1818943,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportOrExportSpecifier","ranges":[{"startOffset":1818944,"endOffset":1819099,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxOpeningOrSelfClosingElement","ranges":[{"startOffset":1819100,"endOffset":1819313,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInOptionalRestOrJSDocParameterModifier","ranges":[{"startOffset":1819314,"endOffset":1819441,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocParameterOrPropertyTag","ranges":[{"startOffset":1819442,"endOffset":1819825,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTypeLikeTag","ranges":[{"startOffset":1819826,"endOffset":1820069,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocLinkCodeOrPlain","ranges":[{"startOffset":1820070,"endOffset":1820181,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTag","ranges":[{"startOffset":1820182,"endOffset":1820374,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocImportTag","ranges":[{"startOffset":1820375,"endOffset":1820697,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPartiallyEmittedExpression","ranges":[{"startOffset":1820698,"endOffset":1820821,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":1820822,"endOffset":1821051,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildRecursively","ranges":[{"startOffset":1821052,"endOffset":1822022,"count":0}],"isBlockCoverage":false},{"functionName":"gatherPossibleChildren","ranges":[{"startOffset":1822023,"endOffset":1822211,"count":0}],"isBlockCoverage":false},{"functionName":"setExternalModuleIndicator","ranges":[{"startOffset":1822212,"endOffset":1822344,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile","ranges":[{"startOffset":1822345,"endOffset":1823803,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName","ranges":[{"startOffset":1823804,"endOffset":1823927,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText","ranges":[{"startOffset":1823928,"endOffset":1824029,"count":1}],"isBlockCoverage":true},{"functionName":"isExternalModule","ranges":[{"startOffset":1824030,"endOffset":1824115,"count":1}],"isBlockCoverage":true},{"functionName":"updateSourceFile","ranges":[{"startOffset":1824116,"endOffset":1824440,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment","ranges":[{"startOffset":1824441,"endOffset":1824693,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpressionForTests","ranges":[{"startOffset":1824694,"endOffset":1824851,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1824865,"endOffset":2094344,"count":1}],"isBlockCoverage":false},{"functionName":"countNode","ranges":[{"startOffset":1825213,"endOffset":1825277,"count":46}],"isBlockCoverage":true},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1825334,"endOffset":1825445,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1825477,"endOffset":1825588,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1825627,"endOffset":1825745,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1825772,"endOffset":1825878,"count":6}],"isBlockCoverage":true},{"functionName":"createBaseNode","ranges":[{"startOffset":1825900,"endOffset":1826005,"count":39}],"isBlockCoverage":true},{"functionName":"parseSourceFile","ranges":[{"startOffset":1828089,"endOffset":1829361,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName2","ranges":[{"startOffset":1829409,"endOffset":1829878,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText2","ranges":[{"startOffset":1829943,"endOffset":1833050,"count":1},{"startOffset":1830336,"endOffset":1830434,"count":0},{"startOffset":1830578,"endOffset":1830685,"count":0},{"startOffset":1830696,"endOffset":1830723,"count":0},{"startOffset":1830734,"endOffset":1830761,"count":0},{"startOffset":1830772,"endOffset":1830862,"count":0},{"startOffset":1830873,"endOffset":1831184,"count":0},{"startOffset":1831195,"endOffset":1831223,"count":0},{"startOffset":1831234,"endOffset":1831417,"count":0},{"startOffset":1831575,"endOffset":1831598,"count":0},{"startOffset":1831600,"endOffset":1831652,"count":0},{"startOffset":1831675,"endOffset":1831738,"count":0},{"startOffset":1831833,"endOffset":1831914,"count":0},{"startOffset":1831979,"endOffset":1832046,"count":0},{"startOffset":1832586,"endOffset":1832634,"count":0},{"startOffset":1832880,"endOffset":1832978,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1830925,"endOffset":1830991,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1831289,"endOffset":1831313,"count":0}],"isBlockCoverage":false},{"functionName":"initializeState","ranges":[{"startOffset":1833095,"endOffset":1834621,"count":1},{"startOffset":1834012,"endOffset":1834028,"count":0},{"startOffset":1834035,"endOffset":1834119,"count":0},{"startOffset":1834245,"endOffset":1834305,"count":0}],"isBlockCoverage":true},{"functionName":"clearState","ranges":[{"startOffset":1834624,"endOffset":1835173,"count":1}],"isBlockCoverage":true},{"functionName":"parseSourceFileWorker","ranges":[{"startOffset":1835176,"endOffset":1836762,"count":0}],"isBlockCoverage":false},{"functionName":"withJSDoc","ranges":[{"startOffset":1836797,"endOffset":1837248,"count":13},{"startOffset":1836879,"endOffset":1837247,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1836981,"endOffset":1837069,"count":0}],"isBlockCoverage":false},{"functionName":"reparseTopLevelAwait","ranges":[{"startOffset":1837251,"endOffset":1840904,"count":0}],"isBlockCoverage":false},{"functionName":"fixupParentReferences","ranges":[{"startOffset":1840907,"endOffset":1841033,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile2","ranges":[{"startOffset":1841093,"endOffset":1842306,"count":1},{"startOffset":1841476,"endOffset":1841515,"count":0},{"startOffset":1841553,"endOffset":1841716,"count":0}],"isBlockCoverage":true},{"functionName":"setFields","ranges":[{"startOffset":1841744,"endOffset":1842302,"count":1}],"isBlockCoverage":true},{"functionName":"setContextFlag","ranges":[{"startOffset":1842309,"endOffset":1842440,"count":0}],"isBlockCoverage":false},{"functionName":"setDisallowInContext","ranges":[{"startOffset":1842443,"endOffset":1842538,"count":0}],"isBlockCoverage":false},{"functionName":"setYieldContext","ranges":[{"startOffset":1842541,"endOffset":1842627,"count":0}],"isBlockCoverage":false},{"functionName":"setDecoratorContext","ranges":[{"startOffset":1842630,"endOffset":1842724,"count":0}],"isBlockCoverage":false},{"functionName":"setAwaitContext","ranges":[{"startOffset":1842727,"endOffset":1842813,"count":0}],"isBlockCoverage":false},{"functionName":"doOutsideOfContext","ranges":[{"startOffset":1842816,"endOffset":1843205,"count":13},{"startOffset":1842946,"endOffset":1843182,"count":0}],"isBlockCoverage":true},{"functionName":"doInsideOfContext","ranges":[{"startOffset":1843208,"endOffset":1843589,"count":0}],"isBlockCoverage":false},{"functionName":"allowInAnd","ranges":[{"startOffset":1843592,"endOffset":1843690,"count":13}],"isBlockCoverage":true},{"functionName":"disallowInAnd","ranges":[{"startOffset":1843693,"endOffset":1843793,"count":0}],"isBlockCoverage":false},{"functionName":"allowConditionalTypesAnd","ranges":[{"startOffset":1843796,"endOffset":1843924,"count":0}],"isBlockCoverage":false},{"functionName":"disallowConditionalTypesAnd","ranges":[{"startOffset":1843927,"endOffset":1844057,"count":0}],"isBlockCoverage":false},{"functionName":"doInYieldContext","ranges":[{"startOffset":1844060,"endOffset":1844159,"count":0}],"isBlockCoverage":false},{"functionName":"doInDecoratorContext","ranges":[{"startOffset":1844162,"endOffset":1844269,"count":0}],"isBlockCoverage":false},{"functionName":"doInAwaitContext","ranges":[{"startOffset":1844272,"endOffset":1844371,"count":0}],"isBlockCoverage":false},{"functionName":"doOutsideOfAwaitContext","ranges":[{"startOffset":1844374,"endOffset":1844481,"count":0}],"isBlockCoverage":false},{"functionName":"doInYieldAndAwaitContext","ranges":[{"startOffset":1844484,"endOffset":1844618,"count":0}],"isBlockCoverage":false},{"functionName":"doOutsideOfYieldAndAwaitContext","ranges":[{"startOffset":1844621,"endOffset":1844763,"count":0}],"isBlockCoverage":false},{"functionName":"inContext","ranges":[{"startOffset":1844766,"endOffset":1844838,"count":32}],"isBlockCoverage":true},{"functionName":"inYieldContext","ranges":[{"startOffset":1844841,"endOffset":1844920,"count":0}],"isBlockCoverage":false},{"functionName":"inDisallowInContext","ranges":[{"startOffset":1844923,"endOffset":1845011,"count":0}],"isBlockCoverage":false},{"functionName":"inDisallowConditionalTypesContext","ranges":[{"startOffset":1845014,"endOffset":1845132,"count":0}],"isBlockCoverage":false},{"functionName":"inDecoratorContext","ranges":[{"startOffset":1845135,"endOffset":1845222,"count":32}],"isBlockCoverage":true},{"functionName":"inAwaitContext","ranges":[{"startOffset":1845225,"endOffset":1845304,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAtCurrentToken","ranges":[{"startOffset":1845307,"endOffset":1845457,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAtPosition","ranges":[{"startOffset":1845460,"endOffset":1845857,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAt","ranges":[{"startOffset":1845860,"endOffset":1845988,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAtRange","ranges":[{"startOffset":1845991,"endOffset":1846106,"count":0}],"isBlockCoverage":false},{"functionName":"scanError","ranges":[{"startOffset":1846109,"endOffset":1846231,"count":0}],"isBlockCoverage":false},{"functionName":"getNodePos","ranges":[{"startOffset":1846234,"endOffset":1846302,"count":155}],"isBlockCoverage":true},{"functionName":"hasPrecedingJSDocComment","ranges":[{"startOffset":1846305,"endOffset":1846394,"count":29}],"isBlockCoverage":true},{"functionName":"token","ranges":[{"startOffset":1846397,"endOffset":1846444,"count":881}],"isBlockCoverage":true},{"functionName":"nextTokenWithoutCheck","ranges":[{"startOffset":1846447,"endOffset":1846528,"count":61}],"isBlockCoverage":true},{"functionName":"nextTokenAnd","ranges":[{"startOffset":1846531,"endOffset":1846600,"count":0}],"isBlockCoverage":false},{"functionName":"nextToken","ranges":[{"startOffset":1846603,"endOffset":1846903,"count":61},{"startOffset":1846658,"endOffset":1846729,"count":5},{"startOffset":1846731,"endOffset":1846863,"count":0}],"isBlockCoverage":true},{"functionName":"nextTokenJSDoc","ranges":[{"startOffset":1846906,"endOffset":1846990,"count":0}],"isBlockCoverage":false},{"functionName":"nextJSDocCommentTextToken","ranges":[{"startOffset":1846993,"endOffset":1847121,"count":0}],"isBlockCoverage":false},{"functionName":"reScanGreaterToken","ranges":[{"startOffset":1847124,"endOffset":1847216,"count":32}],"isBlockCoverage":true},{"functionName":"reScanSlashToken","ranges":[{"startOffset":1847219,"endOffset":1847307,"count":0}],"isBlockCoverage":false},{"functionName":"reScanTemplateToken","ranges":[{"startOffset":1847310,"endOffset":1847436,"count":0}],"isBlockCoverage":false},{"functionName":"reScanLessThanToken","ranges":[{"startOffset":1847439,"endOffset":1847533,"count":0}],"isBlockCoverage":false},{"functionName":"reScanHashToken","ranges":[{"startOffset":1847536,"endOffset":1847622,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxIdentifier","ranges":[{"startOffset":1847625,"endOffset":1847715,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxText","ranges":[{"startOffset":1847718,"endOffset":1847797,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxAttributeValue","ranges":[{"startOffset":1847800,"endOffset":1847898,"count":0}],"isBlockCoverage":false},{"functionName":"speculationHelper","ranges":[{"startOffset":1847901,"endOffset":1848670,"count":32},{"startOffset":1848239,"endOffset":1848269,"count":0},{"startOffset":1848369,"endOffset":1848393,"count":0}],"isBlockCoverage":true},{"functionName":"lookAhead","ranges":[{"startOffset":1848673,"endOffset":1848766,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":1848769,"endOffset":1848860,"count":32}],"isBlockCoverage":true},{"functionName":"isBindingIdentifier","ranges":[{"startOffset":1848863,"endOffset":1849016,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier2","ranges":[{"startOffset":1849019,"endOffset":1849350,"count":13},{"startOffset":1849087,"endOffset":1849113,"count":0},{"startOffset":1849157,"endOffset":1849176,"count":0},{"startOffset":1849178,"endOffset":1849205,"count":0},{"startOffset":1849249,"endOffset":1849268,"count":0},{"startOffset":1849270,"endOffset":1849297,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpected","ranges":[{"startOffset":1849353,"endOffset":1849732,"count":17},{"startOffset":1849533,"endOffset":1849731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1849805,"endOffset":1849836,"count":83}],"isBlockCoverage":true},{"functionName":"parseErrorForMissingSemicolonAfter","ranges":[{"startOffset":1849841,"endOffset":1851843,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorForInvalidName","ranges":[{"startOffset":1851846,"endOffset":1852118,"count":0}],"isBlockCoverage":false},{"functionName":"getSpaceSuggestion","ranges":[{"startOffset":1852121,"endOffset":1852421,"count":0}],"isBlockCoverage":false},{"functionName":"parseSemicolonAfterPropertyName","ranges":[{"startOffset":1852424,"endOffset":1853418,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpectedJSDoc","ranges":[{"startOffset":1853421,"endOffset":1853679,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpectedMatchingBrackets","ranges":[{"startOffset":1853682,"endOffset":1854258,"count":4},{"startOffset":1853841,"endOffset":1854254,"count":0}],"isBlockCoverage":true},{"functionName":"parseOptional","ranges":[{"startOffset":1854261,"endOffset":1854379,"count":80},{"startOffset":1854312,"endOffset":1854357,"count":12},{"startOffset":1854357,"endOffset":1854378,"count":68}],"isBlockCoverage":true},{"functionName":"parseOptionalToken","ranges":[{"startOffset":1854382,"endOffset":1854499,"count":85},{"startOffset":1854438,"endOffset":1854476,"count":1},{"startOffset":1854476,"endOffset":1854498,"count":84}],"isBlockCoverage":true},{"functionName":"parseOptionalTokenJSDoc","ranges":[{"startOffset":1854502,"endOffset":1854629,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpectedToken","ranges":[{"startOffset":1854632,"endOffset":1854894,"count":1},{"startOffset":1854723,"endOffset":1854889,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpectedTokenJSDoc","ranges":[{"startOffset":1854897,"endOffset":1855214,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenNode","ranges":[{"startOffset":1855217,"endOffset":1855375,"count":6}],"isBlockCoverage":true},{"functionName":"parseTokenNodeJSDoc","ranges":[{"startOffset":1855378,"endOffset":1855546,"count":0}],"isBlockCoverage":false},{"functionName":"canParseSemicolon","ranges":[{"startOffset":1855549,"endOffset":1855778,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseSemicolon","ranges":[{"startOffset":1855781,"endOffset":1855962,"count":0}],"isBlockCoverage":false},{"functionName":"parseSemicolon","ranges":[{"startOffset":1855965,"endOffset":1856070,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeArray","ranges":[{"startOffset":1856073,"endOffset":1856302,"count":5}],"isBlockCoverage":true},{"functionName":"finishNode","ranges":[{"startOffset":1856305,"endOffset":1856648,"count":45},{"startOffset":1856521,"endOffset":1856627,"count":0}],"isBlockCoverage":true},{"functionName":"createMissingNode","ranges":[{"startOffset":1856651,"endOffset":1857662,"count":0}],"isBlockCoverage":false},{"functionName":"internIdentifier","ranges":[{"startOffset":1857665,"endOffset":1857856,"count":13}],"isBlockCoverage":true},{"functionName":"createIdentifier","ranges":[{"startOffset":1857859,"endOffset":1859397,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingIdentifier","ranges":[{"startOffset":1859400,"endOffset":1859621,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifier","ranges":[{"startOffset":1859624,"endOffset":1859810,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierName","ranges":[{"startOffset":1859813,"endOffset":1859951,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierNameErrorOnUnicodeEscapeSequence","ranges":[{"startOffset":1859954,"endOffset":1860256,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralPropertyName","ranges":[{"startOffset":1860259,"endOffset":1860459,"count":13},{"startOffset":1860379,"endOffset":1860395,"count":0},{"startOffset":1860417,"endOffset":1860434,"count":0}],"isBlockCoverage":true},{"functionName":"isImportAttributeName2","ranges":[{"startOffset":1860462,"endOffset":1860587,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyNameWorker","ranges":[{"startOffset":1860590,"endOffset":1861145,"count":13},{"startOffset":1860696,"endOffset":1860712,"count":0},{"startOffset":1860734,"endOffset":1860751,"count":0},{"startOffset":1860885,"endOffset":1860938,"count":0},{"startOffset":1860963,"endOffset":1861144,"count":0}],"isBlockCoverage":true},{"functionName":"parsePropertyName","ranges":[{"startOffset":1861148,"endOffset":1861273,"count":13}],"isBlockCoverage":true},{"functionName":"parseComputedPropertyName","ranges":[{"startOffset":1861276,"endOffset":1861570,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateIdentifier","ranges":[{"startOffset":1861573,"endOffset":1861786,"count":0}],"isBlockCoverage":false},{"functionName":"parseContextualModifier","ranges":[{"startOffset":1861789,"endOffset":1861896,"count":26},{"startOffset":1861852,"endOffset":1861891,"count":0}],"isBlockCoverage":true},{"functionName":"nextTokenIsOnSameLineAndCanFollowModifier","ranges":[{"startOffset":1861899,"endOffset":1862076,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenCanFollowModifier","ranges":[{"startOffset":1862079,"endOffset":1862965,"count":0}],"isBlockCoverage":false},{"functionName":"canFollowExportModifier","ranges":[{"startOffset":1862968,"endOffset":1863184,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenCanFollowExportModifier","ranges":[{"startOffset":1863187,"endOffset":1863291,"count":0}],"isBlockCoverage":false},{"functionName":"parseAnyContextualModifier","ranges":[{"startOffset":1863294,"endOffset":1863413,"count":13},{"startOffset":1863369,"endOffset":1863408,"count":0}],"isBlockCoverage":true},{"functionName":"canFollowModifier","ranges":[{"startOffset":1863416,"endOffset":1863643,"count":0}],"isBlockCoverage":false},{"functionName":"canFollowGetOrSetKeyword","ranges":[{"startOffset":1863646,"endOffset":1863764,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenCanFollowDefaultKeyword","ranges":[{"startOffset":1863767,"endOffset":1864172,"count":0}],"isBlockCoverage":false},{"functionName":"isListElement2","ranges":[{"startOffset":1864175,"endOffset":1868065,"count":16},{"startOffset":1864296,"endOffset":1864322,"count":0},{"startOffset":1864360,"endOffset":1864388,"count":0},{"startOffset":1864395,"endOffset":1864424,"count":0},{"startOffset":1864431,"endOffset":1864565,"count":0},{"startOffset":1864572,"endOffset":1864687,"count":0},{"startOffset":1864694,"endOffset":1864764,"count":0},{"startOffset":1864771,"endOffset":1864902,"count":0},{"startOffset":1864909,"endOffset":1865015,"count":0},{"startOffset":1865022,"endOffset":1865337,"count":13},{"startOffset":1865095,"endOffset":1865126,"count":0},{"startOffset":1865137,"endOffset":1865165,"count":0},{"startOffset":1865176,"endOffset":1865205,"count":0},{"startOffset":1865216,"endOffset":1865264,"count":0},{"startOffset":1865344,"endOffset":1865413,"count":0},{"startOffset":1865420,"endOffset":1865575,"count":0},{"startOffset":1865582,"endOffset":1865654,"count":0},{"startOffset":1865661,"endOffset":1866064,"count":0},{"startOffset":1866071,"endOffset":1866171,"count":0},{"startOffset":1866178,"endOffset":1866353,"count":0},{"startOffset":1866360,"endOffset":1866493,"count":0},{"startOffset":1866500,"endOffset":1866666,"count":3},{"startOffset":1866572,"endOffset":1866597,"count":0},{"startOffset":1866608,"endOffset":1866656,"count":0},{"startOffset":1866696,"endOffset":1866807,"count":3},{"startOffset":1866814,"endOffset":1866932,"count":0},{"startOffset":1866939,"endOffset":1867061,"count":0},{"startOffset":1867068,"endOffset":1867096,"count":0},{"startOffset":1867103,"endOffset":1867202,"count":0},{"startOffset":1867209,"endOffset":1867275,"count":0},{"startOffset":1867282,"endOffset":1867578,"count":0},{"startOffset":1867585,"endOffset":1867704,"count":0},{"startOffset":1867711,"endOffset":1867758,"count":0},{"startOffset":1867765,"endOffset":1867813,"count":0},{"startOffset":1867820,"endOffset":1867909,"count":0},{"startOffset":1867960,"endOffset":1868055,"count":0}],"isBlockCoverage":true},{"functionName":"isValidHeritageClauseObjectLiteral","ranges":[{"startOffset":1868068,"endOffset":1868436,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifier","ranges":[{"startOffset":1868439,"endOffset":1868522,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeyword","ranges":[{"startOffset":1868525,"endOffset":1868637,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":1868640,"endOffset":1868778,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClauseExtendsOrImplementsKeyword","ranges":[{"startOffset":1868781,"endOffset":1869008,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsStartOfExpression","ranges":[{"startOffset":1869011,"endOffset":1869107,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsStartOfType","ranges":[{"startOffset":1869110,"endOffset":1869194,"count":0}],"isBlockCoverage":false},{"functionName":"isListTerminator","ranges":[{"startOffset":1869197,"endOffset":1871408,"count":4},{"startOffset":1869275,"endOffset":1869301,"count":0},{"startOffset":1869328,"endOffset":1869357,"count":0},{"startOffset":1869364,"endOffset":1869391,"count":0},{"startOffset":1869398,"endOffset":1869423,"count":0},{"startOffset":1869430,"endOffset":1869456,"count":0},{"startOffset":1869463,"endOffset":1869488,"count":0},{"startOffset":1869495,"endOffset":1869530,"count":2},{"startOffset":1869537,"endOffset":1869572,"count":2},{"startOffset":1869579,"endOffset":1869618,"count":2},{"startOffset":1869625,"endOffset":1869709,"count":2},{"startOffset":1869716,"endOffset":1869880,"count":0},{"startOffset":1869887,"endOffset":1870056,"count":0},{"startOffset":1870063,"endOffset":1870150,"count":0},{"startOffset":1870157,"endOffset":1870400,"count":0},{"startOffset":1870407,"endOffset":1870533,"count":0},{"startOffset":1870540,"endOffset":1870574,"count":2},{"startOffset":1870581,"endOffset":1870613,"count":2},{"startOffset":1870620,"endOffset":1870710,"count":2},{"startOffset":1870717,"endOffset":1870747,"count":0},{"startOffset":1870754,"endOffset":1870779,"count":0},{"startOffset":1870786,"endOffset":1870910,"count":0},{"startOffset":1870917,"endOffset":1870993,"count":0},{"startOffset":1871000,"endOffset":1871122,"count":0},{"startOffset":1871129,"endOffset":1871246,"count":0},{"startOffset":1871253,"endOffset":1871361,"count":0},{"startOffset":1871368,"endOffset":1871398,"count":0}],"isBlockCoverage":true},{"functionName":"isVariableDeclaratorListTerminator","ranges":[{"startOffset":1871411,"endOffset":1871677,"count":0}],"isBlockCoverage":false},{"functionName":"isInSomeParsingContext","ranges":[{"startOffset":1871680,"endOffset":1872069,"count":0}],"isBlockCoverage":false},{"functionName":"parseList","ranges":[{"startOffset":1872072,"endOffset":1872631,"count":0}],"isBlockCoverage":false},{"functionName":"parseListElement","ranges":[{"startOffset":1872634,"endOffset":1872824,"count":16},{"startOffset":1872754,"endOffset":1872793,"count":0}],"isBlockCoverage":true},{"functionName":"currentNode","ranges":[{"startOffset":1872827,"endOffset":1873590,"count":32},{"startOffset":1872906,"endOffset":1872951,"count":0},{"startOffset":1872952,"endOffset":1872987,"count":0},{"startOffset":1873017,"endOffset":1873095,"count":0},{"startOffset":1873126,"endOffset":1873162,"count":0},{"startOffset":1873163,"endOffset":1873190,"count":0},{"startOffset":1873192,"endOffset":1873522,"count":0},{"startOffset":1873524,"endOffset":1873589,"count":0}],"isBlockCoverage":true},{"functionName":"consumeNode","ranges":[{"startOffset":1873593,"endOffset":1873699,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableParsingContext","ranges":[{"startOffset":1873702,"endOffset":1874189,"count":0}],"isBlockCoverage":false},{"functionName":"canReuseNode","ranges":[{"startOffset":1874192,"endOffset":1874963,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableClassMember","ranges":[{"startOffset":1874966,"endOffset":1875609,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableSwitchClause","ranges":[{"startOffset":1875612,"endOffset":1875826,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableStatement","ranges":[{"startOffset":1875829,"endOffset":1877136,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableEnumMember","ranges":[{"startOffset":1877139,"endOffset":1877227,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableTypeMember","ranges":[{"startOffset":1877230,"endOffset":1877571,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableVariableDeclaration","ranges":[{"startOffset":1877574,"endOffset":1877796,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableParameter","ranges":[{"startOffset":1877799,"endOffset":1877983,"count":0}],"isBlockCoverage":false},{"functionName":"abortParsingListOrMoveToNextToken","ranges":[{"startOffset":1877986,"endOffset":1878168,"count":0}],"isBlockCoverage":false},{"functionName":"parsingContextErrors","ranges":[{"startOffset":1878171,"endOffset":1882035,"count":0}],"isBlockCoverage":false},{"functionName":"parseDelimitedList","ranges":[{"startOffset":1882038,"endOffset":1883499,"count":4},{"startOffset":1882295,"endOffset":1883342,"count":16},{"startOffset":1882527,"endOffset":1882610,"count":0},{"startOffset":1882733,"endOffset":1882764,"count":12},{"startOffset":1882764,"endOffset":1882854,"count":4},{"startOffset":1882854,"endOffset":1882991,"count":0},{"startOffset":1883013,"endOffset":1883049,"count":0},{"startOffset":1883051,"endOffset":1883336,"count":0}],"isBlockCoverage":true},{"functionName":"getExpectedCommaDiagnostic","ranges":[{"startOffset":1883502,"endOffset":1883658,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingList","ranges":[{"startOffset":1883661,"endOffset":1883795,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingList","ranges":[{"startOffset":1883798,"endOffset":1883863,"count":0}],"isBlockCoverage":false},{"functionName":"parseBracketedList","ranges":[{"startOffset":1883866,"endOffset":1884111,"count":0}],"isBlockCoverage":false},{"functionName":"parseEntityName","ranges":[{"startOffset":1884114,"endOffset":1884796,"count":0}],"isBlockCoverage":false},{"functionName":"createQualifiedName","ranges":[{"startOffset":1884799,"endOffset":1884926,"count":0}],"isBlockCoverage":false},{"functionName":"parseRightSideOfDot","ranges":[{"startOffset":1884929,"endOffset":1885928,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateSpans","ranges":[{"startOffset":1885931,"endOffset":1886229,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateExpression","ranges":[{"startOffset":1886232,"endOffset":1886498,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateType","ranges":[{"startOffset":1886501,"endOffset":1886774,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateTypeSpans","ranges":[{"startOffset":1886777,"endOffset":1887051,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateTypeSpan","ranges":[{"startOffset":1887054,"endOffset":1887331,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralOfTemplateSpan","ranges":[{"startOffset":1887334,"endOffset":1887677,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateSpan","ranges":[{"startOffset":1887680,"endOffset":1887934,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralNode","ranges":[{"startOffset":1887937,"endOffset":1888012,"count":21}],"isBlockCoverage":true},{"functionName":"parseTemplateHead","ranges":[{"startOffset":1888015,"endOffset":1888401,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateMiddleOrTemplateTail","ranges":[{"startOffset":1888404,"endOffset":1888673,"count":0}],"isBlockCoverage":false},{"functionName":"getTemplateLiteralRawText","ranges":[{"startOffset":1888676,"endOffset":1888975,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralLikeNode","ranges":[{"startOffset":1888978,"endOffset":1890330,"count":21},{"startOffset":1889091,"endOffset":1889260,"count":0},{"startOffset":1889712,"endOffset":1889802,"count":0},{"startOffset":1889995,"endOffset":1890094,"count":0},{"startOffset":1890147,"endOffset":1890198,"count":0},{"startOffset":1890234,"endOffset":1890275,"count":0}],"isBlockCoverage":true},{"functionName":"parseEntityNameOfTypeReference","ranges":[{"startOffset":1890333,"endOffset":1890488,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeArgumentsOfTypeReference","ranges":[{"startOffset":1890491,"endOffset":1890763,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeReference","ranges":[{"startOffset":1890766,"endOffset":1891006,"count":0}],"isBlockCoverage":false},{"functionName":"typeHasArrowFunctionBlockingParseError","ranges":[{"startOffset":1891009,"endOffset":1891539,"count":0}],"isBlockCoverage":false},{"functionName":"parseThisTypePredicate","ranges":[{"startOffset":1891542,"endOffset":1891743,"count":0}],"isBlockCoverage":false},{"functionName":"parseThisTypeNode","ranges":[{"startOffset":1891746,"endOffset":1891886,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocAllType","ranges":[{"startOffset":1891889,"endOffset":1892029,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocNonNullableType","ranges":[{"startOffset":1892032,"endOffset":1892250,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocUnknownOrNullableType","ranges":[{"startOffset":1892253,"endOffset":1892793,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocFunctionType","ranges":[{"startOffset":1892796,"endOffset":1893380,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocParameter","ranges":[{"startOffset":1893383,"endOffset":1894049,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocType","ranges":[{"startOffset":1894052,"endOffset":1895164,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeQuery","ranges":[{"startOffset":1895167,"endOffset":1895540,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeParameter","ranges":[{"startOffset":1895543,"endOffset":1896284,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeParameters","ranges":[{"startOffset":1896287,"endOffset":1896504,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfParameter","ranges":[{"startOffset":1896507,"endOffset":1896795,"count":0}],"isBlockCoverage":false},{"functionName":"parseNameOfParameter","ranges":[{"startOffset":1896798,"endOffset":1897074,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterNameStart","ranges":[{"startOffset":1897077,"endOffset":1897228,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameter","ranges":[{"startOffset":1897231,"endOffset":1897335,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameterForSpeculation","ranges":[{"startOffset":1897338,"endOffset":1897506,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameterWorker","ranges":[{"startOffset":1897509,"endOffset":1899123,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnType","ranges":[{"startOffset":1899126,"endOffset":1899302,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseReturnType","ranges":[{"startOffset":1899305,"endOffset":1899773,"count":0}],"isBlockCoverage":false},{"functionName":"parseParametersWorker","ranges":[{"startOffset":1899776,"endOffset":1900395,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameters","ranges":[{"startOffset":1900398,"endOffset":1900696,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeMemberSemicolon","ranges":[{"startOffset":1900699,"endOffset":1900828,"count":0}],"isBlockCoverage":false},{"functionName":"parseSignatureMember","ranges":[{"startOffset":1900831,"endOffset":1901522,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignature","ranges":[{"startOffset":1901525,"endOffset":1901652,"count":0}],"isBlockCoverage":false},{"functionName":"isUnambiguouslyIndexSignature","ranges":[{"startOffset":1901655,"endOffset":1902350,"count":0}],"isBlockCoverage":false},{"functionName":"parseIndexSignatureDeclaration","ranges":[{"startOffset":1902353,"endOffset":1902818,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyOrMethodSignature","ranges":[{"startOffset":1902821,"endOffset":1903740,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeMemberStart","ranges":[{"startOffset":1903743,"endOffset":1904487,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeMember","ranges":[{"startOffset":1904490,"endOffset":1905501,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenParenOrLessThan","ranges":[{"startOffset":1905504,"endOffset":1905654,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsDot","ranges":[{"startOffset":1905657,"endOffset":1905734,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenParenOrLessThanOrDot","ranges":[{"startOffset":1905737,"endOffset":1905962,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeLiteral","ranges":[{"startOffset":1905965,"endOffset":1906114,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectTypeMembers","ranges":[{"startOffset":1906117,"endOffset":1906411,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfMappedType","ranges":[{"startOffset":1906414,"endOffset":1906796,"count":0}],"isBlockCoverage":false},{"functionName":"parseMappedTypeParameter","ranges":[{"startOffset":1906799,"endOffset":1907149,"count":0}],"isBlockCoverage":false},{"functionName":"parseMappedType","ranges":[{"startOffset":1907152,"endOffset":1908395,"count":0}],"isBlockCoverage":false},{"functionName":"parseTupleElementType","ranges":[{"startOffset":1908398,"endOffset":1908859,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenColonOrQuestionColon","ranges":[{"startOffset":1908862,"endOffset":1909035,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleElementName","ranges":[{"startOffset":1909038,"endOffset":1909302,"count":0}],"isBlockCoverage":false},{"functionName":"parseTupleElementNameOrTupleElementType","ranges":[{"startOffset":1909305,"endOffset":1909953,"count":0}],"isBlockCoverage":false},{"functionName":"parseTupleType","ranges":[{"startOffset":1909956,"endOffset":1910253,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenthesizedType","ranges":[{"startOffset":1910256,"endOffset":1910512,"count":0}],"isBlockCoverage":false},{"functionName":"parseModifiersForConstructorType","ranges":[{"startOffset":1910515,"endOffset":1910850,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionOrConstructorType","ranges":[{"startOffset":1910853,"endOffset":1911691,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeywordAndNoDot","ranges":[{"startOffset":1911694,"endOffset":1911824,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralTypeNode","ranges":[{"startOffset":1911827,"endOffset":1912333,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfTypeOfImportType","ranges":[{"startOffset":1912336,"endOffset":1912443,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportType","ranges":[{"startOffset":1912446,"endOffset":1914110,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsNumericOrBigIntLiteral","ranges":[{"startOffset":1914113,"endOffset":1914265,"count":0}],"isBlockCoverage":false},{"functionName":"parseNonArrayType","ranges":[{"startOffset":1914268,"endOffset":1916886,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfType","ranges":[{"startOffset":1916889,"endOffset":1918638,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfParenthesizedOrFunctionType","ranges":[{"startOffset":1918641,"endOffset":1918847,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostfixTypeOrHigher","ranges":[{"startOffset":1918850,"endOffset":1920118,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOperator","ranges":[{"startOffset":1920121,"endOffset":1920322,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseConstraintOfInferType","ranges":[{"startOffset":1920325,"endOffset":1920614,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeParameterOfInferType","ranges":[{"startOffset":1920617,"endOffset":1920955,"count":0}],"isBlockCoverage":false},{"functionName":"parseInferType","ranges":[{"startOffset":1920958,"endOffset":1921153,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOperatorOrHigher","ranges":[{"startOffset":1921156,"endOffset":1921542,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionOrConstructorTypeToError","ranges":[{"startOffset":1921545,"endOffset":1922321,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnionOrIntersectionType","ranges":[{"startOffset":1922324,"endOffset":1922998,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntersectionTypeOrHigher","ranges":[{"startOffset":1923001,"endOffset":1923177,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnionTypeOrHigher","ranges":[{"startOffset":1923180,"endOffset":1923340,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsNewKeyword","ranges":[{"startOffset":1923343,"endOffset":1923443,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfFunctionTypeOrConstructorType","ranges":[{"startOffset":1923446,"endOffset":1923815,"count":0}],"isBlockCoverage":false},{"functionName":"skipParameterStart","ranges":[{"startOffset":1923818,"endOffset":1924340,"count":0}],"isBlockCoverage":false},{"functionName":"isUnambiguouslyStartOfFunctionType","ranges":[{"startOffset":1924343,"endOffset":1924933,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOrTypePredicate","ranges":[{"startOffset":1924936,"endOffset":1925358,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypePredicatePrefix","ranges":[{"startOffset":1925361,"endOffset":1925558,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssertsTypePredicate","ranges":[{"startOffset":1925561,"endOffset":1925986,"count":0}],"isBlockCoverage":false},{"functionName":"parseType","ranges":[{"startOffset":1925989,"endOffset":1926860,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAnnotation","ranges":[{"startOffset":1926863,"endOffset":1926969,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfLeftHandSideExpression","ranges":[{"startOffset":1926972,"endOffset":1927894,"count":3},{"startOffset":1927046,"endOffset":1927073,"count":0},{"startOffset":1927080,"endOffset":1927108,"count":0},{"startOffset":1927115,"endOffset":1927142,"count":0},{"startOffset":1927149,"endOffset":1927176,"count":0},{"startOffset":1927183,"endOffset":1927210,"count":0},{"startOffset":1927217,"endOffset":1927245,"count":0},{"startOffset":1927252,"endOffset":1927280,"count":0},{"startOffset":1927745,"endOffset":1927837,"count":0},{"startOffset":1927844,"endOffset":1927884,"count":0}],"isBlockCoverage":true},{"functionName":"isStartOfExpression","ranges":[{"startOffset":1927897,"endOffset":1928651,"count":3},{"startOffset":1927999,"endOffset":1928053,"count":0},{"startOffset":1928060,"endOffset":1928085,"count":0},{"startOffset":1928092,"endOffset":1928117,"count":0},{"startOffset":1928124,"endOffset":1928155,"count":0},{"startOffset":1928162,"endOffset":1928190,"count":0},{"startOffset":1928197,"endOffset":1928226,"count":0},{"startOffset":1928233,"endOffset":1928260,"count":0},{"startOffset":1928267,"endOffset":1928295,"count":0},{"startOffset":1928302,"endOffset":1928332,"count":0},{"startOffset":1928339,"endOffset":1928367,"count":0},{"startOffset":1928374,"endOffset":1928402,"count":0},{"startOffset":1928409,"endOffset":1928437,"count":0},{"startOffset":1928444,"endOffset":1928476,"count":0},{"startOffset":1928483,"endOffset":1928526,"count":0},{"startOffset":1928533,"endOffset":1928641,"count":0}],"isBlockCoverage":true},{"functionName":"isStartOfExpressionStatement","ranges":[{"startOffset":1928654,"endOffset":1928882,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":1928885,"endOffset":1929595,"count":0}],"isBlockCoverage":false},{"functionName":"parseInitializer","ranges":[{"startOffset":1929598,"endOffset":1929783,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignmentExpressionOrHigher","ranges":[{"startOffset":1929786,"endOffset":1930924,"count":16},{"startOffset":1929893,"endOffset":1929937,"count":0},{"startOffset":1930147,"endOffset":1930184,"count":0},{"startOffset":1930370,"endOffset":1930387,"count":0},{"startOffset":1930418,"endOffset":1930609,"count":0},{"startOffset":1930696,"endOffset":1930834,"count":0}],"isBlockCoverage":true},{"functionName":"isYieldExpression2","ranges":[{"startOffset":1930927,"endOffset":1931166,"count":16},{"startOffset":1931003,"endOffset":1931144,"count":0}],"isBlockCoverage":true},{"functionName":"nextTokenIsIdentifierOnSameLine","ranges":[{"startOffset":1931169,"endOffset":1931299,"count":0}],"isBlockCoverage":false},{"functionName":"parseYieldExpression","ranges":[{"startOffset":1931302,"endOffset":1931938,"count":0}],"isBlockCoverage":false},{"functionName":"parseSimpleArrowFunctionExpression","ranges":[{"startOffset":1931941,"endOffset":1933075,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1933078,"endOffset":1933575,"count":16},{"startOffset":1933293,"endOffset":1933470,"count":0},{"startOffset":1933471,"endOffset":1933570,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1933482,"endOffset":1933569,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1933578,"endOffset":1933946,"count":16},{"startOffset":1933751,"endOffset":1933828,"count":0},{"startOffset":1933882,"endOffset":1933916,"count":0}],"isBlockCoverage":true},{"functionName":"isParenthesizedArrowFunctionExpressionWorker","ranges":[{"startOffset":1933949,"endOffset":1936872,"count":0}],"isBlockCoverage":false},{"functionName":"parsePossibleParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1936875,"endOffset":1937421,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseAsyncSimpleArrowFunctionExpression","ranges":[{"startOffset":1937424,"endOffset":1938013,"count":16},{"startOffset":1937554,"endOffset":1937990,"count":0}],"isBlockCoverage":true},{"functionName":"isUnParenthesizedAsyncArrowFunctionWorker","ranges":[{"startOffset":1938016,"endOffset":1938536,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1938539,"endOffset":1940875,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowFunctionExpressionBody","ranges":[{"startOffset":1940878,"endOffset":1941713,"count":0}],"isBlockCoverage":false},{"functionName":"parseConditionalExpressionRest","ranges":[{"startOffset":1941716,"endOffset":1942629,"count":16},{"startOffset":1941935,"endOffset":1942402,"count":0},{"startOffset":1942403,"endOffset":1942599,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1942125,"endOffset":1942236,"count":0}],"isBlockCoverage":false},{"functionName":"parseBinaryExpressionOrHigher","ranges":[{"startOffset":1942632,"endOffset":1942842,"count":16}],"isBlockCoverage":true},{"functionName":"isInOrOfKeyword","ranges":[{"startOffset":1942845,"endOffset":1942945,"count":0}],"isBlockCoverage":false},{"functionName":"parseBinaryExpressionRest","ranges":[{"startOffset":1942948,"endOffset":1944009,"count":16},{"startOffset":1943208,"endOffset":1943237,"count":0},{"startOffset":1943327,"endOffset":1943394,"count":0},{"startOffset":1943396,"endOffset":1943481,"count":0},{"startOffset":1943506,"endOffset":1943975,"count":0}],"isBlockCoverage":true},{"functionName":"isBinaryOperator2","ranges":[{"startOffset":1944012,"endOffset":1944193,"count":0}],"isBlockCoverage":false},{"functionName":"makeSatisfiesExpression","ranges":[{"startOffset":1944196,"endOffset":1944329,"count":0}],"isBlockCoverage":false},{"functionName":"makeBinaryExpression","ranges":[{"startOffset":1944332,"endOffset":1944489,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsExpression","ranges":[{"startOffset":1944492,"endOffset":1944611,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrefixUnaryExpression","ranges":[{"startOffset":1944614,"endOffset":1944804,"count":0}],"isBlockCoverage":false},{"functionName":"parseDeleteExpression","ranges":[{"startOffset":1944807,"endOffset":1944978,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOfExpression","ranges":[{"startOffset":1944981,"endOffset":1945152,"count":0}],"isBlockCoverage":false},{"functionName":"parseVoidExpression","ranges":[{"startOffset":1945155,"endOffset":1945322,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression2","ranges":[{"startOffset":1945325,"endOffset":1945564,"count":0}],"isBlockCoverage":false},{"functionName":"parseAwaitExpression","ranges":[{"startOffset":1945567,"endOffset":1945736,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnaryExpressionOrHigher","ranges":[{"startOffset":1945739,"endOffset":1946968,"count":16},{"startOffset":1945957,"endOffset":1946045,"count":0},{"startOffset":1946071,"endOffset":1946967,"count":0}],"isBlockCoverage":true},{"functionName":"parseSimpleUnaryExpression","ranges":[{"startOffset":1946971,"endOffset":1948055,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateExpression","ranges":[{"startOffset":1948058,"endOffset":1948660,"count":16},{"startOffset":1948119,"endOffset":1948143,"count":0},{"startOffset":1948150,"endOffset":1948175,"count":0},{"startOffset":1948182,"endOffset":1948207,"count":0},{"startOffset":1948214,"endOffset":1948245,"count":0},{"startOffset":1948252,"endOffset":1948280,"count":0},{"startOffset":1948287,"endOffset":1948316,"count":0},{"startOffset":1948323,"endOffset":1948350,"count":0},{"startOffset":1948357,"endOffset":1948407,"count":0},{"startOffset":1948414,"endOffset":1948523,"count":0}],"isBlockCoverage":true},{"functionName":"parseUpdateExpression","ranges":[{"startOffset":1948663,"endOffset":1949638,"count":16},{"startOffset":1948782,"endOffset":1948949,"count":0},{"startOffset":1949029,"endOffset":1949086,"count":0},{"startOffset":1949088,"endOffset":1949209,"count":0},{"startOffset":1949413,"endOffset":1949449,"count":0},{"startOffset":1949451,"endOffset":1949611,"count":0}],"isBlockCoverage":true},{"functionName":"parseLeftHandSideExpressionOrHigher","ranges":[{"startOffset":1949641,"endOffset":1950483,"count":16},{"startOffset":1949785,"endOffset":1950299,"count":0},{"startOffset":1950361,"endOffset":1950385,"count":0}],"isBlockCoverage":true},{"functionName":"parseMemberExpressionOrHigher","ranges":[{"startOffset":1950486,"endOffset":1950725,"count":16}],"isBlockCoverage":true},{"functionName":"parseSuperExpression","ranges":[{"startOffset":1950728,"endOffset":1951813,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxElementOrSelfClosingElementOrFragment","ranges":[{"startOffset":1951816,"endOffset":1955053,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxText","ranges":[{"startOffset":1955056,"endOffset":1955309,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxChild","ranges":[{"startOffset":1955312,"endOffset":1956531,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxChildren","ranges":[{"startOffset":1956534,"endOffset":1957270,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttributes","ranges":[{"startOffset":1957273,"endOffset":1957450,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxOpeningOrSelfClosingElementOrOpeningFragment","ranges":[{"startOffset":1957453,"endOffset":1958582,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxElementName","ranges":[{"startOffset":1958585,"endOffset":1959188,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxTagName","ranges":[{"startOffset":1959191,"endOffset":1959700,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxExpression","ranges":[{"startOffset":1959703,"endOffset":1960483,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttribute","ranges":[{"startOffset":1960486,"endOffset":1960751,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttributeValue","ranges":[{"startOffset":1960754,"endOffset":1961368,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttributeName","ranges":[{"startOffset":1961371,"endOffset":1961761,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxSpreadAttribute","ranges":[{"startOffset":1961764,"endOffset":1962084,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxClosingElement","ranges":[{"startOffset":1962087,"endOffset":1962641,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxClosingFragment","ranges":[{"startOffset":1962644,"endOffset":1963127,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAssertion","ranges":[{"startOffset":1963130,"endOffset":1963608,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOrOpenBracketOrTemplate","ranges":[{"startOffset":1963611,"endOffset":1963824,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfOptionalPropertyOrElementAccessChain","ranges":[{"startOffset":1963827,"endOffset":1964007,"count":32},{"startOffset":1963935,"endOffset":1964002,"count":0}],"isBlockCoverage":true},{"functionName":"tryReparseOptionalChain","ranges":[{"startOffset":1964010,"endOffset":1964559,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyAccessExpressionRest","ranges":[{"startOffset":1964562,"endOffset":1965665,"count":0}],"isBlockCoverage":false},{"functionName":"parseElementAccessExpressionRest","ranges":[{"startOffset":1965668,"endOffset":1966588,"count":0}],"isBlockCoverage":false},{"functionName":"parseMemberExpressionRest","ranges":[{"startOffset":1966591,"endOffset":1968380,"count":32},{"startOffset":1966829,"endOffset":1966976,"count":0},{"startOffset":1967081,"endOffset":1967199,"count":0},{"startOffset":1967299,"endOffset":1967416,"count":0},{"startOffset":1967462,"endOffset":1967835,"count":0},{"startOffset":1967917,"endOffset":1967953,"count":0},{"startOffset":1967955,"endOffset":1968095,"count":0},{"startOffset":1968195,"endOffset":1968337,"count":0}],"isBlockCoverage":true},{"functionName":"isTemplateStartOfTaggedTemplate","ranges":[{"startOffset":1968383,"endOffset":1968531,"count":32}],"isBlockCoverage":true},{"functionName":"parseTaggedTemplateRest","ranges":[{"startOffset":1968534,"endOffset":1969173,"count":0}],"isBlockCoverage":false},{"functionName":"parseCallExpressionRest","ranges":[{"startOffset":1969176,"endOffset":1970762,"count":16},{"startOffset":1969510,"endOffset":1969762,"count":0},{"startOffset":1969827,"endOffset":1970391,"count":0},{"startOffset":1970420,"endOffset":1970716,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgumentList","ranges":[{"startOffset":1970765,"endOffset":1971001,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeArgumentsInExpression","ranges":[{"startOffset":1971004,"endOffset":1971522,"count":32},{"startOffset":1971136,"endOffset":1971492,"count":0},{"startOffset":1971493,"endOffset":1971508,"count":0},{"startOffset":1971509,"endOffset":1971517,"count":0}],"isBlockCoverage":true},{"functionName":"canFollowTypeArgumentsInExpression","ranges":[{"startOffset":1971525,"endOffset":1972387,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrimaryExpression","ranges":[{"startOffset":1972390,"endOffset":1974249,"count":16},{"startOffset":1972455,"endOffset":1972668,"count":0},{"startOffset":1972698,"endOffset":1972726,"count":0},{"startOffset":1972733,"endOffset":1972761,"count":0},{"startOffset":1972768,"endOffset":1972831,"count":8},{"startOffset":1972838,"endOffset":1972865,"count":0},{"startOffset":1972872,"endOffset":1972900,"count":0},{"startOffset":1972907,"endOffset":1972934,"count":0},{"startOffset":1972941,"endOffset":1972968,"count":5},{"startOffset":1972975,"endOffset":1973035,"count":5},{"startOffset":1973042,"endOffset":1973118,"count":0},{"startOffset":1973125,"endOffset":1973202,"count":2},{"startOffset":1973209,"endOffset":1973285,"count":1},{"startOffset":1973292,"endOffset":1973453,"count":0},{"startOffset":1973460,"endOffset":1973525,"count":0},{"startOffset":1973532,"endOffset":1973598,"count":0},{"startOffset":1973605,"endOffset":1973678,"count":0},{"startOffset":1973685,"endOffset":1973762,"count":0},{"startOffset":1973769,"endOffset":1973794,"count":0},{"startOffset":1973801,"endOffset":1973966,"count":0},{"startOffset":1973973,"endOffset":1974098,"count":0},{"startOffset":1974105,"endOffset":1974178,"count":0},{"startOffset":1974184,"endOffset":1974248,"count":0}],"isBlockCoverage":true},{"functionName":"parseParenthesizedExpression","ranges":[{"startOffset":1974252,"endOffset":1974616,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpreadElement","ranges":[{"startOffset":1974619,"endOffset":1974915,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgumentOrArrayLiteralElement","ranges":[{"startOffset":1974918,"endOffset":1975232,"count":3},{"startOffset":1975013,"endOffset":1975035,"count":0},{"startOffset":1975070,"endOffset":1975132,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgumentExpression","ranges":[{"startOffset":1975235,"endOffset":1975373,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayLiteralExpression","ranges":[{"startOffset":1975376,"endOffset":1975959,"count":2}],"isBlockCoverage":true},{"functionName":"parseObjectLiteralElement","ranges":[{"startOffset":1975962,"endOffset":1978282,"count":13},{"startOffset":1976133,"endOffset":1976361,"count":0},{"startOffset":1976499,"endOffset":1976608,"count":0},{"startOffset":1976664,"endOffset":1976773,"count":0},{"startOffset":1977175,"endOffset":1977299,"count":0},{"startOffset":1977375,"endOffset":1977392,"count":0},{"startOffset":1977451,"endOffset":1977839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1977588,"endOffset":1977692,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1977926,"endOffset":1978030,"count":13}],"isBlockCoverage":true},{"functionName":"parseObjectLiteralExpression","ranges":[{"startOffset":1978285,"endOffset":1978921,"count":2}],"isBlockCoverage":true},{"functionName":"parseFunctionExpression","ranges":[{"startOffset":1978924,"endOffset":1980269,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptionalBindingIdentifier","ranges":[{"startOffset":1980272,"endOffset":1980389,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewExpressionOrNewDotTarget","ranges":[{"startOffset":1980392,"endOffset":1981477,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlock","ranges":[{"startOffset":1981480,"endOffset":1982712,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBlock","ranges":[{"startOffset":1982715,"endOffset":1983508,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":1983511,"endOffset":1983752,"count":0}],"isBlockCoverage":false},{"functionName":"parseIfStatement","ranges":[{"startOffset":1983755,"endOffset":1984457,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoStatement","ranges":[{"startOffset":1984460,"endOffset":1985136,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhileStatement","ranges":[{"startOffset":1985139,"endOffset":1985736,"count":0}],"isBlockCoverage":false},{"functionName":"parseForOrForInOrForOfStatement","ranges":[{"startOffset":1985739,"endOffset":1987891,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakOrContinueStatement","ranges":[{"startOffset":1987894,"endOffset":1988406,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnStatement","ranges":[{"startOffset":1988409,"endOffset":1988767,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":1988770,"endOffset":1989415,"count":0}],"isBlockCoverage":false},{"functionName":"parseCaseClause","ranges":[{"startOffset":1989418,"endOffset":1989844,"count":0}],"isBlockCoverage":false},{"functionName":"parseDefaultClause","ranges":[{"startOffset":1989847,"endOffset":1990148,"count":0}],"isBlockCoverage":false},{"functionName":"parseCaseOrDefaultClause","ranges":[{"startOffset":1990151,"endOffset":1990280,"count":0}],"isBlockCoverage":false},{"functionName":"parseCaseBlock","ranges":[{"startOffset":1990283,"endOffset":1990576,"count":0}],"isBlockCoverage":false},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":1990579,"endOffset":1991024,"count":0}],"isBlockCoverage":false},{"functionName":"parseThrowStatement","ranges":[{"startOffset":1991027,"endOffset":1991601,"count":0}],"isBlockCoverage":false},{"functionName":"parseTryStatement","ranges":[{"startOffset":1991604,"endOffset":1992314,"count":0}],"isBlockCoverage":false},{"functionName":"parseCatchClause","ranges":[{"startOffset":1992317,"endOffset":1992825,"count":0}],"isBlockCoverage":false},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":1992828,"endOffset":1993098,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionOrLabeledStatement","ranges":[{"startOffset":1993101,"endOffset":1993789,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOnSameLine","ranges":[{"startOffset":1993792,"endOffset":1993951,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsClassKeywordOnSameLine","ranges":[{"startOffset":1993954,"endOffset":1994104,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsFunctionKeywordOnSameLine","ranges":[{"startOffset":1994107,"endOffset":1994264,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOrLiteralOnSameLine","ranges":[{"startOffset":1994267,"endOffset":1994551,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration2","ranges":[{"startOffset":1994554,"endOffset":1997995,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfDeclaration","ranges":[{"startOffset":1997998,"endOffset":1998073,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfStatement","ranges":[{"startOffset":1998076,"endOffset":2000042,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsBindingIdentifierOrStartOfDestructuring","ranges":[{"startOffset":2000045,"endOffset":2000243,"count":0}],"isBlockCoverage":false},{"functionName":"isLetDeclaration","ranges":[{"startOffset":2000246,"endOffset":2000353,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsBindingIdentifierOrStartOfDestructuringOnSameLineDisallowOf","ranges":[{"startOffset":2000356,"endOffset":2000555,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsBindingIdentifierOrStartOfDestructuringOnSameLine","ranges":[{"startOffset":2000558,"endOffset":2000843,"count":0}],"isBlockCoverage":false},{"functionName":"isUsingDeclaration","ranges":[{"startOffset":2000846,"endOffset":2000965,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsUsingKeywordThenBindingIdentifierOrStartOfObjectDestructuringOnSameLine","ranges":[{"startOffset":2000968,"endOffset":2001238,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitUsingDeclaration","ranges":[{"startOffset":2001241,"endOffset":2001387,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatement","ranges":[{"startOffset":2001390,"endOffset":2004967,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModifier","ranges":[{"startOffset":2004970,"endOffset":2005067,"count":0}],"isBlockCoverage":false},{"functionName":"parseDeclaration","ranges":[{"startOffset":2005070,"endOffset":2005722,"count":0}],"isBlockCoverage":false},{"functionName":"tryReuseAmbientDeclaration","ranges":[{"startOffset":2005725,"endOffset":2005953,"count":0}],"isBlockCoverage":false},{"functionName":"parseDeclarationWorker","ranges":[{"startOffset":2005956,"endOffset":2007945,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsStringLiteral","ranges":[{"startOffset":2007948,"endOffset":2008040,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsFromKeywordOrEqualsToken","ranges":[{"startOffset":2008043,"endOffset":2008194,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrStringLiteralOnSameLine","ranges":[{"startOffset":2008197,"endOffset":2008382,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBlockOrSemicolon","ranges":[{"startOffset":2008385,"endOffset":2008742,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayBindingElement","ranges":[{"startOffset":2008745,"endOffset":2009247,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectBindingElement","ranges":[{"startOffset":2009250,"endOffset":2009879,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectBindingPattern","ranges":[{"startOffset":2009882,"endOffset":2010235,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayBindingPattern","ranges":[{"startOffset":2010238,"endOffset":2010592,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingIdentifierOrPrivateIdentifierOrPattern","ranges":[{"startOffset":2010595,"endOffset":2010815,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierOrPattern","ranges":[{"startOffset":2010818,"endOffset":2011155,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableDeclarationAllowExclamation","ranges":[{"startOffset":2011158,"endOffset":2011297,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableDeclaration","ranges":[{"startOffset":2011300,"endOffset":2012040,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableDeclarationList","ranges":[{"startOffset":2012043,"endOffset":2013292,"count":0}],"isBlockCoverage":false},{"functionName":"canFollowContextualOfKeyword","ranges":[{"startOffset":2013295,"endOffset":2013420,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableStatement","ranges":[{"startOffset":2013423,"endOffset":2013753,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionDeclaration","ranges":[{"startOffset":2013756,"endOffset":2014928,"count":0}],"isBlockCoverage":false},{"functionName":"parseConstructorName","ranges":[{"startOffset":2014931,"endOffset":2015350,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseConstructorDeclaration","ranges":[{"startOffset":2015353,"endOffset":2016044,"count":0}],"isBlockCoverage":false},{"functionName":"parseMethodDeclaration","ranges":[{"startOffset":2016047,"endOffset":2016931,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyDeclaration","ranges":[{"startOffset":2016934,"endOffset":2017622,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyOrMethodDeclaration","ranges":[{"startOffset":2017625,"endOffset":2018301,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccessorDeclaration","ranges":[{"startOffset":2018304,"endOffset":2019036,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberStart","ranges":[{"startOffset":2019039,"endOffset":2020264,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassStaticBlockDeclaration","ranges":[{"startOffset":2020267,"endOffset":2020589,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassStaticBlockBody","ranges":[{"startOffset":2020592,"endOffset":2020963,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecoratorExpression","ranges":[{"startOffset":2020966,"endOffset":2021470,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseDecorator","ranges":[{"startOffset":2021473,"endOffset":2021745,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseModifier","ranges":[{"startOffset":2021748,"endOffset":2022469,"count":13},{"startOffset":2021951,"endOffset":2021975,"count":0},{"startOffset":2021977,"endOffset":2022081,"count":0},{"startOffset":2022121,"endOffset":2022139,"count":0},{"startOffset":2022160,"endOffset":2022194,"count":0},{"startOffset":2022196,"endOffset":2022224,"count":0},{"startOffset":2022256,"endOffset":2022274,"count":0},{"startOffset":2022296,"endOffset":2022324,"count":0},{"startOffset":2022411,"endOffset":2022468,"count":0}],"isBlockCoverage":true},{"functionName":"parseModifiers","ranges":[{"startOffset":2022472,"endOffset":2023731,"count":13},{"startOffset":2022788,"endOffset":2022891,"count":0},{"startOffset":2023009,"endOffset":2023169,"count":0},{"startOffset":2023197,"endOffset":2023215,"count":0},{"startOffset":2023216,"endOffset":2023233,"count":0},{"startOffset":2023249,"endOffset":2023389,"count":0},{"startOffset":2023420,"endOffset":2023680,"count":0},{"startOffset":2023697,"endOffset":2023726,"count":0}],"isBlockCoverage":true},{"functionName":"parseModifiersForArrowFunction","ranges":[{"startOffset":2023734,"endOffset":2024061,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassElement","ranges":[{"startOffset":2024064,"endOffset":2026467,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecoratedExpression","ranges":[{"startOffset":2026470,"endOffset":2027080,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassExpression","ranges":[{"startOffset":2027083,"endOffset":2027293,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassDeclaration","ranges":[{"startOffset":2027296,"endOffset":2027458,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassDeclarationOrExpression","ranges":[{"startOffset":2027461,"endOffset":2028428,"count":0}],"isBlockCoverage":false},{"functionName":"parseNameOfClassDeclarationOrExpression","ranges":[{"startOffset":2028431,"endOffset":2028597,"count":0}],"isBlockCoverage":false},{"functionName":"isImplementsClause","ranges":[{"startOffset":2028600,"endOffset":2028732,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeritageClauses","ranges":[{"startOffset":2028735,"endOffset":2028899,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeritageClause","ranges":[{"startOffset":2028902,"endOffset":2029274,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionWithTypeArguments","ranges":[{"startOffset":2029277,"endOffset":2029668,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseTypeArguments","ranges":[{"startOffset":2029671,"endOffset":2029872,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause2","ranges":[{"startOffset":2029875,"endOffset":2030000,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMembers","ranges":[{"startOffset":2030003,"endOffset":2030100,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterfaceDeclaration","ranges":[{"startOffset":2030103,"endOffset":2030568,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAliasDeclaration","ranges":[{"startOffset":2030571,"endOffset":2031207,"count":0}],"isBlockCoverage":false},{"functionName":"parseEnumMember","ranges":[{"startOffset":2031210,"endOffset":2031508,"count":0}],"isBlockCoverage":false},{"functionName":"parseEnumDeclaration","ranges":[{"startOffset":2031511,"endOffset":2032062,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleBlock","ranges":[{"startOffset":2032065,"endOffset":2032443,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleOrNamespaceDeclaration","ranges":[{"startOffset":2032446,"endOffset":2033058,"count":0}],"isBlockCoverage":false},{"functionName":"parseAmbientExternalModuleDeclaration","ranges":[{"startOffset":2033061,"endOffset":2033673,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleDeclaration","ranges":[{"startOffset":2033676,"endOffset":2034266,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference2","ranges":[{"startOffset":2034269,"endOffset":2034396,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenParen","ranges":[{"startOffset":2034399,"endOffset":2034488,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenBrace","ranges":[{"startOffset":2034491,"endOffset":2034580,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsSlash","ranges":[{"startOffset":2034583,"endOffset":2034664,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamespaceExportDeclaration","ranges":[{"startOffset":2034667,"endOffset":2035037,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportDeclarationOrImportEqualsDeclaration","ranges":[{"startOffset":2035040,"endOffset":2036270,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseImportClause","ranges":[{"startOffset":2036273,"endOffset":2036697,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseImportAttributes","ranges":[{"startOffset":2036700,"endOffset":2036968,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportAttribute","ranges":[{"startOffset":2036971,"endOffset":2037388,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportAttributes","ranges":[{"startOffset":2037391,"endOffset":2038716,"count":0}],"isBlockCoverage":false},{"functionName":"tokenAfterImportDefinitelyProducesImportDeclaration","ranges":[{"startOffset":2038719,"endOffset":2038873,"count":0}],"isBlockCoverage":false},{"functionName":"tokenAfterImportedIdentifierDefinitelyProducesImportDeclaration","ranges":[{"startOffset":2038876,"endOffset":2039037,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportEqualsDeclaration","ranges":[{"startOffset":2039040,"endOffset":2039443,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportClause","ranges":[{"startOffset":2039446,"endOffset":2040021,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleReference","ranges":[{"startOffset":2040024,"endOffset":2040201,"count":0}],"isBlockCoverage":false},{"functionName":"parseExternalModuleReference","ranges":[{"startOffset":2040204,"endOffset":2040540,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleSpecifier","ranges":[{"startOffset":2040543,"endOffset":2040790,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamespaceImport","ranges":[{"startOffset":2040793,"endOffset":2041045,"count":0}],"isBlockCoverage":false},{"functionName":"canParseModuleExportName","ranges":[{"startOffset":2041048,"endOffset":2041175,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleExportName","ranges":[{"startOffset":2041178,"endOffset":2041307,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamedImportsOrExports","ranges":[{"startOffset":2041310,"endOffset":2041787,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifier","ranges":[{"startOffset":2041790,"endOffset":2041965,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":2041968,"endOffset":2042073,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportOrExportSpecifier","ranges":[{"startOffset":2042076,"endOffset":2044719,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamespaceExport","ranges":[{"startOffset":2044722,"endOffset":2044866,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":2044869,"endOffset":2046274,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportAssignment","ranges":[{"startOffset":2046277,"endOffset":2046930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2046956,"endOffset":2049210,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2049273,"endOffset":2049442,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2049496,"endOffset":2094275,"count":1}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpressionForTests2","ranges":[{"startOffset":2049520,"endOffset":2050498,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpression","ranges":[{"startOffset":2050590,"endOffset":2051091,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocNameReference","ranges":[{"startOffset":2051166,"endOffset":2051871,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment2","ranges":[{"startOffset":2051944,"endOffset":2052526,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocComment","ranges":[{"startOffset":2052604,"endOffset":2053412,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2053494,"endOffset":2053808,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2053876,"endOffset":2054152,"count":1}],"isBlockCoverage":false},{"functionName":"parseJSDocCommentWorker","ranges":[{"startOffset":2054206,"endOffset":2094271,"count":0}],"isBlockCoverage":false},{"functionName":"markAsIncrementallyParsed","ranges":[{"startOffset":2094434,"endOffset":2094651,"count":0}],"isBlockCoverage":false},{"functionName":"intersectsIncrementalChange","ranges":[{"startOffset":2094711,"endOffset":2094799,"count":0}],"isBlockCoverage":false},{"functionName":"markAsIntersectingIncrementalChange","ranges":[{"startOffset":2094800,"endOffset":2094889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2094914,"endOffset":2108236,"count":1}],"isBlockCoverage":false},{"functionName":"updateSourceFile2","ranges":[{"startOffset":2094942,"endOffset":2097246,"count":0}],"isBlockCoverage":false},{"functionName":"getNewCommentDirectives","ranges":[{"startOffset":2097308,"endOffset":2098615,"count":0}],"isBlockCoverage":false},{"functionName":"moveElementEntirelyPastChangeRange","ranges":[{"startOffset":2098618,"endOffset":2099691,"count":0}],"isBlockCoverage":false},{"functionName":"shouldCheckNode","ranges":[{"startOffset":2099694,"endOffset":2099902,"count":0}],"isBlockCoverage":false},{"functionName":"adjustIntersectingElement","ranges":[{"startOffset":2099905,"endOffset":2100973,"count":0}],"isBlockCoverage":false},{"functionName":"checkNodePositions","ranges":[{"startOffset":2100976,"endOffset":2101416,"count":0}],"isBlockCoverage":false},{"functionName":"updateTokenPositionsAndMarkElements","ranges":[{"startOffset":2101419,"endOffset":2103296,"count":0}],"isBlockCoverage":false},{"functionName":"extendToAffectedRange","ranges":[{"startOffset":2103299,"endOffset":2103934,"count":0}],"isBlockCoverage":false},{"functionName":"findNearestNodeStartingBeforeOrAtPosition","ranges":[{"startOffset":2103937,"endOffset":2105187,"count":0}],"isBlockCoverage":false},{"functionName":"checkChangeRange","ranges":[{"startOffset":2105190,"endOffset":2106027,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxCursor","ranges":[{"startOffset":2106030,"endOffset":2108009,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2108098,"endOffset":2108189,"count":1}],"isBlockCoverage":false},{"functionName":"isDeclarationFileName","ranges":[{"startOffset":2108286,"endOffset":2108389,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFileExtension","ranges":[{"startOffset":2108390,"endOffset":2108873,"count":0}],"isBlockCoverage":false},{"functionName":"parseResolutionMode","ranges":[{"startOffset":2108874,"endOffset":2109215,"count":0}],"isBlockCoverage":false},{"functionName":"processCommentPragmas","ranges":[{"startOffset":2109216,"endOffset":2109924,"count":0}],"isBlockCoverage":false},{"functionName":"processPragmasIntoFields","ranges":[{"startOffset":2109925,"endOffset":2112938,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedArgRegEx","ranges":[{"startOffset":2112991,"endOffset":2113257,"count":0}],"isBlockCoverage":false},{"functionName":"extractPragmas","ranges":[{"startOffset":2113400,"endOffset":2115114,"count":0}],"isBlockCoverage":false},{"functionName":"addPragmaForMatch","ranges":[{"startOffset":2115115,"endOffset":2115524,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedPragmaArguments","ranges":[{"startOffset":2115525,"endOffset":2116025,"count":0}],"isBlockCoverage":false},{"functionName":"tagNamesAreEquivalent","ranges":[{"startOffset":2116026,"endOffset":2116566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2117011,"endOffset":2117046,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2121782,"endOffset":2121801,"count":98}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2168348,"endOffset":2168395,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2168460,"endOffset":2168492,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2168568,"endOffset":2168611,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2168681,"endOffset":2168725,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2168795,"endOffset":2168868,"count":127},{"startOffset":2168834,"endOffset":2168868,"count":119}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2168936,"endOffset":2168980,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2169051,"endOffset":2169106,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2169181,"endOffset":2169284,"count":127},{"startOffset":2169235,"endOffset":2169284,"count":124},{"startOffset":2169264,"endOffset":2169284,"count":118}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2169362,"endOffset":2169465,"count":6},{"startOffset":2169416,"endOffset":2169465,"count":4}],"isBlockCoverage":true},{"functionName":"isCommandLineOptionOfCustomType","ranges":[{"startOffset":2169565,"endOffset":2169650,"count":127}],"isBlockCoverage":true},{"functionName":"createOptionNameMap","ranges":[{"startOffset":2171642,"endOffset":2172051,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsNameMap","ranges":[{"startOffset":2172077,"endOffset":2172206,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticForInvalidCustomType","ranges":[{"startOffset":2172560,"endOffset":2172700,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForInvalidCustomType","ranges":[{"startOffset":2172701,"endOffset":2173081,"count":0}],"isBlockCoverage":false},{"functionName":"parseCustomTypeOption","ranges":[{"startOffset":2173082,"endOffset":2173211,"count":0}],"isBlockCoverage":false},{"functionName":"parseListTypeOption","ranges":[{"startOffset":2173212,"endOffset":2174029,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionName","ranges":[{"startOffset":2174030,"endOffset":2174086,"count":137}],"isBlockCoverage":true},{"functionName":"createUnknownOptionError","ranges":[{"startOffset":2174087,"endOffset":2175112,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLineWorker","ranges":[{"startOffset":2175113,"endOffset":2177529,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptionValue","ranges":[{"startOffset":2177530,"endOffset":2179825,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLine","ranges":[{"startOffset":2180197,"endOffset":2180343,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionFromName","ranges":[{"startOffset":2180344,"endOffset":2180480,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionDeclarationFromName","ranges":[{"startOffset":2180481,"endOffset":2180857,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOptionsNameMap","ranges":[{"startOffset":2180888,"endOffset":2181023,"count":0}],"isBlockCoverage":false},{"functionName":"parseBuildCommand","ranges":[{"startOffset":2181551,"endOffset":2182545,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticText","ranges":[{"startOffset":2182546,"endOffset":2182675,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLineOfConfigFile","ranges":[{"startOffset":2182676,"endOffset":2183658,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigFile","ranges":[{"startOffset":2183659,"endOffset":2183901,"count":1},{"startOffset":2183857,"endOffset":2183898,"count":0}],"isBlockCoverage":true},{"functionName":"parseConfigFileTextToJson","ranges":[{"startOffset":2183902,"endOffset":2184285,"count":1},{"startOffset":2184233,"endOffset":2184269,"count":0}],"isBlockCoverage":true},{"functionName":"readJsonConfigFile","ranges":[{"startOffset":2184286,"endOffset":2184531,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadFile","ranges":[{"startOffset":2184532,"endOffset":2184847,"count":1},{"startOffset":2184630,"endOffset":2184743,"count":0},{"startOffset":2184769,"endOffset":2184837,"count":0}],"isBlockCoverage":true},{"functionName":"commandLineOptionsToMap","ranges":[{"startOffset":2184848,"endOffset":2184938,"count":3}],"isBlockCoverage":true},{"functionName":"getWatchOptionsNameMap","ranges":[{"startOffset":2185234,"endOffset":2185375,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandLineCompilerOptionsMap","ranges":[{"startOffset":2185776,"endOffset":2185954,"count":2},{"startOffset":2185866,"endOffset":2185951,"count":1}],"isBlockCoverage":true},{"functionName":"getCommandLineWatchOptionsMap","ranges":[{"startOffset":2185992,"endOffset":2186158,"count":2},{"startOffset":2186076,"endOffset":2186155,"count":1}],"isBlockCoverage":true},{"functionName":"getCommandLineTypeAcquisitionMap","ranges":[{"startOffset":2186199,"endOffset":2186386,"count":2},{"startOffset":2186289,"endOffset":2186383,"count":1}],"isBlockCoverage":true},{"functionName":"getTsconfigRootOptionsMap","ranges":[{"startOffset":2187203,"endOffset":2188768,"count":0}],"isBlockCoverage":false},{"functionName":"convertConfigFileToObject","ranges":[{"startOffset":2188769,"endOffset":2189808,"count":1},{"startOffset":2188925,"endOffset":2188933,"count":0},{"startOffset":2189034,"endOffset":2189672,"count":0}],"isBlockCoverage":true},{"functionName":"convertToObject","ranges":[{"startOffset":2189809,"endOffset":2190066,"count":0}],"isBlockCoverage":false},{"functionName":"convertToJson","ranges":[{"startOffset":2190067,"endOffset":2194058,"count":1},{"startOffset":2190188,"endOffset":2190231,"count":0},{"startOffset":2190324,"endOffset":2190360,"count":0}],"isBlockCoverage":true},{"functionName":"convertObjectLiteralExpressionToJson","ranges":[{"startOffset":2190365,"endOffset":2191837,"count":2},{"startOffset":2190481,"endOffset":2190489,"count":0},{"startOffset":2190534,"endOffset":2191814,"count":13},{"startOffset":2190593,"endOffset":2190741,"count":0},{"startOffset":2190775,"endOffset":2190947,"count":0},{"startOffset":2190995,"endOffset":2191144,"count":0},{"startOffset":2191208,"endOffset":2191216,"count":0},{"startOffset":2191397,"endOffset":2191426,"count":0},{"startOffset":2191445,"endOffset":2191462,"count":0},{"startOffset":2191463,"endOffset":2191471,"count":0},{"startOffset":2191714,"endOffset":2191799,"count":0}],"isBlockCoverage":true},{"functionName":"convertArrayLiteralExpressionToJson","ranges":[{"startOffset":2191840,"endOffset":2192174,"count":2},{"startOffset":2191934,"endOffset":2192051,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2191959,"endOffset":2192022,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2192083,"endOffset":2192146,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2192149,"endOffset":2192168,"count":3}],"isBlockCoverage":true},{"functionName":"convertPropertyValueToJson","ranges":[{"startOffset":2192177,"endOffset":2193936,"count":17},{"startOffset":2192282,"endOffset":2192330,"count":5},{"startOffset":2192337,"endOffset":2192386,"count":0},{"startOffset":2192393,"endOffset":2192441,"count":0},{"startOffset":2192498,"endOffset":2192772,"count":8},{"startOffset":2192579,"endOffset":2192735,"count":0},{"startOffset":2192779,"endOffset":2192852,"count":0},{"startOffset":2192859,"endOffset":2193100,"count":0},{"startOffset":2193107,"endOffset":2193289,"count":2},{"startOffset":2193296,"endOffset":2193468,"count":2},{"startOffset":2193440,"endOffset":2193457,"count":0},{"startOffset":2193474,"endOffset":2193935,"count":0}],"isBlockCoverage":true},{"functionName":"isDoubleQuotedString","ranges":[{"startOffset":2193939,"endOffset":2194056,"count":21}],"isBlockCoverage":true},{"functionName":"getCompilerOptionValueTypeString","ranges":[{"startOffset":2194059,"endOffset":2194303,"count":0}],"isBlockCoverage":false},{"functionName":"isCompilerOptionsValue","ranges":[{"startOffset":2194304,"endOffset":2194775,"count":15},{"startOffset":2194403,"endOffset":2194442,"count":0},{"startOffset":2194475,"endOffset":2194511,"count":0},{"startOffset":2194553,"endOffset":2194638,"count":0},{"startOffset":2194686,"endOffset":2194699,"count":12},{"startOffset":2194700,"endOffset":2194710,"count":3},{"startOffset":2194757,"endOffset":2194774,"count":0}],"isBlockCoverage":true},{"functionName":"convertToTSConfig","ranges":[{"startOffset":2194776,"endOffset":2197616,"count":0}],"isBlockCoverage":false},{"functionName":"optionDependsOn","ranges":[{"startOffset":2197617,"endOffset":2198021,"count":0}],"isBlockCoverage":false},{"functionName":"optionMapToObject","ranges":[{"startOffset":2198022,"endOffset":2198103,"count":0}],"isBlockCoverage":false},{"functionName":"filterSameAsDefaultInclude","ranges":[{"startOffset":2198104,"endOffset":2198298,"count":0}],"isBlockCoverage":false},{"functionName":"matchesSpecs","ranges":[{"startOffset":2198299,"endOffset":2199060,"count":0}],"isBlockCoverage":false},{"functionName":"getCustomTypeMapOfCommandLineOption","ranges":[{"startOffset":2199061,"endOffset":2199432,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfCompilerOptionValue","ranges":[{"startOffset":2199433,"endOffset":2199614,"count":0}],"isBlockCoverage":false},{"functionName":"serializeCompilerOptions","ranges":[{"startOffset":2199615,"endOffset":2199753,"count":0}],"isBlockCoverage":false},{"functionName":"serializeWatchOptions","ranges":[{"startOffset":2199754,"endOffset":2199868,"count":0}],"isBlockCoverage":false},{"functionName":"serializeOptionBaseObject","ranges":[{"startOffset":2199869,"endOffset":2201659,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiffValue","ranges":[{"startOffset":2201660,"endOffset":2202538,"count":0}],"isBlockCoverage":false},{"functionName":"getSerializedCompilerOption","ranges":[{"startOffset":2202539,"endOffset":2202711,"count":0}],"isBlockCoverage":false},{"functionName":"generateTSConfig","ranges":[{"startOffset":2202712,"endOffset":2206179,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionsWithAbsolutePaths","ranges":[{"startOffset":2206180,"endOffset":2206695,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionValueWithAbsolutePaths","ranges":[{"startOffset":2206696,"endOffset":2207140,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonConfigFileContent","ranges":[{"startOffset":2207141,"endOffset":2207566,"count":1}],"isBlockCoverage":true},{"functionName":"parseJsonSourceFileConfigFileContent","ranges":[{"startOffset":2207567,"endOffset":2208230,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigFileInOptions","ranges":[{"startOffset":2208231,"endOffset":2208420,"count":6},{"startOffset":2208304,"endOffset":2208418,"count":0}],"isBlockCoverage":true},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2208421,"endOffset":2208491,"count":47}],"isBlockCoverage":true},{"functionName":"directoryOfCombinedPath","ranges":[{"startOffset":2208492,"endOffset":2208622,"count":1}],"isBlockCoverage":true},{"functionName":"parseJsonConfigFileContentWorker","ranges":[{"startOffset":2208656,"endOffset":2216117,"count":1},{"startOffset":2208894,"endOffset":2208918,"count":0},{"startOffset":2209260,"endOffset":2209265,"count":0},{"startOffset":2209425,"endOffset":2209453,"count":0},{"startOffset":2209454,"endOffset":2209511,"count":0},{"startOffset":2209774,"endOffset":2209784,"count":0},{"startOffset":2209853,"endOffset":2209898,"count":0},{"startOffset":2210156,"endOffset":2210186,"count":0}],"isBlockCoverage":true},{"functionName":"getConfigFileSpecs","ranges":[{"startOffset":2210682,"endOffset":2214021,"count":1},{"startOffset":2210906,"endOffset":2211795,"count":0},{"startOffset":2212037,"endOffset":2212249,"count":0},{"startOffset":2212308,"endOffset":2212393,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2210771,"endOffset":2210811,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2211418,"endOffset":2211452,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2212223,"endOffset":2212233,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNames","ranges":[{"startOffset":2214024,"endOffset":2214378,"count":1}],"isBlockCoverage":true},{"functionName":"getProjectReferences","ranges":[{"startOffset":2214381,"endOffset":2215140,"count":1},{"startOffset":2214595,"endOffset":2215106,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2214508,"endOffset":2214548,"count":0}],"isBlockCoverage":false},{"functionName":"toPropValue","ranges":[{"startOffset":2215143,"endOffset":2215235,"count":3},{"startOffset":2215209,"endOffset":2215221,"count":2},{"startOffset":2215222,"endOffset":2215230,"count":1}],"isBlockCoverage":true},{"functionName":"getSpecsFromRaw","ranges":[{"startOffset":2215238,"endOffset":2215327,"count":3}],"isBlockCoverage":true},{"functionName":"getPropFromRaw","ranges":[{"startOffset":2215330,"endOffset":2215953,"count":5},{"startOffset":2215427,"endOffset":2215459,"count":2},{"startOffset":2215461,"endOffset":2215927,"count":2},{"startOffset":2215589,"endOffset":2215730,"count":0},{"startOffset":2215761,"endOffset":2215921,"count":0},{"startOffset":2215927,"endOffset":2215952,"count":3}],"isBlockCoverage":true},{"functionName":"createCompilerDiagnosticOnlyIfJson","ranges":[{"startOffset":2215956,"endOffset":2216115,"count":0}],"isBlockCoverage":false},{"functionName":"handleWatchOptionsConfigDirTemplateSubstitution","ranges":[{"startOffset":2216118,"endOffset":2216321,"count":1}],"isBlockCoverage":true},{"functionName":"handleOptionConfigDirTemplateSubstitution","ranges":[{"startOffset":2216322,"endOffset":2217598,"count":2},{"startOffset":2216431,"endOffset":2216505,"count":1},{"startOffset":2216505,"endOffset":2217452,"count":12},{"startOffset":2216548,"endOffset":2217448,"count":2},{"startOffset":2216737,"endOffset":2216844,"count":0},{"startOffset":2216870,"endOffset":2217106,"count":0},{"startOffset":2217115,"endOffset":2217366,"count":0},{"startOffset":2217375,"endOffset":2217434,"count":0},{"startOffset":2217452,"endOffset":2217479,"count":1}],"isBlockCoverage":true},{"functionName":"setOptionValue","ranges":[{"startOffset":2217483,"endOffset":2217596,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithConfigDirTemplate","ranges":[{"startOffset":2217640,"endOffset":2217794,"count":7}],"isBlockCoverage":true},{"functionName":"getSubstitutedPathWithConfigDirTemplate","ranges":[{"startOffset":2217795,"endOffset":2217950,"count":0}],"isBlockCoverage":false},{"functionName":"getSubstitutedStringArrayWithConfigDirTemplate","ranges":[{"startOffset":2217951,"endOffset":2218290,"count":3},{"startOffset":2218038,"endOffset":2218050,"count":1},{"startOffset":2218050,"endOffset":2218289,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2218080,"endOffset":2218269,"count":3},{"startOffset":2218156,"endOffset":2218195,"count":0}],"isBlockCoverage":true},{"functionName":"getSubstitutedMapLikeOfStringArrayWithConfigDirTemplate","ranges":[{"startOffset":2218291,"endOffset":2218719,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorNoInputFiles","ranges":[{"startOffset":2218720,"endOffset":2218897,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorForNoInputFiles","ranges":[{"startOffset":2218898,"endOffset":2219251,"count":1},{"startOffset":2219146,"endOffset":2219164,"count":0},{"startOffset":2219198,"endOffset":2219203,"count":0},{"startOffset":2219238,"endOffset":2219243,"count":0}],"isBlockCoverage":true},{"functionName":"shouldReportNoInputFiles","ranges":[{"startOffset":2219252,"endOffset":2219458,"count":1}],"isBlockCoverage":true},{"functionName":"isSolutionConfig","ranges":[{"startOffset":2219459,"endOffset":2219572,"count":0}],"isBlockCoverage":false},{"functionName":"canJsonReportNoInputFiles","ranges":[{"startOffset":2219573,"endOffset":2219688,"count":1}],"isBlockCoverage":true},{"functionName":"updateErrorForNoInputFiles","ranges":[{"startOffset":2219689,"endOffset":2220198,"count":0}],"isBlockCoverage":false},{"functionName":"isSuccessfulParsedTsconfig","ranges":[{"startOffset":2220199,"endOffset":2220271,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfig","ranges":[{"startOffset":2220272,"endOffset":2223853,"count":1},{"startOffset":2220506,"endOffset":2220511,"count":0},{"startOffset":2220570,"endOffset":2220804,"count":0},{"startOffset":2220899,"endOffset":2220983,"count":0},{"startOffset":2221024,"endOffset":2221032,"count":0},{"startOffset":2221045,"endOffset":2221098,"count":0},{"startOffset":2221135,"endOffset":2222172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2221406,"endOffset":2221477,"count":0}],"isBlockCoverage":false},{"functionName":"applyExtendedConfig","ranges":[{"startOffset":2222195,"endOffset":2223612,"count":0}],"isBlockCoverage":false},{"functionName":"assignWatchOptions","ranges":[{"startOffset":2223615,"endOffset":2223851,"count":0}],"isBlockCoverage":false},{"functionName":"parseOwnConfigOfJson","ranges":[{"startOffset":2223854,"endOffset":2224730,"count":1},{"startOffset":2223969,"endOffset":2224075,"count":0},{"startOffset":2224551,"endOffset":2224634,"count":0}],"isBlockCoverage":true},{"functionName":"getExtendsConfigPathOrArray","ranges":[{"startOffset":2224731,"endOffset":2226037,"count":0}],"isBlockCoverage":false},{"functionName":"parseOwnConfigOfJsonSourceFile","ranges":[{"startOffset":2226038,"endOffset":2229021,"count":0}],"isBlockCoverage":false},{"functionName":"getExtendsConfigPath","ranges":[{"startOffset":2229022,"endOffset":2230396,"count":0}],"isBlockCoverage":false},{"functionName":"getExtendedConfig","ranges":[{"startOffset":2230397,"endOffset":2231851,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompileOnSaveOptionFromJson","ranges":[{"startOffset":2231852,"endOffset":2232182,"count":1},{"startOffset":2232020,"endOffset":2232179,"count":0}],"isBlockCoverage":true},{"functionName":"convertCompilerOptionsFromJson","ranges":[{"startOffset":2232183,"endOffset":2232419,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisitionFromJson","ranges":[{"startOffset":2232420,"endOffset":2232656,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions","ranges":[{"startOffset":2232657,"endOffset":2232938,"count":1},{"startOffset":2232798,"endOffset":2232912,"count":0}],"isBlockCoverage":true},{"functionName":"convertCompilerOptionsFromJsonWorker","ranges":[{"startOffset":2232939,"endOffset":2233345,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultTypeAcquisition","ranges":[{"startOffset":2233346,"endOffset":2233520,"count":1}],"isBlockCoverage":true},{"functionName":"convertTypeAcquisitionFromJsonWorker","ranges":[{"startOffset":2233521,"endOffset":2233836,"count":1}],"isBlockCoverage":true},{"functionName":"convertWatchOptionsFromJsonWorker","ranges":[{"startOffset":2233837,"endOffset":2234105,"count":1}],"isBlockCoverage":true},{"functionName":"convertOptionsFromJson","ranges":[{"startOffset":2234106,"endOffset":2234573,"count":3},{"startOffset":2234236,"endOffset":2234253,"count":2},{"startOffset":2234253,"endOffset":2234286,"count":1},{"startOffset":2234286,"endOffset":2234546,"count":15},{"startOffset":2234365,"endOffset":2234389,"count":0},{"startOffset":2234467,"endOffset":2234542,"count":0},{"startOffset":2234546,"endOffset":2234572,"count":1}],"isBlockCoverage":true},{"functionName":"createDiagnosticForNodeInSourceFileOrCompilerDiagnostic","ranges":[{"startOffset":2234574,"endOffset":2234826,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOption","ranges":[{"startOffset":2234827,"endOffset":2236330,"count":15},{"startOffset":2234964,"endOffset":2235207,"count":0},{"startOffset":2235309,"endOffset":2235326,"count":0},{"startOffset":2235328,"endOffset":2235456,"count":0},{"startOffset":2235495,"endOffset":2235747,"count":0},{"startOffset":2235778,"endOffset":2235878,"count":3},{"startOffset":2235878,"endOffset":2236025,"count":12},{"startOffset":2236025,"endOffset":2236041,"count":0},{"startOffset":2236042,"endOffset":2236102,"count":12},{"startOffset":2236107,"endOffset":2236328,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeNonListOptionValue","ranges":[{"startOffset":2236331,"endOffset":2236631,"count":12},{"startOffset":2236420,"endOffset":2236613,"count":2},{"startOffset":2236552,"endOffset":2236559,"count":0},{"startOffset":2236583,"endOffset":2236609,"count":0}],"isBlockCoverage":true},{"functionName":"validateJsonOptionValue","ranges":[{"startOffset":2236632,"endOffset":2237001,"count":15},{"startOffset":2236758,"endOffset":2236772,"count":0},{"startOffset":2236829,"endOffset":2236850,"count":0},{"startOffset":2236875,"endOffset":2237000,"count":0}],"isBlockCoverage":true},{"functionName":"convertJsonOptionOfCustomType","ranges":[{"startOffset":2237002,"endOffset":2237516,"count":3},{"startOffset":2237124,"endOffset":2237138,"count":0},{"startOffset":2237317,"endOffset":2237514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2237383,"endOffset":2237507,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOptionOfListType","ranges":[{"startOffset":2237517,"endOffset":2237892,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesFromConfigSpecs","ranges":[{"startOffset":2238008,"endOffset":2240701,"count":1},{"startOffset":2238747,"endOffset":2238922,"count":0},{"startOffset":2239236,"endOffset":2240489,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2239388,"endOffset":2239426,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2239535,"endOffset":2239562,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2239646,"endOffset":2239719,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2239808,"endOffset":2239829,"count":0}],"isBlockCoverage":false},{"functionName":"isExcludedFile","ranges":[{"startOffset":2240702,"endOffset":2241397,"count":0}],"isBlockCoverage":false},{"functionName":"invalidDotDotAfterRecursiveWildcard","ranges":[{"startOffset":2241398,"endOffset":2241688,"count":3},{"startOffset":2241493,"endOffset":2241496,"count":0},{"startOffset":2241546,"endOffset":2241569,"count":2},{"startOffset":2241569,"endOffset":2241612,"count":1},{"startOffset":2241612,"endOffset":2241622,"count":0},{"startOffset":2241623,"endOffset":2241646,"count":1}],"isBlockCoverage":true},{"functionName":"matchesExclude","ranges":[{"startOffset":2241689,"endOffset":2241975,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExcludeWorker","ranges":[{"startOffset":2241976,"endOffset":2242529,"count":0}],"isBlockCoverage":false},{"functionName":"validateSpecs","ranges":[{"startOffset":2242530,"endOffset":2243123,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2242644,"endOffset":2242877,"count":3},{"startOffset":2242681,"endOffset":2242694,"count":0},{"startOffset":2242790,"endOffset":2242844,"count":0}],"isBlockCoverage":true},{"functionName":"createDiagnostic","ranges":[{"startOffset":2242882,"endOffset":2243121,"count":0}],"isBlockCoverage":false},{"functionName":"specToDiagnostic","ranges":[{"startOffset":2243124,"endOffset":2243654,"count":3},{"startOffset":2243259,"endOffset":2243304,"count":1},{"startOffset":2243306,"endOffset":2243433,"count":0},{"startOffset":2243486,"endOffset":2243652,"count":0}],"isBlockCoverage":true},{"functionName":"getWildcardDirectories","ranges":[{"startOffset":2243655,"endOffset":2245415,"count":1},{"startOffset":2243981,"endOffset":2243985,"count":0},{"startOffset":2244290,"endOffset":2244317,"count":0},{"startOffset":2244576,"endOffset":2244611,"count":0},{"startOffset":2244659,"endOffset":2244683,"count":0},{"startOffset":2244741,"endOffset":2244755,"count":0},{"startOffset":2245221,"endOffset":2245294,"count":0},{"startOffset":2245296,"endOffset":2245355,"count":0}],"isBlockCoverage":true},{"functionName":"toCanonicalKey","ranges":[{"startOffset":2245416,"endOffset":2245549,"count":2},{"startOffset":2245512,"endOffset":2245518,"count":0}],"isBlockCoverage":true},{"functionName":"getWildcardDirectoryFromSpec","ranges":[{"startOffset":2245550,"endOffset":2246479,"count":1},{"startOffset":2246014,"endOffset":2246068,"count":0},{"startOffset":2246168,"endOffset":2246171,"count":0},{"startOffset":2246193,"endOffset":2246478,"count":0}],"isBlockCoverage":true},{"functionName":"hasFileWithHigherPriorityExtension","ranges":[{"startOffset":2246480,"endOffset":2247274,"count":0}],"isBlockCoverage":false},{"functionName":"removeWildcardFilesWithLowerPriorityExtension","ranges":[{"startOffset":2247275,"endOffset":2247798,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsForTelemetry","ranges":[{"startOffset":2247799,"endOffset":2248104,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionValueWithEmptyStrings","ranges":[{"startOffset":2248105,"endOffset":2248950,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultValueForOption","ranges":[{"startOffset":2248951,"endOffset":2249632,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":2249672,"endOffset":2249761,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceEnabled","ranges":[{"startOffset":2249762,"endOffset":2249881,"count":0}],"isBlockCoverage":false},{"functionName":"withPackageId","ranges":[{"startOffset":2249882,"endOffset":2250574,"count":0}],"isBlockCoverage":false},{"functionName":"noPackageId","ranges":[{"startOffset":2250575,"endOffset":2250695,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPackageId","ranges":[{"startOffset":2250696,"endOffset":2250892,"count":0}],"isBlockCoverage":false},{"functionName":"formatExtensions","ranges":[{"startOffset":2250893,"endOffset":2251237,"count":0}],"isBlockCoverage":false},{"functionName":"extensionsToExtensionsArray","ranges":[{"startOffset":2251238,"endOffset":2251656,"count":0}],"isBlockCoverage":false},{"functionName":"resolvedTypeScriptOnly","ranges":[{"startOffset":2251657,"endOffset":2251864,"count":0}],"isBlockCoverage":false},{"functionName":"createResolvedModuleWithFailedLookupLocationsHandlingSymlink","ranges":[{"startOffset":2251865,"endOffset":2252705,"count":0}],"isBlockCoverage":false},{"functionName":"createResolvedModuleWithFailedLookupLocations","ranges":[{"startOffset":2252706,"endOffset":2254433,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResolutionField","ranges":[{"startOffset":2254434,"endOffset":2254519,"count":0}],"isBlockCoverage":false},{"functionName":"updateResolutionField","ranges":[{"startOffset":2254520,"endOffset":2254714,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResolutionFieldForReadonlyCache","ranges":[{"startOffset":2254715,"endOffset":2254966,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonField","ranges":[{"startOffset":2254967,"endOffset":2255543,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonPathField","ranges":[{"startOffset":2255544,"endOffset":2256131,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTypesFields","ranges":[{"startOffset":2256132,"endOffset":2256359,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTSConfigField","ranges":[{"startOffset":2256360,"endOffset":2256518,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonMainField","ranges":[{"startOffset":2256519,"endOffset":2256669,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTypesVersionsField","ranges":[{"startOffset":2256670,"endOffset":2257036,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTypesVersionPaths","ranges":[{"startOffset":2257037,"endOffset":2258117,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonTypesVersionsPaths","ranges":[{"startOffset":2258141,"endOffset":2258572,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":2258573,"endOffset":2258991,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTypeRoots","ranges":[{"startOffset":2258992,"endOffset":2259278,"count":0}],"isBlockCoverage":false},{"functionName":"arePathsEqual","ranges":[{"startOffset":2259344,"endOffset":2259635,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalAndResolvedFileName","ranges":[{"startOffset":2259636,"endOffset":2260151,"count":0}],"isBlockCoverage":false},{"functionName":"getCandidateFromTypeRoot","ranges":[{"startOffset":2260152,"endOffset":2260528,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirective","ranges":[{"startOffset":2260529,"endOffset":2269830,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeResolutionFeatures","ranges":[{"startOffset":2269831,"endOffset":2270576,"count":0}],"isBlockCoverage":false},{"functionName":"getConditions","ranges":[{"startOffset":2270577,"endOffset":2271192,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageNameToPackageJson","ranges":[{"startOffset":2271193,"endOffset":2271905,"count":0}],"isBlockCoverage":false},{"functionName":"getAutomaticTypeDirectiveNames","ranges":[{"startOffset":2271906,"endOffset":2272895,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageJsonInfo","ranges":[{"startOffset":2272896,"endOffset":2272987,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingPackageJsonInfo","ranges":[{"startOffset":2272988,"endOffset":2273069,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionValueToString","ranges":[{"startOffset":2273070,"endOffset":2273520,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilerOptions","ranges":[{"startOffset":2273521,"endOffset":2273760,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheWithRedirects","ranges":[{"startOffset":2273761,"endOffset":2276147,"count":2}],"isBlockCoverage":true},{"functionName":"getOwnMap","ranges":[{"startOffset":2274156,"endOffset":2274168,"count":0}],"isBlockCoverage":false},{"functionName":"getMapOfCacheRedirects","ranges":[{"startOffset":2274176,"endOffset":2274375,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateMapOfCacheRedirects","ranges":[{"startOffset":2274378,"endOffset":2274584,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2274587,"endOffset":2274851,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateMap","ranges":[{"startOffset":2274854,"endOffset":2275532,"count":0}],"isBlockCoverage":false},{"functionName":"clear2","ranges":[{"startOffset":2275535,"endOffset":2275879,"count":0}],"isBlockCoverage":false},{"functionName":"getRedirectsCacheKey","ranges":[{"startOffset":2275882,"endOffset":2276145,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfoCache","ranges":[{"startOffset":2276148,"endOffset":2276795,"count":1}],"isBlockCoverage":true},{"functionName":"getPackageJsonInfo2","ranges":[{"startOffset":2276346,"endOffset":2276509,"count":0}],"isBlockCoverage":false},{"functionName":"setPackageJsonInfo","ranges":[{"startOffset":2276512,"endOffset":2276695,"count":0}],"isBlockCoverage":false},{"functionName":"clear2","ranges":[{"startOffset":2276698,"endOffset":2276741,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalMap","ranges":[{"startOffset":2276744,"endOffset":2276793,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateCache","ranges":[{"startOffset":2276796,"endOffset":2277087,"count":0}],"isBlockCoverage":false},{"functionName":"createPerDirectoryResolutionCache","ranges":[{"startOffset":2277088,"endOffset":2278203,"count":1}],"isBlockCoverage":true},{"functionName":"clear2","ranges":[{"startOffset":2277437,"endOffset":2277498,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2277501,"endOffset":2277579,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateCacheForDirectory","ranges":[{"startOffset":2277582,"endOffset":2277853,"count":0}],"isBlockCoverage":false},{"functionName":"getFromDirectoryCache","ranges":[{"startOffset":2277856,"endOffset":2278201,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCacheKey","ranges":[{"startOffset":2278204,"endOffset":2278320,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCache","ranges":[{"startOffset":2278321,"endOffset":2279389,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalOrResolvedModuleFileName","ranges":[{"startOffset":2279390,"endOffset":2279560,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalOrResolvedTypeReferenceFileName","ranges":[{"startOffset":2279561,"endOffset":2279786,"count":0}],"isBlockCoverage":false},{"functionName":"createNonRelativeNameResolutionCache","ranges":[{"startOffset":2279787,"endOffset":2282784,"count":1}],"isBlockCoverage":true},{"functionName":"clear2","ranges":[{"startOffset":2280142,"endOffset":2280203,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2280206,"endOffset":2280284,"count":0}],"isBlockCoverage":false},{"functionName":"getFromNonRelativeNameCache","ranges":[{"startOffset":2280287,"endOffset":2280698,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateCacheForNonRelativeName","ranges":[{"startOffset":2280701,"endOffset":2281028,"count":0}],"isBlockCoverage":false},{"functionName":"createPerModuleNameCache","ranges":[{"startOffset":2281031,"endOffset":2282782,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleOrTypeReferenceResolutionCache","ranges":[{"startOffset":2282785,"endOffset":2284167,"count":1}],"isBlockCoverage":true},{"functionName":"getPackageJsonInfoCache","ranges":[{"startOffset":2283689,"endOffset":2283715,"count":0}],"isBlockCoverage":false},{"functionName":"clear2","ranges":[{"startOffset":2283790,"endOffset":2283889,"count":0}],"isBlockCoverage":false},{"functionName":"clearAllExceptPackageJsonInfoCache","ranges":[{"startOffset":2283892,"endOffset":2284028,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2284031,"endOffset":2284165,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionCache","ranges":[{"startOffset":2284168,"endOffset":2284715,"count":1}],"isBlockCoverage":true},{"functionName":"result.getOrCreateCacheForModuleName","ranges":[{"startOffset":2284562,"endOffset":2284695,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceDirectiveResolutionCache","ranges":[{"startOffset":2284716,"endOffset":2285085,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForLibraryResolution","ranges":[{"startOffset":2285086,"endOffset":2285227,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":2285228,"endOffset":2285427,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameFromCache","ranges":[{"startOffset":2285428,"endOffset":2285705,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleName","ranges":[{"startOffset":2285706,"endOffset":2289226,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingOptionalResolutionSettings","ranges":[{"startOffset":2289227,"endOffset":2289718,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingPathsIfEligible","ranges":[{"startOffset":2289719,"endOffset":2290565,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingRootDirs","ranges":[{"startOffset":2290566,"endOffset":2293172,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingBaseUrl","ranges":[{"startOffset":2293173,"endOffset":2293840,"count":0}],"isBlockCoverage":false},{"functionName":"resolveJSModule","ranges":[{"startOffset":2293841,"endOffset":2294263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2294310,"endOffset":2295266,"count":1}],"isBlockCoverage":false},{"functionName":"node16ModuleNameResolver","ranges":[{"startOffset":2295299,"endOffset":2295629,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextModuleNameResolver","ranges":[{"startOffset":2295630,"endOffset":2295964,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextModuleNameResolverWorker","ranges":[{"startOffset":2295965,"endOffset":2296738,"count":0}],"isBlockCoverage":false},{"functionName":"tryResolveJSModuleWorker","ranges":[{"startOffset":2296739,"endOffset":2297121,"count":0}],"isBlockCoverage":false},{"functionName":"bundlerModuleNameResolver","ranges":[{"startOffset":2297122,"endOffset":2297809,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolver","ranges":[{"startOffset":2297810,"endOffset":2298636,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextJsonConfigResolver","ranges":[{"startOffset":2298637,"endOffset":2299040,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolverWorker","ranges":[{"startOffset":2299041,"endOffset":2305986,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathForCJSResolution","ranges":[{"startOffset":2305987,"endOffset":2306382,"count":0}],"isBlockCoverage":false},{"functionName":"realPath","ranges":[{"startOffset":2306383,"endOffset":2306644,"count":0}],"isBlockCoverage":false},{"functionName":"nodeLoadModuleByRelativeName","ranges":[{"startOffset":2306645,"endOffset":2308357,"count":0}],"isBlockCoverage":false},{"functionName":"pathContainsNodeModules","ranges":[{"startOffset":2308402,"endOffset":2308489,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeModuleFromPath","ranges":[{"startOffset":2308490,"endOffset":2309081,"count":0}],"isBlockCoverage":false},{"functionName":"moveToNextDirectorySeparatorIfAvailable","ranges":[{"startOffset":2309082,"endOffset":2309360,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromFileNoPackageId","ranges":[{"startOffset":2309361,"endOffset":2309545,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromFile","ranges":[{"startOffset":2309546,"endOffset":2310085,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromFileNoImplicitExtensions","ranges":[{"startOffset":2310086,"endOffset":2310748,"count":0}],"isBlockCoverage":false},{"functionName":"loadFileNameFromPackageJsonField","ranges":[{"startOffset":2310749,"endOffset":2311752,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddingExtensions","ranges":[{"startOffset":2311753,"endOffset":2314843,"count":0}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":2314844,"endOffset":2315344,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileLookup","ranges":[{"startOffset":2315345,"endOffset":2315879,"count":0}],"isBlockCoverage":false},{"functionName":"loadNodeModuleFromDirectory","ranges":[{"startOffset":2315880,"endOffset":2316251,"count":0}],"isBlockCoverage":false},{"functionName":"getEntrypointsFromPackageJsonInfo","ranges":[{"startOffset":2316252,"endOffset":2318149,"count":0}],"isBlockCoverage":false},{"functionName":"loadEntrypointsFromExportMap","ranges":[{"startOffset":2318150,"endOffset":2320782,"count":0}],"isBlockCoverage":false},{"functionName":"getTemporaryModuleResolutionState","ranges":[{"startOffset":2320783,"endOffset":2321295,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeForPath","ranges":[{"startOffset":2321296,"endOffset":2321545,"count":0}],"isBlockCoverage":false},{"functionName":"getVersionPathsOfPackageJsonInfo","ranges":[{"startOffset":2321546,"endOffset":2321874,"count":0}],"isBlockCoverage":false},{"functionName":"getPeerDependenciesOfPackageJsonInfo","ranges":[{"startOffset":2321875,"endOffset":2322190,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonPeerDependencies","ranges":[{"startOffset":2322191,"endOffset":2323454,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonInfo","ranges":[{"startOffset":2323455,"endOffset":2325702,"count":0}],"isBlockCoverage":false},{"functionName":"loadNodeModuleFromDirectoryWorker","ranges":[{"startOffset":2325703,"endOffset":2329115,"count":0}],"isBlockCoverage":false},{"functionName":"extensionIsOk","ranges":[{"startOffset":2329116,"endOffset":2329735,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":2329736,"endOffset":2330061,"count":0}],"isBlockCoverage":false},{"functionName":"allKeysStartWithDot","ranges":[{"startOffset":2330062,"endOffset":2330159,"count":0}],"isBlockCoverage":false},{"functionName":"noKeyStartsWithDot","ranges":[{"startOffset":2330160,"endOffset":2330256,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromSelfNameReference","ranges":[{"startOffset":2330257,"endOffset":2331706,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromExports","ranges":[{"startOffset":2331707,"endOffset":2333726,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromImports","ranges":[{"startOffset":2333727,"endOffset":2335303,"count":0}],"isBlockCoverage":false},{"functionName":"comparePatternKeys","ranges":[{"startOffset":2335304,"endOffset":2335917,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromExportsOrImports","ranges":[{"startOffset":2335918,"endOffset":2338257,"count":0}],"isBlockCoverage":false},{"functionName":"hasOneAsterisk","ranges":[{"startOffset":2338258,"endOffset":2338414,"count":0}],"isBlockCoverage":false},{"functionName":"getLoadModuleFromTargetExportOrImport","ranges":[{"startOffset":2338415,"endOffset":2350428,"count":0}],"isBlockCoverage":false},{"functionName":"isApplicableVersionedTypesKey","ranges":[{"startOffset":2350429,"endOffset":2350716,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromNearestNodeModulesDirectory","ranges":[{"startOffset":2350717,"endOffset":2351031,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromNearestNodeModulesDirectoryTypesScope","ranges":[{"startOffset":2351032,"endOffset":2351354,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromNearestNodeModulesDirectoryWorker","ranges":[{"startOffset":2351355,"endOffset":2353035,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectoryStoppingAtGlobalCache","ranges":[{"startOffset":2353036,"endOffset":2353486,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromImmediateNodeModulesDirectory","ranges":[{"startOffset":2353487,"endOffset":2354907,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromSpecificNodeModulesDirectory","ranges":[{"startOffset":2354908,"endOffset":2358176,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingPaths","ranges":[{"startOffset":2358177,"endOffset":2359609,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageNameWithTrace","ranges":[{"startOffset":2359652,"endOffset":2359932,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageName","ranges":[{"startOffset":2359933,"endOffset":2360037,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageName","ranges":[{"startOffset":2360038,"endOffset":2360330,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageNameFromTypesPackageName","ranges":[{"startOffset":2360331,"endOffset":2360589,"count":0}],"isBlockCoverage":false},{"functionName":"unmangleScopedPackageName","ranges":[{"startOffset":2360590,"endOffset":2360816,"count":0}],"isBlockCoverage":false},{"functionName":"tryFindNonRelativeModuleNameInCache","ranges":[{"startOffset":2360817,"endOffset":2361655,"count":0}],"isBlockCoverage":false},{"functionName":"classicNameResolver","ranges":[{"startOffset":2361656,"endOffset":2364654,"count":0}],"isBlockCoverage":false},{"functionName":"resolveFromTypeRoot","ranges":[{"startOffset":2364655,"endOffset":2365756,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAllowImportingTsExtension","ranges":[{"startOffset":2365757,"endOffset":2365946,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromGlobalCache","ranges":[{"startOffset":2365947,"endOffset":2367317,"count":0}],"isBlockCoverage":false},{"functionName":"toSearchResult","ranges":[{"startOffset":2367318,"endOffset":2367400,"count":0}],"isBlockCoverage":false},{"functionName":"traceIfEnabled","ranges":[{"startOffset":2367401,"endOffset":2367532,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":2367533,"endOffset":2367773,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2367844,"endOffset":2368161,"count":1}],"isBlockCoverage":false},{"functionName":"getModuleInstanceState","ranges":[{"startOffset":2368191,"endOffset":2368493,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceStateCached","ranges":[{"startOffset":2368494,"endOffset":2368845,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceStateWorker","ranges":[{"startOffset":2368846,"endOffset":2371190,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceStateForAliasTarget","ranges":[{"startOffset":2371191,"endOffset":2372361,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2372400,"endOffset":2373218,"count":1}],"isBlockCoverage":false},{"functionName":"createFlowNode","ranges":[{"startOffset":2373243,"endOffset":2373371,"count":2}],"isBlockCoverage":true},{"functionName":"bindSourceFile","ranges":[{"startOffset":2373417,"endOffset":2373573,"count":0}],"isBlockCoverage":false},{"functionName":"createBinder","ranges":[{"startOffset":2373574,"endOffset":2486348,"count":1}],"isBlockCoverage":true},{"functionName":"createDiagnosticForNode2","ranges":[{"startOffset":2374616,"endOffset":2374786,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFile2","ranges":[{"startOffset":2374789,"endOffset":2376367,"count":0}],"isBlockCoverage":false},{"functionName":"bindInStrictMode","ranges":[{"startOffset":2376370,"endOffset":2376580,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbol","ranges":[{"startOffset":2376583,"endOffset":2376680,"count":0}],"isBlockCoverage":false},{"functionName":"addDeclarationToSymbol","ranges":[{"startOffset":2376683,"endOffset":2377482,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationName","ranges":[{"startOffset":2377485,"endOffset":2380304,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayName","ranges":[{"startOffset":2380307,"endOffset":2380491,"count":0}],"isBlockCoverage":false},{"functionName":"declareSymbol","ranges":[{"startOffset":2380494,"endOffset":2384740,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleMember","ranges":[{"startOffset":2384743,"endOffset":2386600,"count":0}],"isBlockCoverage":false},{"functionName":"jsdocTreatAsExported","ranges":[{"startOffset":2386603,"endOffset":2387180,"count":0}],"isBlockCoverage":false},{"functionName":"bindContainer","ranges":[{"startOffset":2387183,"endOffset":2391371,"count":0}],"isBlockCoverage":false},{"functionName":"bindEachFunctionsFirst","ranges":[{"startOffset":2391374,"endOffset":2391596,"count":0}],"isBlockCoverage":false},{"functionName":"bindEach","ranges":[{"startOffset":2391599,"endOffset":2391732,"count":0}],"isBlockCoverage":false},{"functionName":"bindEachChild","ranges":[{"startOffset":2391735,"endOffset":2391809,"count":0}],"isBlockCoverage":false},{"functionName":"bindChildren","ranges":[{"startOffset":2391812,"endOffset":2395928,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowingExpression","ranges":[{"startOffset":2395931,"endOffset":2396897,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowableReference","ranges":[{"startOffset":2396900,"endOffset":2397775,"count":0}],"isBlockCoverage":false},{"functionName":"containsNarrowableReference","ranges":[{"startOffset":2397778,"endOffset":2397939,"count":0}],"isBlockCoverage":false},{"functionName":"hasNarrowableArgument","ranges":[{"startOffset":2397942,"endOffset":2398330,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowingTypeofOperands","ranges":[{"startOffset":2398333,"endOffset":2398496,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowingBinaryExpression","ranges":[{"startOffset":2398499,"endOffset":2399640,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowableOperand","ranges":[{"startOffset":2399643,"endOffset":2400127,"count":0}],"isBlockCoverage":false},{"functionName":"createBranchLabel","ranges":[{"startOffset":2400130,"endOffset":2400288,"count":0}],"isBlockCoverage":false},{"functionName":"createLoopLabel","ranges":[{"startOffset":2400291,"endOffset":2400445,"count":0}],"isBlockCoverage":false},{"functionName":"createReduceLabel","ranges":[{"startOffset":2400448,"endOffset":2400601,"count":0}],"isBlockCoverage":false},{"functionName":"setFlowNodeReferenced","ranges":[{"startOffset":2400604,"endOffset":2400744,"count":0}],"isBlockCoverage":false},{"functionName":"addAntecedent","ranges":[{"startOffset":2400747,"endOffset":2401007,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowCondition","ranges":[{"startOffset":2401010,"endOffset":2401729,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowSwitchClause","ranges":[{"startOffset":2401732,"endOffset":2401969,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowMutation","ranges":[{"startOffset":2401972,"endOffset":2402268,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowCall","ranges":[{"startOffset":2402271,"endOffset":2402445,"count":0}],"isBlockCoverage":false},{"functionName":"finishFlowLabel","ranges":[{"startOffset":2402448,"endOffset":2402673,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementCondition","ranges":[{"startOffset":2402676,"endOffset":2403073,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":2403076,"endOffset":2403459,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalAssignmentExpression","ranges":[{"startOffset":2403462,"endOffset":2403589,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelLogicalExpression","ranges":[{"startOffset":2403592,"endOffset":2403966,"count":0}],"isBlockCoverage":false},{"functionName":"doWithConditionalBranches","ranges":[{"startOffset":2403969,"endOffset":2404322,"count":0}],"isBlockCoverage":false},{"functionName":"bindCondition","ranges":[{"startOffset":2404325,"endOffset":2404803,"count":0}],"isBlockCoverage":false},{"functionName":"bindIterativeStatement","ranges":[{"startOffset":2404806,"endOffset":2405168,"count":0}],"isBlockCoverage":false},{"functionName":"setContinueTarget","ranges":[{"startOffset":2405171,"endOffset":2405435,"count":0}],"isBlockCoverage":false},{"functionName":"bindWhileStatement","ranges":[{"startOffset":2405438,"endOffset":2406009,"count":0}],"isBlockCoverage":false},{"functionName":"bindDoStatement","ranges":[{"startOffset":2406012,"endOffset":2406575,"count":0}],"isBlockCoverage":false},{"functionName":"bindForStatement","ranges":[{"startOffset":2406578,"endOffset":2407362,"count":0}],"isBlockCoverage":false},{"functionName":"bindForInOrForOfStatement","ranges":[{"startOffset":2407365,"endOffset":2408091,"count":0}],"isBlockCoverage":false},{"functionName":"bindIfStatement","ranges":[{"startOffset":2408094,"endOffset":2408609,"count":0}],"isBlockCoverage":false},{"functionName":"bindReturnOrThrow","ranges":[{"startOffset":2408612,"endOffset":2409053,"count":0}],"isBlockCoverage":false},{"functionName":"findActiveLabel","ranges":[{"startOffset":2409056,"endOffset":2409247,"count":0}],"isBlockCoverage":false},{"functionName":"bindBreakOrContinueFlow","ranges":[{"startOffset":2409250,"endOffset":2409554,"count":0}],"isBlockCoverage":false},{"functionName":"bindBreakOrContinueStatement","ranges":[{"startOffset":2409557,"endOffset":2409980,"count":0}],"isBlockCoverage":false},{"functionName":"bindTryStatement","ranges":[{"startOffset":2409983,"endOffset":2411908,"count":0}],"isBlockCoverage":false},{"functionName":"bindSwitchStatement","ranges":[{"startOffset":2411911,"endOffset":2412718,"count":0}],"isBlockCoverage":false},{"functionName":"bindCaseBlock","ranges":[{"startOffset":2412721,"endOffset":2413843,"count":0}],"isBlockCoverage":false},{"functionName":"bindCaseClause","ranges":[{"startOffset":2413846,"endOffset":2414052,"count":0}],"isBlockCoverage":false},{"functionName":"bindExpressionStatement","ranges":[{"startOffset":2414055,"endOffset":2414178,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBindExpressionFlowIfCall","ranges":[{"startOffset":2414181,"endOffset":2414471,"count":0}],"isBlockCoverage":false},{"functionName":"bindLabeledStatement","ranges":[{"startOffset":2414474,"endOffset":2415128,"count":0}],"isBlockCoverage":false},{"functionName":"bindDestructuringTargetFlow","ranges":[{"startOffset":2415131,"endOffset":2415383,"count":0}],"isBlockCoverage":false},{"functionName":"bindAssignmentTargetFlow","ranges":[{"startOffset":2415386,"endOffset":2416296,"count":0}],"isBlockCoverage":false},{"functionName":"bindLogicalLikeExpression","ranges":[{"startOffset":2416299,"endOffset":2417245,"count":0}],"isBlockCoverage":false},{"functionName":"bindPrefixUnaryExpressionFlow","ranges":[{"startOffset":2417248,"endOffset":2417807,"count":0}],"isBlockCoverage":false},{"functionName":"bindPostfixUnaryExpressionFlow","ranges":[{"startOffset":2417810,"endOffset":2418036,"count":0}],"isBlockCoverage":false},{"functionName":"bindDestructuringAssignmentFlow","ranges":[{"startOffset":2418039,"endOffset":2418478,"count":0}],"isBlockCoverage":false},{"functionName":"createBindBinaryExpressionFlow","ranges":[{"startOffset":2418481,"endOffset":2421873,"count":1}],"isBlockCoverage":true},{"functionName":"onEnter","ranges":[{"startOffset":2418690,"endOffset":2420083,"count":0}],"isBlockCoverage":false},{"functionName":"onLeft","ranges":[{"startOffset":2420088,"endOffset":2420355,"count":0}],"isBlockCoverage":false},{"functionName":"onOperator","ranges":[{"startOffset":2420360,"endOffset":2420478,"count":0}],"isBlockCoverage":false},{"functionName":"onRight","ranges":[{"startOffset":2420483,"endOffset":2420754,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":2420759,"endOffset":2421702,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind2","ranges":[{"startOffset":2421707,"endOffset":2421869,"count":0}],"isBlockCoverage":false},{"functionName":"bindDeleteExpressionFlow","ranges":[{"startOffset":2421876,"endOffset":2422072,"count":0}],"isBlockCoverage":false},{"functionName":"bindConditionalExpressionFlow","ranges":[{"startOffset":2422075,"endOffset":2423053,"count":0}],"isBlockCoverage":false},{"functionName":"bindInitializedVariableFlow","ranges":[{"startOffset":2423056,"endOffset":2423398,"count":0}],"isBlockCoverage":false},{"functionName":"bindVariableDeclarationFlow","ranges":[{"startOffset":2423401,"endOffset":2423593,"count":0}],"isBlockCoverage":false},{"functionName":"bindBindingElementFlow","ranges":[{"startOffset":2423596,"endOffset":2423759,"count":0}],"isBlockCoverage":false},{"functionName":"bindParameterFlow","ranges":[{"startOffset":2423762,"endOffset":2423972,"count":0}],"isBlockCoverage":false},{"functionName":"bindInitializer","ranges":[{"startOffset":2423975,"endOffset":2424358,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDocTypeAlias","ranges":[{"startOffset":2424361,"endOffset":2424709,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDocClassTag","ranges":[{"startOffset":2424712,"endOffset":2424957,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDocImportTag","ranges":[{"startOffset":2424960,"endOffset":2425162,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalExpression","ranges":[{"startOffset":2425165,"endOffset":2425571,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalChainRest","ranges":[{"startOffset":2425574,"endOffset":2426069,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalChain","ranges":[{"startOffset":2426072,"endOffset":2426718,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalChainFlow","ranges":[{"startOffset":2426721,"endOffset":2427273,"count":0}],"isBlockCoverage":false},{"functionName":"bindNonNullExpressionFlow","ranges":[{"startOffset":2427276,"endOffset":2427436,"count":0}],"isBlockCoverage":false},{"functionName":"bindAccessExpressionFlow","ranges":[{"startOffset":2427439,"endOffset":2427598,"count":0}],"isBlockCoverage":false},{"functionName":"bindCallExpressionFlow","ranges":[{"startOffset":2427601,"endOffset":2428532,"count":0}],"isBlockCoverage":false},{"functionName":"addToContainerChain","ranges":[{"startOffset":2428535,"endOffset":2428674,"count":0}],"isBlockCoverage":false},{"functionName":"declareSymbolAndAddToSymbolTable","ranges":[{"startOffset":2428677,"endOffset":2430871,"count":0}],"isBlockCoverage":false},{"functionName":"declareClassMember","ranges":[{"startOffset":2430874,"endOffset":2431159,"count":0}],"isBlockCoverage":false},{"functionName":"declareSourceFileMember","ranges":[{"startOffset":2431162,"endOffset":2431452,"count":0}],"isBlockCoverage":false},{"functionName":"hasExportDeclarations","ranges":[{"startOffset":2431455,"endOffset":2431676,"count":0}],"isBlockCoverage":false},{"functionName":"setExportContextFlag","ranges":[{"startOffset":2431679,"endOffset":2431909,"count":0}],"isBlockCoverage":false},{"functionName":"bindModuleDeclaration","ranges":[{"startOffset":2431912,"endOffset":2433273,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleSymbol","ranges":[{"startOffset":2433276,"endOffset":2433660,"count":0}],"isBlockCoverage":false},{"functionName":"bindFunctionOrConstructorType","ranges":[{"startOffset":2433663,"endOffset":2434144,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectLiteralExpression","ranges":[{"startOffset":2434147,"endOffset":2434289,"count":0}],"isBlockCoverage":false},{"functionName":"bindJsxAttributes","ranges":[{"startOffset":2434292,"endOffset":2434438,"count":0}],"isBlockCoverage":false},{"functionName":"bindJsxAttribute","ranges":[{"startOffset":2434441,"endOffset":2434587,"count":0}],"isBlockCoverage":false},{"functionName":"bindAnonymousDeclaration","ranges":[{"startOffset":2434590,"endOffset":2434899,"count":0}],"isBlockCoverage":false},{"functionName":"bindBlockScopedDeclaration","ranges":[{"startOffset":2434902,"endOffset":2435762,"count":0}],"isBlockCoverage":false},{"functionName":"delayedBindJSDocTypedefTag","ranges":[{"startOffset":2435765,"endOffset":2438831,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDocImports","ranges":[{"startOffset":2438834,"endOffset":2439920,"count":0}],"isBlockCoverage":false},{"functionName":"checkContextualIdentifier","ranges":[{"startOffset":2439923,"endOffset":2441398,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictModeIdentifierMessage","ranges":[{"startOffset":2441401,"endOffset":2441876,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrivateIdentifier","ranges":[{"startOffset":2441879,"endOffset":2442168,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeBinaryExpression","ranges":[{"startOffset":2442171,"endOffset":2442396,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeCatchClause","ranges":[{"startOffset":2442399,"endOffset":2442579,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeDeleteExpression","ranges":[{"startOffset":2442582,"endOffset":2442930,"count":0}],"isBlockCoverage":false},{"functionName":"isEvalOrArgumentsIdentifier","ranges":[{"startOffset":2442933,"endOffset":2443081,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeEvalOrArguments","ranges":[{"startOffset":2443084,"endOffset":2443511,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictModeEvalOrArgumentsMessage","ranges":[{"startOffset":2443514,"endOffset":2444074,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeFunctionName","ranges":[{"startOffset":2444077,"endOffset":2444252,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictModeBlockScopeFunctionDeclarationMessage","ranges":[{"startOffset":2444255,"endOffset":2444839,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeFunctionDeclaration","ranges":[{"startOffset":2444842,"endOffset":2445361,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModePostfixUnaryExpression","ranges":[{"startOffset":2445364,"endOffset":2445510,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModePrefixUnaryExpression","ranges":[{"startOffset":2445513,"endOffset":2445768,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeWithStatement","ranges":[{"startOffset":2445771,"endOffset":2445941,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeLabeledStatement","ranges":[{"startOffset":2445944,"endOffset":2446255,"count":0}],"isBlockCoverage":false},{"functionName":"errorOnFirstToken","ranges":[{"startOffset":2446258,"endOffset":2446475,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrSuggestionOnNode","ranges":[{"startOffset":2446478,"endOffset":2446600,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrSuggestionOnRange","ranges":[{"startOffset":2446603,"endOffset":2446801,"count":0}],"isBlockCoverage":false},{"functionName":"addErrorOrSuggestionDiagnostic","ranges":[{"startOffset":2446804,"endOffset":2447164,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":2447167,"endOffset":2447898,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDoc","ranges":[{"startOffset":2447901,"endOffset":2448270,"count":0}],"isBlockCoverage":false},{"functionName":"updateStrictModeStatementList","ranges":[{"startOffset":2448273,"endOffset":2448601,"count":0}],"isBlockCoverage":false},{"functionName":"isUseStrictPrologueDirective","ranges":[{"startOffset":2448604,"endOffset":2448806,"count":0}],"isBlockCoverage":false},{"functionName":"bindWorker","ranges":[{"startOffset":2448809,"endOffset":2459071,"count":0}],"isBlockCoverage":false},{"functionName":"bindPropertyWorker","ranges":[{"startOffset":2459074,"endOffset":2459488,"count":0}],"isBlockCoverage":false},{"functionName":"bindAnonymousTypeWorker","ranges":[{"startOffset":2459491,"endOffset":2459623,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFileIfExternalModule","ranges":[{"startOffset":2459626,"endOffset":2460037,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFileAsExternalModule","ranges":[{"startOffset":2460040,"endOffset":2460189,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportAssignment","ranges":[{"startOffset":2460192,"endOffset":2460677,"count":0}],"isBlockCoverage":false},{"functionName":"bindNamespaceExportDeclaration","ranges":[{"startOffset":2460680,"endOffset":2461512,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportDeclaration","ranges":[{"startOffset":2461515,"endOffset":2462090,"count":0}],"isBlockCoverage":false},{"functionName":"bindImportClause","ranges":[{"startOffset":2462093,"endOffset":2462253,"count":0}],"isBlockCoverage":false},{"functionName":"setCommonJsModuleIndicator","ranges":[{"startOffset":2462256,"endOffset":2462610,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectDefinePropertyExport","ranges":[{"startOffset":2462613,"endOffset":2463188,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportsPropertyAssignment","ranges":[{"startOffset":2463191,"endOffset":2464000,"count":0}],"isBlockCoverage":false},{"functionName":"bindModuleExportsAssignment","ranges":[{"startOffset":2464003,"endOffset":2464881,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportAssignedObjectMemberAlias","ranges":[{"startOffset":2464884,"endOffset":2465062,"count":0}],"isBlockCoverage":false},{"functionName":"bindThisPropertyAssignment","ranges":[{"startOffset":2465065,"endOffset":2468266,"count":0}],"isBlockCoverage":false},{"functionName":"bindDynamicallyNamedThisPropertyAssignment","ranges":[{"startOffset":2468269,"endOffset":2468609,"count":0}],"isBlockCoverage":false},{"functionName":"addLateBoundAssignmentDeclarationToSymbol","ranges":[{"startOffset":2468612,"endOffset":2468847,"count":0}],"isBlockCoverage":false},{"functionName":"bindSpecialPropertyDeclaration","ranges":[{"startOffset":2468850,"endOffset":2469289,"count":0}],"isBlockCoverage":false},{"functionName":"bindPrototypeAssignment","ranges":[{"startOffset":2469292,"endOffset":2469562,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectDefinePrototypeProperty","ranges":[{"startOffset":2469565,"endOffset":2470005,"count":0}],"isBlockCoverage":false},{"functionName":"bindPrototypePropertyAssignment","ranges":[{"startOffset":2470008,"endOffset":2470440,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectDefinePropertyAssignment","ranges":[{"startOffset":2470443,"endOffset":2470990,"count":0}],"isBlockCoverage":false},{"functionName":"bindSpecialPropertyAssignment","ranges":[{"startOffset":2470993,"endOffset":2472342,"count":0}],"isBlockCoverage":false},{"functionName":"bindStaticPropertyAssignment","ranges":[{"startOffset":2472345,"endOffset":2472623,"count":0}],"isBlockCoverage":false},{"functionName":"bindPotentiallyMissingNamespaces","ranges":[{"startOffset":2472626,"endOffset":2473758,"count":0}],"isBlockCoverage":false},{"functionName":"bindPotentiallyNewExpandoMemberToNamespace","ranges":[{"startOffset":2473761,"endOffset":2475361,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelNamespaceAssignment","ranges":[{"startOffset":2475364,"endOffset":2475629,"count":0}],"isBlockCoverage":false},{"functionName":"bindPropertyAssignment","ranges":[{"startOffset":2475632,"endOffset":2476187,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoSymbol","ranges":[{"startOffset":2476190,"endOffset":2477168,"count":0}],"isBlockCoverage":false},{"functionName":"getParentOfBinaryExpression","ranges":[{"startOffset":2477171,"endOffset":2477321,"count":0}],"isBlockCoverage":false},{"functionName":"lookupSymbolForPropertyAccess","ranges":[{"startOffset":2477324,"endOffset":2477689,"count":0}],"isBlockCoverage":false},{"functionName":"forEachIdentifierInEntityName","ranges":[{"startOffset":2477692,"endOffset":2478270,"count":0}],"isBlockCoverage":false},{"functionName":"bindCallExpression","ranges":[{"startOffset":2478273,"endOffset":2478490,"count":0}],"isBlockCoverage":false},{"functionName":"bindClassLikeDeclaration","ranges":[{"startOffset":2478493,"endOffset":2479490,"count":0}],"isBlockCoverage":false},{"functionName":"bindEnumDeclaration","ranges":[{"startOffset":2479493,"endOffset":2479743,"count":0}],"isBlockCoverage":false},{"functionName":"bindVariableDeclarationOrBindingElement","ranges":[{"startOffset":2479746,"endOffset":2480810,"count":0}],"isBlockCoverage":false},{"functionName":"bindParameter","ranges":[{"startOffset":2480813,"endOffset":2481688,"count":0}],"isBlockCoverage":false},{"functionName":"bindFunctionDeclaration","ranges":[{"startOffset":2481691,"endOffset":2482228,"count":0}],"isBlockCoverage":false},{"functionName":"bindFunctionExpression","ranges":[{"startOffset":2482231,"endOffset":2482718,"count":0}],"isBlockCoverage":false},{"functionName":"bindPropertyOrMethodOrAccessor","ranges":[{"startOffset":2482721,"endOffset":2483258,"count":0}],"isBlockCoverage":false},{"functionName":"getInferTypeContainer","ranges":[{"startOffset":2483261,"endOffset":2483475,"count":0}],"isBlockCoverage":false},{"functionName":"bindTypeParameter","ranges":[{"startOffset":2483478,"endOffset":2484840,"count":0}],"isBlockCoverage":false},{"functionName":"shouldReportErrorOnModuleDeclaration","ranges":[{"startOffset":2484843,"endOffset":2485087,"count":0}],"isBlockCoverage":false},{"functionName":"checkUnreachable","ranges":[{"startOffset":2485090,"endOffset":2486346,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclarationWithPreservedEmit","ranges":[{"startOffset":2486349,"endOffset":2486522,"count":0}],"isBlockCoverage":false},{"functionName":"eachUnreachableRange","ranges":[{"startOffset":2486523,"endOffset":2487619,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsOrModuleExportsOrAlias","ranges":[{"startOffset":2487620,"endOffset":2488470,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerFlags","ranges":[{"startOffset":2488471,"endOffset":2490940,"count":0}],"isBlockCoverage":false},{"functionName":"lookupSymbolForName","ranges":[{"startOffset":2490941,"endOffset":2491511,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolWalker","ranges":[{"startOffset":2491545,"endOffset":2496368,"count":0}],"isBlockCoverage":false},{"functionName":"RelativePreference","ranges":[{"startOffset":2496521,"endOffset":2496545,"count":0}],"isBlockCoverage":false},{"functionName":"countPathComponents","ranges":[{"startOffset":2496570,"endOffset":2496595,"count":0}],"isBlockCoverage":false},{"functionName":"forEachFileNameOfModule","ranges":[{"startOffset":2496624,"endOffset":2496653,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalModuleSpecifierBetweenFileNames","ranges":[{"startOffset":2496698,"endOffset":2496743,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifier","ranges":[{"startOffset":2496767,"endOffset":2496791,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierPreferences","ranges":[{"startOffset":2496826,"endOffset":2496861,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiers","ranges":[{"startOffset":2496886,"endOffset":2496911,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiersWithCacheInfo","ranges":[{"startOffset":2496949,"endOffset":2496987,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulesPackageName","ranges":[{"startOffset":2497018,"endOffset":2497049,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSExtensionForFile","ranges":[{"startOffset":2497079,"endOffset":2497109,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifiersFromCache","ranges":[{"startOffset":2497146,"endOffset":2497183,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetRealFileNameForNonJsDeclarationFileName","ranges":[{"startOffset":2497234,"endOffset":2497285,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleSpecifier","ranges":[{"startOffset":2497312,"endOffset":2497339,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2497412,"endOffset":2498012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2498057,"endOffset":2498435,"count":1}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierPreferences","ranges":[{"startOffset":2498464,"endOffset":2501698,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleSpecifier","ranges":[{"startOffset":2501699,"endOffset":2502146,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifier","ranges":[{"startOffset":2502147,"endOffset":2502483,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulesPackageName","ranges":[{"startOffset":2502484,"endOffset":2503038,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierWorker","ranges":[{"startOffset":2503039,"endOffset":2503812,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifiersFromCache","ranges":[{"startOffset":2503813,"endOffset":2504177,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifiersFromCacheWorker","ranges":[{"startOffset":2504178,"endOffset":2504814,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiers","ranges":[{"startOffset":2504815,"endOffset":2505163,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiersWithCacheInfo","ranges":[{"startOffset":2505164,"endOffset":2506611,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalModuleSpecifierBetweenFileNames","ranges":[{"startOffset":2506612,"endOffset":2507084,"count":0}],"isBlockCoverage":false},{"functionName":"computeModuleSpecifiers","ranges":[{"startOffset":2507085,"endOffset":2510781,"count":0}],"isBlockCoverage":false},{"functionName":"isExcludedByRegex","ranges":[{"startOffset":2510782,"endOffset":2510998,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":2510999,"endOffset":2511520,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalModuleSpecifier","ranges":[{"startOffset":2511521,"endOffset":2515307,"count":0}],"isBlockCoverage":false},{"functionName":"packageJsonPathsAreEqual","ranges":[{"startOffset":2515308,"endOffset":2515502,"count":0}],"isBlockCoverage":false},{"functionName":"countPathComponents","ranges":[{"startOffset":2515503,"endOffset":2515705,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsByRedirectAndNumberOfDirectorySeparators","ranges":[{"startOffset":2515706,"endOffset":2515885,"count":0}],"isBlockCoverage":false},{"functionName":"getNearestAncestorDirectoryWithPackageJson","ranges":[{"startOffset":2515886,"endOffset":2516270,"count":0}],"isBlockCoverage":false},{"functionName":"forEachFileNameOfModule","ranges":[{"startOffset":2516271,"endOffset":2518688,"count":0}],"isBlockCoverage":false},{"functionName":"getAllModulePaths","ranges":[{"startOffset":2518689,"endOffset":2519559,"count":0}],"isBlockCoverage":false},{"functionName":"getAllRuntimeDependencies","ranges":[{"startOffset":2519652,"endOffset":2519928,"count":0}],"isBlockCoverage":false},{"functionName":"getAllModulePathsWorker","ranges":[{"startOffset":2519929,"endOffset":2522797,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromAmbientModule","ranges":[{"startOffset":2522798,"endOffset":2524561,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromPaths","ranges":[{"startOffset":2524562,"endOffset":2526280,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromExportsOrImports","ranges":[{"startOffset":2526281,"endOffset":2533078,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromExports","ranges":[{"startOffset":2533079,"endOffset":2534190,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromPackageJsonImports","ranges":[{"startOffset":2534191,"endOffset":2535858,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromRootDirs","ranges":[{"startOffset":2535859,"endOffset":2536701,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameAsNodeModule","ranges":[{"startOffset":2536702,"endOffset":2543049,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetAnyFileFromPath","ranges":[{"startOffset":2543050,"endOffset":2543454,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsRelativeToRootDirs","ranges":[{"startOffset":2543455,"endOffset":2543776,"count":0}],"isBlockCoverage":false},{"functionName":"processEnding","ranges":[{"startOffset":2543777,"endOffset":2545646,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetRealFileNameForNonJsDeclarationFileName","ranges":[{"startOffset":2545647,"endOffset":2546104,"count":0}],"isBlockCoverage":false},{"functionName":"getJSExtensionForFile","ranges":[{"startOffset":2546105,"endOffset":2546310,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSExtensionForFile","ranges":[{"startOffset":2546311,"endOffset":2546993,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathIfInSameVolume","ranges":[{"startOffset":2546994,"endOffset":2547317,"count":0}],"isBlockCoverage":false},{"functionName":"isPathRelativeToParent","ranges":[{"startOffset":2547318,"endOffset":2547392,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolutionModeForFile","ranges":[{"startOffset":2547393,"endOffset":2547607,"count":0}],"isBlockCoverage":false},{"functionName":"prefersTsExtension","ranges":[{"startOffset":2547608,"endOffset":2547807,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2548019,"endOffset":2553744,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2554149,"endOffset":2554726,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2554788,"endOffset":2555424,"count":1}],"isBlockCoverage":false},{"functionName":"NodeLinks","ranges":[{"startOffset":2555769,"endOffset":2555822,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeId","ranges":[{"startOffset":2555823,"endOffset":2555935,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolId","ranges":[{"startOffset":2555936,"endOffset":2556062,"count":0}],"isBlockCoverage":false},{"functionName":"isInstantiatedModule","ranges":[{"startOffset":2556063,"endOffset":2556284,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeChecker","ranges":[{"startOffset":2556285,"endOffset":4623831,"count":0}],"isBlockCoverage":false},{"functionName":"isNotAccessor","ranges":[{"startOffset":4623832,"endOffset":4623906,"count":0}],"isBlockCoverage":false},{"functionName":"isNotOverload","ranges":[{"startOffset":4623907,"endOffset":4624081,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOrImportPropertyName","ranges":[{"startOffset":4624082,"endOffset":4624368,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4624384,"endOffset":4624950,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4624999,"endOffset":4625056,"count":1}],"isBlockCoverage":false},{"functionName":"getIterationTypesKeyFromIterationTypeKind","ranges":[{"startOffset":4625092,"endOffset":4625332,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasRestParameter","ranges":[{"startOffset":4625333,"endOffset":4625423,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasLiteralTypes","ranges":[{"startOffset":4625424,"endOffset":4625512,"count":0}],"isBlockCoverage":false},{"functionName":"createBasicNodeBuilderModuleSpecifierResolutionHost","ranges":[{"startOffset":4625513,"endOffset":4626762,"count":0}],"isBlockCoverage":false},{"functionName":"_SymbolTrackerImpl","ranges":[{"startOffset":4626816,"endOffset":4627259,"count":0}],"isBlockCoverage":false},{"functionName":"trackSymbol","ranges":[{"startOffset":4627262,"endOffset":4627760,"count":0}],"isBlockCoverage":false},{"functionName":"reportInaccessibleThisError","ranges":[{"startOffset":4627763,"endOffset":4627978,"count":0}],"isBlockCoverage":false},{"functionName":"reportPrivateInBaseOfClassExpression","ranges":[{"startOffset":4627981,"endOffset":4628247,"count":0}],"isBlockCoverage":false},{"functionName":"reportInaccessibleUniqueSymbolError","ranges":[{"startOffset":4628250,"endOffset":4628489,"count":0}],"isBlockCoverage":false},{"functionName":"reportCyclicStructureError","ranges":[{"startOffset":4628492,"endOffset":4628704,"count":0}],"isBlockCoverage":false},{"functionName":"reportLikelyUnsafeImportRequiredError","ranges":[{"startOffset":4628707,"endOffset":4628970,"count":0}],"isBlockCoverage":false},{"functionName":"reportTruncationError","ranges":[{"startOffset":4628973,"endOffset":4629170,"count":0}],"isBlockCoverage":false},{"functionName":"reportNonlocalAugmentation","ranges":[{"startOffset":4629173,"endOffset":4629477,"count":0}],"isBlockCoverage":false},{"functionName":"reportNonSerializableProperty","ranges":[{"startOffset":4629480,"endOffset":4629725,"count":0}],"isBlockCoverage":false},{"functionName":"onDiagnosticReported","ranges":[{"startOffset":4629728,"endOffset":4629800,"count":0}],"isBlockCoverage":false},{"functionName":"reportInferenceFallback","ranges":[{"startOffset":4629803,"endOffset":4630065,"count":0}],"isBlockCoverage":false},{"functionName":"pushErrorFallbackNode","ranges":[{"startOffset":4630068,"endOffset":4630235,"count":0}],"isBlockCoverage":false},{"functionName":"popErrorFallbackNode","ranges":[{"startOffset":4630238,"endOffset":4630393,"count":0}],"isBlockCoverage":false},{"functionName":"visitNode","ranges":[{"startOffset":4630431,"endOffset":4630817,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes2","ranges":[{"startOffset":4630818,"endOffset":4631645,"count":0}],"isBlockCoverage":false},{"functionName":"visitArray","ranges":[{"startOffset":4631646,"endOffset":4631992,"count":0}],"isBlockCoverage":false},{"functionName":"visitArrayWorker","ranges":[{"startOffset":4631993,"endOffset":4632924,"count":0}],"isBlockCoverage":false},{"functionName":"visitLexicalEnvironment","ranges":[{"startOffset":4632925,"endOffset":4633318,"count":0}],"isBlockCoverage":false},{"functionName":"visitParameterList","ranges":[{"startOffset":4633319,"endOffset":4633959,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentsIfNeeded","ranges":[{"startOffset":4633960,"endOffset":4634482,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentIfNeeded","ranges":[{"startOffset":4634483,"endOffset":4634833,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentForBindingPattern","ranges":[{"startOffset":4634834,"endOffset":4636007,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentForInitializer","ranges":[{"startOffset":4636008,"endOffset":4637237,"count":0}],"isBlockCoverage":false},{"functionName":"visitFunctionBody","ranges":[{"startOffset":4637238,"endOffset":4637829,"count":0}],"isBlockCoverage":false},{"functionName":"visitIterationBody","ranges":[{"startOffset":4637830,"endOffset":4638383,"count":0}],"isBlockCoverage":false},{"functionName":"visitCommaListElements","ranges":[{"startOffset":4638384,"endOffset":4638805,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChild","ranges":[{"startOffset":4638806,"endOffset":4639146,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfQualifiedName","ranges":[{"startOffset":4639204,"endOffset":4639528,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfComputedPropertyName","ranges":[{"startOffset":4639566,"endOffset":4639836,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeParameterDeclaration","ranges":[{"startOffset":4639891,"endOffset":4640330,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfParameterDeclaration","ranges":[{"startOffset":4640357,"endOffset":4641007,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDecorator","ranges":[{"startOffset":4641034,"endOffset":4641282,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertySignature","ranges":[{"startOffset":4641336,"endOffset":4641808,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertyDeclaration","ranges":[{"startOffset":4641845,"endOffset":4642538,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMethodSignature","ranges":[{"startOffset":4642571,"endOffset":4643176,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMethodDeclaration","ranges":[{"startOffset":4643211,"endOffset":4644013,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConstructorDeclaration","ranges":[{"startOffset":4644042,"endOffset":4644439,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfGetAccessorDeclaration","ranges":[{"startOffset":4644468,"endOffset":4644991,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSetAccessorDeclaration","ranges":[{"startOffset":4645020,"endOffset":4645492,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfClassStaticBlockDeclaration","ranges":[{"startOffset":4645537,"endOffset":4645889,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCallSignatureDeclaration","ranges":[{"startOffset":4645920,"endOffset":4646295,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConstructSignatureDeclaration","ranges":[{"startOffset":4646331,"endOffset":4646716,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIndexSignatureDeclaration","ranges":[{"startOffset":4646748,"endOffset":4647128,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypePredicateNode","ranges":[{"startOffset":4647170,"endOffset":4647570,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeReferenceNode","ranges":[{"startOffset":4647601,"endOffset":4647923,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfFunctionTypeNode","ranges":[{"startOffset":4647953,"endOffset":4648343,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConstructorTypeNode","ranges":[{"startOffset":4648376,"endOffset":4648829,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeQueryNode","ranges":[{"startOffset":4648856,"endOffset":4649170,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeLiteralNode","ranges":[{"startOffset":4649199,"endOffset":4649438,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrayTypeNode","ranges":[{"startOffset":4649465,"endOffset":4649720,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTupleTypeNode","ranges":[{"startOffset":4649747,"endOffset":4649980,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfOptionalTypeNode","ranges":[{"startOffset":4650010,"endOffset":4650264,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfRestTypeNode","ranges":[{"startOffset":4650290,"endOffset":4650536,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfUnionTypeNode","ranges":[{"startOffset":4650563,"endOffset":4650793,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIntersectionTypeNode","ranges":[{"startOffset":4650827,"endOffset":4651071,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConditionalTypeNode","ranges":[{"startOffset":4651104,"endOffset":4651598,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfInferTypeNode","ranges":[{"startOffset":4651625,"endOffset":4651898,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportTypeNode","ranges":[{"startOffset":4651926,"endOffset":4652384,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportTypeAssertionContainer","ranges":[{"startOffset":4652430,"endOffset":4652742,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamedTupleMember","ranges":[{"startOffset":4652776,"endOffset":4653317,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfParenthesizedType","ranges":[{"startOffset":4653352,"endOffset":4653608,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeOperatorNode","ranges":[{"startOffset":4653638,"endOffset":4653892,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIndexedAccessType","ranges":[{"startOffset":4653927,"endOffset":4654269,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMappedType","ranges":[{"startOffset":4654297,"endOffset":4654975,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfLiteralTypeNode","ranges":[{"startOffset":4655004,"endOffset":4655269,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateLiteralType","ranges":[{"startOffset":4655306,"endOffset":4655645,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateLiteralTypeSpan","ranges":[{"startOffset":4655686,"endOffset":4656048,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfObjectBindingPattern","ranges":[{"startOffset":4656108,"endOffset":4656361,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrayBindingPattern","ranges":[{"startOffset":4656398,"endOffset":4656654,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBindingElement","ranges":[{"startOffset":4656686,"endOffset":4657170,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrayLiteralExpression","ranges":[{"startOffset":4657226,"endOffset":4657479,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfObjectLiteralExpression","ranges":[{"startOffset":4657520,"endOffset":4657791,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertyAccessExpression","ranges":[{"startOffset":4657833,"endOffset":4658542,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfElementAccessExpression","ranges":[{"startOffset":4658583,"endOffset":4659316,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCallExpression","ranges":[{"startOffset":4659348,"endOffset":4660110,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNewExpression","ranges":[{"startOffset":4660141,"endOffset":4660516,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTaggedTemplateExpression","ranges":[{"startOffset":4660558,"endOffset":4660971,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeAssertionExpression","ranges":[{"startOffset":4661012,"endOffset":4661349,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfParenthesizedExpression","ranges":[{"startOffset":4661390,"endOffset":4661666,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfFunctionExpression","ranges":[{"startOffset":4661702,"endOffset":4662374,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrowFunction","ranges":[{"startOffset":4662405,"endOffset":4663061,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDeleteExpression","ranges":[{"startOffset":4663095,"endOffset":4663357,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeOfExpression","ranges":[{"startOffset":4663391,"endOffset":4663653,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVoidExpression","ranges":[{"startOffset":4663685,"endOffset":4663943,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfAwaitExpression","ranges":[{"startOffset":4663976,"endOffset":4664236,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPrefixUnaryExpression","ranges":[{"startOffset":4664275,"endOffset":4664544,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPostfixUnaryExpression","ranges":[{"startOffset":4664584,"endOffset":4664855,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBinaryExpression","ranges":[{"startOffset":4664889,"endOffset":4665350,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConditionalExpression","ranges":[{"startOffset":4665389,"endOffset":4666057,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateExpression","ranges":[{"startOffset":4666093,"endOffset":4666419,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfYieldExpression","ranges":[{"startOffset":4666452,"endOffset":4666797,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSpreadElement","ranges":[{"startOffset":4666828,"endOffset":4667084,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfClassExpression","ranges":[{"startOffset":4667117,"endOffset":4667617,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExpressionWithTypeArguments","ranges":[{"startOffset":4667662,"endOffset":4668006,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfAsExpression","ranges":[{"startOffset":4668036,"endOffset":4668361,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSatisfiesExpression","ranges":[{"startOffset":4668398,"endOffset":4668737,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNonNullExpression","ranges":[{"startOffset":4668772,"endOffset":4669194,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMetaProperty","ranges":[{"startOffset":4669224,"endOffset":4669472,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateSpan","ranges":[{"startOffset":4669512,"endOffset":4669860,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBlock","ranges":[{"startOffset":4669896,"endOffset":4670116,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVariableStatement","ranges":[{"startOffset":4670151,"endOffset":4670493,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExpressionStatement","ranges":[{"startOffset":4670530,"endOffset":4670798,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIfStatement","ranges":[{"startOffset":4670827,"endOffset":4671279,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDoStatement","ranges":[{"startOffset":4671308,"endOffset":4671633,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfWhileStatement","ranges":[{"startOffset":4671665,"endOffset":4671996,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfForStatement","ranges":[{"startOffset":4672026,"endOffset":4672456,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfForInStatement","ranges":[{"startOffset":4672488,"endOffset":4672903,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfForOfStatement","ranges":[{"startOffset":4672935,"endOffset":4673454,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfContinueStatement","ranges":[{"startOffset":4673489,"endOffset":4673728,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBreakStatement","ranges":[{"startOffset":4673760,"endOffset":4673993,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfReturnStatement","ranges":[{"startOffset":4674026,"endOffset":4674266,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfWithStatement","ranges":[{"startOffset":4674297,"endOffset":4674659,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSwitchStatement","ranges":[{"startOffset":4674692,"endOffset":4675029,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfLabeledStatement","ranges":[{"startOffset":4675063,"endOffset":4675426,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfThrowStatement","ranges":[{"startOffset":4675458,"endOffset":4675716,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTryStatement","ranges":[{"startOffset":4675746,"endOffset":4676110,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVariableDeclaration","ranges":[{"startOffset":4676147,"endOffset":4676635,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVariableDeclarationList","ranges":[{"startOffset":4676676,"endOffset":4676944,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfFunctionDeclaration","ranges":[{"startOffset":4676981,"endOffset":4677655,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfClassDeclaration","ranges":[{"startOffset":4677689,"endOffset":4678191,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfInterfaceDeclaration","ranges":[{"startOffset":4678229,"endOffset":4678758,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeAliasDeclaration","ranges":[{"startOffset":4678796,"endOffset":4679269,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfEnumDeclaration","ranges":[{"startOffset":4679302,"endOffset":4679673,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfModuleDeclaration","ranges":[{"startOffset":4679708,"endOffset":4680079,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfModuleBlock","ranges":[{"startOffset":4680108,"endOffset":4680340,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCaseBlock","ranges":[{"startOffset":4680367,"endOffset":4680602,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamespaceExportDeclaration","ranges":[{"startOffset":4680646,"endOffset":4680922,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportEqualsDeclaration","ranges":[{"startOffset":4680963,"endOffset":4681405,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportDeclaration","ranges":[{"startOffset":4681440,"endOffset":4681897,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportAttributes","ranges":[{"startOffset":4681931,"endOffset":4682199,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportAttribute","ranges":[{"startOffset":4682232,"endOffset":4682569,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportClause","ranges":[{"startOffset":4682599,"endOffset":4682921,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamespaceImport","ranges":[{"startOffset":4682954,"endOffset":4683208,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamespaceExport","ranges":[{"startOffset":4683241,"endOffset":4683495,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamedImports","ranges":[{"startOffset":4683525,"endOffset":4683763,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportSpecifier","ranges":[{"startOffset":4683796,"endOffset":4684140,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExportAssignment","ranges":[{"startOffset":4684174,"endOffset":4684496,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExportDeclaration","ranges":[{"startOffset":4684531,"endOffset":4684998,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamedExports","ranges":[{"startOffset":4685028,"endOffset":4685266,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExportSpecifier","ranges":[{"startOffset":4685299,"endOffset":4685649,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExternalModuleReference","ranges":[{"startOffset":4685713,"endOffset":4685989,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxElement","ranges":[{"startOffset":4686026,"endOffset":4686432,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxSelfClosingElement","ranges":[{"startOffset":4686471,"endOffset":4686892,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxOpeningElement","ranges":[{"startOffset":4686927,"endOffset":4687340,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxClosingElement","ranges":[{"startOffset":4687375,"endOffset":4687646,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxNamespacedName2","ranges":[{"startOffset":4687681,"endOffset":4688016,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxFragment","ranges":[{"startOffset":4688045,"endOffset":4688457,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxAttribute","ranges":[{"startOffset":4688487,"endOffset":4688819,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxAttributes","ranges":[{"startOffset":4688850,"endOffset":4689093,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxSpreadAttribute","ranges":[{"startOffset":4689129,"endOffset":4689395,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxExpression","ranges":[{"startOffset":4689426,"endOffset":4689662,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCaseClause","ranges":[{"startOffset":4689703,"endOffset":4690011,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDefaultClause","ranges":[{"startOffset":4690042,"endOffset":4690278,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfHeritageClause","ranges":[{"startOffset":4690310,"endOffset":4690561,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCatchClause","ranges":[{"startOffset":4690590,"endOffset":4690909,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertyAssignment","ranges":[{"startOffset":4690971,"endOffset":4691313,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfShorthandPropertyAssignment","ranges":[{"startOffset":4691358,"endOffset":4691712,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSpreadAssignment","ranges":[{"startOffset":4691746,"endOffset":4692008,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfEnumMember","ranges":[{"startOffset":4692046,"endOffset":4692352,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSourceFile","ranges":[{"startOffset":4692401,"endOffset":4692639,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPartiallyEmittedExpression","ranges":[{"startOffset":4692709,"endOffset":4692991,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCommaListExpression","ranges":[{"startOffset":4693028,"endOffset":4693275,"count":0}],"isBlockCoverage":false},{"functionName":"extractSingleNode","ranges":[{"startOffset":4693279,"endOffset":4693423,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapGenerator","ranges":[{"startOffset":4693454,"endOffset":4702763,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":4702984,"endOffset":4703167,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSourceMappingURL","ranges":[{"startOffset":4703168,"endOffset":4703522,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNull","ranges":[{"startOffset":4703523,"endOffset":4703599,"count":0}],"isBlockCoverage":false},{"functionName":"isRawSourceMap","ranges":[{"startOffset":4703600,"endOffset":4704127,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseRawSourceMap","ranges":[{"startOffset":4704128,"endOffset":4704306,"count":0}],"isBlockCoverage":false},{"functionName":"decodeMappings","ranges":[{"startOffset":4704307,"endOffset":4708472,"count":0}],"isBlockCoverage":false},{"functionName":"sameMapping","ranges":[{"startOffset":4708473,"endOffset":4708807,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMapping","ranges":[{"startOffset":4708808,"endOffset":4708957,"count":0}],"isBlockCoverage":false},{"functionName":"base64FormatEncode","ranges":[{"startOffset":4708958,"endOffset":4709269,"count":0}],"isBlockCoverage":false},{"functionName":"base64FormatDecode","ranges":[{"startOffset":4709270,"endOffset":4709560,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMappedPosition","ranges":[{"startOffset":4709561,"endOffset":4709677,"count":0}],"isBlockCoverage":false},{"functionName":"sameMappedPosition","ranges":[{"startOffset":4709678,"endOffset":4709873,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourcePositions","ranges":[{"startOffset":4709874,"endOffset":4710045,"count":0}],"isBlockCoverage":false},{"functionName":"compareGeneratedPositions","ranges":[{"startOffset":4710046,"endOffset":4710170,"count":0}],"isBlockCoverage":false},{"functionName":"getSourcePositionOfMapping","ranges":[{"startOffset":4710171,"endOffset":4710248,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratedPositionOfMapping","ranges":[{"startOffset":4710249,"endOffset":4710332,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentPositionMapper","ranges":[{"startOffset":4710333,"endOffset":4714512,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNodeId","ranges":[{"startOffset":4714657,"endOffset":4714762,"count":0}],"isBlockCoverage":false},{"functionName":"containsDefaultReference","ranges":[{"startOffset":4714763,"endOffset":4714956,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDefaultReference","ranges":[{"startOffset":4714957,"endOffset":4715058,"count":0}],"isBlockCoverage":false},{"functionName":"chainBundle","ranges":[{"startOffset":4715059,"endOffset":4715425,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNeedsImportStarHelper","ranges":[{"startOffset":4715426,"endOffset":4715521,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportStarHelper","ranges":[{"startOffset":4715522,"endOffset":4716102,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportDefaultHelper","ranges":[{"startOffset":4716103,"endOffset":4716365,"count":0}],"isBlockCoverage":false},{"functionName":"collectExternalModuleInfo","ranges":[{"startOffset":4716366,"endOffset":4722310,"count":0}],"isBlockCoverage":false},{"functionName":"collectExportedVariableInfo","ranges":[{"startOffset":4722311,"endOffset":4723036,"count":0}],"isBlockCoverage":false},{"functionName":"multiMapSparseArrayAdd","ranges":[{"startOffset":4723037,"endOffset":4723222,"count":0}],"isBlockCoverage":false},{"functionName":"_IdentifierNameMap","ranges":[{"startOffset":4723276,"endOffset":4723338,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":4723341,"endOffset":4723384,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4723387,"endOffset":4723458,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4723461,"endOffset":4723532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4723535,"endOffset":4723630,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":4723633,"endOffset":4723762,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":4723765,"endOffset":4723801,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":4723804,"endOffset":4723849,"count":0}],"isBlockCoverage":false},{"functionName":"toKey","ranges":[{"startOffset":4723859,"endOffset":4724861,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":4724930,"endOffset":4725104,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":4725107,"endOffset":4725293,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleCopiableExpression","ranges":[{"startOffset":4725297,"endOffset":4725494,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleInlineableExpression","ranges":[{"startOffset":4725495,"endOffset":4725626,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundAssignment","ranges":[{"startOffset":4725627,"endOffset":4725760,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignmentOperatorForCompoundAssignment","ranges":[{"startOffset":4725761,"endOffset":4727093,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperCallFromStatement","ranges":[{"startOffset":4727094,"endOffset":4727325,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPathWorker","ranges":[{"startOffset":4727326,"endOffset":4727780,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPath","ranges":[{"startOffset":4727781,"endOffset":4727945,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":4727946,"endOffset":4728112,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclarationOrClassStaticBlockDeclaration","ranges":[{"startOffset":4728113,"endOffset":4728280,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticPropertiesAndClassStaticBlock","ranges":[{"startOffset":4728281,"endOffset":4728427,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedOrStaticProperty","ranges":[{"startOffset":4728428,"endOffset":4728641,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclaration","ranges":[{"startOffset":4728642,"endOffset":4728759,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedProperty","ranges":[{"startOffset":4728760,"endOffset":4728891,"count":0}],"isBlockCoverage":false},{"functionName":"isNonStaticMethodOrAccessorWithPrivateName","ranges":[{"startOffset":4728892,"endOffset":4729096,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoratorsOfParameters","ranges":[{"startOffset":4729097,"endOffset":4729800,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClass","ranges":[{"startOffset":4729801,"endOffset":4730138,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClassElement","ranges":[{"startOffset":4730139,"endOffset":4730833,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfAccessors","ranges":[{"startOffset":4730834,"endOffset":4731750,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfMethod","ranges":[{"startOffset":4731751,"endOffset":4732101,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfProperty","ranges":[{"startOffset":4732102,"endOffset":4732272,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpLexicalEnvironments","ranges":[{"startOffset":4732273,"endOffset":4732434,"count":0}],"isBlockCoverage":false},{"functionName":"newPrivateEnvironment","ranges":[{"startOffset":4732435,"endOffset":4732494,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifier","ranges":[{"startOffset":4732495,"endOffset":4732839,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateIdentifier","ranges":[{"startOffset":4732840,"endOffset":4733279,"count":0}],"isBlockCoverage":false},{"functionName":"accessPrivateIdentifier","ranges":[{"startOffset":4733280,"endOffset":4733423,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameter","ranges":[{"startOffset":4733424,"endOffset":4733515,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameterList","ranges":[{"startOffset":4733516,"endOffset":4733599,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteModuleSpecifier","ranges":[{"startOffset":4733600,"endOffset":4734026,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4734110,"endOffset":4734272,"count":1}],"isBlockCoverage":false},{"functionName":"flattenDestructuringAssignment","ranges":[{"startOffset":4734295,"endOffset":4736956,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentElementAssignsToName","ranges":[{"startOffset":4736957,"endOffset":4737319,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentPatternAssignsToName","ranges":[{"startOffset":4737320,"endOffset":4737617,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentElementContainsNonLiteralComputedName","ranges":[{"startOffset":4737618,"endOffset":4738100,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentPatternContainsNonLiteralComputedName","ranges":[{"startOffset":4738101,"endOffset":4738307,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringBinding","ranges":[{"startOffset":4738308,"endOffset":4741696,"count":0}],"isBlockCoverage":false},{"functionName":"flattenBindingOrAssignmentElement","ranges":[{"startOffset":4741697,"endOffset":4743074,"count":0}],"isBlockCoverage":false},{"functionName":"flattenObjectBindingOrAssignmentPattern","ranges":[{"startOffset":4743075,"endOffset":4745576,"count":0}],"isBlockCoverage":false},{"functionName":"flattenArrayBindingOrAssignmentPattern","ranges":[{"startOffset":4745577,"endOffset":4748556,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleBindingOrAssignmentElement","ranges":[{"startOffset":4748557,"endOffset":4749219,"count":0}],"isBlockCoverage":false},{"functionName":"createDefaultValueCheck","ranges":[{"startOffset":4749220,"endOffset":4749664,"count":0}],"isBlockCoverage":false},{"functionName":"createDestructuringPropertyAccess","ranges":[{"startOffset":4749665,"endOffset":4750663,"count":0}],"isBlockCoverage":false},{"functionName":"ensureIdentifier","ranges":[{"startOffset":4750664,"endOffset":4751366,"count":0}],"isBlockCoverage":false},{"functionName":"makeArrayBindingPattern","ranges":[{"startOffset":4751367,"endOffset":4751535,"count":0}],"isBlockCoverage":false},{"functionName":"makeArrayAssignmentPattern","ranges":[{"startOffset":4751536,"endOffset":4751780,"count":0}],"isBlockCoverage":false},{"functionName":"makeObjectBindingPattern","ranges":[{"startOffset":4751781,"endOffset":4751946,"count":0}],"isBlockCoverage":false},{"functionName":"makeObjectAssignmentPattern","ranges":[{"startOffset":4751947,"endOffset":4752195,"count":0}],"isBlockCoverage":false},{"functionName":"makeBindingElement","ranges":[{"startOffset":4752196,"endOffset":4752365,"count":0}],"isBlockCoverage":false},{"functionName":"makeAssignmentElement","ranges":[{"startOffset":4752366,"endOffset":4752421,"count":0}],"isBlockCoverage":false},{"functionName":"createClassThisAssignmentBlock","ranges":[{"startOffset":4752465,"endOffset":4752933,"count":0}],"isBlockCoverage":false},{"functionName":"isClassThisAssignmentBlock","ranges":[{"startOffset":4752934,"endOffset":4753474,"count":0}],"isBlockCoverage":false},{"functionName":"classHasClassThisAssignment","ranges":[{"startOffset":4753475,"endOffset":4753648,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassThisAssignmentIfMissing","ranges":[{"startOffset":4753649,"endOffset":4754519,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedNameOfIdentifier","ranges":[{"startOffset":4754569,"endOffset":4754963,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedNameOfPropertyName","ranges":[{"startOffset":4754964,"endOffset":4756038,"count":0}],"isBlockCoverage":false},{"functionName":"createClassNamedEvaluationHelperBlock","ranges":[{"startOffset":4756039,"endOffset":4756606,"count":0}],"isBlockCoverage":false},{"functionName":"isClassNamedEvaluationHelperBlock","ranges":[{"startOffset":4756607,"endOffset":4757069,"count":0}],"isBlockCoverage":false},{"functionName":"classHasExplicitlyAssignedName","ranges":[{"startOffset":4757070,"endOffset":4757256,"count":0}],"isBlockCoverage":false},{"functionName":"classHasDeclaredOrExplicitlyAssignedName","ranges":[{"startOffset":4757257,"endOffset":4757378,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassNamedEvaluationHelperBlockIfMissing","ranges":[{"startOffset":4757379,"endOffset":4758524,"count":0}],"isBlockCoverage":false},{"functionName":"finishTransformNamedEvaluation","ranges":[{"startOffset":4758525,"endOffset":4759206,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfPropertyAssignment","ranges":[{"startOffset":4759207,"endOffset":4759672,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfShorthandAssignmentProperty","ranges":[{"startOffset":4759673,"endOffset":4760293,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfVariableDeclaration","ranges":[{"startOffset":4760294,"endOffset":4760876,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfParameterDeclaration","ranges":[{"startOffset":4760877,"endOffset":4761503,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfBindingElement","ranges":[{"startOffset":4761504,"endOffset":4762082,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfPropertyDeclaration","ranges":[{"startOffset":4762083,"endOffset":4762634,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfAssignmentExpression","ranges":[{"startOffset":4762635,"endOffset":4763173,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfExportAssignment","ranges":[{"startOffset":4763174,"endOffset":4763710,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluation","ranges":[{"startOffset":4763711,"endOffset":4765057,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4765142,"endOffset":4765314,"count":1}],"isBlockCoverage":false},{"functionName":"processTaggedTemplateExpression","ranges":[{"startOffset":4765337,"endOffset":4767196,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateCooked","ranges":[{"startOffset":4767197,"endOffset":4767381,"count":0}],"isBlockCoverage":false},{"functionName":"getRawLiteral","ranges":[{"startOffset":4767382,"endOffset":4767997,"count":0}],"isBlockCoverage":false},{"functionName":"transformTypeScript","ranges":[{"startOffset":4768076,"endOffset":4835515,"count":0}],"isBlockCoverage":false},{"functionName":"transformClassFields","ranges":[{"startOffset":4835561,"endOffset":4932020,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateStaticFieldInitializer","ranges":[{"startOffset":4932021,"endOffset":4932308,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateInstanceFieldInitializer","ranges":[{"startOffset":4932309,"endOffset":4932606,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateInstanceMethodInitializer","ranges":[{"startOffset":4932607,"endOffset":4932850,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedPrivateName","ranges":[{"startOffset":4932851,"endOffset":4932976,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierInExpression","ranges":[{"startOffset":4932977,"endOffset":4933119,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclaration2","ranges":[{"startOffset":4933120,"endOffset":4933232,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclarationOrClassStaticBlock","ranges":[{"startOffset":4933233,"endOffset":4933381,"count":0}],"isBlockCoverage":false},{"functionName":"createRuntimeTypeSerializer","ranges":[{"startOffset":4933430,"endOffset":4948789,"count":0}],"isBlockCoverage":false},{"functionName":"transformLegacyDecorators","ranges":[{"startOffset":4948840,"endOffset":4967399,"count":0}],"isBlockCoverage":false},{"functionName":"transformESDecorators","ranges":[{"startOffset":4967446,"endOffset":5046643,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2017","ranges":[{"startOffset":5046684,"endOffset":5077105,"count":0}],"isBlockCoverage":false},{"functionName":"createSuperAccessVariableStatement","ranges":[{"startOffset":5077106,"endOffset":5080255,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2018","ranges":[{"startOffset":5080296,"endOffset":5128868,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2019","ranges":[{"startOffset":5128909,"endOffset":5129862,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2020","ranges":[{"startOffset":5129903,"endOffset":5139899,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2021","ranges":[{"startOffset":5139940,"endOffset":5142712,"count":0}],"isBlockCoverage":false},{"functionName":"transformESNext","ranges":[{"startOffset":5142753,"endOffset":5162546,"count":0}],"isBlockCoverage":false},{"functionName":"countPrologueStatements","ranges":[{"startOffset":5162547,"endOffset":5162764,"count":0}],"isBlockCoverage":false},{"functionName":"isUsingVariableDeclarationList","ranges":[{"startOffset":5162765,"endOffset":5162920,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfVariableDeclarationList","ranges":[{"startOffset":5162921,"endOffset":5163146,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfVariableStatement","ranges":[{"startOffset":5163147,"endOffset":5163267,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKind","ranges":[{"startOffset":5163268,"endOffset":5163405,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfStatements","ranges":[{"startOffset":5163406,"endOffset":5163699,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfCaseOrDefaultClauses","ranges":[{"startOffset":5163700,"endOffset":5164014,"count":0}],"isBlockCoverage":false},{"functionName":"transformJsx","ranges":[{"startOffset":5164052,"endOffset":5184704,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2016","ranges":[{"startOffset":5188321,"endOffset":5191302,"count":0}],"isBlockCoverage":false},{"functionName":"createSpreadSegment","ranges":[{"startOffset":5191343,"endOffset":5191424,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2015","ranges":[{"startOffset":5191425,"endOffset":5322909,"count":0}],"isBlockCoverage":false},{"functionName":"getInstructionName","ranges":[{"startOffset":5322954,"endOffset":5323308,"count":0}],"isBlockCoverage":false},{"functionName":"transformGenerators","ranges":[{"startOffset":5323309,"endOffset":5387743,"count":0}],"isBlockCoverage":false},{"functionName":"transformModule","ranges":[{"startOffset":5387791,"endOffset":5458933,"count":0}],"isBlockCoverage":false},{"functionName":"transformSystemModule","ranges":[{"startOffset":5459189,"endOffset":5507432,"count":0}],"isBlockCoverage":false},{"functionName":"transformECMAScriptModule","ranges":[{"startOffset":5507487,"endOffset":5520556,"count":0}],"isBlockCoverage":false},{"functionName":"transformImpliedNodeFormatDependentModule","ranges":[{"startOffset":5520624,"endOffset":5523109,"count":0}],"isBlockCoverage":false},{"functionName":"canProduceDiagnostics","ranges":[{"startOffset":5523168,"endOffset":5523901,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNodeName","ranges":[{"startOffset":5523902,"endOffset":5527406,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNode","ranges":[{"startOffset":5527407,"endOffset":5544923,"count":0}],"isBlockCoverage":false},{"functionName":"createGetIsolatedDeclarationErrors","ranges":[{"startOffset":5544924,"endOffset":5555804,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationDiagnostics","ranges":[{"startOffset":5555851,"endOffset":5556249,"count":0}],"isBlockCoverage":false},{"functionName":"transformDeclarations","ranges":[{"startOffset":5556609,"endOffset":5622830,"count":0}],"isBlockCoverage":false},{"functionName":"isAlwaysType","ranges":[{"startOffset":5622831,"endOffset":5622953,"count":0}],"isBlockCoverage":false},{"functionName":"maskModifiers","ranges":[{"startOffset":5622954,"endOffset":5623139,"count":0}],"isBlockCoverage":false},{"functionName":"maskModifierFlags","ranges":[{"startOffset":5623140,"endOffset":5623559,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLiteralInitializer","ranges":[{"startOffset":5623560,"endOffset":5623873,"count":0}],"isBlockCoverage":false},{"functionName":"isPreservedDeclarationStatement","ranges":[{"startOffset":5623874,"endOffset":5624414,"count":0}],"isBlockCoverage":false},{"functionName":"isProcessedComponent","ranges":[{"startOffset":5624415,"endOffset":5625164,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleTransformer","ranges":[{"startOffset":5625197,"endOffset":5625710,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformers","ranges":[{"startOffset":5625805,"endOffset":5626066,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptTransformers","ranges":[{"startOffset":5626067,"endOffset":5627883,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationTransformers","ranges":[{"startOffset":5627884,"endOffset":5628163,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCustomTransformer","ranges":[{"startOffset":5628164,"endOffset":5628322,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCustomTransformerFactory","ranges":[{"startOffset":5628323,"endOffset":5628612,"count":0}],"isBlockCoverage":false},{"functionName":"wrapScriptTransformerFactory","ranges":[{"startOffset":5628613,"endOffset":5628732,"count":0}],"isBlockCoverage":false},{"functionName":"wrapDeclarationTransformerFactory","ranges":[{"startOffset":5628733,"endOffset":5628863,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitSubstitution","ranges":[{"startOffset":5628864,"endOffset":5628923,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitNotification","ranges":[{"startOffset":5628924,"endOffset":5629001,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodes","ranges":[{"startOffset":5629002,"endOffset":5642797,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptions","ranges":[{"startOffset":5642907,"endOffset":5642917,"count":0}],"isBlockCoverage":false},{"functionName":"getLexicalEnvironmentFlags","ranges":[{"startOffset":5643235,"endOffset":5643242,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildInfoFile","ranges":[{"startOffset":5643810,"endOffset":5643910,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEmittedFile","ranges":[{"startOffset":5643911,"endOffset":5644986,"count":0}],"isBlockCoverage":false},{"functionName":"getTsBuildInfoEmitOutputFilePath","ranges":[{"startOffset":5644987,"endOffset":5645844,"count":0}],"isBlockCoverage":false},{"functionName":"canEmitTsBuildInfo","ranges":[{"startOffset":5645845,"endOffset":5645951,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsForBundle","ranges":[{"startOffset":5645952,"endOffset":5646554,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsFor","ranges":[{"startOffset":5646555,"endOffset":5647786,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapFilePath","ranges":[{"startOffset":5647787,"endOffset":5647928,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputExtension","ranges":[{"startOffset":5647929,"endOffset":5648379,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathWithoutChangingExt","ranges":[{"startOffset":5648380,"endOffset":5648648,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileName","ranges":[{"startOffset":5648649,"endOffset":5648940,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileNameWorker","ranges":[{"startOffset":5648941,"endOffset":5649269,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileName","ranges":[{"startOffset":5649270,"endOffset":5649875,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileNameWorker","ranges":[{"startOffset":5649876,"endOffset":5650162,"count":0}],"isBlockCoverage":false},{"functionName":"createAddOutput","ranges":[{"startOffset":5650163,"endOffset":5650409,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleOutputFileNames","ranges":[{"startOffset":5650410,"endOffset":5650765,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnOutputFileNames","ranges":[{"startOffset":5650766,"endOffset":5651455,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectory","ranges":[{"startOffset":5651456,"endOffset":5652420,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectoryOfConfig","ranges":[{"startOffset":5652421,"endOffset":5652840,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectOutputs","ranges":[{"startOffset":5652841,"endOffset":5653426,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputFileNames","ranges":[{"startOffset":5653427,"endOffset":5653923,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstProjectOutput","ranges":[{"startOffset":5653924,"endOffset":5655150,"count":0}],"isBlockCoverage":false},{"functionName":"emitResolverSkipsTypeChecking","ranges":[{"startOffset":5655151,"endOffset":5655256,"count":0}],"isBlockCoverage":false},{"functionName":"emitFiles","ranges":[{"startOffset":5655257,"endOffset":5668741,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoText","ranges":[{"startOffset":5668742,"endOffset":5668818,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo","ranges":[{"startOffset":5668819,"endOffset":5668934,"count":0}],"isBlockCoverage":false},{"functionName":"isLateBound","ranges":[{"startOffset":5669451,"endOffset":5669467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5670939,"endOffset":5670962,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5671027,"endOffset":5671072,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5671153,"endOffset":5671222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5671308,"endOffset":5671382,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinter","ranges":[{"startOffset":5671385,"endOffset":5832192,"count":0}],"isBlockCoverage":false},{"functionName":"createBracketsMap","ranges":[{"startOffset":5832193,"endOffset":5832469,"count":1}],"isBlockCoverage":true},{"functionName":"getOpeningBracket","ranges":[{"startOffset":5832470,"endOffset":5832565,"count":0}],"isBlockCoverage":false},{"functionName":"getClosingBracket","ranges":[{"startOffset":5832566,"endOffset":5832661,"count":0}],"isBlockCoverage":false},{"functionName":"emitListItemNoParenthesizer","ranges":[{"startOffset":5832662,"endOffset":5832756,"count":0}],"isBlockCoverage":false},{"functionName":"emitListItemWithParenthesizerRuleSelector","ranges":[{"startOffset":5832757,"endOffset":5832912,"count":0}],"isBlockCoverage":false},{"functionName":"emitListItemWithParenthesizerRule","ranges":[{"startOffset":5832913,"endOffset":5833031,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitListItem","ranges":[{"startOffset":5833032,"endOffset":5833263,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDirectoryStructureHost","ranges":[{"startOffset":5833299,"endOffset":5841991,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5842034,"endOffset":5842319,"count":1}],"isBlockCoverage":false},{"functionName":"updateSharedExtendedConfigFileWatcher","ranges":[{"startOffset":5842348,"endOffset":5843605,"count":0}],"isBlockCoverage":false},{"functionName":"clearSharedExtendedConfigFileWatcher","ranges":[{"startOffset":5843606,"endOffset":5843809,"count":0}],"isBlockCoverage":false},{"functionName":"cleanExtendedConfigCache","ranges":[{"startOffset":5843810,"endOffset":5844268,"count":0}],"isBlockCoverage":false},{"functionName":"updateMissingFilePathsWatch","ranges":[{"startOffset":5844269,"endOffset":5844691,"count":0}],"isBlockCoverage":false},{"functionName":"updateWatchingWildcardDirectories","ranges":[{"startOffset":5844692,"endOffset":5845787,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredFileFromWildCardWatching","ranges":[{"startOffset":5845788,"endOffset":5848527,"count":0}],"isBlockCoverage":false},{"functionName":"isEmittedFileOfProgram","ranges":[{"startOffset":5848528,"endOffset":5848656,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5848694,"endOffset":5848927,"count":1}],"isBlockCoverage":false},{"functionName":"getWatchFactory","ranges":[{"startOffset":5848951,"endOffset":5853765,"count":0}],"isBlockCoverage":false},{"functionName":"getFallbackOptions","ranges":[{"startOffset":5853766,"endOffset":5853994,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcherOf","ranges":[{"startOffset":5853995,"endOffset":5854076,"count":0}],"isBlockCoverage":false},{"functionName":"findConfigFile","ranges":[{"startOffset":5854105,"endOffset":5854364,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5854231,"endOffset":5854360,"count":1},{"startOffset":5854347,"endOffset":5854355,"count":0}],"isBlockCoverage":true},{"functionName":"resolveTripleslashReference","ranges":[{"startOffset":5854365,"endOffset":5854639,"count":0}],"isBlockCoverage":false},{"functionName":"computeCommonSourceDirectoryOfFilenames","ranges":[{"startOffset":5854640,"endOffset":5855709,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHost","ranges":[{"startOffset":5855710,"endOffset":5855826,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSourceFile","ranges":[{"startOffset":5855827,"endOffset":5856332,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteFileMeasuringIO","ranges":[{"startOffset":5856333,"endOffset":5856876,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostWorker","ranges":[{"startOffset":5856877,"endOffset":5859057,"count":0}],"isBlockCoverage":false},{"functionName":"changeCompilerHostLikeToUseCache","ranges":[{"startOffset":5859058,"endOffset":5863000,"count":0}],"isBlockCoverage":false},{"functionName":"getPreEmitDiagnostics","ranges":[{"startOffset":5863001,"endOffset":5863795,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostics","ranges":[{"startOffset":5863796,"endOffset":5863977,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostic","ranges":[{"startOffset":5863978,"endOffset":5864627,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5864682,"endOffset":5865045,"count":1}],"isBlockCoverage":false},{"functionName":"getCategoryFormat","ranges":[{"startOffset":5865253,"endOffset":5865618,"count":0}],"isBlockCoverage":false},{"functionName":"formatColorAndReset","ranges":[{"startOffset":5865619,"endOffset":5865721,"count":0}],"isBlockCoverage":false},{"functionName":"formatCodeSpan","ranges":[{"startOffset":5865722,"endOffset":5867758,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":5867759,"endOffset":5868363,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticsWithColorAndContext","ranges":[{"startOffset":5868364,"endOffset":5869796,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDiagnosticMessageText","ranges":[{"startOffset":5869797,"endOffset":5870289,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForFileReference","ranges":[{"startOffset":5870290,"endOffset":5870441,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForResolutionAtIndex","ranges":[{"startOffset":5870442,"endOffset":5870618,"count":0}],"isBlockCoverage":false},{"functionName":"isExclusivelyTypeOnlyImportOrExport","ranges":[{"startOffset":5870619,"endOffset":5870854,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocation","ranges":[{"startOffset":5870855,"endOffset":5870991,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocationWorker","ranges":[{"startOffset":5870992,"endOffset":5871780,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitSyntaxForUsageLocationWorker","ranges":[{"startOffset":5871781,"endOffset":5872651,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionModeOverride","ranges":[{"startOffset":5872652,"endOffset":5873954,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionName","ranges":[{"startOffset":5874049,"endOffset":5874117,"count":0}],"isBlockCoverage":false},{"functionName":"getMode","ranges":[{"startOffset":5874207,"endOffset":5874294,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoader","ranges":[{"startOffset":5874298,"endOffset":5874664,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeReferenceResolutionName","ranges":[{"startOffset":5874665,"endOffset":5874767,"count":0}],"isBlockCoverage":false},{"functionName":"getMode","ranges":[{"startOffset":5874871,"endOffset":5875005,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceResolutionLoader","ranges":[{"startOffset":5875009,"endOffset":5875393,"count":0}],"isBlockCoverage":false},{"functionName":"loadWithModeAwareCache","ranges":[{"startOffset":5875394,"endOffset":5876237,"count":0}],"isBlockCoverage":false},{"functionName":"getInferredLibraryNameResolveFrom","ranges":[{"startOffset":5876302,"endOffset":5876597,"count":0}],"isBlockCoverage":false},{"functionName":"getLibraryNameFromLibFileName","ranges":[{"startOffset":5876598,"endOffset":5876890,"count":0}],"isBlockCoverage":false},{"functionName":"isReferencedFile","ranges":[{"startOffset":5876891,"endOffset":5877173,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceFileLocation","ranges":[{"startOffset":5877174,"endOffset":5877254,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileLocation","ranges":[{"startOffset":5877255,"endOffset":5878578,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramUptoDate","ranges":[{"startOffset":5878579,"endOffset":5881296,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileParsingDiagnostics","ranges":[{"startOffset":5881297,"endOffset":5881544,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFile","ranges":[{"startOffset":5881545,"endOffset":5881804,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFileWorker","ranges":[{"startOffset":5881805,"endOffset":5883140,"count":0}],"isBlockCoverage":false},{"functionName":"shouldProgramCreateNewSourceFiles","ranges":[{"startOffset":5890551,"endOffset":5890755,"count":0}],"isBlockCoverage":false},{"functionName":"createCreateProgramOptions","ranges":[{"startOffset":5890756,"endOffset":5891029,"count":0}],"isBlockCoverage":false},{"functionName":"createProgram","ranges":[{"startOffset":5891030,"endOffset":6025829,"count":0}],"isBlockCoverage":false},{"functionName":"shouldTransformImportCallWorker","ranges":[{"startOffset":6025830,"endOffset":6026159,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleFormatOfFileWorker","ranges":[{"startOffset":6026160,"endOffset":6026320,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForEmitWorker","ranges":[{"startOffset":6026321,"endOffset":6027159,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolutionModeForFileWorker","ranges":[{"startOffset":6027160,"endOffset":6027352,"count":0}],"isBlockCoverage":false},{"functionName":"updateHostForUseSourceOfProjectReferenceRedirect","ranges":[{"startOffset":6027353,"endOffset":6033218,"count":0}],"isBlockCoverage":false},{"functionName":"handleNoEmitOptions","ranges":[{"startOffset":6033344,"endOffset":6034526,"count":0}],"isBlockCoverage":false},{"functionName":"filterSemanticDiagnostics","ranges":[{"startOffset":6034527,"endOffset":6034659,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigHostFromCompilerHostLike","ranges":[{"startOffset":6034660,"endOffset":6035759,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectReferencePath","ranges":[{"startOffset":6035760,"endOffset":6035854,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionDiagnostic","ranges":[{"startOffset":6035855,"endOffset":6037222,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNames","ranges":[{"startOffset":6037223,"endOffset":6037456,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNameStringLiteralAt","ranges":[{"startOffset":6037457,"endOffset":6037877,"count":0}],"isBlockCoverage":false},{"functionName":"createProgramDiagnostics","ranges":[{"startOffset":6037917,"endOffset":6051942,"count":0}],"isBlockCoverage":false},{"functionName":"getFileEmitOutput","ranges":[{"startOffset":6051976,"endOffset":6052456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6052494,"endOffset":6052769,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6052812,"endOffset":6068451,"count":1}],"isBlockCoverage":false},{"functionName":"createManyToManyPathMap","ranges":[{"startOffset":6052835,"endOffset":6054134,"count":0}],"isBlockCoverage":false},{"functionName":"addToMultimap","ranges":[{"startOffset":6054204,"endOffset":6054372,"count":0}],"isBlockCoverage":false},{"functionName":"deleteFromMultimap","ranges":[{"startOffset":6054375,"endOffset":6054595,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFilesFromImportedModuleSymbol","ranges":[{"startOffset":6054598,"endOffset":6054836,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFilesFromImportLiteral","ranges":[{"startOffset":6054839,"endOffset":6055043,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileFromFileName","ranges":[{"startOffset":6055046,"endOffset":6055273,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFiles","ranges":[{"startOffset":6055276,"endOffset":6057772,"count":0}],"isBlockCoverage":false},{"functionName":"canReuseOldState","ranges":[{"startOffset":6057775,"endOffset":6057904,"count":0}],"isBlockCoverage":false},{"functionName":"createReferencedMap","ranges":[{"startOffset":6057960,"endOffset":6058104,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":6058166,"endOffset":6059824,"count":0}],"isBlockCoverage":false},{"functionName":"releaseCache2","ranges":[{"startOffset":6059860,"endOffset":6059984,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedBy","ranges":[{"startOffset":6060033,"endOffset":6060362,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedByWithOldState","ranges":[{"startOffset":6060422,"endOffset":6060973,"count":0}],"isBlockCoverage":false},{"functionName":"updateSignatureOfFile","ranges":[{"startOffset":6061057,"endOffset":6061292,"count":0}],"isBlockCoverage":false},{"functionName":"computeDtsSignature","ranges":[{"startOffset":6061358,"endOffset":6062087,"count":0}],"isBlockCoverage":false},{"functionName":"updateShapeSignature","ranges":[{"startOffset":6062149,"endOffset":6063562,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDependencies","ranges":[{"startOffset":6063626,"endOffset":6064614,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFileNames","ranges":[{"startOffset":6064674,"endOffset":6064973,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedByPaths","ranges":[{"startOffset":6064976,"endOffset":6065151,"count":0}],"isBlockCoverage":false},{"functionName":"containsOnlyAmbientModules","ranges":[{"startOffset":6065215,"endOffset":6065429,"count":0}],"isBlockCoverage":false},{"functionName":"containsGlobalScopeAugmentation","ranges":[{"startOffset":6065432,"endOffset":6065605,"count":0}],"isBlockCoverage":false},{"functionName":"isFileAffectingGlobalScope","ranges":[{"startOffset":6065608,"endOffset":6065836,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFilesExcludingDefaultLibraryFile","ranges":[{"startOffset":6065839,"endOffset":6066588,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedByUpdatedShapeWhenNonModuleEmit","ranges":[{"startOffset":6066688,"endOffset":6067083,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedByUpdatedShapeWhenModuleEmit","ranges":[{"startOffset":6067086,"endOffset":6068449,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6068558,"endOffset":6069370,"count":1}],"isBlockCoverage":false},{"functionName":"isBuilderProgramStateWithDefinedProgram","ranges":[{"startOffset":6069396,"endOffset":6069490,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderProgramStateWithDefinedProgram","ranges":[{"startOffset":6069491,"endOffset":6069630,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderFileEmit","ranges":[{"startOffset":6069631,"endOffset":6070046,"count":0}],"isBlockCoverage":false},{"functionName":"getPendingEmitKind","ranges":[{"startOffset":6070047,"endOffset":6070788,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameKeys","ranges":[{"startOffset":6070789,"endOffset":6070960,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramState","ranges":[{"startOffset":6070961,"endOffset":6078081,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitSignatureFromOldSignature","ranges":[{"startOffset":6078082,"endOffset":6078415,"count":0}],"isBlockCoverage":false},{"functionName":"repopulateDiagnostics","ranges":[{"startOffset":6078416,"endOffset":6078952,"count":0}],"isBlockCoverage":false},{"functionName":"convertOrRepopulateDiagnosticMessageChain","ranges":[{"startOffset":6078953,"endOffset":6079759,"count":0}],"isBlockCoverage":false},{"functionName":"convertOrRepopulateDiagnosticMessageChainArray","ranges":[{"startOffset":6079760,"endOffset":6079992,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnostics","ranges":[{"startOffset":6079993,"endOffset":6081146,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnosticRelatedInformation","ranges":[{"startOffset":6081147,"endOffset":6081650,"count":0}],"isBlockCoverage":false},{"functionName":"releaseCache","ranges":[{"startOffset":6081651,"endOffset":6081745,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceFileOkWithoutNextAffectedCall","ranges":[{"startOffset":6081746,"endOffset":6082006,"count":0}],"isBlockCoverage":false},{"functionName":"getNextAffectedFile","ranges":[{"startOffset":6082007,"endOffset":6083701,"count":0}],"isBlockCoverage":false},{"functionName":"clearAffectedFilesPendingEmit","ranges":[{"startOffset":6083702,"endOffset":6084664,"count":0}],"isBlockCoverage":false},{"functionName":"getPendingEmitKindWithSeen","ranges":[{"startOffset":6084665,"endOffset":6085028,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderFileEmitAllDts","ranges":[{"startOffset":6085029,"endOffset":6085146,"count":0}],"isBlockCoverage":false},{"functionName":"getNextAffectedFilePendingEmit","ranges":[{"startOffset":6085147,"endOffset":6085963,"count":0}],"isBlockCoverage":false},{"functionName":"getNextPendingEmitDiagnosticsFile","ranges":[{"startOffset":6085964,"endOffset":6086687,"count":0}],"isBlockCoverage":false},{"functionName":"removeDiagnosticsOfLibraryFiles","ranges":[{"startOffset":6086688,"endOffset":6087105,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfAffectedFile","ranges":[{"startOffset":6087106,"endOffset":6087733,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOf","ranges":[{"startOffset":6087734,"endOffset":6088606,"count":0}],"isBlockCoverage":false},{"functionName":"removeSemanticDiagnosticsOf","ranges":[{"startOffset":6088607,"endOffset":6088886,"count":0}],"isBlockCoverage":false},{"functionName":"isChangedSignature","ranges":[{"startOffset":6088887,"endOffset":6089135,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfGlobalScope","ranges":[{"startOffset":6089136,"endOffset":6089689,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfReferencingExportOfAffectedFile","ranges":[{"startOffset":6089690,"endOffset":6092143,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfFileAndExportsOfFile","ranges":[{"startOffset":6092144,"endOffset":6092873,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticDiagnosticsOfFile","ranges":[{"startOffset":6092874,"endOffset":6093224,"count":0}],"isBlockCoverage":false},{"functionName":"getBinderAndCheckerDiagnosticsOfFile","ranges":[{"startOffset":6093225,"endOffset":6093911,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalBundleEmitBuildInfo","ranges":[{"startOffset":6093912,"endOffset":6094037,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalBuildInfo","ranges":[{"startOffset":6094038,"endOffset":6094106,"count":0}],"isBlockCoverage":false},{"functionName":"isNonIncrementalBuildInfo","ranges":[{"startOffset":6094107,"endOffset":6094206,"count":0}],"isBlockCoverage":false},{"functionName":"ensureHasErrorsForState","ranges":[{"startOffset":6094207,"endOffset":6095501,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntaxOrGlobalErrors","ranges":[{"startOffset":6095502,"endOffset":6095763,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoEmitPending","ranges":[{"startOffset":6095764,"endOffset":6095964,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo2","ranges":[{"startOffset":6095965,"endOffset":6108891,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6108934,"endOffset":6109252,"count":1}],"isBlockCoverage":false},{"functionName":"getBuilderCreationParameters","ranges":[{"startOffset":6109281,"endOffset":6110479,"count":0}],"isBlockCoverage":false},{"functionName":"getTextHandlingSourceMapForSignature","ranges":[{"startOffset":6110480,"endOffset":6110658,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignatureWithDiagnostics","ranges":[{"startOffset":6110659,"endOffset":6111945,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignature","ranges":[{"startOffset":6111946,"endOffset":6112091,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgram","ranges":[{"startOffset":6112092,"endOffset":6129893,"count":0}],"isBlockCoverage":false},{"functionName":"addToAffectedFilesPendingEmit","ranges":[{"startOffset":6129894,"endOffset":6130362,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderStateFileInfoForMultiEmit","ranges":[{"startOffset":6130363,"endOffset":6130776,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderFileEmit","ranges":[{"startOffset":6130777,"endOffset":6130908,"count":0}],"isBlockCoverage":false},{"functionName":"toProgramEmitPending","ranges":[{"startOffset":6130909,"endOffset":6131019,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramUsingIncrementalBuildInfo","ranges":[{"startOffset":6131020,"endOffset":6137026,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoFileVersionMap","ranges":[{"startOffset":6137027,"endOffset":6138420,"count":0}],"isBlockCoverage":false},{"functionName":"getNonIncrementalBuildInfoRoots","ranges":[{"startOffset":6138421,"endOffset":6138856,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectedBuilderProgram","ranges":[{"startOffset":6138857,"endOffset":6140446,"count":0}],"isBlockCoverage":false},{"functionName":"createSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":6140481,"endOffset":6140985,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitAndSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":6140986,"endOffset":6141504,"count":0}],"isBlockCoverage":false},{"functionName":"createAbstractBuilder","ranges":[{"startOffset":6141505,"endOffset":6142140,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPath","ranges":[{"startOffset":6142177,"endOffset":6142399,"count":0}],"isBlockCoverage":false},{"functionName":"perceivedOsRootLengthForWatching","ranges":[{"startOffset":6142400,"endOffset":6143060,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFile","ranges":[{"startOffset":6143061,"endOffset":6143355,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFilePath","ranges":[{"startOffset":6143356,"endOffset":6143461,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAtTypes","ranges":[{"startOffset":6143462,"endOffset":6143586,"count":0}],"isBlockCoverage":false},{"functionName":"isInDirectoryPath","ranges":[{"startOffset":6143587,"endOffset":6143867,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectedPackageJsonOrNodeModulesOfAtTypes","ranges":[{"startOffset":6143868,"endOffset":6143998,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectingLocation","ranges":[{"startOffset":6143999,"endOffset":6144117,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocation","ranges":[{"startOffset":6144118,"endOffset":6145951,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFromFailedLookupLocationDirectory","ranges":[{"startOffset":6145952,"endOffset":6146861,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryOfFailedLookupWatch","ranges":[{"startOffset":6146862,"endOffset":6147794,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocationFromTypeRoot","ranges":[{"startOffset":6147795,"endOffset":6148811,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDirectoryOfResolutionCache","ranges":[{"startOffset":6148812,"endOffset":6149092,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionHost","ranges":[{"startOffset":6149093,"endOffset":6149266,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoaderUsingGlobalCache","ranges":[{"startOffset":6149267,"endOffset":6149715,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameUsingGlobalCache","ranges":[{"startOffset":6149716,"endOffset":6151243,"count":0}],"isBlockCoverage":false},{"functionName":"createResolutionCache","ranges":[{"startOffset":6151244,"endOffset":6195506,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionIsSymlink","ranges":[{"startOffset":6195507,"endOffset":6195738,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":6195827,"endOffset":6195858,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":6195874,"endOffset":6195891,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticReporter","ranges":[{"startOffset":6195987,"endOffset":6196643,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenIfNotWatchingForFileChanges","ranges":[{"startOffset":6196644,"endOffset":6196960,"count":0}],"isBlockCoverage":false},{"functionName":"getPlainDiagnosticFollowingNewLines","ranges":[{"startOffset":6197127,"endOffset":6197290,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleTimeString","ranges":[{"startOffset":6197291,"endOffset":6197828,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchStatusReporter","ranges":[{"startOffset":6197829,"endOffset":6198647,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileWithSystem","ranges":[{"startOffset":6198648,"endOffset":6199144,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorCountForSummary","ranges":[{"startOffset":6199145,"endOffset":6199283,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesInErrorForSummary","ranges":[{"startOffset":6199284,"endOffset":6200046,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchErrorSummaryDiagnosticMessage","ranges":[{"startOffset":6200047,"endOffset":6200245,"count":0}],"isBlockCoverage":false},{"functionName":"prettyPathForFileError","ranges":[{"startOffset":6200246,"endOffset":6200595,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSummaryText","ranges":[{"startOffset":6200596,"endOffset":6201889,"count":0}],"isBlockCoverage":false},{"functionName":"createTabularErrorsDisplay","ranges":[{"startOffset":6201890,"endOffset":6203296,"count":0}],"isBlockCoverage":false},{"functionName":"isBuilderProgram","ranges":[{"startOffset":6203297,"endOffset":6203361,"count":0}],"isBlockCoverage":false},{"functionName":"listFiles","ranges":[{"startOffset":6203362,"endOffset":6203712,"count":0}],"isBlockCoverage":false},{"functionName":"explainFiles","ranges":[{"startOffset":6203713,"endOffset":6204412,"count":0}],"isBlockCoverage":false},{"functionName":"explainIfFileIsRedirectAndImpliedFormat","ranges":[{"startOffset":6204413,"endOffset":6206363,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedFileSpec","ranges":[{"startOffset":6206364,"endOffset":6207074,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedIncludeSpec","ranges":[{"startOffset":6207075,"endOffset":6208188,"count":0}],"isBlockCoverage":false},{"functionName":"fileIncludeReasonToDiagnostics","ranges":[{"startOffset":6208189,"endOffset":6214013,"count":0}],"isBlockCoverage":false},{"functionName":"toFileName","ranges":[{"startOffset":6214014,"endOffset":6214189,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrors","ranges":[{"startOffset":6214190,"endOffset":6216277,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrorsAndGetExitStatus","ranges":[{"startOffset":6216278,"endOffset":6216904,"count":0}],"isBlockCoverage":false},{"functionName":"returnNoopFileWatcher","ranges":[{"startOffset":6216972,"endOffset":6216993,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchHost","ranges":[{"startOffset":6216995,"endOffset":6217537,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactory","ranges":[{"startOffset":6218800,"endOffset":6219197,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostFromProgramHost","ranges":[{"startOffset":6219198,"endOffset":6220922,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileVersionAsHashFromText","ranges":[{"startOffset":6220923,"endOffset":6221947,"count":0}],"isBlockCoverage":false},{"functionName":"setGetSourceFileAsHashVersioned","ranges":[{"startOffset":6221948,"endOffset":6222316,"count":0}],"isBlockCoverage":false},{"functionName":"createProgramHost","ranges":[{"startOffset":6222317,"endOffset":6223755,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost","ranges":[{"startOffset":6223756,"endOffset":6224557,"count":0}],"isBlockCoverage":false},{"functionName":"reportUnrecoverableDiagnostic","ranges":[{"startOffset":6224558,"endOffset":6224728,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfConfigFile","ranges":[{"startOffset":6224729,"endOffset":6225487,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfFilesAndCompilerOptions","ranges":[{"startOffset":6225488,"endOffset":6226009,"count":0}],"isBlockCoverage":false},{"functionName":"performIncrementalCompilation","ranges":[{"startOffset":6226010,"endOffset":6226740,"count":0}],"isBlockCoverage":false},{"functionName":"readBuilderProgram","ranges":[{"startOffset":6226773,"endOffset":6227409,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalCompilerHost","ranges":[{"startOffset":6227410,"endOffset":6227878,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalProgram","ranges":[{"startOffset":6227879,"endOffset":6228348,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost2","ranges":[{"startOffset":6228349,"endOffset":6229376,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchProgram","ranges":[{"startOffset":6229377,"endOffset":6260352,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6260423,"endOffset":6262155,"count":1}],"isBlockCoverage":false},{"functionName":"resolveConfigFileProjectName","ranges":[{"startOffset":6262184,"endOffset":6262361,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateValueFromConfigFileMap","ranges":[{"startOffset":6262449,"endOffset":6262731,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateValueMapFromConfigFileMap","ranges":[{"startOffset":6262732,"endOffset":6262908,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentTime","ranges":[{"startOffset":6262909,"endOffset":6263003,"count":0}],"isBlockCoverage":false},{"functionName":"isCircularBuildOrder","ranges":[{"startOffset":6263004,"endOffset":6263099,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFromAnyBuildOrder","ranges":[{"startOffset":6263100,"endOffset":6263247,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderStatusReporter","ranges":[{"startOffset":6263248,"endOffset":6263630,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHostBase","ranges":[{"startOffset":6263631,"endOffset":6264345,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHost","ranges":[{"startOffset":6264346,"endOffset":6264663,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatchHost","ranges":[{"startOffset":6264664,"endOffset":6265040,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsOfBuildOptions","ranges":[{"startOffset":6265041,"endOffset":6265314,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilder","ranges":[{"startOffset":6265315,"endOffset":6265494,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatch","ranges":[{"startOffset":6265495,"endOffset":6265722,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderState","ranges":[{"startOffset":6265723,"endOffset":6270979,"count":0}],"isBlockCoverage":false},{"functionName":"toPath2","ranges":[{"startOffset":6270980,"endOffset":6271127,"count":0}],"isBlockCoverage":false},{"functionName":"toResolvedConfigFilePath","ranges":[{"startOffset":6271128,"endOffset":6271444,"count":0}],"isBlockCoverage":false},{"functionName":"isParsedCommandLine","ranges":[{"startOffset":6271445,"endOffset":6271510,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedParsedConfigFile","ranges":[{"startOffset":6271511,"endOffset":6271694,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFile","ranges":[{"startOffset":6271695,"endOffset":6272890,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectName","ranges":[{"startOffset":6272891,"endOffset":6273035,"count":0}],"isBlockCoverage":false},{"functionName":"createBuildOrder","ranges":[{"startOffset":6273036,"endOffset":6274521,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrder","ranges":[{"startOffset":6274522,"endOffset":6274614,"count":0}],"isBlockCoverage":false},{"functionName":"createStateBuildOrder","ranges":[{"startOffset":6274615,"endOffset":6276780,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFor","ranges":[{"startOffset":6276781,"endOffset":6277743,"count":0}],"isBlockCoverage":false},{"functionName":"enableCache","ranges":[{"startOffset":6277744,"endOffset":6278648,"count":0}],"isBlockCoverage":false},{"functionName":"disableCache","ranges":[{"startOffset":6278649,"endOffset":6279539,"count":0}],"isBlockCoverage":false},{"functionName":"clearProjectStatus","ranges":[{"startOffset":6279540,"endOffset":6279666,"count":0}],"isBlockCoverage":false},{"functionName":"addProjToQueue","ranges":[{"startOffset":6279667,"endOffset":6279947,"count":0}],"isBlockCoverage":false},{"functionName":"setupInitialBuild","ranges":[{"startOffset":6279948,"endOffset":6280536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6280583,"endOffset":6280833,"count":1}],"isBlockCoverage":false},{"functionName":"doneInvalidatedProject","ranges":[{"startOffset":6280866,"endOffset":6281077,"count":0}],"isBlockCoverage":false},{"functionName":"createUpdateOutputFileStampsProject","ranges":[{"startOffset":6281078,"endOffset":6281837,"count":0}],"isBlockCoverage":false},{"functionName":"createBuildOrUpdateInvalidedProject","ranges":[{"startOffset":6281838,"endOffset":6290992,"count":0}],"isBlockCoverage":false},{"functionName":"getNextInvalidatedProjectCreateInfo","ranges":[{"startOffset":6290993,"endOffset":6294670,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidatedProjectWithInfo","ranges":[{"startOffset":6294671,"endOffset":6295152,"count":0}],"isBlockCoverage":false},{"functionName":"getNextInvalidatedProject","ranges":[{"startOffset":6295153,"endOffset":6295401,"count":0}],"isBlockCoverage":false},{"functionName":"getOldProgram","ranges":[{"startOffset":6295402,"endOffset":6295651,"count":0}],"isBlockCoverage":false},{"functionName":"afterProgramDone","ranges":[{"startOffset":6295652,"endOffset":6295925,"count":0}],"isBlockCoverage":false},{"functionName":"isFileWatcherWithModifiedTime","ranges":[{"startOffset":6295926,"endOffset":6296001,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime2","ranges":[{"startOffset":6296002,"endOffset":6296500,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":6296501,"endOffset":6297725,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputTimeStampMap","ranges":[{"startOffset":6297726,"endOffset":6298013,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoCacheEntry","ranges":[{"startOffset":6298014,"endOffset":6298285,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo3","ranges":[{"startOffset":6298286,"endOffset":6298872,"count":0}],"isBlockCoverage":false},{"functionName":"checkConfigFileUpToDateStatus","ranges":[{"startOffset":6298873,"endOffset":6299236,"count":0}],"isBlockCoverage":false},{"functionName":"getUpToDateStatusWorker","ranges":[{"startOffset":6299237,"endOffset":6308980,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameBuildInfo","ranges":[{"startOffset":6308981,"endOffset":6309178,"count":0}],"isBlockCoverage":false},{"functionName":"getUpToDateStatus","ranges":[{"startOffset":6309179,"endOffset":6309817,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutputTimestampsWorker","ranges":[{"startOffset":6309818,"endOffset":6311766,"count":0}],"isBlockCoverage":false},{"functionName":"getLatestChangedDtsTime","ranges":[{"startOffset":6311767,"endOffset":6312409,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutputTimestamps","ranges":[{"startOffset":6312410,"endOffset":6312924,"count":0}],"isBlockCoverage":false},{"functionName":"queueReferencingProjects","ranges":[{"startOffset":6312925,"endOffset":6314937,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":6314938,"endOffset":6315354,"count":0}],"isBlockCoverage":false},{"functionName":"buildWorker","ranges":[{"startOffset":6315355,"endOffset":6316518,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":6316519,"endOffset":6316827,"count":0}],"isBlockCoverage":false},{"functionName":"cleanWorker","ranges":[{"startOffset":6316828,"endOffset":6318290,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateProject","ranges":[{"startOffset":6318291,"endOffset":6318729,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateProjectAndScheduleBuilds","ranges":[{"startOffset":6318730,"endOffset":6318999,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleBuildInvalidatedProject","ranges":[{"startOffset":6319000,"endOffset":6319469,"count":0}],"isBlockCoverage":false},{"functionName":"buildNextInvalidatedProject","ranges":[{"startOffset":6319470,"endOffset":6319862,"count":0}],"isBlockCoverage":false},{"functionName":"buildNextInvalidatedProjectWorker","ranges":[{"startOffset":6319863,"endOffset":6321220,"count":0}],"isBlockCoverage":false},{"functionName":"watchConfigFile","ranges":[{"startOffset":6321221,"endOffset":6321674,"count":0}],"isBlockCoverage":false},{"functionName":"watchExtendedConfigFiles","ranges":[{"startOffset":6321675,"endOffset":6322434,"count":0}],"isBlockCoverage":false},{"functionName":"watchWildCardDirectories","ranges":[{"startOffset":6322435,"endOffset":6323719,"count":0}],"isBlockCoverage":false},{"functionName":"watchInputFiles","ranges":[{"startOffset":6323720,"endOffset":6324293,"count":0}],"isBlockCoverage":false},{"functionName":"watchPackageJsonFiles","ranges":[{"startOffset":6324294,"endOffset":6324947,"count":0}],"isBlockCoverage":false},{"functionName":"startWatching","ranges":[{"startOffset":6324948,"endOffset":6325843,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatching","ranges":[{"startOffset":6325844,"endOffset":6326397,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWorker","ranges":[{"startOffset":6326398,"endOffset":6327949,"count":0}],"isBlockCoverage":false},{"functionName":"relName","ranges":[{"startOffset":6327950,"endOffset":6328104,"count":0}],"isBlockCoverage":false},{"functionName":"reportStatus","ranges":[{"startOffset":6328105,"endOffset":6328241,"count":0}],"isBlockCoverage":false},{"functionName":"reportWatchStatus","ranges":[{"startOffset":6328242,"endOffset":6328495,"count":0}],"isBlockCoverage":false},{"functionName":"reportErrors","ranges":[{"startOffset":6328496,"endOffset":6328594,"count":0}],"isBlockCoverage":false},{"functionName":"reportAndStoreErrors","ranges":[{"startOffset":6328595,"endOffset":6328795,"count":0}],"isBlockCoverage":false},{"functionName":"reportParseConfigFileDiagnostic","ranges":[{"startOffset":6328796,"endOffset":6328925,"count":0}],"isBlockCoverage":false},{"functionName":"reportErrorSummary","ranges":[{"startOffset":6328926,"endOffset":6330340,"count":0}],"isBlockCoverage":false},{"functionName":"reportBuildQueue","ranges":[{"startOffset":6330341,"endOffset":6330559,"count":0}],"isBlockCoverage":false},{"functionName":"reportUpToDateStatus","ranges":[{"startOffset":6330560,"endOffset":6335445,"count":0}],"isBlockCoverage":false},{"functionName":"verboseReportProjectStatus","ranges":[{"startOffset":6335446,"endOffset":6335608,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6335685,"endOffset":6335904,"count":1}],"isBlockCoverage":false},{"functionName":"countLines","ranges":[{"startOffset":6335928,"endOffset":6336212,"count":0}],"isBlockCoverage":false},{"functionName":"getCountsMap","ranges":[{"startOffset":6336213,"endOffset":6336482,"count":0}],"isBlockCoverage":false},{"functionName":"getCountKey","ranges":[{"startOffset":6336483,"endOffset":6336984,"count":0}],"isBlockCoverage":false},{"functionName":"updateReportDiagnostic","ranges":[{"startOffset":6336985,"endOffset":6337162,"count":0}],"isBlockCoverage":false},{"functionName":"defaultIsPretty","ranges":[{"startOffset":6337163,"endOffset":6337302,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBePretty","ranges":[{"startOffset":6337303,"endOffset":6337467,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForHelp","ranges":[{"startOffset":6337468,"endOffset":6337747,"count":0}],"isBlockCoverage":false},{"functionName":"printVersion","ranges":[{"startOffset":6337748,"endOffset":6337859,"count":0}],"isBlockCoverage":false},{"functionName":"createColors","ranges":[{"startOffset":6337860,"endOffset":6339110,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayNameTextOfOption","ranges":[{"startOffset":6339111,"endOffset":6339238,"count":0}],"isBlockCoverage":false},{"functionName":"generateOptionOutput","ranges":[{"startOffset":6339239,"endOffset":6344755,"count":0}],"isBlockCoverage":false},{"functionName":"generateGroupOptionOutput","ranges":[{"startOffset":6344756,"endOffset":6345400,"count":0}],"isBlockCoverage":false},{"functionName":"generateSectionOptionsOutput","ranges":[{"startOffset":6345401,"endOffset":6346605,"count":0}],"isBlockCoverage":false},{"functionName":"printEasyHelp","ranges":[{"startOffset":6346606,"endOffset":6348919,"count":0}],"isBlockCoverage":false},{"functionName":"printAllHelp","ranges":[{"startOffset":6348920,"endOffset":6350336,"count":0}],"isBlockCoverage":false},{"functionName":"printBuildHelp","ranges":[{"startOffset":6350337,"endOffset":6351062,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":6351063,"endOffset":6351893,"count":0}],"isBlockCoverage":false},{"functionName":"printHelp","ranges":[{"startOffset":6351894,"endOffset":6352131,"count":0}],"isBlockCoverage":false},{"functionName":"executeCommandLineWorker","ranges":[{"startOffset":6352132,"endOffset":6357826,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildCommand","ranges":[{"startOffset":6357827,"endOffset":6358199,"count":0}],"isBlockCoverage":false},{"functionName":"executeCommandLine","ranges":[{"startOffset":6358200,"endOffset":6359226,"count":0}],"isBlockCoverage":false},{"functionName":"reportWatchModeWithoutSysSupport","ranges":[{"startOffset":6359227,"endOffset":6359559,"count":0}],"isBlockCoverage":false},{"functionName":"performBuild","ranges":[{"startOffset":6359618,"endOffset":6362695,"count":0}],"isBlockCoverage":false},{"functionName":"createReportErrorSummary","ranges":[{"startOffset":6362696,"endOffset":6362907,"count":0}],"isBlockCoverage":false},{"functionName":"performCompilation","ranges":[{"startOffset":6362908,"endOffset":6364088,"count":0}],"isBlockCoverage":false},{"functionName":"performIncrementalCompilation2","ranges":[{"startOffset":6364089,"endOffset":6364992,"count":0}],"isBlockCoverage":false},{"functionName":"updateSolutionBuilderHost","ranges":[{"startOffset":6364993,"endOffset":6365308,"count":0}],"isBlockCoverage":false},{"functionName":"updateCreateProgram","ranges":[{"startOffset":6365309,"endOffset":6365834,"count":0}],"isBlockCoverage":false},{"functionName":"updateWatchCompilationHost","ranges":[{"startOffset":6365835,"endOffset":6366382,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchStatusReporter2","ranges":[{"startOffset":6366383,"endOffset":6366510,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchOfConfigFile","ranges":[{"startOffset":6366511,"endOffset":6367193,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchOfFilesAndCompilerOptions","ranges":[{"startOffset":6367194,"endOffset":6367648,"count":0}],"isBlockCoverage":false},{"functionName":"enableSolutionPerformance","ranges":[{"startOffset":6367649,"endOffset":6367817,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionPerfomrance","ranges":[{"startOffset":6367818,"endOffset":6368521,"count":0}],"isBlockCoverage":false},{"functionName":"reportSolutionBuilderTimes","ranges":[{"startOffset":6368522,"endOffset":6370040,"count":0}],"isBlockCoverage":false},{"functionName":"canReportDiagnostics","ranges":[{"startOffset":6370041,"endOffset":6370196,"count":0}],"isBlockCoverage":false},{"functionName":"canTrace","ranges":[{"startOffset":6370197,"endOffset":6370301,"count":0}],"isBlockCoverage":false},{"functionName":"enableStatisticsAndTracing","ranges":[{"startOffset":6370302,"endOffset":6370621,"count":0}],"isBlockCoverage":false},{"functionName":"isSolutionMarkOrMeasure","ranges":[{"startOffset":6370622,"endOffset":6370712,"count":0}],"isBlockCoverage":false},{"functionName":"reportStatistics","ranges":[{"startOffset":6370713,"endOffset":6374986,"count":0}],"isBlockCoverage":false},{"functionName":"reportAllStatistics","ranges":[{"startOffset":6374987,"endOffset":6375452,"count":0}],"isBlockCoverage":false},{"functionName":"statisticValue","ranges":[{"startOffset":6375453,"endOffset":6375745,"count":0}],"isBlockCoverage":false},{"functionName":"writeConfigFile","ranges":[{"startOffset":6375746,"endOffset":6376539,"count":0}],"isBlockCoverage":false},{"functionName":"syntacticResult","ranges":[{"startOffset":6376581,"endOffset":6376673,"count":3}],"isBlockCoverage":true},{"functionName":"createSyntacticTypeNodeBuilder","ranges":[{"startOffset":6376940,"endOffset":6426776,"count":0}],"isBlockCoverage":false},{"functionName":"NameValidationResult","ranges":[{"startOffset":6426907,"endOffset":6426933,"count":0}],"isBlockCoverage":false},{"functionName":"discoverTypings","ranges":[{"startOffset":6426954,"endOffset":6426975,"count":0}],"isBlockCoverage":false},{"functionName":"isTypingUpToDate","ranges":[{"startOffset":6426997,"endOffset":6427019,"count":0}],"isBlockCoverage":false},{"functionName":"loadSafeList","ranges":[{"startOffset":6427037,"endOffset":6427055,"count":0}],"isBlockCoverage":false},{"functionName":"loadTypesMap","ranges":[{"startOffset":6427073,"endOffset":6427091,"count":0}],"isBlockCoverage":false},{"functionName":"nonRelativeModuleNameForTypingCache","ranges":[{"startOffset":6427132,"endOffset":6427173,"count":0}],"isBlockCoverage":false},{"functionName":"renderPackageNameValidationFailure","ranges":[{"startOffset":6427213,"endOffset":6427253,"count":0}],"isBlockCoverage":false},{"functionName":"validatePackageName","ranges":[{"startOffset":6427278,"endOffset":6427303,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6427771,"endOffset":6428183,"count":1}],"isBlockCoverage":false},{"functionName":"hasArgument","ranges":[{"startOffset":6428217,"endOffset":6428297,"count":0}],"isBlockCoverage":false},{"functionName":"findArgument","ranges":[{"startOffset":6428298,"endOffset":6428468,"count":0}],"isBlockCoverage":false},{"functionName":"nowString","ranges":[{"startOffset":6428469,"endOffset":6428732,"count":0}],"isBlockCoverage":false},{"functionName":"indent2","ranges":[{"startOffset":6428759,"endOffset":6428836,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndented","ranges":[{"startOffset":6428837,"endOffset":6428924,"count":0}],"isBlockCoverage":false},{"functionName":"isTypingUpToDate","ranges":[{"startOffset":6428954,"endOffset":6429240,"count":0}],"isBlockCoverage":false},{"functionName":"nonRelativeModuleNameForTypingCache","ranges":[{"startOffset":6429241,"endOffset":6429365,"count":0}],"isBlockCoverage":false},{"functionName":"loadSafeList","ranges":[{"startOffset":6429366,"endOffset":6429538,"count":0}],"isBlockCoverage":false},{"functionName":"loadTypesMap","ranges":[{"startOffset":6429539,"endOffset":6429816,"count":0}],"isBlockCoverage":false},{"functionName":"discoverTypings","ranges":[{"startOffset":6429817,"endOffset":6436049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6436094,"endOffset":6436712,"count":1}],"isBlockCoverage":false},{"functionName":"validatePackageName","ranges":[{"startOffset":6436775,"endOffset":6436916,"count":0}],"isBlockCoverage":false},{"functionName":"validatePackageNameWorker","ranges":[{"startOffset":6436917,"endOffset":6438121,"count":0}],"isBlockCoverage":false},{"functionName":"renderPackageNameValidationFailure","ranges":[{"startOffset":6438122,"endOffset":6438435,"count":0}],"isBlockCoverage":false},{"functionName":"renderPackageNameValidationFailureWorker","ranges":[{"startOffset":6438436,"endOffset":6439328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6439376,"endOffset":6439846,"count":1}],"isBlockCoverage":false},{"functionName":"StringScriptSnapshot","ranges":[{"startOffset":6439434,"endOffset":6439483,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":6439488,"endOffset":6439615,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":6439620,"endOffset":6439670,"count":0}],"isBlockCoverage":false},{"functionName":"getChangeRange","ranges":[{"startOffset":6439675,"endOffset":6439720,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":6439727,"endOffset":6439801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6439940,"endOffset":6440512,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6440604,"endOffset":6440955,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6441040,"endOffset":6441341,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6441446,"endOffset":6441640,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6441722,"endOffset":6441939,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6442014,"endOffset":6442375,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6442445,"endOffset":6442608,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6442674,"endOffset":6442932,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6442995,"endOffset":6443196,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6443261,"endOffset":6443456,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultFormatCodeSettings","ranges":[{"startOffset":6443486,"endOffset":6444613,"count":1},{"startOffset":6443629,"endOffset":6443636,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6444720,"endOffset":6446894,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6446969,"endOffset":6447742,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6447813,"endOffset":6448041,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6448107,"endOffset":6448364,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6448427,"endOffset":6449160,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6449219,"endOffset":6449881,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6449943,"endOffset":6452156,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6452233,"endOffset":6453578,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6453661,"endOffset":6455215,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6455291,"endOffset":6457430,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6457603,"endOffset":6457960,"count":1}],"isBlockCoverage":false},{"functionName":"getMeaningFromDeclaration","ranges":[{"startOffset":6457986,"endOffset":6459926,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromLocation","ranges":[{"startOffset":6459927,"endOffset":6461121,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromRightHandSideOfImportEquals","ranges":[{"startOffset":6461122,"endOffset":6461434,"count":0}],"isBlockCoverage":false},{"functionName":"isInRightSideOfInternalImportEqualsDeclaration","ranges":[{"startOffset":6461435,"endOffset":6461688,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReference","ranges":[{"startOffset":6461689,"endOffset":6461822,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedNameNamespaceReference","ranges":[{"startOffset":6461823,"endOffset":6462197,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessNamespaceReference","ranges":[{"startOffset":6462198,"endOffset":6462944,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReference","ranges":[{"startOffset":6462945,"endOffset":6463472,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpressionTarget","ranges":[{"startOffset":6463473,"endOffset":6463725,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpressionTarget","ranges":[{"startOffset":6463726,"endOffset":6463976,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpressionTarget","ranges":[{"startOffset":6463977,"endOffset":6464239,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateTag","ranges":[{"startOffset":6464240,"endOffset":6464486,"count":0}],"isBlockCoverage":false},{"functionName":"isDecoratorTarget","ranges":[{"startOffset":6464487,"endOffset":6464729,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElementTagName","ranges":[{"startOffset":6464730,"endOffset":6464985,"count":0}],"isBlockCoverage":false},{"functionName":"selectExpressionOfCallOrNewExpressionOrDecorator","ranges":[{"startOffset":6464986,"endOffset":6465079,"count":0}],"isBlockCoverage":false},{"functionName":"selectTagOfTaggedTemplateExpression","ranges":[{"startOffset":6465080,"endOffset":6465153,"count":0}],"isBlockCoverage":false},{"functionName":"selectTagNameOfJsxOpeningLikeElement","ranges":[{"startOffset":6465154,"endOffset":6465232,"count":0}],"isBlockCoverage":false},{"functionName":"isCalleeWorker","ranges":[{"startOffset":6465233,"endOffset":6465632,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyAccess","ranges":[{"startOffset":6465633,"endOffset":6465740,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyOrElementAccess","ranges":[{"startOffset":6465741,"endOffset":6465902,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetLabel","ranges":[{"startOffset":6465903,"endOffset":6466195,"count":0}],"isBlockCoverage":false},{"functionName":"hasPropertyAccessExpressionWithName","ranges":[{"startOffset":6466196,"endOffset":6466385,"count":0}],"isBlockCoverage":false},{"functionName":"isJumpStatementTarget","ranges":[{"startOffset":6466386,"endOffset":6466563,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelOfLabeledStatement","ranges":[{"startOffset":6466564,"endOffset":6466737,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelName","ranges":[{"startOffset":6466738,"endOffset":6466841,"count":0}],"isBlockCoverage":false},{"functionName":"isTagName","ranges":[{"startOffset":6466842,"endOffset":6466971,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedName","ranges":[{"startOffset":6466972,"endOffset":6467121,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfPropertyAccess","ranges":[{"startOffset":6467122,"endOffset":6467282,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentExpressionOfElementAccess","ranges":[{"startOffset":6467283,"endOffset":6467464,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfModuleDeclaration","ranges":[{"startOffset":6467465,"endOffset":6467616,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfFunctionDeclaration","ranges":[{"startOffset":6467617,"endOffset":6467787,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralNameOfPropertyDeclarationOrIndexAccess","ranges":[{"startOffset":6467788,"endOffset":6468562,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":6468563,"endOffset":6468786,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerNode","ranges":[{"startOffset":6468787,"endOffset":6469452,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeKind","ranges":[{"startOffset":6469453,"endOffset":6473907,"count":0}],"isBlockCoverage":false},{"functionName":"isThis","ranges":[{"startOffset":6473908,"endOffset":6474162,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStartPositionForPosition","ranges":[{"startOffset":6474216,"endOffset":6474429,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRangeExclusive","ranges":[{"startOffset":6474430,"endOffset":6474577,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPosition","ranges":[{"startOffset":6474578,"endOffset":6474659,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPositionExclusive","ranges":[{"startOffset":6474660,"endOffset":6474748,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsStartEnd","ranges":[{"startOffset":6474749,"endOffset":6474851,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOverlapsWithStartEnd","ranges":[{"startOffset":6474852,"endOffset":6474973,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOverlapsWithStartEnd","ranges":[{"startOffset":6474974,"endOffset":6475129,"count":0}],"isBlockCoverage":false},{"functionName":"startEndOverlapsWithStartEnd","ranges":[{"startOffset":6475130,"endOffset":6475299,"count":0}],"isBlockCoverage":false},{"functionName":"positionBelongsToNode","ranges":[{"startOffset":6475300,"endOffset":6475488,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletedNode","ranges":[{"startOffset":6475489,"endOffset":6479659,"count":0}],"isBlockCoverage":false},{"functionName":"nodeEndsWith","ranges":[{"startOffset":6479660,"endOffset":6480078,"count":0}],"isBlockCoverage":false},{"functionName":"findListItemInfo","ranges":[{"startOffset":6480079,"endOffset":6480329,"count":0}],"isBlockCoverage":false},{"functionName":"hasChildOfKind","ranges":[{"startOffset":6480330,"endOffset":6480427,"count":0}],"isBlockCoverage":false},{"functionName":"findChildOfKind","ranges":[{"startOffset":6480428,"endOffset":6480543,"count":0}],"isBlockCoverage":false},{"functionName":"findContainingList","ranges":[{"startOffset":6480544,"endOffset":6480784,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier2","ranges":[{"startOffset":6480785,"endOffset":6480870,"count":0}],"isBlockCoverage":false},{"functionName":"isClassKeyword","ranges":[{"startOffset":6480871,"endOffset":6480950,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionKeyword","ranges":[{"startOffset":6480951,"endOffset":6481037,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForClass","ranges":[{"startOffset":6481038,"endOffset":6481466,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForFunction","ranges":[{"startOffset":6481467,"endOffset":6481898,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestorTypeNode","ranges":[{"startOffset":6481899,"endOffset":6482163,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParentOrAncestorTypeNode","ranges":[{"startOffset":6482164,"endOffset":6482568,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForDeclaration","ranges":[{"startOffset":6482569,"endOffset":6483065,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForImportDeclaration","ranges":[{"startOffset":6483066,"endOffset":6483809,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForExportDeclaration","ranges":[{"startOffset":6483810,"endOffset":6484282,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForHeritageClause","ranges":[{"startOffset":6484283,"endOffset":6484412,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocation","ranges":[{"startOffset":6484413,"endOffset":6490037,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedReferenceLocation","ranges":[{"startOffset":6490038,"endOffset":6490158,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRenameLocation","ranges":[{"startOffset":6490159,"endOffset":6490275,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingPropertyName","ranges":[{"startOffset":6490276,"endOffset":6490463,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingToken","ranges":[{"startOffset":6490464,"endOffset":6490746,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":6490747,"endOffset":6491009,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPositionWorker","ranges":[{"startOffset":6491010,"endOffset":6493311,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonJsxWhitespaceToken","ranges":[{"startOffset":6493312,"endOffset":6493677,"count":0}],"isBlockCoverage":false},{"functionName":"findTokenOnLeftOfPosition","ranges":[{"startOffset":6493678,"endOffset":6493989,"count":0}],"isBlockCoverage":false},{"functionName":"findNextToken","ranges":[{"startOffset":6493990,"endOffset":6494626,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingToken","ranges":[{"startOffset":6494627,"endOffset":6496710,"count":0}],"isBlockCoverage":false},{"functionName":"isNonWhitespaceToken","ranges":[{"startOffset":6496711,"endOffset":6496799,"count":0}],"isBlockCoverage":false},{"functionName":"findRightmostToken","ranges":[{"startOffset":6496800,"endOffset":6497209,"count":0}],"isBlockCoverage":false},{"functionName":"findRightmostChildNodeWithTokens","ranges":[{"startOffset":6497210,"endOffset":6497763,"count":0}],"isBlockCoverage":false},{"functionName":"isInString","ranges":[{"startOffset":6497764,"endOffset":6498199,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElementOrAttribute","ranges":[{"startOffset":6498200,"endOffset":6498914,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceOnlyJsxText","ranges":[{"startOffset":6498915,"endOffset":6499021,"count":0}],"isBlockCoverage":false},{"functionName":"isInTemplateString","ranges":[{"startOffset":6499022,"endOffset":6499218,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXText","ranges":[{"startOffset":6499219,"endOffset":6499671,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElement","ranges":[{"startOffset":6499672,"endOffset":6500490,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingMatchingToken","ranges":[{"startOffset":6500491,"endOffset":6501607,"count":0}],"isBlockCoverage":false},{"functionName":"removeOptionality","ranges":[{"startOffset":6501608,"endOffset":6501797,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyTypeArgumentPosition","ranges":[{"startOffset":6501798,"endOffset":6502150,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleGenericSignatures","ranges":[{"startOffset":6502151,"endOffset":6502687,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleTypeArgumentsInfo","ranges":[{"startOffset":6502688,"endOffset":6505179,"count":0}],"isBlockCoverage":false},{"functionName":"isInComment","ranges":[{"startOffset":6505180,"endOffset":6505392,"count":0}],"isBlockCoverage":false},{"functionName":"hasDocComment","ranges":[{"startOffset":6505393,"endOffset":6505540,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasTokens","ranges":[{"startOffset":6505541,"endOffset":6505669,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModifiers","ranges":[{"startOffset":6505670,"endOffset":6506731,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeArgumentOrTypeParameterList","ranges":[{"startOffset":6506732,"endOffset":6507084,"count":0}],"isBlockCoverage":false},{"functionName":"isComment","ranges":[{"startOffset":6507085,"endOffset":6507207,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrRegularExpressionOrTemplateLiteral","ranges":[{"startOffset":6507208,"endOffset":6507426,"count":0}],"isBlockCoverage":false},{"functionName":"areIntersectedTypesAvoidingStringReduction","ranges":[{"startOffset":6507427,"endOffset":6507581,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAndEmptyAnonymousObjectIntersection","ranges":[{"startOffset":6507582,"endOffset":6507914,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideTemplateLiteral","ranges":[{"startOffset":6507915,"endOffset":6508137,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessibilityModifier","ranges":[{"startOffset":6508138,"endOffset":6508343,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCompilerOptions","ranges":[{"startOffset":6508344,"endOffset":6508501,"count":5}],"isBlockCoverage":true},{"functionName":"isArrayLiteralOrObjectLiteralDestructuringPattern","ranges":[{"startOffset":6508502,"endOffset":6509159,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceComment","ranges":[{"startOffset":6509160,"endOffset":6509322,"count":0}],"isBlockCoverage":false},{"functionName":"isInNonReferenceComment","ranges":[{"startOffset":6509323,"endOffset":6509489,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceCommentWorker","ranges":[{"startOffset":6509490,"endOffset":6509798,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementSpanForContextToken","ranges":[{"startOffset":6509799,"endOffset":6510167,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromNode","ranges":[{"startOffset":6510168,"endOffset":6510322,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromStringLiteralLikeContent","ranges":[{"startOffset":6510323,"endOffset":6510656,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromNode","ranges":[{"startOffset":6510657,"endOffset":6510770,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromRange","ranges":[{"startOffset":6510771,"endOffset":6510871,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromSpan","ranges":[{"startOffset":6510872,"endOffset":6510974,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeFromStartLength","ranges":[{"startOffset":6510975,"endOffset":6511112,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChange","ranges":[{"startOffset":6511113,"endOffset":6511185,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeyword","ranges":[{"startOffset":6511743,"endOffset":6511814,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordToken","ranges":[{"startOffset":6511815,"endOffset":6511898,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordTokenOrIdentifier","ranges":[{"startOffset":6511899,"endOffset":6512029,"count":0}],"isBlockCoverage":false},{"functionName":"nodeSeenTracker","ranges":[{"startOffset":6512030,"endOffset":6512180,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotText","ranges":[{"startOffset":6512181,"endOffset":6512259,"count":0}],"isBlockCoverage":false},{"functionName":"repeatString","ranges":[{"startOffset":6512260,"endOffset":6512392,"count":0}],"isBlockCoverage":false},{"functionName":"skipConstraint","ranges":[{"startOffset":6512393,"endOffset":6512497,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromPropertyName","ranges":[{"startOffset":6512498,"endOffset":6512755,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsModules","ranges":[{"startOffset":6512756,"endOffset":6512978,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsEsModules","ranges":[{"startOffset":6512979,"endOffset":6513172,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsIndicateEsModules","ranges":[{"startOffset":6513173,"endOffset":6513356,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierResolutionHost","ranges":[{"startOffset":6513357,"endOffset":6514830,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierResolverHost","ranges":[{"startOffset":6514831,"endOffset":6515035,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionUsesNodeModules","ranges":[{"startOffset":6515036,"endOffset":6515265,"count":0}],"isBlockCoverage":false},{"functionName":"makeImport","ranges":[{"startOffset":6515266,"endOffset":6515775,"count":0}],"isBlockCoverage":false},{"functionName":"makeStringLiteral","ranges":[{"startOffset":6515776,"endOffset":6515909,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6515949,"endOffset":6516127,"count":1}],"isBlockCoverage":false},{"functionName":"quotePreferenceFromString","ranges":[{"startOffset":6516153,"endOffset":6516290,"count":0}],"isBlockCoverage":false},{"functionName":"getQuotePreference","ranges":[{"startOffset":6516291,"endOffset":6516812,"count":0}],"isBlockCoverage":false},{"functionName":"getQuoteFromPreference","ranges":[{"startOffset":6516813,"endOffset":6517007,"count":0}],"isBlockCoverage":false},{"functionName":"symbolNameNoDefault","ranges":[{"startOffset":6517008,"endOffset":6517178,"count":0}],"isBlockCoverage":false},{"functionName":"symbolEscapedNameNoDefault","ranges":[{"startOffset":6517179,"endOffset":6517505,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierLike","ranges":[{"startOffset":6517506,"endOffset":6517888,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingElementWithoutPropertyName","ranges":[{"startOffset":6517889,"endOffset":6518120,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolFromBindingElement","ranges":[{"startOffset":6518121,"endOffset":6518362,"count":0}],"isBlockCoverage":false},{"functionName":"getParentNodeInSpan","ranges":[{"startOffset":6518363,"endOffset":6518601,"count":0}],"isBlockCoverage":false},{"functionName":"spanContainsNode","ranges":[{"startOffset":6518602,"endOffset":6518749,"count":0}],"isBlockCoverage":false},{"functionName":"findModifier","ranges":[{"startOffset":6518750,"endOffset":6518876,"count":0}],"isBlockCoverage":false},{"functionName":"insertImports","ranges":[{"startOffset":6518877,"endOffset":6521154,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeKeywordOfTypeOnlyImport","ranges":[{"startOffset":6521155,"endOffset":6521340,"count":0}],"isBlockCoverage":false},{"functionName":"textSpansEqual","ranges":[{"startOffset":6521341,"endOffset":6521443,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpansEqual","ranges":[{"startOffset":6521444,"endOffset":6521674,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentSpansEqualityComparer","ranges":[{"startOffset":6521675,"endOffset":6521821,"count":0}],"isBlockCoverage":false},{"functionName":"forEachUnique","ranges":[{"startOffset":6521822,"endOffset":6522106,"count":0}],"isBlockCoverage":false},{"functionName":"isTextWhiteSpaceLike","ranges":[{"startOffset":6522107,"endOffset":6522302,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocation","ranges":[{"startOffset":6522303,"endOffset":6522529,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpan","ranges":[{"startOffset":6522530,"endOffset":6523352,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpan","ranges":[{"startOffset":6523353,"endOffset":6523977,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstDeclarationOfSymbolParameter","ranges":[{"startOffset":6523978,"endOffset":6524290,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayPartWriter","ranges":[{"startOffset":6524339,"endOffset":6527132,"count":1}],"isBlockCoverage":true},{"functionName":"unknownWrite","ranges":[{"startOffset":6524549,"endOffset":6524589,"count":0}],"isBlockCoverage":false},{"functionName":"displayParts","ranges":[{"startOffset":6524620,"endOffset":6525059,"count":0}],"isBlockCoverage":false},{"functionName":"writeKeyword","ranges":[{"startOffset":6525079,"endOffset":6525121,"count":0}],"isBlockCoverage":false},{"functionName":"writeOperator","ranges":[{"startOffset":6525142,"endOffset":6525186,"count":0}],"isBlockCoverage":false},{"functionName":"writePunctuation","ranges":[{"startOffset":6525210,"endOffset":6525257,"count":0}],"isBlockCoverage":false},{"functionName":"writeTrailingSemicolon","ranges":[{"startOffset":6525287,"endOffset":6525334,"count":0}],"isBlockCoverage":false},{"functionName":"writeSpace","ranges":[{"startOffset":6525352,"endOffset":6525393,"count":0}],"isBlockCoverage":false},{"functionName":"writeStringLiteral","ranges":[{"startOffset":6525419,"endOffset":6525467,"count":0}],"isBlockCoverage":false},{"functionName":"writeParameter","ranges":[{"startOffset":6525489,"endOffset":6525538,"count":0}],"isBlockCoverage":false},{"functionName":"writeProperty","ranges":[{"startOffset":6525559,"endOffset":6525607,"count":0}],"isBlockCoverage":false},{"functionName":"writeLiteral","ranges":[{"startOffset":6525627,"endOffset":6525675,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":6525779,"endOffset":6525787,"count":0}],"isBlockCoverage":false},{"functionName":"getTextPos","ranges":[{"startOffset":6525805,"endOffset":6525812,"count":0}],"isBlockCoverage":false},{"functionName":"getColumn","ranges":[{"startOffset":6525829,"endOffset":6525836,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":6525851,"endOffset":6525858,"count":0}],"isBlockCoverage":false},{"functionName":"isAtStartOfLine","ranges":[{"startOffset":6525881,"endOffset":6525892,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingWhitespace","ranges":[{"startOffset":6525921,"endOffset":6525932,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingComment","ranges":[{"startOffset":6525958,"endOffset":6525969,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":6526016,"endOffset":6526029,"count":0}],"isBlockCoverage":false},{"functionName":"increaseIndent","ranges":[{"startOffset":6526051,"endOffset":6526081,"count":0}],"isBlockCoverage":false},{"functionName":"decreaseIndent","ranges":[{"startOffset":6526103,"endOffset":6526133,"count":0}],"isBlockCoverage":false},{"functionName":"writeIndent","ranges":[{"startOffset":6526165,"endOffset":6526491,"count":0}],"isBlockCoverage":false},{"functionName":"writeKind","ranges":[{"startOffset":6526494,"endOffset":6526674,"count":0}],"isBlockCoverage":false},{"functionName":"writeSymbol","ranges":[{"startOffset":6526677,"endOffset":6526862,"count":0}],"isBlockCoverage":false},{"functionName":"writeLine","ranges":[{"startOffset":6526865,"endOffset":6527020,"count":0}],"isBlockCoverage":false},{"functionName":"resetWriter","ranges":[{"startOffset":6527023,"endOffset":6527130,"count":1}],"isBlockCoverage":true},{"functionName":"symbolPart","ranges":[{"startOffset":6527133,"endOffset":6528324,"count":0}],"isBlockCoverage":false},{"functionName":"displayPart","ranges":[{"startOffset":6528325,"endOffset":6528415,"count":2}],"isBlockCoverage":true},{"functionName":"spacePart","ranges":[{"startOffset":6528416,"endOffset":6528483,"count":1}],"isBlockCoverage":true},{"functionName":"keywordPart","ranges":[{"startOffset":6528484,"endOffset":6528574,"count":0}],"isBlockCoverage":false},{"functionName":"punctuationPart","ranges":[{"startOffset":6528575,"endOffset":6528674,"count":1}],"isBlockCoverage":true},{"functionName":"operatorPart","ranges":[{"startOffset":6528675,"endOffset":6528768,"count":0}],"isBlockCoverage":false},{"functionName":"parameterNamePart","ranges":[{"startOffset":6528769,"endOffset":6528857,"count":0}],"isBlockCoverage":false},{"functionName":"propertyNamePart","ranges":[{"startOffset":6528858,"endOffset":6528944,"count":0}],"isBlockCoverage":false},{"functionName":"textOrKeywordPart","ranges":[{"startOffset":6528945,"endOffset":6529080,"count":0}],"isBlockCoverage":false},{"functionName":"textPart","ranges":[{"startOffset":6529081,"endOffset":6529151,"count":0}],"isBlockCoverage":false},{"functionName":"typeAliasNamePart","ranges":[{"startOffset":6529152,"endOffset":6529235,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterNamePart","ranges":[{"startOffset":6529236,"endOffset":6529332,"count":0}],"isBlockCoverage":false},{"functionName":"linkTextPart","ranges":[{"startOffset":6529333,"endOffset":6529411,"count":0}],"isBlockCoverage":false},{"functionName":"linkNamePart","ranges":[{"startOffset":6529412,"endOffset":6529650,"count":0}],"isBlockCoverage":false},{"functionName":"linkPart","ranges":[{"startOffset":6529651,"endOffset":6529721,"count":0}],"isBlockCoverage":false},{"functionName":"buildLinkParts","ranges":[{"startOffset":6529722,"endOffset":6530941,"count":0}],"isBlockCoverage":false},{"functionName":"skipSeparatorFromLinkText","ranges":[{"startOffset":6530942,"endOffset":6531178,"count":0}],"isBlockCoverage":false},{"functionName":"findLinkNameEnd","ranges":[{"startOffset":6531179,"endOffset":6531651,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineOrDefaultFromHost","ranges":[{"startOffset":6531674,"endOffset":6531898,"count":0}],"isBlockCoverage":false},{"functionName":"lineBreakPart","ranges":[{"startOffset":6531899,"endOffset":6531974,"count":0}],"isBlockCoverage":false},{"functionName":"mapToDisplayParts","ranges":[{"startOffset":6531975,"endOffset":6532168,"count":0}],"isBlockCoverage":false},{"functionName":"typeToDisplayParts","ranges":[{"startOffset":6532169,"endOffset":6532466,"count":0}],"isBlockCoverage":false},{"functionName":"symbolToDisplayParts","ranges":[{"startOffset":6532467,"endOffset":6532749,"count":0}],"isBlockCoverage":false},{"functionName":"signatureToDisplayParts","ranges":[{"startOffset":6532750,"endOffset":6533213,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifierName","ranges":[{"startOffset":6533214,"endOffset":6533385,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":6533386,"endOffset":6533517,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolTarget","ranges":[{"startOffset":6533518,"endOffset":6533829,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasSymbol","ranges":[{"startOffset":6533830,"endOffset":6533917,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueSymbolId","ranges":[{"startOffset":6533918,"endOffset":6534015,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstNonSpaceCharacterPosition","ranges":[{"startOffset":6534016,"endOffset":6534176,"count":0}],"isBlockCoverage":false},{"functionName":"getPrecedingNonSpaceCharacterPosition","ranges":[{"startOffset":6534177,"endOffset":6534368,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClone","ranges":[{"startOffset":6534369,"endOffset":6534645,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWithReplacements","ranges":[{"startOffset":6534646,"endOffset":6534986,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWorker","ranges":[{"startOffset":6534987,"endOffset":6535900,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClones","ranges":[{"startOffset":6535901,"endOffset":6536183,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClonesWithReplacements","ranges":[{"startOffset":6536184,"endOffset":6536420,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingAndTrailingTrivia","ranges":[{"startOffset":6536421,"endOffset":6536535,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingTrivia","ranges":[{"startOffset":6536536,"endOffset":6536654,"count":0}],"isBlockCoverage":false},{"functionName":"suppressTrailingTrivia","ranges":[{"startOffset":6536655,"endOffset":6536774,"count":0}],"isBlockCoverage":false},{"functionName":"copyComments","ranges":[{"startOffset":6536775,"endOffset":6537159,"count":0}],"isBlockCoverage":false},{"functionName":"hasLeadingLineBreak","ranges":[{"startOffset":6537160,"endOffset":6537393,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlagsRecursively","ranges":[{"startOffset":6537394,"endOffset":6537573,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstChild","ranges":[{"startOffset":6537574,"endOffset":6537652,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueName","ranges":[{"startOffset":6537653,"endOffset":6537857,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocation","ranges":[{"startOffset":6537858,"endOffset":6538525,"count":0}],"isBlockCoverage":false},{"functionName":"copyLeadingComments","ranges":[{"startOffset":6538526,"endOffset":6538799,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingComments","ranges":[{"startOffset":6538800,"endOffset":6539076,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingAsLeadingComments","ranges":[{"startOffset":6539077,"endOffset":6539361,"count":0}],"isBlockCoverage":false},{"functionName":"getAddCommentsFunction","ranges":[{"startOffset":6539362,"endOffset":6539751,"count":0}],"isBlockCoverage":false},{"functionName":"indexInTextChange","ranges":[{"startOffset":6539752,"endOffset":6540018,"count":0}],"isBlockCoverage":false},{"functionName":"needsParentheses","ranges":[{"startOffset":6540019,"endOffset":6540320,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParent","ranges":[{"startOffset":6540321,"endOffset":6540995,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":6540996,"endOffset":6541286,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorKind","ranges":[{"startOffset":6541287,"endOffset":6541572,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrTemplate","ranges":[{"startOffset":6541573,"endOffset":6541862,"count":0}],"isBlockCoverage":false},{"functionName":"hasIndexSignature","ranges":[{"startOffset":6541863,"endOffset":6541968,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchedType","ranges":[{"startOffset":6541969,"endOffset":6542091,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNodeIfAccessible","ranges":[{"startOffset":6542130,"endOffset":6543049,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingCommaOrSemicolonOrASI","ranges":[{"startOffset":6543050,"endOffset":6543311,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingFunctionBlockOrSemicolonOrASI","ranges":[{"startOffset":6543312,"endOffset":6543573,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingModuleBlockOrSemicolonOrASI","ranges":[{"startOffset":6543574,"endOffset":6543689,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingSemicolonOrASI","ranges":[{"startOffset":6543690,"endOffset":6544359,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsASICandidate","ranges":[{"startOffset":6544591,"endOffset":6545939,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsASICandidate","ranges":[{"startOffset":6545940,"endOffset":6546260,"count":0}],"isBlockCoverage":false},{"functionName":"probablyUsesSemicolons","ranges":[{"startOffset":6546261,"endOffset":6547664,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDirectories","ranges":[{"startOffset":6547665,"endOffset":6547796,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadDirectory","ranges":[{"startOffset":6547797,"endOffset":6547976,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileExists","ranges":[{"startOffset":6547977,"endOffset":6548076,"count":0}],"isBlockCoverage":false},{"functionName":"tryDirectoryExists","ranges":[{"startOffset":6548077,"endOffset":6548201,"count":0}],"isBlockCoverage":false},{"functionName":"tryAndIgnoreErrors","ranges":[{"startOffset":6548202,"endOffset":6548297,"count":0}],"isBlockCoverage":false},{"functionName":"tryIOAndConsumeErrors","ranges":[{"startOffset":6548298,"endOffset":6548429,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJsons","ranges":[{"startOffset":6548430,"endOffset":6548798,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJson","ranges":[{"startOffset":6548799,"endOffset":6549189,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":6549190,"endOffset":6549732,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfo","ranges":[{"startOffset":6549733,"endOffset":6551122,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonImportFilter","ranges":[{"startOffset":6551123,"endOffset":6555504,"count":0}],"isBlockCoverage":false},{"functionName":"consumesNodeCoreModules","ranges":[{"startOffset":6555505,"endOffset":6555629,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":6555630,"endOffset":6555750,"count":0}],"isBlockCoverage":false},{"functionName":"isDiagnosticWithLocation","ranges":[{"startOffset":6555751,"endOffset":6555900,"count":0}],"isBlockCoverage":false},{"functionName":"findDiagnosticForNode","ranges":[{"startOffset":6555901,"endOffset":6556376,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWithinSpan","ranges":[{"startOffset":6556377,"endOffset":6557067,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorContextSpan","ranges":[{"startOffset":6557068,"endOffset":6557239,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanExpression","ranges":[{"startOffset":6557240,"endOffset":6557651,"count":0}],"isBlockCoverage":false},{"functionName":"mapOneOrMany","ranges":[{"startOffset":6557652,"endOffset":6557837,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrOnly","ranges":[{"startOffset":6557838,"endOffset":6557945,"count":0}],"isBlockCoverage":false},{"functionName":"getNameForExportedSymbol","ranges":[{"startOffset":6557946,"endOffset":6558320,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportNameFromDeclaration","ranges":[{"startOffset":6558321,"endOffset":6559021,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolParentOrFail","ranges":[{"startOffset":6559022,"endOffset":6559550,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSymbolToValidIdentifier","ranges":[{"startOffset":6559551,"endOffset":6559753,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierToValidIdentifier","ranges":[{"startOffset":6559754,"endOffset":6560642,"count":0}],"isBlockCoverage":false},{"functionName":"stringContainsAt","ranges":[{"startOffset":6560643,"endOffset":6560961,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUnderscore","ranges":[{"startOffset":6560962,"endOffset":6561045,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecatedDeclaration","ranges":[{"startOffset":6561046,"endOffset":6561172,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseUriStyleNodeCoreModules","ranges":[{"startOffset":6561173,"endOffset":6561588,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineKind","ranges":[{"startOffset":6561589,"endOffset":6561722,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticToString","ranges":[{"startOffset":6561723,"endOffset":6561895,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettingsForWriting","ranges":[{"startOffset":6561896,"endOffset":6562356,"count":0}],"isBlockCoverage":false},{"functionName":"jsxModeNeedsExplicitImport","ranges":[{"startOffset":6562357,"endOffset":6562464,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileFromLibrary","ranges":[{"startOffset":6562465,"endOffset":6562616,"count":0}],"isBlockCoverage":false},{"functionName":"newCaseClauseTracker","ranges":[{"startOffset":6562617,"endOffset":6564517,"count":0}],"isBlockCoverage":false},{"functionName":"fileShouldUseJavaScriptRequire","ranges":[{"startOffset":6564518,"endOffset":6565867,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockLike","ranges":[{"startOffset":6565868,"endOffset":6566097,"count":0}],"isBlockCoverage":false},{"functionName":"createFutureSourceFile","ranges":[{"startOffset":6566098,"endOffset":6566971,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6567040,"endOffset":6567304,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6567359,"endOffset":6567672,"count":1}],"isBlockCoverage":false},{"functionName":"createCacheableExportInfoMap","ranges":[{"startOffset":6567693,"endOffset":6577087,"count":0}],"isBlockCoverage":false},{"functionName":"isImportable","ranges":[{"startOffset":6577088,"endOffset":6579566,"count":0}],"isBlockCoverage":false},{"functionName":"fileContainsPackageImport","ranges":[{"startOffset":6579567,"endOffset":6579757,"count":0}],"isBlockCoverage":false},{"functionName":"isImportablePath","ranges":[{"startOffset":6579758,"endOffset":6580338,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModuleToImportFrom","ranges":[{"startOffset":6580339,"endOffset":6581765,"count":0}],"isBlockCoverage":false},{"functionName":"getIsExcludedPatterns","ranges":[{"startOffset":6581766,"endOffset":6582074,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModule","ranges":[{"startOffset":6582075,"endOffset":6582778,"count":0}],"isBlockCoverage":false},{"functionName":"getIsExcluded","ranges":[{"startOffset":6582779,"endOffset":6583697,"count":0}],"isBlockCoverage":false},{"functionName":"getIsFileExcluded","ranges":[{"startOffset":6583698,"endOffset":6583921,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfoMap","ranges":[{"startOffset":6583922,"endOffset":6586586,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportInfo","ranges":[{"startOffset":6586587,"endOffset":6587210,"count":0}],"isBlockCoverage":false},{"functionName":"isImportableSymbol","ranges":[{"startOffset":6587211,"endOffset":6587404,"count":0}],"isBlockCoverage":false},{"functionName":"getNamesForExportedSymbol","ranges":[{"startOffset":6587405,"endOffset":6587711,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameOfDefaultExport","ranges":[{"startOffset":6587712,"endOffset":6588933,"count":0}],"isBlockCoverage":false},{"functionName":"createClassifier","ranges":[{"startOffset":6588965,"endOffset":6592835,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6593263,"endOffset":6593279,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6593283,"endOffset":6593293,"count":13}],"isBlockCoverage":true},{"functionName":"getNewEndOfLineState","ranges":[{"startOffset":6593297,"endOffset":6594708,"count":0}],"isBlockCoverage":false},{"functionName":"pushEncodedClassification","ranges":[{"startOffset":6594709,"endOffset":6595028,"count":0}],"isBlockCoverage":false},{"functionName":"convertClassificationsToResult","ranges":[{"startOffset":6595029,"endOffset":6595881,"count":0}],"isBlockCoverage":false},{"functionName":"convertClassification","ranges":[{"startOffset":6595882,"endOffset":6596789,"count":0}],"isBlockCoverage":false},{"functionName":"canFollow","ranges":[{"startOffset":6596790,"endOffset":6597227,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefixFromLexState","ranges":[{"startOffset":6597228,"endOffset":6597919,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpressionOperatorToken","ranges":[{"startOffset":6597920,"endOffset":6599660,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpressionOperatorToken","ranges":[{"startOffset":6599661,"endOffset":6599985,"count":0}],"isBlockCoverage":false},{"functionName":"classFromKind","ranges":[{"startOffset":6599986,"endOffset":6601068,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":6601069,"endOffset":6601321,"count":0}],"isBlockCoverage":false},{"functionName":"checkForClassificationCancellation","ranges":[{"startOffset":6601322,"endOffset":6601737,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":6601738,"endOffset":6602778,"count":0}],"isBlockCoverage":false},{"functionName":"classifySymbol","ranges":[{"startOffset":6602779,"endOffset":6603725,"count":0}],"isBlockCoverage":false},{"functionName":"hasValueSideModule","ranges":[{"startOffset":6603726,"endOffset":6603916,"count":0}],"isBlockCoverage":false},{"functionName":"getClassificationTypeName","ranges":[{"startOffset":6603917,"endOffset":6605959,"count":0}],"isBlockCoverage":false},{"functionName":"convertClassificationsToSpans","ranges":[{"startOffset":6605960,"endOffset":6606350,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticClassifications","ranges":[{"startOffset":6606351,"endOffset":6606541,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":6606542,"endOffset":6620888,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6620953,"endOffset":6637738,"count":1}],"isBlockCoverage":false},{"functionName":"getDocumentHighlights","ranges":[{"startOffset":6620982,"endOffset":6621712,"count":0}],"isBlockCoverage":false},{"functionName":"getHighlightSpanForNode","ranges":[{"startOffset":6621784,"endOffset":6621985,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticDocumentHighlights","ranges":[{"startOffset":6621988,"endOffset":6623323,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticDocumentHighlights","ranges":[{"startOffset":6623326,"endOffset":6623535,"count":0}],"isBlockCoverage":false},{"functionName":"getHighlightSpans","ranges":[{"startOffset":6623538,"endOffset":6626709,"count":0}],"isBlockCoverage":false},{"functionName":"aggregateOwnedThrowStatements","ranges":[{"startOffset":6626712,"endOffset":6627212,"count":0}],"isBlockCoverage":false},{"functionName":"getThrowStatementOwner","ranges":[{"startOffset":6627215,"endOffset":6627642,"count":0}],"isBlockCoverage":false},{"functionName":"aggregateAllBreakAndContinueStatements","ranges":[{"startOffset":6627645,"endOffset":6627854,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapChildren","ranges":[{"startOffset":6627857,"endOffset":6628091,"count":0}],"isBlockCoverage":false},{"functionName":"ownsBreakOrContinueStatement","ranges":[{"startOffset":6628094,"endOffset":6628266,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakOrContinueOwner","ranges":[{"startOffset":6628269,"endOffset":6628916,"count":0}],"isBlockCoverage":false},{"functionName":"getModifierOccurrences","ranges":[{"startOffset":6628919,"endOffset":6629110,"count":0}],"isBlockCoverage":false},{"functionName":"getNodesToSearchForModifier","ranges":[{"startOffset":6629113,"endOffset":6630552,"count":0}],"isBlockCoverage":false},{"functionName":"pushKeywordIf","ranges":[{"startOffset":6630555,"endOffset":6630741,"count":0}],"isBlockCoverage":false},{"functionName":"getLoopBreakContinueOccurrences","ranges":[{"startOffset":6630744,"endOffset":6631547,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakOrContinueStatementOccurrences","ranges":[{"startOffset":6631550,"endOffset":6632120,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchCaseDefaultOccurrences","ranges":[{"startOffset":6632123,"endOffset":6632746,"count":0}],"isBlockCoverage":false},{"functionName":"getTryCatchFinallyOccurrences","ranges":[{"startOffset":6632749,"endOffset":6633296,"count":0}],"isBlockCoverage":false},{"functionName":"getThrowOccurrences","ranges":[{"startOffset":6633299,"endOffset":6633885,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnOccurrences","ranges":[{"startOffset":6633888,"endOffset":6634451,"count":0}],"isBlockCoverage":false},{"functionName":"getAsyncAndAwaitOccurrences","ranges":[{"startOffset":6634454,"endOffset":6635036,"count":0}],"isBlockCoverage":false},{"functionName":"getYieldOccurrences","ranges":[{"startOffset":6635039,"endOffset":6635459,"count":0}],"isBlockCoverage":false},{"functionName":"traverseWithoutCrossingFunction","ranges":[{"startOffset":6635462,"endOffset":6635791,"count":0}],"isBlockCoverage":false},{"functionName":"getIfElseOccurrences","ranges":[{"startOffset":6635794,"endOffset":6636841,"count":0}],"isBlockCoverage":false},{"functionName":"getIfElseKeywords","ranges":[{"startOffset":6636844,"endOffset":6637562,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledBy","ranges":[{"startOffset":6637565,"endOffset":6637736,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentRegistryEntry","ranges":[{"startOffset":6637827,"endOffset":6637899,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistry","ranges":[{"startOffset":6637900,"endOffset":6638104,"count":1}],"isBlockCoverage":true},{"functionName":"createDocumentRegistryInternal","ranges":[{"startOffset":6638105,"endOffset":6646889,"count":1}],"isBlockCoverage":true},{"functionName":"reportStats","ranges":[{"startOffset":6638367,"endOffset":6639207,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilationSettings","ranges":[{"startOffset":6639210,"endOffset":6639421,"count":0}],"isBlockCoverage":false},{"functionName":"acquireDocument","ranges":[{"startOffset":6639424,"endOffset":6639856,"count":0}],"isBlockCoverage":false},{"functionName":"acquireDocumentWithKey","ranges":[{"startOffset":6639859,"endOffset":6640230,"count":0}],"isBlockCoverage":false},{"functionName":"updateDocument","ranges":[{"startOffset":6640233,"endOffset":6640663,"count":0}],"isBlockCoverage":false},{"functionName":"updateDocumentWithKey","ranges":[{"startOffset":6640666,"endOffset":6641061,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentRegistryEntry","ranges":[{"startOffset":6641064,"endOffset":6641622,"count":0}],"isBlockCoverage":false},{"functionName":"acquireOrUpdateDocument","ranges":[{"startOffset":6641625,"endOffset":6645566,"count":0}],"isBlockCoverage":false},{"functionName":"releaseDocument","ranges":[{"startOffset":6645569,"endOffset":6645880,"count":0}],"isBlockCoverage":false},{"functionName":"releaseDocumentWithKey","ranges":[{"startOffset":6645883,"endOffset":6646603,"count":0}],"isBlockCoverage":false},{"functionName":"getBuckets","ranges":[{"startOffset":6646869,"endOffset":6646882,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilationSettings","ranges":[{"startOffset":6646890,"endOffset":6647022,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentRegistryBucketKeyWithMode","ranges":[{"startOffset":6647023,"endOffset":6647123,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":6647166,"endOffset":6648027,"count":0}],"isBlockCoverage":false},{"functionName":"getPathUpdater","ranges":[{"startOffset":6648028,"endOffset":6648888,"count":0}],"isBlockCoverage":false},{"functionName":"makeCorrespondingRelativeChange","ranges":[{"startOffset":6648889,"endOffset":6649090,"count":0}],"isBlockCoverage":false},{"functionName":"updateTsconfigFiles","ranges":[{"startOffset":6649091,"endOffset":6652313,"count":0}],"isBlockCoverage":false},{"functionName":"updateImports","ranges":[{"startOffset":6652314,"endOffset":6654341,"count":0}],"isBlockCoverage":false},{"functionName":"combineNormal","ranges":[{"startOffset":6654342,"endOffset":6654434,"count":0}],"isBlockCoverage":false},{"functionName":"combinePathsSafe","ranges":[{"startOffset":6654435,"endOffset":6654543,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileToImport","ranges":[{"startOffset":6654544,"endOffset":6655488,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileToImportFromResolved","ranges":[{"startOffset":6655489,"endOffset":6656666,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportsWorker","ranges":[{"startOffset":6656667,"endOffset":6657303,"count":0}],"isBlockCoverage":false},{"functionName":"createStringRange","ranges":[{"startOffset":6657304,"endOffset":6657419,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProperty","ranges":[{"startOffset":6657420,"endOffset":6657703,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6657779,"endOffset":6658103,"count":1}],"isBlockCoverage":false},{"functionName":"createPatternMatch","ranges":[{"startOffset":6658130,"endOffset":6658230,"count":0}],"isBlockCoverage":false},{"functionName":"createPatternMatcher","ranges":[{"startOffset":6658231,"endOffset":6659257,"count":0}],"isBlockCoverage":false},{"functionName":"getFullMatch","ranges":[{"startOffset":6659258,"endOffset":6659867,"count":0}],"isBlockCoverage":false},{"functionName":"getWordSpans","ranges":[{"startOffset":6659868,"endOffset":6660064,"count":0}],"isBlockCoverage":false},{"functionName":"matchTextChunk","ranges":[{"startOffset":6660065,"endOffset":6661899,"count":0}],"isBlockCoverage":false},{"functionName":"matchSegment","ranges":[{"startOffset":6661900,"endOffset":6662443,"count":0}],"isBlockCoverage":false},{"functionName":"betterMatch","ranges":[{"startOffset":6662444,"endOffset":6662512,"count":0}],"isBlockCoverage":false},{"functionName":"compareMatches","ranges":[{"startOffset":6662513,"endOffset":6662717,"count":0}],"isBlockCoverage":false},{"functionName":"partStartsWith","ranges":[{"startOffset":6662718,"endOffset":6663057,"count":0}],"isBlockCoverage":false},{"functionName":"equalChars","ranges":[{"startOffset":6663058,"endOffset":6663180,"count":0}],"isBlockCoverage":false},{"functionName":"tryCamelCaseMatch","ranges":[{"startOffset":6663181,"endOffset":6664666,"count":0}],"isBlockCoverage":false},{"functionName":"createSegment","ranges":[{"startOffset":6664667,"endOffset":6664814,"count":0}],"isBlockCoverage":false},{"functionName":"isUpperCaseLetter","ranges":[{"startOffset":6664815,"endOffset":6665105,"count":0}],"isBlockCoverage":false},{"functionName":"isLowerCaseLetter","ranges":[{"startOffset":6665106,"endOffset":6665397,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfIgnoringCase","ranges":[{"startOffset":6665398,"endOffset":6665667,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase2","ranges":[{"startOffset":6665668,"endOffset":6665913,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit2","ranges":[{"startOffset":6665914,"endOffset":6665988,"count":0}],"isBlockCoverage":false},{"functionName":"isWordChar","ranges":[{"startOffset":6665989,"endOffset":6666131,"count":0}],"isBlockCoverage":false},{"functionName":"breakPatternIntoTextChunks","ranges":[{"startOffset":6666132,"endOffset":6666712,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChunk","ranges":[{"startOffset":6666713,"endOffset":6666927,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoCharacterSpans","ranges":[{"startOffset":6666928,"endOffset":6667045,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoWordSpans","ranges":[{"startOffset":6667046,"endOffset":6667157,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoSpans","ranges":[{"startOffset":6667158,"endOffset":6668145,"count":0}],"isBlockCoverage":false},{"functionName":"charIsPunctuation","ranges":[{"startOffset":6668146,"endOffset":6668871,"count":0}],"isBlockCoverage":false},{"functionName":"isAllPunctuation","ranges":[{"startOffset":6668872,"endOffset":6669018,"count":0}],"isBlockCoverage":false},{"functionName":"transitionFromUpperToLower","ranges":[{"startOffset":6669019,"endOffset":6669316,"count":0}],"isBlockCoverage":false},{"functionName":"transitionFromLowerToUpper","ranges":[{"startOffset":6669317,"endOffset":6669582,"count":0}],"isBlockCoverage":false},{"functionName":"everyInRange","ranges":[{"startOffset":6669583,"endOffset":6669729,"count":0}],"isBlockCoverage":false},{"functionName":"every2","ranges":[{"startOffset":6669730,"endOffset":6669853,"count":0}],"isBlockCoverage":false},{"functionName":"preProcessFile","ranges":[{"startOffset":6669885,"endOffset":6681124,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":6681259,"endOffset":6685063,"count":1}],"isBlockCoverage":true},{"functionName":"toPath3","ranges":[{"startOffset":6681694,"endOffset":6681795,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper2","ranges":[{"startOffset":6681798,"endOffset":6682659,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSourcePosition","ranges":[{"startOffset":6682662,"endOffset":6683017,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetGeneratedPosition","ranges":[{"startOffset":6683020,"endOffset":6683828,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFile","ranges":[{"startOffset":6683831,"endOffset":6684092,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateSourceFileLike","ranges":[{"startOffset":6684095,"endOffset":6684626,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileLike","ranges":[{"startOffset":6684629,"endOffset":6684807,"count":0}],"isBlockCoverage":false},{"functionName":"toLineColumnOffset","ranges":[{"startOffset":6684810,"endOffset":6684966,"count":0}],"isBlockCoverage":false},{"functionName":"clearCache","ranges":[{"startOffset":6684969,"endOffset":6685061,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":6685064,"endOffset":6686268,"count":0}],"isBlockCoverage":false},{"functionName":"convertDocumentToSourceMapper","ranges":[{"startOffset":6686269,"endOffset":6686618,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFileLike","ranges":[{"startOffset":6686619,"endOffset":6686827,"count":0}],"isBlockCoverage":false},{"functionName":"computeSuggestionDiagnostics","ranges":[{"startOffset":6686937,"endOffset":6690339,"count":0}],"isBlockCoverage":false},{"functionName":"containsTopLevelCommonjs","ranges":[{"startOffset":6690340,"endOffset":6691199,"count":0}],"isBlockCoverage":false},{"functionName":"propertyAccessLeftHandSide","ranges":[{"startOffset":6691200,"endOffset":6691341,"count":0}],"isBlockCoverage":false},{"functionName":"importNameForConvertToDefaultImport","ranges":[{"startOffset":6691342,"endOffset":6691840,"count":0}],"isBlockCoverage":false},{"functionName":"addConvertToAsyncFunctionDiagnostics","ranges":[{"startOffset":6691841,"endOffset":6692251,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleFunction","ranges":[{"startOffset":6692252,"endOffset":6692462,"count":0}],"isBlockCoverage":false},{"functionName":"returnsPromise","ranges":[{"startOffset":6692463,"endOffset":6692728,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorNodeFromCommonJsIndicator","ranges":[{"startOffset":6692729,"endOffset":6692911,"count":0}],"isBlockCoverage":false},{"functionName":"hasReturnStatementWithPromiseHandler","ranges":[{"startOffset":6692912,"endOffset":6693096,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":6693097,"endOffset":6693275,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseHandler","ranges":[{"startOffset":6693276,"endOffset":6693975,"count":0}],"isBlockCoverage":false},{"functionName":"isPromiseHandler","ranges":[{"startOffset":6693976,"endOffset":6694209,"count":0}],"isBlockCoverage":false},{"functionName":"hasSupportedNumberOfArguments","ranges":[{"startOffset":6694210,"endOffset":6694676,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseArgument","ranges":[{"startOffset":6694677,"endOffset":6695578,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyFromNode","ranges":[{"startOffset":6695579,"endOffset":6695667,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToClass","ranges":[{"startOffset":6695668,"endOffset":6696274,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToAsync","ranges":[{"startOffset":6696275,"endOffset":6696545,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":6696673,"endOffset":6696820,"count":0}],"isBlockCoverage":false},{"functionName":"transpileDeclaration","ranges":[{"startOffset":6696821,"endOffset":6696972,"count":0}],"isBlockCoverage":false},{"functionName":"transpileWorker","ranges":[{"startOffset":6697603,"endOffset":6701585,"count":0}],"isBlockCoverage":false},{"functionName":"transpile","ranges":[{"startOffset":6701586,"endOffset":6701858,"count":0}],"isBlockCoverage":false},{"functionName":"fixupCompilerOptions","ranges":[{"startOffset":6701895,"endOffset":6702620,"count":5},{"startOffset":6702015,"endOffset":6702134,"count":1},{"startOffset":6702231,"endOffset":6702600,"count":35},{"startOffset":6702274,"endOffset":6702297,"count":20},{"startOffset":6702297,"endOffset":6702360,"count":15},{"startOffset":6702360,"endOffset":6702441,"count":0},{"startOffset":6702441,"endOffset":6702596,"count":15},{"startOffset":6702504,"endOffset":6702590,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6702045,"endOffset":6702133,"count":127},{"startOffset":6702079,"endOffset":6702133,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6702104,"endOffset":6702132,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6702483,"endOffset":6702501,"count":130}],"isBlockCoverage":true},{"functionName":"getNavigateToItems","ranges":[{"startOffset":6702755,"endOffset":6702779,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigateToItems","ranges":[{"startOffset":6702815,"endOffset":6703819,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExcludeFile","ranges":[{"startOffset":6703820,"endOffset":6704008,"count":0}],"isBlockCoverage":false},{"functionName":"getItemsFromNamedDeclaration","ranges":[{"startOffset":6704009,"endOffset":6704821,"count":0}],"isBlockCoverage":false},{"functionName":"shouldKeepItem","ranges":[{"startOffset":6704822,"endOffset":6705429,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddSingleDeclarationName","ranges":[{"startOffset":6705430,"endOffset":6705704,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddComputedPropertyName","ranges":[{"startOffset":6705705,"endOffset":6705970,"count":0}],"isBlockCoverage":false},{"functionName":"pushLiteral","ranges":[{"startOffset":6705971,"endOffset":6706114,"count":0}],"isBlockCoverage":false},{"functionName":"getContainers","ranges":[{"startOffset":6706115,"endOffset":6706659,"count":0}],"isBlockCoverage":false},{"functionName":"compareNavigateToItems","ranges":[{"startOffset":6706660,"endOffset":6706806,"count":0}],"isBlockCoverage":false},{"functionName":"createNavigateToItem","ranges":[{"startOffset":6706807,"endOffset":6707553,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationBarItems","ranges":[{"startOffset":6707700,"endOffset":6707727,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationTree","ranges":[{"startOffset":6707750,"endOffset":6707773,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationBarItems","ranges":[{"startOffset":6708029,"endOffset":6708314,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationTree","ranges":[{"startOffset":6708315,"endOffset":6708550,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":6708551,"endOffset":6708698,"count":0}],"isBlockCoverage":false},{"functionName":"nodeText","ranges":[{"startOffset":6708699,"endOffset":6708775,"count":0}],"isBlockCoverage":false},{"functionName":"navigationBarNodeKind","ranges":[{"startOffset":6708776,"endOffset":6708835,"count":0}],"isBlockCoverage":false},{"functionName":"pushChild","ranges":[{"startOffset":6708836,"endOffset":6708981,"count":0}],"isBlockCoverage":false},{"functionName":"rootNavigationBarNode","ranges":[{"startOffset":6708982,"endOffset":6709375,"count":0}],"isBlockCoverage":false},{"functionName":"addLeafNode","ranges":[{"startOffset":6709376,"endOffset":6709469,"count":0}],"isBlockCoverage":false},{"functionName":"emptyNavigationBarNode","ranges":[{"startOffset":6709470,"endOffset":6709737,"count":0}],"isBlockCoverage":false},{"functionName":"addTrackedEs5Class","ranges":[{"startOffset":6709738,"endOffset":6709895,"count":0}],"isBlockCoverage":false},{"functionName":"endNestedNodes","ranges":[{"startOffset":6709896,"endOffset":6709975,"count":0}],"isBlockCoverage":false},{"functionName":"startNestedNodes","ranges":[{"startOffset":6709976,"endOffset":6710524,"count":0}],"isBlockCoverage":false},{"functionName":"startNode","ranges":[{"startOffset":6710525,"endOffset":6710772,"count":0}],"isBlockCoverage":false},{"functionName":"endNode","ranges":[{"startOffset":6710773,"endOffset":6710986,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeWithRecursiveChild","ranges":[{"startOffset":6710987,"endOffset":6711115,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeWithRecursiveInitializer","ranges":[{"startOffset":6711116,"endOffset":6711407,"count":0}],"isBlockCoverage":false},{"functionName":"hasNavigationBarName","ranges":[{"startOffset":6711408,"endOffset":6711749,"count":0}],"isBlockCoverage":false},{"functionName":"addChildrenRecursively","ranges":[{"startOffset":6711750,"endOffset":6719413,"count":0}],"isBlockCoverage":false},{"functionName":"mergeChildren","ranges":[{"startOffset":6719414,"endOffset":6720358,"count":0}],"isBlockCoverage":false},{"functionName":"tryMergeEs5Class","ranges":[{"startOffset":6720750,"endOffset":6724176,"count":0}],"isBlockCoverage":false},{"functionName":"tryMerge","ranges":[{"startOffset":6724177,"endOffset":6724397,"count":0}],"isBlockCoverage":false},{"functionName":"shouldReallyMerge","ranges":[{"startOffset":6724398,"endOffset":6724953,"count":0}],"isBlockCoverage":false},{"functionName":"isSynthesized","ranges":[{"startOffset":6724954,"endOffset":6725034,"count":0}],"isBlockCoverage":false},{"functionName":"isOwnChild","ranges":[{"startOffset":6725035,"endOffset":6725252,"count":0}],"isBlockCoverage":false},{"functionName":"areSameModule","ranges":[{"startOffset":6725253,"endOffset":6725467,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":6725468,"endOffset":6725874,"count":0}],"isBlockCoverage":false},{"functionName":"sortChildren","ranges":[{"startOffset":6725875,"endOffset":6725944,"count":0}],"isBlockCoverage":false},{"functionName":"compareChildren","ranges":[{"startOffset":6725945,"endOffset":6726158,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetName","ranges":[{"startOffset":6726159,"endOffset":6726725,"count":0}],"isBlockCoverage":false},{"functionName":"getItemName","ranges":[{"startOffset":6726726,"endOffset":6728077,"count":0}],"isBlockCoverage":false},{"functionName":"primaryNavBarMenuItems","ranges":[{"startOffset":6728078,"endOffset":6729572,"count":0}],"isBlockCoverage":false},{"functionName":"convertToTree","ranges":[{"startOffset":6729573,"endOffset":6729846,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPrimaryNavBarMenuItem","ranges":[{"startOffset":6729847,"endOffset":6730517,"count":0}],"isBlockCoverage":false},{"functionName":"getSpans","ranges":[{"startOffset":6730518,"endOffset":6730715,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":6730716,"endOffset":6730916,"count":0}],"isBlockCoverage":false},{"functionName":"getFullyQualifiedModuleName","ranges":[{"startOffset":6730917,"endOffset":6731297,"count":0}],"isBlockCoverage":false},{"functionName":"getInteriorModule","ranges":[{"startOffset":6731298,"endOffset":6731426,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedProperty","ranges":[{"startOffset":6731427,"endOffset":6731544,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeSpan","ranges":[{"startOffset":6731545,"endOffset":6731698,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers2","ranges":[{"startOffset":6731699,"endOffset":6731867,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionOrClassName","ranges":[{"startOffset":6731868,"endOffset":6733029,"count":0}],"isBlockCoverage":false},{"functionName":"getCalledExpressionName","ranges":[{"startOffset":6733030,"endOffset":6733355,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrClassExpression","ranges":[{"startOffset":6733356,"endOffset":6733590,"count":0}],"isBlockCoverage":false},{"functionName":"cleanText","ranges":[{"startOffset":6733591,"endOffset":6733760,"count":0}],"isBlockCoverage":false},{"functionName":"addExportsInOldFile","ranges":[{"startOffset":6733890,"endOffset":6733915,"count":0}],"isBlockCoverage":false},{"functionName":"addImportsForMovedSymbols","ranges":[{"startOffset":6733946,"endOffset":6733977,"count":0}],"isBlockCoverage":false},{"functionName":"addNewFileToTsconfig","ranges":[{"startOffset":6734003,"endOffset":6734029,"count":0}],"isBlockCoverage":false},{"functionName":"addOrRemoveBracesToArrowFunction","ranges":[{"startOffset":6734067,"endOffset":6734125,"count":0}],"isBlockCoverage":false},{"functionName":"addTargetFileImports","ranges":[{"startOffset":6734151,"endOffset":6734177,"count":0}],"isBlockCoverage":false},{"functionName":"containsJsx","ranges":[{"startOffset":6734194,"endOffset":6734211,"count":0}],"isBlockCoverage":false},{"functionName":"convertArrowFunctionOrFunctionExpression","ranges":[{"startOffset":6734257,"endOffset":6734323,"count":0}],"isBlockCoverage":false},{"functionName":"convertParamsToDestructuredObject","ranges":[{"startOffset":6734362,"endOffset":6734421,"count":0}],"isBlockCoverage":false},{"functionName":"convertStringOrTemplateLiteral","ranges":[{"startOffset":6734457,"endOffset":6734513,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionalChainExpression","ranges":[{"startOffset":6734551,"endOffset":6734609,"count":0}],"isBlockCoverage":false},{"functionName":"createNewFileName","ranges":[{"startOffset":6734632,"endOffset":6734655,"count":0}],"isBlockCoverage":false},{"functionName":"doChangeNamedToNamespaceOrDefault","ranges":[{"startOffset":6734694,"endOffset":6734733,"count":0}],"isBlockCoverage":false},{"functionName":"extractSymbol","ranges":[{"startOffset":6734752,"endOffset":6734791,"count":0}],"isBlockCoverage":false},{"functionName":"generateGetAccessorAndSetAccessor","ranges":[{"startOffset":6734830,"endOffset":6734889,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableRefactors","ranges":[{"startOffset":6734917,"endOffset":6734945,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForRefactor","ranges":[{"startOffset":6734970,"endOffset":6734995,"count":0}],"isBlockCoverage":false},{"functionName":"getExistingLocals","ranges":[{"startOffset":6735018,"endOffset":6735041,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierForNode","ranges":[{"startOffset":6735067,"endOffset":6735093,"count":0}],"isBlockCoverage":false},{"functionName":"getNewStatementsAndRemoveFromOldFile","ranges":[{"startOffset":6735135,"endOffset":6735177,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementsToMove","ranges":[{"startOffset":6735202,"endOffset":6735227,"count":0}],"isBlockCoverage":false},{"functionName":"getUsageInfo","ranges":[{"startOffset":6735245,"endOffset":6735263,"count":0}],"isBlockCoverage":false},{"functionName":"inferFunctionReturnType","ranges":[{"startOffset":6735292,"endOffset":6735341,"count":0}],"isBlockCoverage":false},{"functionName":"isInImport","ranges":[{"startOffset":6735357,"endOffset":6735373,"count":0}],"isBlockCoverage":false},{"functionName":"isRefactorErrorInfo","ranges":[{"startOffset":6735398,"endOffset":6735423,"count":0}],"isBlockCoverage":false},{"functionName":"refactorKindBeginsWith","ranges":[{"startOffset":6735451,"endOffset":6735479,"count":0}],"isBlockCoverage":false},{"functionName":"registerRefactor","ranges":[{"startOffset":6735501,"endOffset":6735523,"count":0}],"isBlockCoverage":false},{"functionName":"registerRefactor","ranges":[{"startOffset":6735608,"endOffset":6735686,"count":15}],"isBlockCoverage":true},{"functionName":"getApplicableRefactors","ranges":[{"startOffset":6735687,"endOffset":6736126,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForRefactor","ranges":[{"startOffset":6736127,"endOffset":6736378,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToConvertBetweenNamedAndDefaultExports","ranges":[{"startOffset":6737025,"endOffset":6737881,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertBetweenNamedAndDefaultExports","ranges":[{"startOffset":6737904,"endOffset":6738478,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo2","ranges":[{"startOffset":6738483,"endOffset":6741089,"count":0}],"isBlockCoverage":false},{"functionName":"doChange","ranges":[{"startOffset":6741090,"endOffset":6741313,"count":0}],"isBlockCoverage":false},{"functionName":"changeExport","ranges":[{"startOffset":6741314,"endOffset":6743364,"count":0}],"isBlockCoverage":false},{"functionName":"changeImports","ranges":[{"startOffset":6743365,"endOffset":6744127,"count":0}],"isBlockCoverage":false},{"functionName":"changeDefaultToNamedImport","ranges":[{"startOffset":6744128,"endOffset":6746263,"count":0}],"isBlockCoverage":false},{"functionName":"changeNamedToDefaultImport","ranges":[{"startOffset":6746264,"endOffset":6747224,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportSpecifier","ranges":[{"startOffset":6747225,"endOffset":6747464,"count":0}],"isBlockCoverage":false},{"functionName":"makeExportSpecifier","ranges":[{"startOffset":6747465,"endOffset":6747704,"count":0}],"isBlockCoverage":false},{"functionName":"getExportingModuleSymbol","ranges":[{"startOffset":6747705,"endOffset":6748017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6748858,"endOffset":6748871,"count":3}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToConvertBetweenNamedAndNamespacedImports","ranges":[{"startOffset":6748897,"endOffset":6749580,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertBetweenNamedAndNamespacedImports","ranges":[{"startOffset":6749603,"endOffset":6750151,"count":0}],"isBlockCoverage":false},{"functionName":"getImportConversionInfo","ranges":[{"startOffset":6750156,"endOffset":6751548,"count":0}],"isBlockCoverage":false},{"functionName":"getShouldUseDefault","ranges":[{"startOffset":6751549,"endOffset":6751763,"count":0}],"isBlockCoverage":false},{"functionName":"doChange2","ranges":[{"startOffset":6751764,"endOffset":6752177,"count":0}],"isBlockCoverage":false},{"functionName":"doChangeNamespaceToNamed","ranges":[{"startOffset":6752178,"endOffset":6754500,"count":0}],"isBlockCoverage":false},{"functionName":"getRightOfPropertyAccessOrQualifiedName","ranges":[{"startOffset":6754501,"endOffset":6754727,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftOfPropertyAccessOrQualifiedName","ranges":[{"startOffset":6754728,"endOffset":6754958,"count":0}],"isBlockCoverage":false},{"functionName":"doChangeNamedToNamespaceOrDefault","ranges":[{"startOffset":6754959,"endOffset":6757936,"count":0}],"isBlockCoverage":false},{"functionName":"isExportEqualsModule","ranges":[{"startOffset":6757937,"endOffset":6758228,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":6758229,"endOffset":6758475,"count":0}],"isBlockCoverage":false},{"functionName":"createImportClause","ranges":[{"startOffset":6758476,"endOffset":6758711,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToExtractType","ranges":[{"startOffset":6759494,"endOffset":6761078,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToExtractType","ranges":[{"startOffset":6761101,"endOffset":6762368,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeToExtract","ranges":[{"startOffset":6762373,"endOffset":6764317,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTypeAt","ranges":[{"startOffset":6764318,"endOffset":6764937,"count":0}],"isBlockCoverage":false},{"functionName":"flattenTypeLiteralNodeReference","ranges":[{"startOffset":6764938,"endOffset":6766026,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsSkipTrivia","ranges":[{"startOffset":6766027,"endOffset":6766158,"count":0}],"isBlockCoverage":false},{"functionName":"collectTypeParameters","ranges":[{"startOffset":6766159,"endOffset":6769119,"count":0}],"isBlockCoverage":false},{"functionName":"doTypeAliasChange","ranges":[{"startOffset":6769120,"endOffset":6770128,"count":0}],"isBlockCoverage":false},{"functionName":"doInterfaceChange","ranges":[{"startOffset":6770129,"endOffset":6771093,"count":0}],"isBlockCoverage":false},{"functionName":"doTypedefChange","ranges":[{"startOffset":6771094,"endOffset":6773013,"count":0}],"isBlockCoverage":false},{"functionName":"getNodesToEdit","ranges":[{"startOffset":6773014,"endOffset":6773484,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingNode","ranges":[{"startOffset":6773485,"endOffset":6773617,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandedSelectionNode","ranges":[{"startOffset":6773618,"endOffset":6773914,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToMoveToFile","ranges":[{"startOffset":6774273,"endOffset":6775882,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToMoveToFile","ranges":[{"startOffset":6775905,"endOffset":6777037,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":6777042,"endOffset":6777174,"count":0}],"isBlockCoverage":false},{"functionName":"doChange3","ranges":[{"startOffset":6777175,"endOffset":6778318,"count":0}],"isBlockCoverage":false},{"functionName":"getNewStatementsAndRemoveFromOldFile","ranges":[{"startOffset":6778319,"endOffset":6780325,"count":0}],"isBlockCoverage":false},{"functionName":"addNewFileToTsconfig","ranges":[{"startOffset":6780326,"endOffset":6781213,"count":0}],"isBlockCoverage":false},{"functionName":"deleteMovedStatements","ranges":[{"startOffset":6781214,"endOffset":6781406,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedOldImports","ranges":[{"startOffset":6781407,"endOffset":6781811,"count":0}],"isBlockCoverage":false},{"functionName":"addExportsInOldFile","ranges":[{"startOffset":6781812,"endOffset":6782418,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportsInOtherFiles","ranges":[{"startOffset":6782419,"endOffset":6784246,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceLikeImport","ranges":[{"startOffset":6784247,"endOffset":6784781,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceLikeImport","ranges":[{"startOffset":6784782,"endOffset":6785985,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceLikeImportNode","ranges":[{"startOffset":6785986,"endOffset":6787241,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireCall","ranges":[{"startOffset":6787242,"endOffset":6787430,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierFromImport","ranges":[{"startOffset":6787431,"endOffset":6787648,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportInStatement","ranges":[{"startOffset":6787649,"endOffset":6788301,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAliasDeclarationInImportOrRequire","ranges":[{"startOffset":6788302,"endOffset":6789549,"count":0}],"isBlockCoverage":false},{"functionName":"addImportsForMovedSymbols","ranges":[{"startOffset":6789550,"endOffset":6790035,"count":0}],"isBlockCoverage":false},{"functionName":"makeVariableStatement","ranges":[{"startOffset":6790036,"endOffset":6790371,"count":0}],"isBlockCoverage":false},{"functionName":"addExports","ranges":[{"startOffset":6790372,"endOffset":6790959,"count":0}],"isBlockCoverage":false},{"functionName":"isExported","ranges":[{"startOffset":6790960,"endOffset":6791439,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedImports","ranges":[{"startOffset":6791440,"endOffset":6792100,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelDeclarationStatement","ranges":[{"startOffset":6792101,"endOffset":6792309,"count":0}],"isBlockCoverage":false},{"functionName":"addExport","ranges":[{"startOffset":6792310,"endOffset":6792426,"count":0}],"isBlockCoverage":false},{"functionName":"addEs6Export","ranges":[{"startOffset":6792427,"endOffset":6793986,"count":0}],"isBlockCoverage":false},{"functionName":"addCommonjsExport","ranges":[{"startOffset":6793987,"endOffset":6794105,"count":0}],"isBlockCoverage":false},{"functionName":"createExportAssignment","ranges":[{"startOffset":6794106,"endOffset":6794418,"count":0}],"isBlockCoverage":false},{"functionName":"getNamesToExportInCommonJS","ranges":[{"startOffset":6794419,"endOffset":6795188,"count":0}],"isBlockCoverage":false},{"functionName":"filterImport","ranges":[{"startOffset":6795189,"endOffset":6796261,"count":0}],"isBlockCoverage":false},{"functionName":"filterNamedBindings","ranges":[{"startOffset":6796262,"endOffset":6796608,"count":0}],"isBlockCoverage":false},{"functionName":"filterBindingName","ranges":[{"startOffset":6796609,"endOffset":6797073,"count":0}],"isBlockCoverage":false},{"functionName":"nameOfTopLevelDeclaration","ranges":[{"startOffset":6797074,"endOffset":6797230,"count":0}],"isBlockCoverage":false},{"functionName":"getTopLevelDeclarationStatement","ranges":[{"startOffset":6797231,"endOffset":6797577,"count":0}],"isBlockCoverage":false},{"functionName":"addExportToChanges","ranges":[{"startOffset":6797578,"endOffset":6798005,"count":0}],"isBlockCoverage":false},{"functionName":"createNewFileName","ranges":[{"startOffset":6798006,"endOffset":6798819,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeToMove","ranges":[{"startOffset":6798820,"endOffset":6799885,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementsToMove","ranges":[{"startOffset":6799886,"endOffset":6800365,"count":0}],"isBlockCoverage":false},{"functionName":"containsJsx","ranges":[{"startOffset":6800366,"endOffset":6800496,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedStatementToMove","ranges":[{"startOffset":6800497,"endOffset":6800615,"count":0}],"isBlockCoverage":false},{"functionName":"isPureImport","ranges":[{"startOffset":6800616,"endOffset":6801090,"count":0}],"isBlockCoverage":false},{"functionName":"getUsageInfo","ranges":[{"startOffset":6801091,"endOffset":6804555,"count":0}],"isBlockCoverage":false},{"functionName":"makeUniqueFilename","ranges":[{"startOffset":6804556,"endOffset":6804871,"count":0}],"isBlockCoverage":false},{"functionName":"inferNewFileName","ranges":[{"startOffset":6804872,"endOffset":6805059,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReference","ranges":[{"startOffset":6805060,"endOffset":6805510,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTopLevelDeclaration","ranges":[{"startOffset":6805511,"endOffset":6806303,"count":0}],"isBlockCoverage":false},{"functionName":"isInImport","ranges":[{"startOffset":6806304,"endOffset":6806795,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInImport","ranges":[{"startOffset":6806796,"endOffset":6807010,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelDeclaration","ranges":[{"startOffset":6807011,"endOffset":6807203,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileOfTopLevelDeclaration","ranges":[{"startOffset":6807204,"endOffset":6807334,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTopLevelDeclarationInBindingName","ranges":[{"startOffset":6807335,"endOffset":6807854,"count":0}],"isBlockCoverage":false},{"functionName":"isNonVariableTopLevelDeclaration","ranges":[{"startOffset":6807855,"endOffset":6808262,"count":0}],"isBlockCoverage":false},{"functionName":"moveStatementsToTargetFile","ranges":[{"startOffset":6808263,"endOffset":6811002,"count":0}],"isBlockCoverage":false},{"functionName":"getOverloadRangeToMove","ranges":[{"startOffset":6811003,"endOffset":6811761,"count":0}],"isBlockCoverage":false},{"functionName":"getExistingLocals","ranges":[{"startOffset":6811762,"endOffset":6813192,"count":0}],"isBlockCoverage":false},{"functionName":"isRefactorErrorInfo","ranges":[{"startOffset":6813231,"endOffset":6813301,"count":0}],"isBlockCoverage":false},{"functionName":"refactorKindBeginsWith","ranges":[{"startOffset":6813302,"endOffset":6813444,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierForNode","ranges":[{"startOffset":6813445,"endOffset":6813850,"count":0}],"isBlockCoverage":false},{"functionName":"addTargetFileImports","ranges":[{"startOffset":6813851,"endOffset":6814782,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableActions","ranges":[{"startOffset":6815148,"endOffset":6815932,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForAction","ranges":[{"startOffset":6815936,"endOffset":6817142,"count":0}],"isBlockCoverage":false},{"functionName":"getInliningInfo","ranges":[{"startOffset":6817147,"endOffset":6819050,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationExported","ranges":[{"startOffset":6819051,"endOffset":6819242,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceNodes","ranges":[{"startOffset":6819243,"endOffset":6819956,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementExpression","ranges":[{"startOffset":6819957,"endOffset":6820854,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTemplateStringVariableWithLiteral","ranges":[{"startOffset":6820855,"endOffset":6821382,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToMoveToNewFile","ranges":[{"startOffset":6821755,"endOffset":6823315,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToMoveToNewFile","ranges":[{"startOffset":6823338,"endOffset":6823802,"count":0}],"isBlockCoverage":false},{"functionName":"doChange4","ranges":[{"startOffset":6823807,"endOffset":6824793,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToConvertOverloadsToOneSignature","ranges":[{"startOffset":6825540,"endOffset":6825899,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertOverloadsToOneSignature","ranges":[{"startOffset":6825900,"endOffset":6830649,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertableSignatureDeclaration","ranges":[{"startOffset":6830650,"endOffset":6830977,"count":0}],"isBlockCoverage":false},{"functionName":"getConvertableOverloadListAtPosition","ranges":[{"startOffset":6830978,"endOffset":6832386,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToRemoveFunctionBraces","ranges":[{"startOffset":6833226,"endOffset":6834035,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToRemoveFunctionBraces","ranges":[{"startOffset":6834036,"endOffset":6835754,"count":0}],"isBlockCoverage":false},{"functionName":"getConvertibleArrowFunctionAtPosition","ranges":[{"startOffset":6835755,"endOffset":6837160,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToConvertFunctionExpressions","ranges":[{"startOffset":6838451,"endOffset":6840196,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertFunctionExpressions","ranges":[{"startOffset":6840197,"endOffset":6841154,"count":0}],"isBlockCoverage":false},{"functionName":"containingThis","ranges":[{"startOffset":6841155,"endOffset":6841505,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionInfo","ranges":[{"startOffset":6841506,"endOffset":6842385,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleVariableDeclaration","ranges":[{"startOffset":6842386,"endOffset":6842551,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetFunctionFromVariableDeclaration","ranges":[{"startOffset":6842552,"endOffset":6843069,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBlock","ranges":[{"startOffset":6843070,"endOffset":6843623,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableInfo","ranges":[{"startOffset":6843624,"endOffset":6844201,"count":0}],"isBlockCoverage":false},{"functionName":"getEditInfoForConvertToAnonymousFunction","ranges":[{"startOffset":6844202,"endOffset":6844640,"count":0}],"isBlockCoverage":false},{"functionName":"getEditInfoForConvertToNamedFunction","ranges":[{"startOffset":6844641,"endOffset":6845649,"count":0}],"isBlockCoverage":false},{"functionName":"getEditInfoForConvertToArrowFunction","ranges":[{"startOffset":6845650,"endOffset":6846295,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToExpression","ranges":[{"startOffset":6846296,"endOffset":6846436,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionReferencedInFile","ranges":[{"startOffset":6846437,"endOffset":6846627,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToConvertParametersToDestructuredObject","ranges":[{"startOffset":6847419,"endOffset":6847901,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertParametersToDestructuredObject","ranges":[{"startOffset":6847902,"endOffset":6848700,"count":0}],"isBlockCoverage":false},{"functionName":"doChange5","ranges":[{"startOffset":6848701,"endOffset":6850614,"count":0}],"isBlockCoverage":false},{"functionName":"getGroupedReferences","ranges":[{"startOffset":6850615,"endOffset":6854469,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolForContextualType","ranges":[{"startOffset":6854470,"endOffset":6854864,"count":0}],"isBlockCoverage":false},{"functionName":"entryToImportOrExport","ranges":[{"startOffset":6854865,"endOffset":6855214,"count":0}],"isBlockCoverage":false},{"functionName":"entryToDeclaration","ranges":[{"startOffset":6855215,"endOffset":6855339,"count":0}],"isBlockCoverage":false},{"functionName":"entryToFunctionCall","ranges":[{"startOffset":6855340,"endOffset":6857046,"count":0}],"isBlockCoverage":false},{"functionName":"entryToAccessExpression","ranges":[{"startOffset":6857047,"endOffset":6857865,"count":0}],"isBlockCoverage":false},{"functionName":"entryToType","ranges":[{"startOffset":6857866,"endOffset":6858103,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionDeclarationAtPosition","ranges":[{"startOffset":6858104,"endOffset":6858613,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelJSDoc","ranges":[{"startOffset":6858614,"endOffset":6858920,"count":0}],"isBlockCoverage":false},{"functionName":"isValidMethodSignature","ranges":[{"startOffset":6858921,"endOffset":6859071,"count":0}],"isBlockCoverage":false},{"functionName":"isValidFunctionDeclaration","ranges":[{"startOffset":6859072,"endOffset":6860412,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleImplementation","ranges":[{"startOffset":6860413,"endOffset":6860575,"count":0}],"isBlockCoverage":false},{"functionName":"hasNameOrDefault","ranges":[{"startOffset":6860576,"endOffset":6860817,"count":0}],"isBlockCoverage":false},{"functionName":"isValidParameterNodeArray","ranges":[{"startOffset":6860818,"endOffset":6861071,"count":0}],"isBlockCoverage":false},{"functionName":"isValidParameterDeclaration","ranges":[{"startOffset":6861072,"endOffset":6861425,"count":0}],"isBlockCoverage":false},{"functionName":"isValidVariableDeclaration","ranges":[{"startOffset":6861426,"endOffset":6861570,"count":0}],"isBlockCoverage":false},{"functionName":"hasThisParameter","ranges":[{"startOffset":6861571,"endOffset":6861674,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorableParametersLength","ranges":[{"startOffset":6861675,"endOffset":6861835,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorableParameters","ranges":[{"startOffset":6861836,"endOffset":6862041,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyOrShorthandAssignment","ranges":[{"startOffset":6862042,"endOffset":6862324,"count":0}],"isBlockCoverage":false},{"functionName":"createNewArgument","ranges":[{"startOffset":6862325,"endOffset":6863532,"count":0}],"isBlockCoverage":false},{"functionName":"createNewParameters","ranges":[{"startOffset":6863533,"endOffset":6867396,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterName","ranges":[{"startOffset":6867397,"endOffset":6867506,"count":0}],"isBlockCoverage":false},{"functionName":"getClassNames","ranges":[{"startOffset":6867507,"endOffset":6868316,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionNames","ranges":[{"startOffset":6868317,"endOffset":6869733,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToConvertToTemplateString","ranges":[{"startOffset":6870408,"endOffset":6871417,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeOrParentOfParentheses","ranges":[{"startOffset":6871418,"endOffset":6871854,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertToTemplateString","ranges":[{"startOffset":6871855,"endOffset":6872225,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForToTemplateLiteral","ranges":[{"startOffset":6872226,"endOffset":6873040,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEqualsOperator","ranges":[{"startOffset":6873041,"endOffset":6873197,"count":0}],"isBlockCoverage":false},{"functionName":"getParentBinaryExpression","ranges":[{"startOffset":6873198,"endOffset":6873673,"count":0}],"isBlockCoverage":false},{"functionName":"treeToArray","ranges":[{"startOffset":6873674,"endOffset":6874773,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingOperatorComments","ranges":[{"startOffset":6874809,"endOffset":6875060,"count":0}],"isBlockCoverage":false},{"functionName":"copyCommentFromMultiNode","ranges":[{"startOffset":6875093,"endOffset":6875437,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRawStringForTemplate","ranges":[{"startOffset":6875439,"endOffset":6875551,"count":0}],"isBlockCoverage":false},{"functionName":"getRawTextOfTemplate","ranges":[{"startOffset":6875552,"endOffset":6875725,"count":0}],"isBlockCoverage":false},{"functionName":"concatConsecutiveString","ranges":[{"startOffset":6875726,"endOffset":6876292,"count":0}],"isBlockCoverage":false},{"functionName":"nodesToTemplate","ranges":[{"startOffset":6876293,"endOffset":6878448,"count":0}],"isBlockCoverage":false},{"functionName":"copyExpressionComments","ranges":[{"startOffset":6878449,"endOffset":6878833,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionFromParenthesesOrExpression","ranges":[{"startOffset":6878834,"endOffset":6879015,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToConvertToOptionalChain","ranges":[{"startOffset":6879774,"endOffset":6880408,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertToOptionalChain","ranges":[{"startOffset":6880409,"endOffset":6880831,"count":0}],"isBlockCoverage":false},{"functionName":"isValidExpression","ranges":[{"startOffset":6880832,"endOffset":6880936,"count":0}],"isBlockCoverage":false},{"functionName":"isValidStatement","ranges":[{"startOffset":6880937,"endOffset":6881066,"count":0}],"isBlockCoverage":false},{"functionName":"isValidExpressionOrStatement","ranges":[{"startOffset":6881067,"endOffset":6881174,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo3","ranges":[{"startOffset":6881175,"endOffset":6882228,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionalInfo","ranges":[{"startOffset":6882229,"endOffset":6883114,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryInfo","ranges":[{"startOffset":6883115,"endOffset":6883792,"count":0}],"isBlockCoverage":false},{"functionName":"getOccurrencesInExpression","ranges":[{"startOffset":6883793,"endOffset":6884388,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchingStart","ranges":[{"startOffset":6884389,"endOffset":6884635,"count":0}],"isBlockCoverage":false},{"functionName":"chainStartsWith","ranges":[{"startOffset":6884636,"endOffset":6885310,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfChainNode","ranges":[{"startOffset":6885311,"endOffset":6885651,"count":0}],"isBlockCoverage":false},{"functionName":"getValidParentNodeContainingSpan","ranges":[{"startOffset":6885652,"endOffset":6885910,"count":0}],"isBlockCoverage":false},{"functionName":"getValidParentNodeOfEmptySpan","ranges":[{"startOffset":6885911,"endOffset":6886145,"count":0}],"isBlockCoverage":false},{"functionName":"getExpression","ranges":[{"startOffset":6886146,"endOffset":6886582,"count":0}],"isBlockCoverage":false},{"functionName":"getFinalExpressionInChain","ranges":[{"startOffset":6886583,"endOffset":6886918,"count":0}],"isBlockCoverage":false},{"functionName":"convertOccurrences","ranges":[{"startOffset":6886919,"endOffset":6888353,"count":0}],"isBlockCoverage":false},{"functionName":"doChange6","ranges":[{"startOffset":6888354,"endOffset":6889160,"count":0}],"isBlockCoverage":false},{"functionName":"Messages","ranges":[{"startOffset":6889321,"endOffset":6889335,"count":0}],"isBlockCoverage":false},{"functionName":"RangeFacts","ranges":[{"startOffset":6889351,"endOffset":6889367,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeToExtract","ranges":[{"startOffset":6889390,"endOffset":6889414,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToExtractSymbol","ranges":[{"startOffset":6889453,"endOffset":6889492,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToExtractSymbol","ranges":[{"startOffset":6889529,"endOffset":6889566,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToExtractSymbol","ranges":[{"startOffset":6890219,"endOffset":6895437,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToExtractSymbol","ranges":[{"startOffset":6895438,"endOffset":6896362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6896378,"endOffset":6899190,"count":1}],"isBlockCoverage":false},{"functionName":"createMessage","ranges":[{"startOffset":6896397,"endOffset":6896508,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6899256,"endOffset":6899745,"count":1}],"isBlockCoverage":false},{"functionName":"getRangeToExtract2","ranges":[{"startOffset":6899766,"endOffset":6911013,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedSpanFromNodes","ranges":[{"startOffset":6911014,"endOffset":6911285,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementOrExpressionRange","ranges":[{"startOffset":6911286,"endOffset":6911571,"count":0}],"isBlockCoverage":false},{"functionName":"isScope","ranges":[{"startOffset":6911572,"endOffset":6911758,"count":0}],"isBlockCoverage":false},{"functionName":"collectEnclosingScopes","ranges":[{"startOffset":6911759,"endOffset":6912605,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionExtractionAtIndex","ranges":[{"startOffset":6912606,"endOffset":6913192,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantExtractionAtIndex","ranges":[{"startOffset":6913193,"endOffset":6913976,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleExtractions","ranges":[{"startOffset":6913977,"endOffset":6916216,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleExtractionsWorker","ranges":[{"startOffset":6916217,"endOffset":6916717,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForFunctionInScope","ranges":[{"startOffset":6916718,"endOffset":6916877,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForConstantInScope","ranges":[{"startOffset":6916878,"endOffset":6916991,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForFunctionLikeDeclaration","ranges":[{"startOffset":6916992,"endOffset":6917682,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForClassLikeDeclaration","ranges":[{"startOffset":6917683,"endOffset":6917954,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForModuleLikeDeclaration","ranges":[{"startOffset":6917955,"endOffset":6918173,"count":0}],"isBlockCoverage":false},{"functionName":"extractFunctionInScope","ranges":[{"startOffset":6918174,"endOffset":6929928,"count":0}],"isBlockCoverage":false},{"functionName":"extractConstantInScope","ranges":[{"startOffset":6929929,"endOffset":6937439,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingVariableDeclarationIfInList","ranges":[{"startOffset":6937440,"endOffset":6937795,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstDeclarationBeforePosition","ranges":[{"startOffset":6937796,"endOffset":6938204,"count":0}],"isBlockCoverage":false},{"functionName":"compareTypesByDeclarationOrder","ranges":[{"startOffset":6938205,"endOffset":6938582,"count":0}],"isBlockCoverage":false},{"functionName":"getCalledExpression","ranges":[{"startOffset":6938583,"endOffset":6938989,"count":0}],"isBlockCoverage":false},{"functionName":"transformFunctionBody","ranges":[{"startOffset":6938990,"endOffset":6941722,"count":0}],"isBlockCoverage":false},{"functionName":"transformConstantInitializer","ranges":[{"startOffset":6941723,"endOffset":6942108,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementsOrClassElements","ranges":[{"startOffset":6942109,"endOffset":6942498,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertFunctionBefore","ranges":[{"startOffset":6942499,"endOffset":6942712,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertPropertyBefore","ranges":[{"startOffset":6942713,"endOffset":6943275,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertConstantBefore","ranges":[{"startOffset":6943276,"endOffset":6944169,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentsForWritesAndVariableDeclarations","ranges":[{"startOffset":6944170,"endOffset":6944667,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyArray","ranges":[{"startOffset":6944668,"endOffset":6944720,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingTextRange","ranges":[{"startOffset":6944721,"endOffset":6944941,"count":0}],"isBlockCoverage":false},{"functionName":"collectReadsAndWrites","ranges":[{"startOffset":6944942,"endOffset":6957165,"count":0}],"isBlockCoverage":false},{"functionName":"getExtractableParent","ranges":[{"startOffset":6957166,"endOffset":6957330,"count":0}],"isBlockCoverage":false},{"functionName":"isExtractableExpression","ranges":[{"startOffset":6957331,"endOffset":6957978,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXContent","ranges":[{"startOffset":6957979,"endOffset":6958197,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralJsxAttribute","ranges":[{"startOffset":6958198,"endOffset":6958322,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToGenerateGetAndSetAccessors","ranges":[{"startOffset":6958908,"endOffset":6959939,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableActions","ranges":[{"startOffset":6959943,"endOffset":6960693,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToInferReturnType","ranges":[{"startOffset":6961352,"endOffset":6961720,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToInferReturnType","ranges":[{"startOffset":6961721,"endOffset":6962273,"count":0}],"isBlockCoverage":false},{"functionName":"doChange7","ranges":[{"startOffset":6962274,"endOffset":6962911,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo4","ranges":[{"startOffset":6962912,"endOffset":6964838,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleDeclaration","ranges":[{"startOffset":6964839,"endOffset":6965112,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6965191,"endOffset":6965415,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6965478,"endOffset":6966174,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6966231,"endOffset":6966659,"count":1}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications2","ranges":[{"startOffset":6966683,"endOffset":6967181,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications2","ranges":[{"startOffset":6967182,"endOffset":6967400,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticTokens","ranges":[{"startOffset":6967401,"endOffset":6967825,"count":0}],"isBlockCoverage":false},{"functionName":"collectTokens","ranges":[{"startOffset":6967826,"endOffset":6971096,"count":0}],"isBlockCoverage":false},{"functionName":"classifySymbol2","ranges":[{"startOffset":6971097,"endOffset":6971817,"count":0}],"isBlockCoverage":false},{"functionName":"reclassifyByType","ranges":[{"startOffset":6971818,"endOffset":6972570,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalDeclaration","ranges":[{"startOffset":6972571,"endOffset":6973009,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationForBindingElement","ranges":[{"startOffset":6973010,"endOffset":6973229,"count":0}],"isBlockCoverage":false},{"functionName":"inImportClause","ranges":[{"startOffset":6973230,"endOffset":6973401,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionInCallExpression","ranges":[{"startOffset":6973402,"endOffset":6973614,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess2","ranges":[{"startOffset":6973615,"endOffset":6973818,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":6974896,"endOffset":6975336,"count":0}],"isBlockCoverage":false},{"functionName":"NodeObject","ranges":[{"startOffset":6975364,"endOffset":6975673,"count":40}],"isBlockCoverage":true},{"functionName":"assertHasRealPosition","ranges":[{"startOffset":6975676,"endOffset":6975864,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFile","ranges":[{"startOffset":6975867,"endOffset":6975926,"count":0}],"isBlockCoverage":false},{"functionName":"getStart","ranges":[{"startOffset":6975929,"endOffset":6976079,"count":0}],"isBlockCoverage":false},{"functionName":"getFullStart","ranges":[{"startOffset":6976082,"endOffset":6976157,"count":0}],"isBlockCoverage":false},{"functionName":"getEnd","ranges":[{"startOffset":6976160,"endOffset":6976229,"count":0}],"isBlockCoverage":false},{"functionName":"getWidth","ranges":[{"startOffset":6976232,"endOffset":6976346,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":6976349,"endOffset":6976435,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingTriviaWidth","ranges":[{"startOffset":6976438,"endOffset":6976560,"count":0}],"isBlockCoverage":false},{"functionName":"getFullText","ranges":[{"startOffset":6976563,"endOffset":6976710,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":6976713,"endOffset":6976922,"count":0}],"isBlockCoverage":false},{"functionName":"getChildCount","ranges":[{"startOffset":6976925,"endOffset":6977004,"count":0}],"isBlockCoverage":false},{"functionName":"getChildAt","ranges":[{"startOffset":6977007,"endOffset":6977090,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":6977093,"endOffset":6977434,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstToken","ranges":[{"startOffset":6977437,"endOffset":6977813,"count":0}],"isBlockCoverage":false},{"functionName":"getLastToken","ranges":[{"startOffset":6977816,"endOffset":6978107,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":6978110,"endOffset":6978201,"count":0}],"isBlockCoverage":false},{"functionName":"createChildren","ranges":[{"startOffset":6978205,"endOffset":6979006,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticNodes","ranges":[{"startOffset":6979007,"endOffset":6979602,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxList","ranges":[{"startOffset":6979603,"endOffset":6980010,"count":0}],"isBlockCoverage":false},{"functionName":"TokenOrIdentifierObject","ranges":[{"startOffset":6980051,"endOffset":6980288,"count":6}],"isBlockCoverage":true},{"functionName":"getSourceFile","ranges":[{"startOffset":6980291,"endOffset":6980350,"count":0}],"isBlockCoverage":false},{"functionName":"getStart","ranges":[{"startOffset":6980353,"endOffset":6980469,"count":0}],"isBlockCoverage":false},{"functionName":"getFullStart","ranges":[{"startOffset":6980472,"endOffset":6980513,"count":0}],"isBlockCoverage":false},{"functionName":"getEnd","ranges":[{"startOffset":6980516,"endOffset":6980551,"count":0}],"isBlockCoverage":false},{"functionName":"getWidth","ranges":[{"startOffset":6980554,"endOffset":6980634,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":6980637,"endOffset":6980689,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingTriviaWidth","ranges":[{"startOffset":6980692,"endOffset":6980780,"count":0}],"isBlockCoverage":false},{"functionName":"getFullText","ranges":[{"startOffset":6980783,"endOffset":6980896,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":6980899,"endOffset":6981074,"count":0}],"isBlockCoverage":false},{"functionName":"getChildCount","ranges":[{"startOffset":6981077,"endOffset":6981136,"count":0}],"isBlockCoverage":false},{"functionName":"getChildAt","ranges":[{"startOffset":6981139,"endOffset":6981200,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":6981203,"endOffset":6981311,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstToken","ranges":[{"startOffset":6981314,"endOffset":6981354,"count":0}],"isBlockCoverage":false},{"functionName":"getLastToken","ranges":[{"startOffset":6981357,"endOffset":6981396,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":6981399,"endOffset":6981438,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolObject","ranges":[{"startOffset":6981471,"endOffset":6981906,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":6981909,"endOffset":6981948,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":6981951,"endOffset":6981996,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedName","ranges":[{"startOffset":6981999,"endOffset":6982050,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6982053,"endOffset":6982090,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarations","ranges":[{"startOffset":6982093,"endOffset":6982146,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentationComment","ranges":[{"startOffset":6982149,"endOffset":6982752,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualDocumentationComment","ranges":[{"startOffset":6982755,"endOffset":6983823,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTags","ranges":[{"startOffset":6983826,"endOffset":6984017,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualJsDocTags","ranges":[{"startOffset":6984020,"endOffset":6984912,"count":0}],"isBlockCoverage":false},{"functionName":"TokenObject","ranges":[{"startOffset":6984976,"endOffset":6985036,"count":6}],"isBlockCoverage":true},{"functionName":"IdentifierObject","ranges":[{"startOffset":6985105,"endOffset":6985165,"count":0}],"isBlockCoverage":false},{"functionName":"get text","ranges":[{"startOffset":6985168,"endOffset":6985209,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateIdentifierObject","ranges":[{"startOffset":6985285,"endOffset":6985345,"count":0}],"isBlockCoverage":false},{"functionName":"get text","ranges":[{"startOffset":6985348,"endOffset":6985389,"count":0}],"isBlockCoverage":false},{"functionName":"TypeObject","ranges":[{"startOffset":6985420,"endOffset":6985505,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":6985508,"endOffset":6985547,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbol","ranges":[{"startOffset":6985550,"endOffset":6985591,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":6985594,"endOffset":6985666,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty","ranges":[{"startOffset":6985669,"endOffset":6985763,"count":0}],"isBlockCoverage":false},{"functionName":"getApparentProperties","ranges":[{"startOffset":6985766,"endOffset":6985855,"count":0}],"isBlockCoverage":false},{"functionName":"getCallSignatures","ranges":[{"startOffset":6985858,"endOffset":6985948,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructSignatures","ranges":[{"startOffset":6985951,"endOffset":6986051,"count":0}],"isBlockCoverage":false},{"functionName":"getStringIndexType","ranges":[{"startOffset":6986054,"endOffset":6986146,"count":0}],"isBlockCoverage":false},{"functionName":"getNumberIndexType","ranges":[{"startOffset":6986149,"endOffset":6986241,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseTypes","ranges":[{"startOffset":6986244,"endOffset":6986345,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableType","ranges":[{"startOffset":6986348,"endOffset":6986416,"count":0}],"isBlockCoverage":false},{"functionName":"getNonNullableType","ranges":[{"startOffset":6986419,"endOffset":6986495,"count":0}],"isBlockCoverage":false},{"functionName":"getNonOptionalType","ranges":[{"startOffset":6986498,"endOffset":6986574,"count":0}],"isBlockCoverage":false},{"functionName":"getConstraint","ranges":[{"startOffset":6986577,"endOffset":6986653,"count":0}],"isBlockCoverage":false},{"functionName":"getDefault","ranges":[{"startOffset":6986656,"endOffset":6986733,"count":0}],"isBlockCoverage":false},{"functionName":"isUnion","ranges":[{"startOffset":6986736,"endOffset":6986800,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersection","ranges":[{"startOffset":6986803,"endOffset":6986881,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionOrIntersection","ranges":[{"startOffset":6986884,"endOffset":6986976,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":6986979,"endOffset":6987104,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":6987107,"endOffset":6987183,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":6987186,"endOffset":6987262,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":6987265,"endOffset":6987344,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrInterface","ranges":[{"startOffset":6987347,"endOffset":6987437,"count":0}],"isBlockCoverage":false},{"functionName":"isClass","ranges":[{"startOffset":6987440,"endOffset":6987508,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexType","ranges":[{"startOffset":6987511,"endOffset":6987579,"count":0}],"isBlockCoverage":false},{"functionName":"get typeArguments","ranges":[{"startOffset":6987662,"endOffset":6987814,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureObject","ranges":[{"startOffset":6987860,"endOffset":6987945,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaration","ranges":[{"startOffset":6987948,"endOffset":6987999,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameters","ranges":[{"startOffset":6988002,"endOffset":6988059,"count":0}],"isBlockCoverage":false},{"functionName":"getParameters","ranges":[{"startOffset":6988062,"endOffset":6988111,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnType","ranges":[{"startOffset":6988114,"endOffset":6988191,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterAtPosition","ranges":[{"startOffset":6988194,"endOffset":6988515,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentationComment","ranges":[{"startOffset":6988518,"endOffset":6988696,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTags","ranges":[{"startOffset":6988699,"endOffset":6988847,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocInheritDocTag","ranges":[{"startOffset":6988851,"endOffset":6989006,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagsOfDeclarations","ranges":[{"startOffset":6989007,"endOffset":6989986,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentationComment","ranges":[{"startOffset":6989987,"endOffset":6990934,"count":0}],"isBlockCoverage":false},{"functionName":"findBaseOfDeclaration","ranges":[{"startOffset":6990935,"endOffset":6991662,"count":0}],"isBlockCoverage":false},{"functionName":"SourceFileObject","ranges":[{"startOffset":6991715,"endOffset":6991775,"count":1}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":6991778,"endOffset":6991877,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":6991880,"endOffset":6991983,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":6991986,"endOffset":6992039,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":6992042,"endOffset":6992213,"count":0}],"isBlockCoverage":false},{"functionName":"getLineEndOfPosition","ranges":[{"startOffset":6992216,"endOffset":6992687,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedDeclarations","ranges":[{"startOffset":6992690,"endOffset":6992858,"count":0}],"isBlockCoverage":false},{"functionName":"computeNamedDeclarations","ranges":[{"startOffset":6992861,"endOffset":6997172,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapSourceObject","ranges":[{"startOffset":6997214,"endOffset":6997365,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":6997368,"endOffset":6997461,"count":0}],"isBlockCoverage":false},{"functionName":"getServicesObjectAllocator","ranges":[{"startOffset":6997465,"endOffset":6997987,"count":1}],"isBlockCoverage":true},{"functionName":"getNodeConstructor","ranges":[{"startOffset":6997540,"endOffset":6997556,"count":1}],"isBlockCoverage":true},{"functionName":"getTokenConstructor","ranges":[{"startOffset":6997583,"endOffset":6997600,"count":1}],"isBlockCoverage":true},{"functionName":"getIdentifierConstructor","ranges":[{"startOffset":6997632,"endOffset":6997654,"count":1}],"isBlockCoverage":true},{"functionName":"getPrivateIdentifierConstructor","ranges":[{"startOffset":6997693,"endOffset":6997722,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceFileConstructor","ranges":[{"startOffset":6997754,"endOffset":6997776,"count":1}],"isBlockCoverage":true},{"functionName":"getSymbolConstructor","ranges":[{"startOffset":6997804,"endOffset":6997822,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeConstructor","ranges":[{"startOffset":6997848,"endOffset":6997864,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureConstructor","ranges":[{"startOffset":6997895,"endOffset":6997916,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapSourceConstructor","ranges":[{"startOffset":6997953,"endOffset":6997980,"count":0}],"isBlockCoverage":false},{"functionName":"toEditorSettings","ranges":[{"startOffset":6997988,"endOffset":6998566,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCase","ranges":[{"startOffset":6998567,"endOffset":6998659,"count":0}],"isBlockCoverage":false},{"functionName":"displayPartsToString","ranges":[{"startOffset":6998660,"endOffset":6998822,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions2","ranges":[{"startOffset":6998823,"endOffset":6998931,"count":5}],"isBlockCoverage":true},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":6998932,"endOffset":6999022,"count":0}],"isBlockCoverage":false},{"functionName":"SyntaxTreeCache","ranges":[{"startOffset":6999055,"endOffset":6999100,"count":1}],"isBlockCoverage":true},{"functionName":"getCurrentSourceFile","ranges":[{"startOffset":6999103,"endOffset":7001150,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceFileFields","ranges":[{"startOffset":7001154,"endOffset":7001303,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageServiceSourceFile","ranges":[{"startOffset":7001304,"endOffset":7001650,"count":0}],"isBlockCoverage":false},{"functionName":"updateLanguageServiceSourceFile","ranges":[{"startOffset":7001651,"endOffset":7003422,"count":0}],"isBlockCoverage":false},{"functionName":"CancellationTokenObject","ranges":[{"startOffset":7003573,"endOffset":7003657,"count":0}],"isBlockCoverage":false},{"functionName":"isCancellationRequested","ranges":[{"startOffset":7003660,"endOffset":7003752,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfCancellationRequested","ranges":[{"startOffset":7003755,"endOffset":7004031,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledCancellationToken","ranges":[{"startOffset":7004078,"endOffset":7004519,"count":0}],"isBlockCoverage":false},{"functionName":"isCancellationRequested","ranges":[{"startOffset":7004522,"endOffset":7004842,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfCancellationRequested","ranges":[{"startOffset":7004845,"endOffset":7005124,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageService","ranges":[{"startOffset":7006276,"endOffset":7069544,"count":1},{"startOffset":7006386,"endOffset":7006421,"count":0},{"startOffset":7006646,"endOffset":7006883,"count":0},{"startOffset":7007064,"endOffset":7007122,"count":0},{"startOffset":7007301,"endOffset":7007316,"count":0},{"startOffset":7068949,"endOffset":7069214,"count":0},{"startOffset":7069219,"endOffset":7069466,"count":0},{"startOffset":7069471,"endOffset":7069525,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":7007321,"endOffset":7007399,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":7007634,"endOffset":7007666,"count":1}],"isBlockCoverage":true},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":7007693,"endOffset":7007715,"count":1}],"isBlockCoverage":true},{"functionName":"getValidSourceFile","ranges":[{"startOffset":7007989,"endOffset":7008315,"count":0}],"isBlockCoverage":false},{"functionName":"synchronizeHostData","ranges":[{"startOffset":7008318,"endOffset":7008511,"count":0}],"isBlockCoverage":false},{"functionName":"synchronizeHostDataWorker","ranges":[{"startOffset":7008514,"endOffset":7018181,"count":0}],"isBlockCoverage":false},{"functionName":"getProgram","ranges":[{"startOffset":7018184,"endOffset":7018378,"count":0}],"isBlockCoverage":false},{"functionName":"getAutoImportProvider","ranges":[{"startOffset":7018381,"endOffset":7018524,"count":0}],"isBlockCoverage":false},{"functionName":"updateIsDefinitionOfReferencedSymbols","ranges":[{"startOffset":7018527,"endOffset":7020553,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupSemanticCache","ranges":[{"startOffset":7020556,"endOffset":7020882,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":7020885,"endOffset":7020956,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticDiagnostics","ranges":[{"startOffset":7020959,"endOffset":7021135,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticDiagnostics","ranges":[{"startOffset":7021138,"endOffset":7021653,"count":0}],"isBlockCoverage":false},{"functionName":"getRegionSemanticDiagnostics","ranges":[{"startOffset":7021656,"endOffset":7022465,"count":0}],"isBlockCoverage":false},{"functionName":"getNodesForRanges","ranges":[{"startOffset":7022468,"endOffset":7022882,"count":0}],"isBlockCoverage":false},{"functionName":"getNodesForSpan","ranges":[{"startOffset":7022885,"endOffset":7023437,"count":0}],"isBlockCoverage":false},{"functionName":"chooseOverlappingNodes","ranges":[{"startOffset":7023440,"endOffset":7023925,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOverlapsWithSpan","ranges":[{"startOffset":7023928,"endOffset":7024077,"count":0}],"isBlockCoverage":false},{"functionName":"addSourceElement","ranges":[{"startOffset":7024080,"endOffset":7024232,"count":0}],"isBlockCoverage":false},{"functionName":"chooseOverlappingBlockLike","ranges":[{"startOffset":7024235,"endOffset":7024590,"count":0}],"isBlockCoverage":false},{"functionName":"chooseOverlappingClassLike","ranges":[{"startOffset":7024593,"endOffset":7025353,"count":0}],"isBlockCoverage":false},{"functionName":"getSuggestionDiagnostics","ranges":[{"startOffset":7025356,"endOffset":7025531,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiagnostics","ranges":[{"startOffset":7025534,"endOffset":7025725,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionsAtPosition2","ranges":[{"startOffset":7025728,"endOffset":7026594,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDetails2","ranges":[{"startOffset":7026597,"endOffset":7027099,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntrySymbol2","ranges":[{"startOffset":7027102,"endOffset":7027382,"count":0}],"isBlockCoverage":false},{"functionName":"getQuickInfoAtPosition","ranges":[{"startOffset":7027385,"endOffset":7029100,"count":0}],"isBlockCoverage":false},{"functionName":"preparePasteEditsForFile","ranges":[{"startOffset":7029103,"endOffset":7029352,"count":0}],"isBlockCoverage":false},{"functionName":"getPasteEdits","ranges":[{"startOffset":7029355,"endOffset":7029826,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeForQuickInfo","ranges":[{"startOffset":7029829,"endOffset":7030282,"count":0}],"isBlockCoverage":false},{"functionName":"shouldGetType","ranges":[{"startOffset":7030285,"endOffset":7031146,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAtPosition2","ranges":[{"startOffset":7031149,"endOffset":7031416,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAndBoundSpan2","ranges":[{"startOffset":7031419,"endOffset":7031620,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeDefinitionAtPosition2","ranges":[{"startOffset":7031623,"endOffset":7031845,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementationAtPosition","ranges":[{"startOffset":7031848,"endOffset":7032101,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentHighlights","ranges":[{"startOffset":7032104,"endOffset":7032629,"count":0}],"isBlockCoverage":false},{"functionName":"findRenameLocations","ranges":[{"startOffset":7032632,"endOffset":7034163,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesAtPosition","ranges":[{"startOffset":7034166,"endOffset":7034474,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesWorker2","ranges":[{"startOffset":7034477,"endOffset":7034940,"count":0}],"isBlockCoverage":false},{"functionName":"findReferences","ranges":[{"startOffset":7034943,"endOffset":7035176,"count":0}],"isBlockCoverage":false},{"functionName":"getFileReferences","ranges":[{"startOffset":7035179,"endOffset":7035415,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigateToItems2","ranges":[{"startOffset":7035418,"endOffset":7035814,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitOutput","ranges":[{"startOffset":7035817,"endOffset":7036182,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItems2","ranges":[{"startOffset":7036185,"endOffset":7036480,"count":0}],"isBlockCoverage":false},{"functionName":"getNonBoundSourceFile","ranges":[{"startOffset":7036483,"endOffset":7036588,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrDottedNameSpan","ranges":[{"startOffset":7036591,"endOffset":7037970,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakpointStatementAtPosition","ranges":[{"startOffset":7037973,"endOffset":7038202,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationBarItems2","ranges":[{"startOffset":7038205,"endOffset":7038353,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationTree2","ranges":[{"startOffset":7038356,"endOffset":7038496,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications3","ranges":[{"startOffset":7038499,"endOffset":7038991,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications3","ranges":[{"startOffset":7038994,"endOffset":7039507,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticClassifications2","ranges":[{"startOffset":7039510,"endOffset":7039682,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications2","ranges":[{"startOffset":7039685,"endOffset":7039871,"count":0}],"isBlockCoverage":false},{"functionName":"getOutliningSpans","ranges":[{"startOffset":7039874,"endOffset":7040084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7040396,"endOffset":7040460,"count":8}],"isBlockCoverage":true},{"functionName":"getBraceMatchingAtPosition","ranges":[{"startOffset":7040465,"endOffset":7041009,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationAtPosition","ranges":[{"startOffset":7041012,"endOffset":7041557,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForRange","ranges":[{"startOffset":7041560,"endOffset":7041850,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForDocument","ranges":[{"startOffset":7041853,"endOffset":7042086,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsAfterKeystroke","ranges":[{"startOffset":7042089,"endOffset":7042891,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeFixesAtPosition","ranges":[{"startOffset":7042894,"endOffset":7043525,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedCodeFix","ranges":[{"startOffset":7043528,"endOffset":7043971,"count":0}],"isBlockCoverage":false},{"functionName":"organizeImports2","ranges":[{"startOffset":7043974,"endOffset":7044564,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename2","ranges":[{"startOffset":7044567,"endOffset":7044841,"count":0}],"isBlockCoverage":false},{"functionName":"applyCodeActionCommand","ranges":[{"startOffset":7044844,"endOffset":7045155,"count":0}],"isBlockCoverage":false},{"functionName":"applySingleCodeActionCommand","ranges":[{"startOffset":7045158,"endOffset":7045532,"count":0}],"isBlockCoverage":false},{"functionName":"getDocCommentTemplateAtPosition2","ranges":[{"startOffset":7045535,"endOffset":7045926,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBraceCompletionAtPosition","ranges":[{"startOffset":7045929,"endOffset":7046619,"count":0}],"isBlockCoverage":false},{"functionName":"getJsxClosingTagAtPosition","ranges":[{"startOffset":7046622,"endOffset":7047464,"count":0}],"isBlockCoverage":false},{"functionName":"getLinkedEditingRangeAtPosition","ranges":[{"startOffset":7047467,"endOffset":7049838,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesForRange","ranges":[{"startOffset":7049841,"endOffset":7050117,"count":0}],"isBlockCoverage":false},{"functionName":"toggleLineComment","ranges":[{"startOffset":7050120,"endOffset":7052295,"count":0}],"isBlockCoverage":false},{"functionName":"toggleMultilineComment","ranges":[{"startOffset":7052298,"endOffset":7055806,"count":0}],"isBlockCoverage":false},{"functionName":"commentSelection","ranges":[{"startOffset":7055809,"endOffset":7056274,"count":0}],"isBlockCoverage":false},{"functionName":"uncommentSelection","ranges":[{"startOffset":7056277,"endOffset":7057361,"count":0}],"isBlockCoverage":false},{"functionName":"isUnclosedTag","ranges":[{"startOffset":7057364,"endOffset":7057660,"count":0}],"isBlockCoverage":false},{"functionName":"isUnclosedFragment","ranges":[{"startOffset":7057663,"endOffset":7057861,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfEnclosingComment","ranges":[{"startOffset":7057864,"endOffset":7058229,"count":0}],"isBlockCoverage":false},{"functionName":"getTodoComments","ranges":[{"startOffset":7058232,"endOffset":7060778,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfo2","ranges":[{"startOffset":7060781,"endOffset":7060982,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorContext","ranges":[{"startOffset":7060985,"endOffset":7061536,"count":0}],"isBlockCoverage":false},{"functionName":"getInlayHintsContext","ranges":[{"startOffset":7061539,"endOffset":7061727,"count":0}],"isBlockCoverage":false},{"functionName":"getSmartSelectionRange2","ranges":[{"startOffset":7061730,"endOffset":7061912,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableRefactors2","ranges":[{"startOffset":7061915,"endOffset":7062303,"count":0}],"isBlockCoverage":false},{"functionName":"getMoveToRefactoringFileSuggestions","ranges":[{"startOffset":7062306,"endOffset":7063663,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForRefactor2","ranges":[{"startOffset":7063666,"endOffset":7064086,"count":0}],"isBlockCoverage":false},{"functionName":"toLineColumnOffset","ranges":[{"startOffset":7064089,"endOffset":7064278,"count":0}],"isBlockCoverage":false},{"functionName":"prepareCallHierarchy","ranges":[{"startOffset":7064281,"endOffset":7064664,"count":0}],"isBlockCoverage":false},{"functionName":"provideCallHierarchyIncomingCalls","ranges":[{"startOffset":7064667,"endOffset":7065110,"count":0}],"isBlockCoverage":false},{"functionName":"provideCallHierarchyOutgoingCalls","ranges":[{"startOffset":7065113,"endOffset":7065537,"count":0}],"isBlockCoverage":false},{"functionName":"provideInlayHints2","ranges":[{"startOffset":7065540,"endOffset":7065802,"count":0}],"isBlockCoverage":false},{"functionName":"mapCode2","ranges":[{"startOffset":7065805,"endOffset":7066131,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentProgram","ranges":[{"startOffset":7068173,"endOffset":7068186,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":7068444,"endOffset":7068462,"count":0}],"isBlockCoverage":false},{"functionName":"clearSourceMapperCache","ranges":[{"startOffset":7068492,"endOffset":7068523,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7069041,"endOffset":7069192,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7069299,"endOffset":7069444,"count":0}],"isBlockCoverage":false},{"functionName":"getNameTable","ranges":[{"startOffset":7069545,"endOffset":7069685,"count":0}],"isBlockCoverage":false},{"functionName":"initializeNameTable","ranges":[{"startOffset":7069686,"endOffset":7070434,"count":0}],"isBlockCoverage":false},{"functionName":"literalIsName","ranges":[{"startOffset":7070435,"endOffset":7070654,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElement","ranges":[{"startOffset":7070655,"endOffset":7070891,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElementWorker","ranges":[{"startOffset":7070892,"endOffset":7071546,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolAtLocationForQuickInfo","ranges":[{"startOffset":7071547,"endOffset":7072057,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromContextualType","ranges":[{"startOffset":7072058,"endOffset":7073129,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentOfElementAccessExpression","ranges":[{"startOffset":7073130,"endOffset":7073315,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFilePath","ranges":[{"startOffset":7073316,"endOffset":7073589,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":7073670,"endOffset":7074154,"count":0}],"isBlockCoverage":false},{"functionName":"spanInSourceFileAtLocation","ranges":[{"startOffset":7074321,"endOffset":7074353,"count":0}],"isBlockCoverage":false},{"functionName":"spanInSourceFileAtLocation","ranges":[{"startOffset":7074390,"endOffset":7096039,"count":0}],"isBlockCoverage":false},{"functionName":"createCallHierarchyItem","ranges":[{"startOffset":7096188,"endOffset":7096217,"count":0}],"isBlockCoverage":false},{"functionName":"getIncomingCalls","ranges":[{"startOffset":7096239,"endOffset":7096261,"count":0}],"isBlockCoverage":false},{"functionName":"getOutgoingCalls","ranges":[{"startOffset":7096283,"endOffset":7096305,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCallHierarchyDeclaration","ranges":[{"startOffset":7096342,"endOffset":7096379,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExpression","ranges":[{"startOffset":7096418,"endOffset":7096548,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike2","ranges":[{"startOffset":7096549,"endOffset":7096652,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignedExpression","ranges":[{"startOffset":7096653,"endOffset":7096982,"count":0}],"isBlockCoverage":false},{"functionName":"isPossibleCallHierarchyDeclaration","ranges":[{"startOffset":7096983,"endOffset":7097373,"count":0}],"isBlockCoverage":false},{"functionName":"isValidCallHierarchyDeclaration","ranges":[{"startOffset":7097374,"endOffset":7097788,"count":0}],"isBlockCoverage":false},{"functionName":"getCallHierarchyDeclarationReferenceNode","ranges":[{"startOffset":7097789,"endOffset":7098085,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier3","ranges":[{"startOffset":7098086,"endOffset":7098171,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolOfCallHierarchyDeclaration","ranges":[{"startOffset":7098172,"endOffset":7098370,"count":0}],"isBlockCoverage":false},{"functionName":"getCallHierarchyItemName","ranges":[{"startOffset":7098371,"endOffset":7100209,"count":0}],"isBlockCoverage":false},{"functionName":"getCallHierarchItemContainerName","ranges":[{"startOffset":7100210,"endOffset":7101442,"count":0}],"isBlockCoverage":false},{"functionName":"findImplementation","ranges":[{"startOffset":7101443,"endOffset":7101984,"count":0}],"isBlockCoverage":false},{"functionName":"findAllInitialDeclarations","ranges":[{"startOffset":7101985,"endOffset":7102860,"count":0}],"isBlockCoverage":false},{"functionName":"findImplementationOrAllInitialDeclarations","ranges":[{"startOffset":7102861,"endOffset":7103217,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCallHierarchyDeclaration","ranges":[{"startOffset":7103218,"endOffset":7105314,"count":0}],"isBlockCoverage":false},{"functionName":"createCallHierarchyItem","ranges":[{"startOffset":7105315,"endOffset":7105984,"count":0}],"isBlockCoverage":false},{"functionName":"isDefined","ranges":[{"startOffset":7105985,"endOffset":7106033,"count":0}],"isBlockCoverage":false},{"functionName":"convertEntryToCallSite","ranges":[{"startOffset":7106034,"endOffset":7107040,"count":0}],"isBlockCoverage":false},{"functionName":"getCallSiteGroupKey","ranges":[{"startOffset":7107041,"endOffset":7107119,"count":0}],"isBlockCoverage":false},{"functionName":"createCallHierarchyIncomingCall","ranges":[{"startOffset":7107120,"endOffset":7107211,"count":0}],"isBlockCoverage":false},{"functionName":"convertCallSiteGroupToIncomingCall","ranges":[{"startOffset":7107212,"endOffset":7107440,"count":0}],"isBlockCoverage":false},{"functionName":"getIncomingCalls","ranges":[{"startOffset":7107441,"endOffset":7108147,"count":0}],"isBlockCoverage":false},{"functionName":"createCallSiteCollector","ranges":[{"startOffset":7108148,"endOffset":7111069,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfSourceFile","ranges":[{"startOffset":7111070,"endOffset":7111163,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfModuleDeclaration","ranges":[{"startOffset":7111164,"endOffset":7111372,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfFunctionLikeDeclaration","ranges":[{"startOffset":7111373,"endOffset":7111630,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfClassStaticBlockDeclaration","ranges":[{"startOffset":7111631,"endOffset":7111726,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfClassLikeDeclaration","ranges":[{"startOffset":7111727,"endOffset":7112367,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSites","ranges":[{"startOffset":7112368,"endOffset":7113388,"count":0}],"isBlockCoverage":false},{"functionName":"createCallHierarchyOutgoingCall","ranges":[{"startOffset":7113389,"endOffset":7113476,"count":0}],"isBlockCoverage":false},{"functionName":"convertCallSiteGroupToOutgoingCall","ranges":[{"startOffset":7113477,"endOffset":7113705,"count":0}],"isBlockCoverage":false},{"functionName":"getOutgoingCalls","ranges":[{"startOffset":7113706,"endOffset":7114006,"count":0}],"isBlockCoverage":false},{"functionName":"v2020","ranges":[{"startOffset":7114128,"endOffset":7114161,"count":0}],"isBlockCoverage":false},{"functionName":"TokenEncodingConsts","ranges":[{"startOffset":7114319,"endOffset":7114344,"count":0}],"isBlockCoverage":false},{"functionName":"TokenModifier","ranges":[{"startOffset":7114363,"endOffset":7114382,"count":0}],"isBlockCoverage":false},{"functionName":"TokenType","ranges":[{"startOffset":7114397,"endOffset":7114412,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":7114451,"endOffset":7114491,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":7114523,"endOffset":7114556,"count":0}],"isBlockCoverage":false},{"functionName":"PreserveOptionalFlags","ranges":[{"startOffset":7114689,"endOffset":7114716,"count":0}],"isBlockCoverage":false},{"functionName":"addNewNodeForMemberSymbol","ranges":[{"startOffset":7114747,"endOffset":7114778,"count":0}],"isBlockCoverage":false},{"functionName":"codeFixAll","ranges":[{"startOffset":7114794,"endOffset":7114810,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixAction","ranges":[{"startOffset":7114835,"endOffset":7114860,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionMaybeFixAll","ranges":[{"startOffset":7114896,"endOffset":7114932,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionWithoutFixAll","ranges":[{"startOffset":7114970,"endOffset":7115008,"count":0}],"isBlockCoverage":false},{"functionName":"createCombinedCodeActions","ranges":[{"startOffset":7115039,"endOffset":7115070,"count":0}],"isBlockCoverage":false},{"functionName":"createFileTextChanges","ranges":[{"startOffset":7115097,"endOffset":7115124,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAdder","ranges":[{"startOffset":7115147,"endOffset":7115170,"count":0}],"isBlockCoverage":false},{"functionName":"createImportSpecifierResolver","ranges":[{"startOffset":7115205,"endOffset":7115240,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingMemberNodes","ranges":[{"startOffset":7115270,"endOffset":7115300,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromCallExpression","ranges":[{"startOffset":7115350,"endOffset":7115400,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromSignature","ranges":[{"startOffset":7115445,"endOffset":7115490,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedBody","ranges":[{"startOffset":7115513,"endOffset":7115536,"count":0}],"isBlockCoverage":false},{"functionName":"eachDiagnostic","ranges":[{"startOffset":7115556,"endOffset":7115576,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestorMatchingSpan","ranges":[{"startOffset":7115606,"endOffset":7115636,"count":0}],"isBlockCoverage":false},{"functionName":"generateAccessorFromProperty","ranges":[{"startOffset":7115670,"endOffset":7115704,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessorConvertiblePropertyAtPosition","ranges":[{"startOffset":7115750,"endOffset":7115796,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFixes","ranges":[{"startOffset":7115813,"endOffset":7115830,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSupers","ranges":[{"startOffset":7115848,"endOffset":7115866,"count":0}],"isBlockCoverage":false},{"functionName":"getFixes","ranges":[{"startOffset":7115880,"endOffset":7115894,"count":0}],"isBlockCoverage":false},{"functionName":"getImportCompletionAction","ranges":[{"startOffset":7115925,"endOffset":7115956,"count":0}],"isBlockCoverage":false},{"functionName":"getImportKind","ranges":[{"startOffset":7115975,"endOffset":7115994,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypedefNodes","ranges":[{"startOffset":7116020,"endOffset":7116046,"count":0}],"isBlockCoverage":false},{"functionName":"getNoopSymbolTrackerWithResolver","ranges":[{"startOffset":7116084,"endOffset":7116122,"count":0}],"isBlockCoverage":false},{"functionName":"getPromoteTypeOnlyCompletionAction","ranges":[{"startOffset":7116162,"endOffset":7116202,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedErrorCodes","ranges":[{"startOffset":7116230,"endOffset":7116258,"count":0}],"isBlockCoverage":false},{"functionName":"importFixName","ranges":[{"startOffset":7116277,"endOffset":7116296,"count":0}],"isBlockCoverage":false},{"functionName":"importSymbols","ranges":[{"startOffset":7116315,"endOffset":7116334,"count":0}],"isBlockCoverage":false},{"functionName":"parameterShouldGetTypeFromJSDoc","ranges":[{"startOffset":7116371,"endOffset":7116408,"count":0}],"isBlockCoverage":false},{"functionName":"registerCodeFix","ranges":[{"startOffset":7116429,"endOffset":7116450,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValue","ranges":[{"startOffset":7116482,"endOffset":7116514,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValues","ranges":[{"startOffset":7116547,"endOffset":7116580,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetAutoImportableReferenceFromTypeNode","ranges":[{"startOffset":7116627,"endOffset":7116674,"count":0}],"isBlockCoverage":false},{"functionName":"typeNodeToAutoImportableTypeNode","ranges":[{"startOffset":7116712,"endOffset":7116750,"count":0}],"isBlockCoverage":false},{"functionName":"typePredicateToAutoImportableTypeNode","ranges":[{"startOffset":7116793,"endOffset":7116836,"count":0}],"isBlockCoverage":false},{"functionName":"typeToAutoImportableTypeNode","ranges":[{"startOffset":7116870,"endOffset":7116904,"count":0}],"isBlockCoverage":false},{"functionName":"typeToMinimizedReferenceType","ranges":[{"startOffset":7116938,"endOffset":7116972,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionWithoutFixAll","ranges":[{"startOffset":7117107,"endOffset":7117354,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixAction","ranges":[{"startOffset":7117355,"endOffset":7117603,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionMaybeFixAll","ranges":[{"startOffset":7117604,"endOffset":7117884,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionWorker","ranges":[{"startOffset":7117885,"endOffset":7118136,"count":0}],"isBlockCoverage":false},{"functionName":"registerCodeFix","ranges":[{"startOffset":7118137,"endOffset":7118468,"count":72},{"startOffset":7118208,"endOffset":7118296,"count":1562},{"startOffset":7118315,"endOffset":7118466,"count":67},{"startOffset":7118355,"endOffset":7118462,"count":83}],"isBlockCoverage":true},{"functionName":"getSupportedErrorCodes","ranges":[{"startOffset":7118496,"endOffset":7118629,"count":0}],"isBlockCoverage":false},{"functionName":"removeFixIdIfFixAllUnavailable","ranges":[{"startOffset":7118630,"endOffset":7119161,"count":0}],"isBlockCoverage":false},{"functionName":"getFixes","ranges":[{"startOffset":7119162,"endOffset":7119432,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFixes","ranges":[{"startOffset":7119433,"endOffset":7119558,"count":0}],"isBlockCoverage":false},{"functionName":"createCombinedCodeActions","ranges":[{"startOffset":7119559,"endOffset":7119648,"count":0}],"isBlockCoverage":false},{"functionName":"createFileTextChanges","ranges":[{"startOffset":7119649,"endOffset":7119757,"count":0}],"isBlockCoverage":false},{"functionName":"codeFixAll","ranges":[{"startOffset":7119758,"endOffset":7120072,"count":0}],"isBlockCoverage":false},{"functionName":"eachDiagnostic","ranges":[{"startOffset":7120073,"endOffset":7120249,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnostics","ranges":[{"startOffset":7120250,"endOffset":7120755,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddConvertToUnknownForNonOverlappingTypes","ranges":[{"startOffset":7121142,"endOffset":7121657,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7121699,"endOffset":7121908,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange","ranges":[{"startOffset":7121913,"endOffset":7122316,"count":0}],"isBlockCoverage":false},{"functionName":"getAssertion","ranges":[{"startOffset":7122317,"endOffset":7122522,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddEmptyExportDeclaration","ranges":[{"startOffset":7123268,"endOffset":7123920,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddMissingAsync","ranges":[{"startOffset":7124298,"endOffset":7125013,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7125036,"endOffset":7125618,"count":0}],"isBlockCoverage":false},{"functionName":"getFix","ranges":[{"startOffset":7125623,"endOffset":7125945,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange2","ranges":[{"startOffset":7125946,"endOffset":7126602,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanDeclaration","ranges":[{"startOffset":7126603,"endOffset":7127126,"count":0}],"isBlockCoverage":false},{"functionName":"getIsMatchingAsyncError","ranges":[{"startOffset":7127127,"endOffset":7127503,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddMissingAwait","ranges":[{"startOffset":7129380,"endOffset":7129999,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7130022,"endOffset":7130721,"count":0}],"isBlockCoverage":false},{"functionName":"getAwaitErrorSpanExpression","ranges":[{"startOffset":7130726,"endOffset":7131053,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationSiteFix","ranges":[{"startOffset":7131054,"endOffset":7132099,"count":0}],"isBlockCoverage":false},{"functionName":"getUseSiteFix","ranges":[{"startOffset":7132100,"endOffset":7132460,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingAwaitError","ranges":[{"startOffset":7132461,"endOffset":7132997,"count":0}],"isBlockCoverage":false},{"functionName":"findAwaitableInitializers","ranges":[{"startOffset":7132998,"endOffset":7134679,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifiersFromErrorSpanExpression","ranges":[{"startOffset":7134680,"endOffset":7135508,"count":0}],"isBlockCoverage":false},{"functionName":"symbolReferenceIsAlsoMissingAwait","ranges":[{"startOffset":7135509,"endOffset":7136548,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideAwaitableBody","ranges":[{"startOffset":7136549,"endOffset":7137011,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange3","ranges":[{"startOffset":7137012,"endOffset":7139839,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeadingSemicolonIfNeeded","ranges":[{"startOffset":7139840,"endOffset":7140184,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddMissingConst","ranges":[{"startOffset":7140506,"endOffset":7140907,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7140950,"endOffset":7141159,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange4","ranges":[{"startOffset":7141164,"endOffset":7142520,"count":0}],"isBlockCoverage":false},{"functionName":"applyChange","ranges":[{"startOffset":7142521,"endOffset":7142750,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyPartOfDestructuring","ranges":[{"startOffset":7142751,"endOffset":7143082,"count":0}],"isBlockCoverage":false},{"functionName":"arrayElementCouldBeVariableDeclaration","ranges":[{"startOffset":7143083,"endOffset":7143431,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyPartOfCommaSeperatedInitializer","ranges":[{"startOffset":7143432,"endOffset":7143668,"count":0}],"isBlockCoverage":false},{"functionName":"expressionCouldBeVariableDeclaration","ranges":[{"startOffset":7143669,"endOffset":7144148,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddMissingDeclareOnProperty","ranges":[{"startOffset":7144512,"endOffset":7144913,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7144956,"endOffset":7145148,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange5","ranges":[{"startOffset":7145153,"endOffset":7145568,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddMissingInvocationForDecorator","ranges":[{"startOffset":7145884,"endOffset":7146233,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7146276,"endOffset":7146388,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange6","ranges":[{"startOffset":7146393,"endOffset":7146861,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddMissingResolutionModeImportAttribute","ranges":[{"startOffset":7147312,"endOffset":7147775,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7147818,"endOffset":7147982,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange7","ranges":[{"startOffset":7147987,"endOffset":7150359,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddNameToNamelessParameter","ranges":[{"startOffset":7150617,"endOffset":7150964,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7151007,"endOffset":7151119,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange8","ranges":[{"startOffset":7151124,"endOffset":7152375,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNextParam","ranges":[{"startOffset":7152376,"endOffset":7152703,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7153402,"endOffset":7153886,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesToAdd","ranges":[{"startOffset":7153933,"endOffset":7154617,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseParentTypeOfProperty","ranges":[{"startOffset":7154618,"endOffset":7154911,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTarget","ranges":[{"startOffset":7154912,"endOffset":7156576,"count":0}],"isBlockCoverage":false},{"functionName":"addUndefinedToOptionalProperty","ranges":[{"startOffset":7156577,"endOffset":7157030,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7157261,"endOffset":7157662,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7157705,"endOffset":7157888,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaration","ranges":[{"startOffset":7157893,"endOffset":7158089,"count":0}],"isBlockCoverage":false},{"functionName":"parameterShouldGetTypeFromJSDoc","ranges":[{"startOffset":7158090,"endOffset":7158202,"count":0}],"isBlockCoverage":false},{"functionName":"hasUsableJSDoc","ranges":[{"startOffset":7158203,"endOffset":7158398,"count":0}],"isBlockCoverage":false},{"functionName":"doChange8","ranges":[{"startOffset":7158399,"endOffset":7159909,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithType","ranges":[{"startOffset":7159910,"endOffset":7160131,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocType","ranges":[{"startOffset":7160132,"endOffset":7161129,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocTypeLiteral","ranges":[{"startOffset":7161130,"endOffset":7161695,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocOptionalType","ranges":[{"startOffset":7161696,"endOffset":7161893,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocNullableType","ranges":[{"startOffset":7161894,"endOffset":7162086,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocVariadicType","ranges":[{"startOffset":7162087,"endOffset":7162224,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocFunctionType","ranges":[{"startOffset":7162225,"endOffset":7162435,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocParameter","ranges":[{"startOffset":7162436,"endOffset":7162974,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocTypeReference","ranges":[{"startOffset":7162975,"endOffset":7163918,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocIndexSignature","ranges":[{"startOffset":7163919,"endOffset":7164583,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7164836,"endOffset":7165259,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7165303,"endOffset":7165501,"count":0}],"isBlockCoverage":false},{"functionName":"doChange9","ranges":[{"startOffset":7165506,"endOffset":7175243,"count":0}],"isBlockCoverage":false},{"functionName":"getModifierKindFromSource","ranges":[{"startOffset":7175244,"endOffset":7175405,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorAssignment","ranges":[{"startOffset":7175406,"endOffset":7175564,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyName","ranges":[{"startOffset":7175565,"endOffset":7176129,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7176385,"endOffset":7176797,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7176841,"endOffset":7176993,"count":0}],"isBlockCoverage":false},{"functionName":"convertToAsyncFunction","ranges":[{"startOffset":7176998,"endOffset":7179144,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnStatementsWithPromiseHandlers","ranges":[{"startOffset":7179145,"endOffset":7179372,"count":0}],"isBlockCoverage":false},{"functionName":"getAllPromiseExpressionsToReturn","ranges":[{"startOffset":7179373,"endOffset":7180191,"count":0}],"isBlockCoverage":false},{"functionName":"isPromiseReturningCallExpression","ranges":[{"startOffset":7180192,"endOffset":7180524,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceToType","ranges":[{"startOffset":7180525,"endOffset":7180654,"count":0}],"isBlockCoverage":false},{"functionName":"getExplicitPromisedTypeOfPromiseReturningCallExpression","ranges":[{"startOffset":7180655,"endOffset":7181382,"count":0}],"isBlockCoverage":false},{"functionName":"isPromiseTypedExpression","ranges":[{"startOffset":7181383,"endOffset":7181554,"count":0}],"isBlockCoverage":false},{"functionName":"renameCollidingVarNames","ranges":[{"startOffset":7181555,"endOffset":7184634,"count":0}],"isBlockCoverage":false},{"functionName":"getNewNameIfConflict","ranges":[{"startOffset":7184635,"endOffset":7184925,"count":0}],"isBlockCoverage":false},{"functionName":"hasFailed","ranges":[{"startOffset":7184926,"endOffset":7184981,"count":0}],"isBlockCoverage":false},{"functionName":"silentFail","ranges":[{"startOffset":7184982,"endOffset":7185059,"count":0}],"isBlockCoverage":false},{"functionName":"transformExpression","ranges":[{"startOffset":7185060,"endOffset":7186331,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined2","ranges":[{"startOffset":7186332,"endOffset":7186661,"count":0}],"isBlockCoverage":false},{"functionName":"createUniqueSynthName","ranges":[{"startOffset":7186662,"endOffset":7186858,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleNameForVarDecl","ranges":[{"startOffset":7186859,"endOffset":7187666,"count":0}],"isBlockCoverage":false},{"functionName":"finishCatchOrFinallyTransform","ranges":[{"startOffset":7187667,"endOffset":7189254,"count":0}],"isBlockCoverage":false},{"functionName":"transformFinally","ranges":[{"startOffset":7189255,"endOffset":7190539,"count":0}],"isBlockCoverage":false},{"functionName":"transformCatch","ranges":[{"startOffset":7190540,"endOffset":7191944,"count":0}],"isBlockCoverage":false},{"functionName":"transformThen","ranges":[{"startOffset":7191945,"endOffset":7192853,"count":0}],"isBlockCoverage":false},{"functionName":"transformPromiseExpressionOfPropertyAccess","ranges":[{"startOffset":7192854,"endOffset":7193413,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableOrAssignmentOrExpressionStatement","ranges":[{"startOffset":7193414,"endOffset":7194265,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAnnotateAndReturn","ranges":[{"startOffset":7194266,"endOffset":7194708,"count":0}],"isBlockCoverage":false},{"functionName":"transformCallbackArgument","ranges":[{"startOffset":7194709,"endOffset":7199150,"count":0}],"isBlockCoverage":false},{"functionName":"getPossiblyAwaitedRightHandSide","ranges":[{"startOffset":7199151,"endOffset":7199385,"count":0}],"isBlockCoverage":false},{"functionName":"getLastCallSignature","ranges":[{"startOffset":7199386,"endOffset":7199550,"count":0}],"isBlockCoverage":false},{"functionName":"removeReturns","ranges":[{"startOffset":7199551,"endOffset":7201232,"count":0}],"isBlockCoverage":false},{"functionName":"transformReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":7201233,"endOffset":7201786,"count":0}],"isBlockCoverage":false},{"functionName":"getArgBindingName","ranges":[{"startOffset":7201787,"endOffset":7203425,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingName","ranges":[{"startOffset":7203426,"endOffset":7203656,"count":0}],"isBlockCoverage":false},{"functionName":"createSynthIdentifier","ranges":[{"startOffset":7203657,"endOffset":7203823,"count":0}],"isBlockCoverage":false},{"functionName":"createSynthBindingPattern","ranges":[{"startOffset":7203824,"endOffset":7203989,"count":0}],"isBlockCoverage":false},{"functionName":"referenceSynthIdentifier","ranges":[{"startOffset":7203990,"endOffset":7204101,"count":0}],"isBlockCoverage":false},{"functionName":"declareSynthBindingName","ranges":[{"startOffset":7204102,"endOffset":7204264,"count":0}],"isBlockCoverage":false},{"functionName":"declareSynthBindingPattern","ranges":[{"startOffset":7204265,"endOffset":7204447,"count":0}],"isBlockCoverage":false},{"functionName":"declareSynthIdentifier","ranges":[{"startOffset":7204448,"endOffset":7204555,"count":0}],"isBlockCoverage":false},{"functionName":"isSynthIdentifier","ranges":[{"startOffset":7204556,"endOffset":7204649,"count":0}],"isBlockCoverage":false},{"functionName":"isSynthBindingPattern","ranges":[{"startOffset":7204650,"endOffset":7204751,"count":0}],"isBlockCoverage":false},{"functionName":"shouldReturn","ranges":[{"startOffset":7204752,"endOffset":7204910,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7205075,"endOffset":7205834,"count":0}],"isBlockCoverage":false},{"functionName":"fixImportOfModuleExports","ranges":[{"startOffset":7205839,"endOffset":7206956,"count":0}],"isBlockCoverage":false},{"functionName":"convertFileToEsModule","ranges":[{"startOffset":7206957,"endOffset":7208260,"count":0}],"isBlockCoverage":false},{"functionName":"collectExportRenames","ranges":[{"startOffset":7208261,"endOffset":7208730,"count":0}],"isBlockCoverage":false},{"functionName":"convertExportsAccesses","ranges":[{"startOffset":7208731,"endOffset":7209045,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExportReference","ranges":[{"startOffset":7209046,"endOffset":7209488,"count":0}],"isBlockCoverage":false},{"functionName":"convertStatement","ranges":[{"startOffset":7209489,"endOffset":7210749,"count":0}],"isBlockCoverage":false},{"functionName":"convertVariableStatement","ranges":[{"startOffset":7210750,"endOffset":7212380,"count":0}],"isBlockCoverage":false},{"functionName":"convertPropertyAccessImport","ranges":[{"startOffset":7212381,"endOffset":7213165,"count":0}],"isBlockCoverage":false},{"functionName":"convertAssignment","ranges":[{"startOffset":7213166,"endOffset":7214309,"count":0}],"isBlockCoverage":false},{"functionName":"tryChangeModuleExportsObject","ranges":[{"startOffset":7214310,"endOffset":7215349,"count":0}],"isBlockCoverage":false},{"functionName":"convertNamedExport","ranges":[{"startOffset":7215350,"endOffset":7215962,"count":0}],"isBlockCoverage":false},{"functionName":"convertReExportAll","ranges":[{"startOffset":7215963,"endOffset":7216616,"count":0}],"isBlockCoverage":false},{"functionName":"reExportStar","ranges":[{"startOffset":7216617,"endOffset":7216753,"count":0}],"isBlockCoverage":false},{"functionName":"reExportDefault","ranges":[{"startOffset":7216754,"endOffset":7216963,"count":0}],"isBlockCoverage":false},{"functionName":"convertExportsPropertyAssignment","ranges":[{"startOffset":7216964,"endOffset":7217854,"count":0}],"isBlockCoverage":false},{"functionName":"convertExportsDotXEquals_replaceNode","ranges":[{"startOffset":7217855,"endOffset":7218700,"count":0}],"isBlockCoverage":false},{"functionName":"replaceImportUseSites","ranges":[{"startOffset":7218701,"endOffset":7219428,"count":0}],"isBlockCoverage":false},{"functionName":"convertSingleImport","ranges":[{"startOffset":7219429,"endOffset":7220968,"count":0}],"isBlockCoverage":false},{"functionName":"convertSingleIdentifierImport","ranges":[{"startOffset":7220969,"endOffset":7222891,"count":0}],"isBlockCoverage":false},{"functionName":"makeUniqueName","ranges":[{"startOffset":7222892,"endOffset":7223095,"count":0}],"isBlockCoverage":false},{"functionName":"collectFreeIdentifiers","ranges":[{"startOffset":7223096,"endOffset":7223247,"count":0}],"isBlockCoverage":false},{"functionName":"forEachFreeIdentifier","ranges":[{"startOffset":7223248,"endOffset":7223420,"count":0}],"isBlockCoverage":false},{"functionName":"isFreeIdentifier","ranges":[{"startOffset":7223421,"endOffset":7223794,"count":0}],"isBlockCoverage":false},{"functionName":"functionExpressionToDeclaration","ranges":[{"startOffset":7223795,"endOffset":7224306,"count":0}],"isBlockCoverage":false},{"functionName":"classExpressionToDeclaration","ranges":[{"startOffset":7224307,"endOffset":7224697,"count":0}],"isBlockCoverage":false},{"functionName":"makeSingleImport","ranges":[{"startOffset":7224698,"endOffset":7225102,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportSpecifier2","ranges":[{"startOffset":7225103,"endOffset":7225370,"count":0}],"isBlockCoverage":false},{"functionName":"makeConst","ranges":[{"startOffset":7225371,"endOffset":7225704,"count":0}],"isBlockCoverage":false},{"functionName":"makeExportDeclaration","ranges":[{"startOffset":7225705,"endOffset":7226038,"count":0}],"isBlockCoverage":false},{"functionName":"convertedImports","ranges":[{"startOffset":7226039,"endOffset":7226157,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7226496,"endOffset":7227029,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7227073,"endOffset":7227264,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedName","ranges":[{"startOffset":7227269,"endOffset":7227562,"count":0}],"isBlockCoverage":false},{"functionName":"doChange10","ranges":[{"startOffset":7227563,"endOffset":7227988,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToConvertToTypeOnlyExport","ranges":[{"startOffset":7228252,"endOffset":7228705,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToConvertToTypeOnlyExport","ranges":[{"startOffset":7228749,"endOffset":7229235,"count":0}],"isBlockCoverage":false},{"functionName":"getExportSpecifierForDiagnosticSpan","ranges":[{"startOffset":7229240,"endOffset":7229394,"count":0}],"isBlockCoverage":false},{"functionName":"fixSingleExportDeclaration","ranges":[{"startOffset":7229395,"endOffset":7230853,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeExportSpecifiers","ranges":[{"startOffset":7230854,"endOffset":7231463,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToConvertToTypeOnlyImport","ranges":[{"startOffset":7231904,"endOffset":7233205,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToConvertToTypeOnlyImport","ranges":[{"startOffset":7233249,"endOffset":7234461,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaration2","ranges":[{"startOffset":7234466,"endOffset":7234690,"count":0}],"isBlockCoverage":false},{"functionName":"canConvertImportDeclarationForSpecifier","ranges":[{"startOffset":7234691,"endOffset":7235451,"count":0}],"isBlockCoverage":false},{"functionName":"doChange11","ranges":[{"startOffset":7235452,"endOffset":7238227,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7238475,"endOffset":7239139,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7239162,"endOffset":7239530,"count":0}],"isBlockCoverage":false},{"functionName":"doChange12","ranges":[{"startOffset":7239535,"endOffset":7240727,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftAndRightSiblings","ranges":[{"startOffset":7240728,"endOffset":7241288,"count":0}],"isBlockCoverage":false},{"functionName":"findEndOfTextBetween","ranges":[{"startOffset":7241289,"endOffset":7241606,"count":0}],"isBlockCoverage":false},{"functionName":"createDeclaration","ranges":[{"startOffset":7241607,"endOffset":7242080,"count":0}],"isBlockCoverage":false},{"functionName":"createInterfaceForTypeLiteral","ranges":[{"startOffset":7242081,"endOffset":7242449,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAliasForTypeExpression","ranges":[{"startOffset":7242450,"endOffset":7242794,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureFromTypeLiteral","ranges":[{"startOffset":7242795,"endOffset":7243753,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyName","ranges":[{"startOffset":7243754,"endOffset":7243873,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypedefNodes","ranges":[{"startOffset":7243874,"endOffset":7244115,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToConvertLiteralTypeToMappedType","ranges":[{"startOffset":7244414,"endOffset":7244940,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7244984,"endOffset":7245176,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo5","ranges":[{"startOffset":7245181,"endOffset":7245657,"count":0}],"isBlockCoverage":false},{"functionName":"doChange13","ranges":[{"startOffset":7245658,"endOffset":7246159,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7246541,"endOffset":7247195,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7247220,"endOffset":7247766,"count":0}],"isBlockCoverage":false},{"functionName":"getClass","ranges":[{"startOffset":7247771,"endOffset":7247933,"count":0}],"isBlockCoverage":false},{"functionName":"symbolPointsToNonPrivateMember","ranges":[{"startOffset":7247934,"endOffset":7248095,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingDeclarations","ranges":[{"startOffset":7248096,"endOffset":7250186,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClauseSymbolTable","ranges":[{"startOffset":7250187,"endOffset":7250638,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7253088,"endOffset":7253667,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7253715,"endOffset":7254225,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAdder","ranges":[{"startOffset":7254230,"endOffset":7254477,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAdderWorker","ranges":[{"startOffset":7254478,"endOffset":7276904,"count":0}],"isBlockCoverage":false},{"functionName":"createImportSpecifierResolver","ranges":[{"startOffset":7276905,"endOffset":7277765,"count":0}],"isBlockCoverage":false},{"functionName":"getImportCompletionAction","ranges":[{"startOffset":7277766,"endOffset":7279276,"count":0}],"isBlockCoverage":false},{"functionName":"getPromoteTypeOnlyCompletionAction","ranges":[{"startOffset":7279277,"endOffset":7279946,"count":0}],"isBlockCoverage":false},{"functionName":"getImportFixForSymbol","ranges":[{"startOffset":7279947,"endOffset":7280383,"count":0}],"isBlockCoverage":false},{"functionName":"codeFixActionToCodeAction","ranges":[{"startOffset":7280384,"endOffset":7280531,"count":0}],"isBlockCoverage":false},{"functionName":"getAllExportInfoForSymbol","ranges":[{"startOffset":7280532,"endOffset":7281652,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleExportInfoForSymbol","ranges":[{"startOffset":7281653,"endOffset":7283008,"count":0}],"isBlockCoverage":false},{"functionName":"getImportFixes","ranges":[{"startOffset":7283009,"endOffset":7284175,"count":0}],"isBlockCoverage":false},{"functionName":"tryUseExistingNamespaceImport","ranges":[{"startOffset":7284176,"endOffset":7284759,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceLikeImportText","ranges":[{"startOffset":7284760,"endOffset":7285352,"count":0}],"isBlockCoverage":false},{"functionName":"getAddAsTypeOnly","ranges":[{"startOffset":7285353,"endOffset":7285753,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddToExistingImport","ranges":[{"startOffset":7285754,"endOffset":7288079,"count":0}],"isBlockCoverage":false},{"functionName":"createExistingImportMap","ranges":[{"startOffset":7288080,"endOffset":7289537,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseRequire","ranges":[{"startOffset":7289538,"endOffset":7290579,"count":0}],"isBlockCoverage":false},{"functionName":"createGetChecker","ranges":[{"startOffset":7290580,"endOffset":7290773,"count":0}],"isBlockCoverage":false},{"functionName":"getNewImportFixes","ranges":[{"startOffset":7290774,"endOffset":7294065,"count":0}],"isBlockCoverage":false},{"functionName":"getFixesForAddImport","ranges":[{"startOffset":7294066,"endOffset":7294644,"count":0}],"isBlockCoverage":false},{"functionName":"newImportInfoFromExistingSpecifier","ranges":[{"startOffset":7294645,"endOffset":7295309,"count":0}],"isBlockCoverage":false},{"functionName":"getFixInfos","ranges":[{"startOffset":7295310,"endOffset":7296544,"count":0}],"isBlockCoverage":false},{"functionName":"sortFixInfo","ranges":[{"startOffset":7296545,"endOffset":7297025,"count":0}],"isBlockCoverage":false},{"functionName":"getFixInfosWithoutDiagnostic","ranges":[{"startOffset":7297026,"endOffset":7297454,"count":0}],"isBlockCoverage":false},{"functionName":"getBestFix","ranges":[{"startOffset":7297455,"endOffset":7298138,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiers","ranges":[{"startOffset":7298139,"endOffset":7298990,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifierRelativity","ranges":[{"startOffset":7298991,"endOffset":7299331,"count":0}],"isBlockCoverage":false},{"functionName":"isFixPossiblyReExportingImportingFile","ranges":[{"startOffset":7299332,"endOffset":7299720,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexFileName","ranges":[{"startOffset":7299721,"endOffset":7299889,"count":0}],"isBlockCoverage":false},{"functionName":"compareNodeCoreModuleSpecifiers","ranges":[{"startOffset":7299890,"endOffset":7300318,"count":0}],"isBlockCoverage":false},{"functionName":"getFixesInfoForUMDImport","ranges":[{"startOffset":7300319,"endOffset":7301240,"count":0}],"isBlockCoverage":false},{"functionName":"getUmdSymbol","ranges":[{"startOffset":7301241,"endOffset":7301875,"count":0}],"isBlockCoverage":false},{"functionName":"getImportKind","ranges":[{"startOffset":7301876,"endOffset":7302611,"count":0}],"isBlockCoverage":false},{"functionName":"getUmdImportKind","ranges":[{"startOffset":7302612,"endOffset":7303681,"count":0}],"isBlockCoverage":false},{"functionName":"getFixesInfoForNonUMDImport","ranges":[{"startOffset":7303682,"endOffset":7304830,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeOnlyPromotionFix","ranges":[{"startOffset":7304831,"endOffset":7305383,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNamesToImport","ranges":[{"startOffset":7305384,"endOffset":7306151,"count":0}],"isBlockCoverage":false},{"functionName":"needsJsxNamespaceFix","ranges":[{"startOffset":7306152,"endOffset":7306572,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfos","ranges":[{"startOffset":7306573,"endOffset":7309117,"count":0}],"isBlockCoverage":false},{"functionName":"getExportEqualsImportKind","ranges":[{"startOffset":7309118,"endOffset":7309942,"count":0}],"isBlockCoverage":false},{"functionName":"codeActionForFix","ranges":[{"startOffset":7309943,"endOffset":7310408,"count":0}],"isBlockCoverage":false},{"functionName":"codeActionForFixWorker","ranges":[{"startOffset":7310409,"endOffset":7313670,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierText","ranges":[{"startOffset":7313671,"endOffset":7314116,"count":0}],"isBlockCoverage":false},{"functionName":"promoteFromTypeOnly","ranges":[{"startOffset":7314117,"endOffset":7317958,"count":0}],"isBlockCoverage":false},{"functionName":"doAddExistingFix","ranges":[{"startOffset":7317959,"endOffset":7322884,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespaceQualifier","ranges":[{"startOffset":7322885,"endOffset":7323048,"count":0}],"isBlockCoverage":false},{"functionName":"addImportType","ranges":[{"startOffset":7323049,"endOffset":7323258,"count":0}],"isBlockCoverage":false},{"functionName":"getImportTypePrefix","ranges":[{"startOffset":7323259,"endOffset":7323441,"count":0}],"isBlockCoverage":false},{"functionName":"needsTypeOnly","ranges":[{"startOffset":7323442,"endOffset":7323532,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseTypeOnly","ranges":[{"startOffset":7323533,"endOffset":7323700,"count":0}],"isBlockCoverage":false},{"functionName":"getNewImports","ranges":[{"startOffset":7323701,"endOffset":7325836,"count":0}],"isBlockCoverage":false},{"functionName":"getNewRequires","ranges":[{"startOffset":7325837,"endOffset":7326969,"count":0}],"isBlockCoverage":false},{"functionName":"createConstEqualsRequireDeclaration","ranges":[{"startOffset":7326970,"endOffset":7327566,"count":0}],"isBlockCoverage":false},{"functionName":"symbolFlagsHaveMeaning","ranges":[{"startOffset":7327567,"endOffset":7327848,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForEmit","ranges":[{"startOffset":7327849,"endOffset":7328053,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleFormatOfFile","ranges":[{"startOffset":7328054,"endOffset":7328252,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7329319,"endOffset":7329811,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7329855,"endOffset":7330466,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo6","ranges":[{"startOffset":7330471,"endOffset":7331674,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingConstraint","ranges":[{"startOffset":7331675,"endOffset":7332757,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetConstraintFromDiagnosticMessage","ranges":[{"startOffset":7332758,"endOffset":7332949,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetConstraintType","ranges":[{"startOffset":7332950,"endOffset":7333242,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixOverrideModifierIssues","ranges":[{"startOffset":7337423,"endOffset":7337944,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7338027,"endOffset":7338298,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchChanges","ranges":[{"startOffset":7338303,"endOffset":7339850,"count":0}],"isBlockCoverage":false},{"functionName":"doAddOverrideModifierChange","ranges":[{"startOffset":7339851,"endOffset":7340969,"count":0}],"isBlockCoverage":false},{"functionName":"doRemoveOverrideModifierChange","ranges":[{"startOffset":7340970,"endOffset":7341436,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElementLikeHasJSDoc","ranges":[{"startOffset":7341437,"endOffset":7341829,"count":0}],"isBlockCoverage":false},{"functionName":"findContainerClassElementLike","ranges":[{"startOffset":7341830,"endOffset":7342187,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7342494,"endOffset":7342972,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7342995,"endOffset":7343169,"count":0}],"isBlockCoverage":false},{"functionName":"doChange14","ranges":[{"startOffset":7343174,"endOffset":7343679,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAccessExpression","ranges":[{"startOffset":7343680,"endOffset":7343824,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixImplicitThis","ranges":[{"startOffset":7344079,"endOffset":7344518,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7344562,"endOffset":7344719,"count":0}],"isBlockCoverage":false},{"functionName":"doChange15","ranges":[{"startOffset":7344724,"endOffset":7346177,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7346442,"endOffset":7346921,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7346925,"endOffset":7348685,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo7","ranges":[{"startOffset":7348690,"endOffset":7350100,"count":0}],"isBlockCoverage":false},{"functionName":"doChange16","ranges":[{"startOffset":7350101,"endOffset":7350575,"count":0}],"isBlockCoverage":false},{"functionName":"doChanges","ranges":[{"startOffset":7350576,"endOffset":7350855,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExportDeclaration","ranges":[{"startOffset":7350856,"endOffset":7351081,"count":0}],"isBlockCoverage":false},{"functionName":"updateExport","ranges":[{"startOffset":7351082,"endOffset":7351876,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":7351877,"endOffset":7352320,"count":0}],"isBlockCoverage":false},{"functionName":"createExportSpecifiers","ranges":[{"startOffset":7352321,"endOffset":7352554,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeOfSymbol","ranges":[{"startOffset":7352555,"endOffset":7352993,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixIncorrectNamedTupleSyntax","ranges":[{"startOffset":7353453,"endOffset":7353942,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedTupleMember","ranges":[{"startOffset":7353968,"endOffset":7354146,"count":0}],"isBlockCoverage":false},{"functionName":"doChange17","ranges":[{"startOffset":7354147,"endOffset":7355171,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7356268,"endOffset":7356888,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7356932,"endOffset":7357253,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo8","ranges":[{"startOffset":7357258,"endOffset":7360430,"count":0}],"isBlockCoverage":false},{"functionName":"doChange18","ranges":[{"startOffset":7360431,"endOffset":7361141,"count":0}],"isBlockCoverage":false},{"functionName":"convertSemanticMeaningToSymbolFlags","ranges":[{"startOffset":7361142,"endOffset":7361446,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedSourceFileFromImportDeclaration","ranges":[{"startOffset":7361447,"endOffset":7361939,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToCorrectReturnValue","ranges":[{"startOffset":7362654,"endOffset":7363353,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7363376,"endOffset":7364346,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectTypeFromLabeledExpression","ranges":[{"startOffset":7364351,"endOffset":7364719,"count":0}],"isBlockCoverage":false},{"functionName":"getFixInfo","ranges":[{"startOffset":7364720,"endOffset":7367171,"count":0}],"isBlockCoverage":false},{"functionName":"checkFixedAssignableTo","ranges":[{"startOffset":7367172,"endOffset":7368033,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo9","ranges":[{"startOffset":7368034,"endOffset":7369765,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableLikeInitializer","ranges":[{"startOffset":7369766,"endOffset":7370450,"count":0}],"isBlockCoverage":false},{"functionName":"addReturnStatement","ranges":[{"startOffset":7370451,"endOffset":7370933,"count":0}],"isBlockCoverage":false},{"functionName":"removeBlockBodyBrace","ranges":[{"startOffset":7370934,"endOffset":7371318,"count":0}],"isBlockCoverage":false},{"functionName":"wrapBlockWithParen","ranges":[{"startOffset":7371319,"endOffset":7371500,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForfixAddReturnStatement","ranges":[{"startOffset":7371501,"endOffset":7371877,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForFixRemoveBracesFromArrowFunctionBody","ranges":[{"startOffset":7371878,"endOffset":7372420,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForfixWrapTheBlockWithParen","ranges":[{"startOffset":7372421,"endOffset":7372867,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7373765,"endOffset":7375626,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7375754,"endOffset":7378765,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo10","ranges":[{"startOffset":7378770,"endOffset":7385556,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForMissingMemberDeclaration","ranges":[{"startOffset":7385557,"endOffset":7385797,"count":0}],"isBlockCoverage":false},{"functionName":"createActionForAddMissingMemberInJavascriptFile","ranges":[{"startOffset":7385798,"endOffset":7386643,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingMemberInJs","ranges":[{"startOffset":7386644,"endOffset":7387999,"count":0}],"isBlockCoverage":false},{"functionName":"initializePropertyToUndefined","ranges":[{"startOffset":7388000,"endOffset":7388209,"count":0}],"isBlockCoverage":false},{"functionName":"createActionsForAddMissingMemberInTypeScriptFile","ranges":[{"startOffset":7388210,"endOffset":7389446,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode2","ranges":[{"startOffset":7389447,"endOffset":7390337,"count":0}],"isBlockCoverage":false},{"functionName":"addPropertyDeclaration","ranges":[{"startOffset":7390338,"endOffset":7391123,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertPropertyAfter","ranges":[{"startOffset":7391124,"endOffset":7391304,"count":0}],"isBlockCoverage":false},{"functionName":"createAddIndexSignatureAction","ranges":[{"startOffset":7391305,"endOffset":7392097,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForMissingMethodDeclaration","ranges":[{"startOffset":7392098,"endOffset":7393072,"count":0}],"isBlockCoverage":false},{"functionName":"addMethodDeclaration","ranges":[{"startOffset":7393073,"endOffset":7393936,"count":0}],"isBlockCoverage":false},{"functionName":"addEnumMemberDeclaration","ranges":[{"startOffset":7393937,"endOffset":7394663,"count":0}],"isBlockCoverage":false},{"functionName":"addFunctionDeclaration","ranges":[{"startOffset":7394664,"endOffset":7395952,"count":0}],"isBlockCoverage":false},{"functionName":"addJsxAttributes","ranges":[{"startOffset":7395953,"endOffset":7397245,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectLiteralProperties","ranges":[{"startOffset":7397246,"endOffset":7398419,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetValueFromType","ranges":[{"startOffset":7398420,"endOffset":7402579,"count":0}],"isBlockCoverage":false},{"functionName":"createUndefined","ranges":[{"startOffset":7402580,"endOffset":7402658,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralType","ranges":[{"startOffset":7402659,"endOffset":7402882,"count":0}],"isBlockCoverage":false},{"functionName":"getUnmatchedAttributes","ranges":[{"startOffset":7402883,"endOffset":7403835,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetContainingMethodDeclaration","ranges":[{"startOffset":7403836,"endOffset":7404150,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameFromSymbol","ranges":[{"startOffset":7404151,"endOffset":7404713,"count":0}],"isBlockCoverage":false},{"functionName":"findScope","ranges":[{"startOffset":7404714,"endOffset":7404950,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7405192,"endOffset":7405544,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7405588,"endOffset":7405713,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingNewOperator","ranges":[{"startOffset":7405718,"endOffset":7406025,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestorMatchingSpan2","ranges":[{"startOffset":7406026,"endOffset":7406247,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7406566,"endOffset":7407924,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7407947,"endOffset":7408544,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo11","ranges":[{"startOffset":7408549,"endOffset":7411074,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetName2","ranges":[{"startOffset":7411075,"endOffset":7411360,"count":0}],"isBlockCoverage":false},{"functionName":"typeToTypeNode","ranges":[{"startOffset":7411361,"endOffset":7411621,"count":0}],"isBlockCoverage":false},{"functionName":"doChange19","ranges":[{"startOffset":7411622,"endOffset":7412926,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleSignatureDeclaration","ranges":[{"startOffset":7412927,"endOffset":7413209,"count":0}],"isBlockCoverage":false},{"functionName":"updateParameters","ranges":[{"startOffset":7413210,"endOffset":7414043,"count":0}],"isBlockCoverage":false},{"functionName":"getOverloads","ranges":[{"startOffset":7414044,"endOffset":7414484,"count":0}],"isBlockCoverage":false},{"functionName":"isOverload","ranges":[{"startOffset":7414485,"endOffset":7414609,"count":0}],"isBlockCoverage":false},{"functionName":"createParameter","ranges":[{"startOffset":7414610,"endOffset":7414850,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalPos","ranges":[{"startOffset":7414851,"endOffset":7415053,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterType","ranges":[{"startOffset":7415054,"endOffset":7415371,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixNotFoundModule","ranges":[{"startOffset":7416065,"endOffset":7416842,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7416903,"endOffset":7417507,"count":0}],"isBlockCoverage":false},{"functionName":"getInstallCommand","ranges":[{"startOffset":7417512,"endOffset":7417632,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportedPackageName","ranges":[{"startOffset":7417633,"endOffset":7418002,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageNameToInstall","ranges":[{"startOffset":7418003,"endOffset":7418322,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixClassNotImplementingInheritedMembers","ranges":[{"startOffset":7419230,"endOffset":7419724,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToFixClassDoesntImplementInheritedAbstractMember","ranges":[{"startOffset":7419768,"endOffset":7420247,"count":0}],"isBlockCoverage":false},{"functionName":"getClass2","ranges":[{"startOffset":7420252,"endOffset":7420386,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingMembers","ranges":[{"startOffset":7420387,"endOffset":7421179,"count":0}],"isBlockCoverage":false},{"functionName":"symbolPointsToNonPrivateAndAbstractMember","ranges":[{"startOffset":7421180,"endOffset":7421388,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7421671,"endOffset":7422205,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7422230,"endOffset":7422693,"count":0}],"isBlockCoverage":false},{"functionName":"doChange20","ranges":[{"startOffset":7422698,"endOffset":7422883,"count":0}],"isBlockCoverage":false},{"functionName":"getNodes","ranges":[{"startOffset":7422884,"endOffset":7423307,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperCall","ranges":[{"startOffset":7423308,"endOffset":7423467,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7423734,"endOffset":7424103,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7424147,"endOffset":7424288,"count":0}],"isBlockCoverage":false},{"functionName":"getNode","ranges":[{"startOffset":7424293,"endOffset":7424512,"count":0}],"isBlockCoverage":false},{"functionName":"doChange21","ranges":[{"startOffset":7424513,"endOffset":7424819,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixEnableJsxFlag","ranges":[{"startOffset":7425049,"endOffset":7425495,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7425537,"endOffset":7425765,"count":0}],"isBlockCoverage":false},{"functionName":"doChange22","ranges":[{"startOffset":7425770,"endOffset":7425922,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7426127,"endOffset":7426610,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7426654,"endOffset":7426943,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo12","ranges":[{"startOffset":7426948,"endOffset":7427760,"count":0}],"isBlockCoverage":false},{"functionName":"doChange23","ranges":[{"startOffset":7427761,"endOffset":7428352,"count":0}],"isBlockCoverage":false},{"functionName":"getSuggestion","ranges":[{"startOffset":7428353,"endOffset":7428512,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixModuleAndTarget","ranges":[{"startOffset":7429243,"endOffset":7430924,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7431265,"endOffset":7431671,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7431694,"endOffset":7431832,"count":0}],"isBlockCoverage":false},{"functionName":"doChange24","ranges":[{"startOffset":7431837,"endOffset":7432007,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty2","ranges":[{"startOffset":7432008,"endOffset":7432140,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7432399,"endOffset":7432907,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7432951,"endOffset":7433169,"count":0}],"isBlockCoverage":false},{"functionName":"getNodes2","ranges":[{"startOffset":7433174,"endOffset":7433495,"count":0}],"isBlockCoverage":false},{"functionName":"doChanges2","ranges":[{"startOffset":7433496,"endOffset":7434339,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7434924,"endOffset":7435433,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7435477,"endOffset":7435676,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo13","ranges":[{"startOffset":7435681,"endOffset":7435962,"count":0}],"isBlockCoverage":false},{"functionName":"doChange25","ranges":[{"startOffset":7435963,"endOffset":7436229,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7436637,"endOffset":7437577,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7437581,"endOffset":7437796,"count":0}],"isBlockCoverage":false},{"functionName":"isValidCharacter","ranges":[{"startOffset":7437856,"endOffset":7437941,"count":0}],"isBlockCoverage":false},{"functionName":"doChange26","ranges":[{"startOffset":7437942,"endOffset":7438325,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixUnmatchedParameter","ranges":[{"startOffset":7438735,"endOffset":7439091,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToFixUnmatchedParameter","ranges":[{"startOffset":7439114,"endOffset":7439882,"count":0}],"isBlockCoverage":false},{"functionName":"getDeleteAction","ranges":[{"startOffset":7439887,"endOffset":7440379,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameAction","ranges":[{"startOffset":7440380,"endOffset":7441677,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo14","ranges":[{"startOffset":7441678,"endOffset":7442175,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7442556,"endOffset":7443512,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclaration","ranges":[{"startOffset":7443538,"endOffset":7444009,"count":0}],"isBlockCoverage":false},{"functionName":"doTypeOnlyImportChange","ranges":[{"startOffset":7444010,"endOffset":7444806,"count":0}],"isBlockCoverage":false},{"functionName":"doNamespaceImportChange","ranges":[{"startOffset":7444807,"endOffset":7445005,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7445756,"endOffset":7450195,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7450288,"endOffset":7452973,"count":0}],"isBlockCoverage":false},{"functionName":"changeInferToUnknown","ranges":[{"startOffset":7452978,"endOffset":7453145,"count":0}],"isBlockCoverage":false},{"functionName":"createDeleteFix","ranges":[{"startOffset":7453146,"endOffset":7453303,"count":0}],"isBlockCoverage":false},{"functionName":"deleteTypeParameters","ranges":[{"startOffset":7453304,"endOffset":7453535,"count":0}],"isBlockCoverage":false},{"functionName":"isImport","ranges":[{"startOffset":7453536,"endOffset":7453752,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetFullImport","ranges":[{"startOffset":7453753,"endOffset":7453892,"count":0}],"isBlockCoverage":false},{"functionName":"canDeleteEntireVariableStatement","ranges":[{"startOffset":7453893,"endOffset":7454064,"count":0}],"isBlockCoverage":false},{"functionName":"deleteEntireVariableStatement","ranges":[{"startOffset":7454065,"endOffset":7454235,"count":0}],"isBlockCoverage":false},{"functionName":"deleteDestructuringElements","ranges":[{"startOffset":7454236,"endOffset":7454367,"count":0}],"isBlockCoverage":false},{"functionName":"deleteDestructuring","ranges":[{"startOffset":7454368,"endOffset":7455311,"count":0}],"isBlockCoverage":false},{"functionName":"tryPrefixDeclaration","ranges":[{"startOffset":7455312,"endOffset":7456003,"count":0}],"isBlockCoverage":false},{"functionName":"canPrefix","ranges":[{"startOffset":7456004,"endOffset":7456404,"count":0}],"isBlockCoverage":false},{"functionName":"tryDeleteDeclaration","ranges":[{"startOffset":7456405,"endOffset":7456997,"count":0}],"isBlockCoverage":false},{"functionName":"tryDeleteDeclarationWorker","ranges":[{"startOffset":7456998,"endOffset":7457678,"count":0}],"isBlockCoverage":false},{"functionName":"tryDeleteParameter","ranges":[{"startOffset":7457679,"endOffset":7458437,"count":0}],"isBlockCoverage":false},{"functionName":"isNotProvidedArguments","ranges":[{"startOffset":7458438,"endOffset":7458727,"count":0}],"isBlockCoverage":false},{"functionName":"mayDeleteParameter","ranges":[{"startOffset":7458728,"endOffset":7460767,"count":0}],"isBlockCoverage":false},{"functionName":"isCallbackLike","ranges":[{"startOffset":7460768,"endOffset":7461049,"count":0}],"isBlockCoverage":false},{"functionName":"isLastParameter","ranges":[{"startOffset":7461050,"endOffset":7461411,"count":0}],"isBlockCoverage":false},{"functionName":"mayDeleteExpression","ranges":[{"startOffset":7461412,"endOffset":7461683,"count":0}],"isBlockCoverage":false},{"functionName":"deleteFunctionLikeDeclaration","ranges":[{"startOffset":7461684,"endOffset":7461927,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7462126,"endOffset":7462634,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7462678,"endOffset":7462816,"count":0}],"isBlockCoverage":false},{"functionName":"doChange27","ranges":[{"startOffset":7462821,"endOffset":7464380,"count":0}],"isBlockCoverage":false},{"functionName":"lastWhere","ranges":[{"startOffset":7464381,"endOffset":7464520,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7464698,"endOffset":7464993,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7465037,"endOffset":7465149,"count":0}],"isBlockCoverage":false},{"functionName":"doChange28","ranges":[{"startOffset":7465154,"endOffset":7465725,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7466206,"endOffset":7467183,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7467226,"endOffset":7467793,"count":0}],"isBlockCoverage":false},{"functionName":"doChange29","ranges":[{"startOffset":7467798,"endOffset":7468034,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo15","ranges":[{"startOffset":7468035,"endOffset":7468273,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeContainer","ranges":[{"startOffset":7468274,"endOffset":7468970,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":7468971,"endOffset":7469384,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7469705,"endOffset":7470134,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7470157,"endOffset":7470350,"count":0}],"isBlockCoverage":false},{"functionName":"doChange30","ranges":[{"startOffset":7470355,"endOffset":7470472,"count":0}],"isBlockCoverage":false},{"functionName":"getCallName","ranges":[{"startOffset":7470473,"endOffset":7470845,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7474205,"endOffset":7475073,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7475096,"endOffset":7475348,"count":0}],"isBlockCoverage":false},{"functionName":"addCodeAction","ranges":[{"startOffset":7475353,"endOffset":7475716,"count":0}],"isBlockCoverage":false},{"functionName":"withContext","ranges":[{"startOffset":7475717,"endOffset":7507570,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7508158,"endOffset":7508587,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToFixAwaitInSyncFunction","ranges":[{"startOffset":7508631,"endOffset":7509002,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnType","ranges":[{"startOffset":7509007,"endOffset":7509226,"count":0}],"isBlockCoverage":false},{"functionName":"getNodes3","ranges":[{"startOffset":7509227,"endOffset":7510169,"count":0}],"isBlockCoverage":false},{"functionName":"doChange31","ranges":[{"startOffset":7510170,"endOffset":7510651,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7511040,"endOffset":7511390,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7511434,"endOffset":7511713,"count":0}],"isBlockCoverage":false},{"functionName":"doChange32","ranges":[{"startOffset":7511718,"endOffset":7513237,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7515388,"endOffset":7516198,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7516223,"endOffset":7516598,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnostic","ranges":[{"startOffset":7516603,"endOffset":7517495,"count":0}],"isBlockCoverage":false},{"functionName":"mapSuggestionDiagnostic","ranges":[{"startOffset":7517496,"endOffset":7519256,"count":0}],"isBlockCoverage":false},{"functionName":"doChange33","ranges":[{"startOffset":7519257,"endOffset":7523858,"count":0}],"isBlockCoverage":false},{"functionName":"annotateVariableDeclaration","ranges":[{"startOffset":7523859,"endOffset":7524177,"count":0}],"isBlockCoverage":false},{"functionName":"annotateParameters","ranges":[{"startOffset":7524178,"endOffset":7525443,"count":0}],"isBlockCoverage":false},{"functionName":"annotateThis","ranges":[{"startOffset":7525444,"endOffset":7526153,"count":0}],"isBlockCoverage":false},{"functionName":"annotateJSDocThis","ranges":[{"startOffset":7526154,"endOffset":7526418,"count":0}],"isBlockCoverage":false},{"functionName":"annotateSetAccessor","ranges":[{"startOffset":7526419,"endOffset":7527197,"count":0}],"isBlockCoverage":false},{"functionName":"annotate","ranges":[{"startOffset":7527198,"endOffset":7528358,"count":0}],"isBlockCoverage":false},{"functionName":"tryReplaceImportTypeNodeWithAutoImport","ranges":[{"startOffset":7528359,"endOffset":7528884,"count":0}],"isBlockCoverage":false},{"functionName":"annotateJSDocParameters","ranges":[{"startOffset":7528885,"endOffset":7531018,"count":0}],"isBlockCoverage":false},{"functionName":"getReferences","ranges":[{"startOffset":7531019,"endOffset":7531339,"count":0}],"isBlockCoverage":false},{"functionName":"inferTypeForVariableFromUsage","ranges":[{"startOffset":7531340,"endOffset":7531571,"count":0}],"isBlockCoverage":false},{"functionName":"inferTypeForParametersFromUsage","ranges":[{"startOffset":7531572,"endOffset":7532055,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionReferences","ranges":[{"startOffset":7532056,"endOffset":7532930,"count":0}],"isBlockCoverage":false},{"functionName":"inferTypeFromReferences","ranges":[{"startOffset":7532931,"endOffset":7557146,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToFixReturnTypeInAsyncFunction","ranges":[{"startOffset":7557493,"endOffset":7558273,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7558296,"endOffset":7558561,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo16","ranges":[{"startOffset":7558566,"endOffset":7559296,"count":0}],"isBlockCoverage":false},{"functionName":"doChange34","ranges":[{"startOffset":7559297,"endOffset":7559490,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7559675,"endOffset":7559786,"count":2103},{"startOffset":7559762,"endOffset":7559774,"count":1336},{"startOffset":7559775,"endOffset":7559783,"count":767}],"isBlockCoverage":true},{"functionName":"getCodeActionsToDisableJsDiagnostics","ranges":[{"startOffset":7559853,"endOffset":7561159,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7561203,"endOffset":7561508,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange9","ranges":[{"startOffset":7561513,"endOffset":7561811,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingMemberNodes","ranges":[{"startOffset":7561850,"endOffset":7562377,"count":0}],"isBlockCoverage":false},{"functionName":"getNoopSymbolTrackerWithResolver","ranges":[{"startOffset":7562378,"endOffset":7562564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7562610,"endOffset":7562897,"count":1}],"isBlockCoverage":false},{"functionName":"addNewNodeForMemberSymbol","ranges":[{"startOffset":7562929,"endOffset":7570953,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromSignature","ranges":[{"startOffset":7570954,"endOffset":7575587,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromCallExpression","ranges":[{"startOffset":7575588,"endOffset":7578423,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeParametersForArguments","ranges":[{"startOffset":7578424,"endOffset":7579407,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeParameterName","ranges":[{"startOffset":7579408,"endOffset":7579550,"count":0}],"isBlockCoverage":false},{"functionName":"typeToAutoImportableTypeNode","ranges":[{"startOffset":7579551,"endOffset":7579893,"count":0}],"isBlockCoverage":false},{"functionName":"typeNodeToAutoImportableTypeNode","ranges":[{"startOffset":7579894,"endOffset":7580256,"count":0}],"isBlockCoverage":false},{"functionName":"endOfRequiredTypeParameters","ranges":[{"startOffset":7580257,"endOffset":7580866,"count":0}],"isBlockCoverage":false},{"functionName":"typeToMinimizedReferenceType","ranges":[{"startOffset":7580867,"endOffset":7581591,"count":0}],"isBlockCoverage":false},{"functionName":"typePredicateToAutoImportableTypeNode","ranges":[{"startOffset":7581592,"endOffset":7582425,"count":0}],"isBlockCoverage":false},{"functionName":"typeContainsTypeParameter","ranges":[{"startOffset":7582426,"endOffset":7582617,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentTypesAndTypeParameters","ranges":[{"startOffset":7582618,"endOffset":7584289,"count":0}],"isBlockCoverage":false},{"functionName":"isAnonymousObjectConstraintType","ranges":[{"startOffset":7584290,"endOffset":7584426,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTypeParameterName","ranges":[{"startOffset":7584427,"endOffset":7584844,"count":0}],"isBlockCoverage":false},{"functionName":"createDummyParameters","ranges":[{"startOffset":7584845,"endOffset":7585843,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodImplementingSignatures","ranges":[{"startOffset":7585844,"endOffset":7587680,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnTypeFromSignatures","ranges":[{"startOffset":7587681,"endOffset":7588053,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedMethod","ranges":[{"startOffset":7588054,"endOffset":7588456,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedMethodBody","ranges":[{"startOffset":7588457,"endOffset":7588599,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedBody","ranges":[{"startOffset":7588600,"endOffset":7589070,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValues","ranges":[{"startOffset":7589071,"endOffset":7590333,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValue","ranges":[{"startOffset":7590334,"endOffset":7590512,"count":0}],"isBlockCoverage":false},{"functionName":"createJsonPropertyAssignment","ranges":[{"startOffset":7590513,"endOffset":7590664,"count":0}],"isBlockCoverage":false},{"functionName":"findJsonProperty","ranges":[{"startOffset":7590665,"endOffset":7590831,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetAutoImportableReferenceFromTypeNode","ranges":[{"startOffset":7590832,"endOffset":7591921,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstIdentifierOfEntityName","ranges":[{"startOffset":7591922,"endOffset":7592175,"count":0}],"isBlockCoverage":false},{"functionName":"importSymbols","ranges":[{"startOffset":7592176,"endOffset":7592343,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestorMatchingSpan","ranges":[{"startOffset":7592344,"endOffset":7592564,"count":0}],"isBlockCoverage":false},{"functionName":"generateAccessorFromProperty","ranges":[{"startOffset":7592613,"endOffset":7594856,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleName","ranges":[{"startOffset":7594857,"endOffset":7594947,"count":0}],"isBlockCoverage":false},{"functionName":"isAcceptedDeclaration","ranges":[{"startOffset":7594948,"endOffset":7595109,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyName","ranges":[{"startOffset":7595110,"endOffset":7595267,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorAccessExpression","ranges":[{"startOffset":7595268,"endOffset":7595608,"count":0}],"isBlockCoverage":false},{"functionName":"prepareModifierFlagsForAccessor","ranges":[{"startOffset":7595609,"endOffset":7595854,"count":0}],"isBlockCoverage":false},{"functionName":"prepareModifierFlagsForField","ranges":[{"startOffset":7595855,"endOffset":7596046,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessorConvertiblePropertyAtPosition","ranges":[{"startOffset":7596047,"endOffset":7597763,"count":0}],"isBlockCoverage":false},{"functionName":"generateGetAccessor","ranges":[{"startOffset":7597764,"endOffset":7598165,"count":0}],"isBlockCoverage":false},{"functionName":"generateSetAccessor","ranges":[{"startOffset":7598166,"endOffset":7598862,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyDeclaration","ranges":[{"startOffset":7598863,"endOffset":7599228,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyAssignmentDeclaration","ranges":[{"startOffset":7599229,"endOffset":7599787,"count":0}],"isBlockCoverage":false},{"functionName":"updateFieldDeclaration","ranges":[{"startOffset":7599788,"endOffset":7600412,"count":0}],"isBlockCoverage":false},{"functionName":"insertAccessor","ranges":[{"startOffset":7600413,"endOffset":7600788,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadonlyPropertyInitializerStatementConstructor","ranges":[{"startOffset":7600789,"endOffset":7601665,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationType","ranges":[{"startOffset":7601666,"endOffset":7602269,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSupers","ranges":[{"startOffset":7602270,"endOffset":7602822,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeFixesForImportDeclaration","ranges":[{"startOffset":7602914,"endOffset":7603754,"count":0}],"isBlockCoverage":false},{"functionName":"createAction","ranges":[{"startOffset":7603755,"endOffset":7604077,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForUsageOfInvalidImport","ranges":[{"startOffset":7604285,"endOffset":7604761,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForInvalidImportLocation","ranges":[{"startOffset":7605860,"endOffset":7606232,"count":0}],"isBlockCoverage":false},{"functionName":"getImportCodeFixesForExpression","ranges":[{"startOffset":7606233,"endOffset":7607125,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsForStrictClassInitializationErrors","ranges":[{"startOffset":7607627,"endOffset":7608060,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7608177,"endOffset":7608993,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo17","ranges":[{"startOffset":7608998,"endOffset":7609339,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForAddMissingDefiniteAssignmentAssertion","ranges":[{"startOffset":7609340,"endOffset":7609843,"count":0}],"isBlockCoverage":false},{"functionName":"addDefiniteAssignmentAssertion","ranges":[{"startOffset":7609844,"endOffset":7610369,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForAddMissingUndefinedType","ranges":[{"startOffset":7610370,"endOffset":7610767,"count":0}],"isBlockCoverage":false},{"functionName":"addUndefinedType","ranges":[{"startOffset":7610768,"endOffset":7611380,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForAddMissingInitializer","ranges":[{"startOffset":7611381,"endOffset":7611962,"count":0}],"isBlockCoverage":false},{"functionName":"addInitializer","ranges":[{"startOffset":7611963,"endOffset":7612452,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializer","ranges":[{"startOffset":7612453,"endOffset":7612608,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultValueFromType","ranges":[{"startOffset":7612609,"endOffset":7613939,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7614141,"endOffset":7614583,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7614627,"endOffset":7614866,"count":0}],"isBlockCoverage":false},{"functionName":"doChange35","ranges":[{"startOffset":7614871,"endOffset":7615595,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo18","ranges":[{"startOffset":7615596,"endOffset":7616678,"count":0}],"isBlockCoverage":false},{"functionName":"tryCreateNamedImportsFromObjectBindingPattern","ranges":[{"startOffset":7616679,"endOffset":7617171,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7617384,"endOffset":7617820,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7617864,"endOffset":7618064,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo19","ranges":[{"startOffset":7618069,"endOffset":7618648,"count":0}],"isBlockCoverage":false},{"functionName":"doChange36","ranges":[{"startOffset":7618649,"endOffset":7618903,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToUseBigintLiteral","ranges":[{"startOffset":7619210,"endOffset":7619596,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7619640,"endOffset":7619766,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange10","ranges":[{"startOffset":7619771,"endOffset":7620121,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToAddMissingTypeof","ranges":[{"startOffset":7620483,"endOffset":7620890,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7620934,"endOffset":7621085,"count":0}],"isBlockCoverage":false},{"functionName":"getImportTypeNode","ranges":[{"startOffset":7621090,"endOffset":7621410,"count":0}],"isBlockCoverage":false},{"functionName":"doChange37","ranges":[{"startOffset":7621411,"endOffset":7621734,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToWrapJsxInFragment","ranges":[{"startOffset":7621965,"endOffset":7622408,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7622451,"endOffset":7622670,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeToFix","ranges":[{"startOffset":7622675,"endOffset":7623117,"count":0}],"isBlockCoverage":false},{"functionName":"doChange38","ranges":[{"startOffset":7623118,"endOffset":7623367,"count":0}],"isBlockCoverage":false},{"functionName":"flattenInvalidBinaryExpr","ranges":[{"startOffset":7623368,"endOffset":7623906,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToWrapDecoratorExpressionInParentheses","ranges":[{"startOffset":7624180,"endOffset":7624553,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7624597,"endOffset":7624711,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange11","ranges":[{"startOffset":7624716,"endOffset":7625117,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToConvertToMappedTypeObject","ranges":[{"startOffset":7625442,"endOffset":7625956,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7626000,"endOffset":7626179,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo20","ranges":[{"startOffset":7626184,"endOffset":7626626,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAliasFromInterface","ranges":[{"startOffset":7626627,"endOffset":7626807,"count":0}],"isBlockCoverage":false},{"functionName":"doChange39","ranges":[{"startOffset":7626808,"endOffset":7627938,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7628233,"endOffset":7628726,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToRemoveUnnecessaryAwait","ranges":[{"startOffset":7629003,"endOffset":7629382,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7629426,"endOffset":7629552,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange12","ranges":[{"startOffset":7629557,"endOffset":7630539,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToSplitTypeOnlyImport","ranges":[{"startOffset":7630830,"endOffset":7631281,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7631304,"endOffset":7631472,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclaration2","ranges":[{"startOffset":7631477,"endOffset":7631617,"count":0}],"isBlockCoverage":false},{"functionName":"splitTypeOnlyImport","ranges":[{"startOffset":7631618,"endOffset":7632624,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActionsToConvertConstToLet","ranges":[{"startOffset":7632858,"endOffset":7633322,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7633345,"endOffset":7633873,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo21","ranges":[{"startOffset":7633899,"endOffset":7634463,"count":0}],"isBlockCoverage":false},{"functionName":"doChange40","ranges":[{"startOffset":7634464,"endOffset":7634600,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7634824,"endOffset":7635285,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7635329,"endOffset":7635528,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo22","ranges":[{"startOffset":7635533,"endOffset":7635795,"count":0}],"isBlockCoverage":false},{"functionName":"doChange41","ranges":[{"startOffset":7635796,"endOffset":7635960,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeActions","ranges":[{"startOffset":7636426,"endOffset":7636823,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7636827,"endOffset":7637011,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange13","ranges":[{"startOffset":7637016,"endOffset":7638930,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeArguments","ranges":[{"startOffset":7638931,"endOffset":7639401,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionKind","ranges":[{"startOffset":7639535,"endOffset":7639555,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionSource","ranges":[{"startOffset":7639577,"endOffset":7639599,"count":0}],"isBlockCoverage":false},{"functionName":"SortText","ranges":[{"startOffset":7639613,"endOffset":7639627,"count":0}],"isBlockCoverage":false},{"functionName":"StringCompletions","ranges":[{"startOffset":7639650,"endOffset":7639696,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolOriginInfoKind","ranges":[{"startOffset":7639722,"endOffset":7639748,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetails","ranges":[{"startOffset":7639777,"endOffset":7639806,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetailsForSymbol","ranges":[{"startOffset":7639844,"endOffset":7639882,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesFromSymbols","ranges":[{"startOffset":7639919,"endOffset":7639956,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDetails","ranges":[{"startOffset":7639987,"endOffset":7640018,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntrySymbol","ranges":[{"startOffset":7640048,"endOffset":7640078,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionsAtPosition","ranges":[{"startOffset":7640108,"endOffset":7640138,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCommitCharacters","ranges":[{"startOffset":7640170,"endOffset":7640202,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesForObjectExpression","ranges":[{"startOffset":7640240,"endOffset":7640278,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierResolutionCacheAttemptLimit","ranges":[{"startOffset":7640326,"endOffset":7640374,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierResolutionLimit","ranges":[{"startOffset":7640410,"endOffset":7640446,"count":0}],"isBlockCoverage":false},{"functionName":"Deprecated","ranges":[{"startOffset":7640907,"endOffset":7640960,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectLiteralProperty","ranges":[{"startOffset":7640964,"endOffset":7641082,"count":0}],"isBlockCoverage":false},{"functionName":"SortBelow","ranges":[{"startOffset":7641086,"endOffset":7641138,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7641267,"endOffset":7641723,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7641794,"endOffset":7642918,"count":1}],"isBlockCoverage":false},{"functionName":"originIsThisType","ranges":[{"startOffset":7642949,"endOffset":7643031,"count":0}],"isBlockCoverage":false},{"functionName":"originIsSymbolMember","ranges":[{"startOffset":7643032,"endOffset":7643122,"count":0}],"isBlockCoverage":false},{"functionName":"originIsExport","ranges":[{"startOffset":7643123,"endOffset":7643211,"count":0}],"isBlockCoverage":false},{"functionName":"originIsResolvedExport","ranges":[{"startOffset":7643212,"endOffset":7643319,"count":0}],"isBlockCoverage":false},{"functionName":"originIncludesSymbolName","ranges":[{"startOffset":7643320,"endOffset":7643472,"count":0}],"isBlockCoverage":false},{"functionName":"originIsPackageJsonImport","ranges":[{"startOffset":7643473,"endOffset":7643618,"count":0}],"isBlockCoverage":false},{"functionName":"originIsPromise","ranges":[{"startOffset":7643619,"endOffset":7643699,"count":0}],"isBlockCoverage":false},{"functionName":"originIsNullableMember","ranges":[{"startOffset":7643700,"endOffset":7643789,"count":0}],"isBlockCoverage":false},{"functionName":"originIsTypeOnlyAlias","ranges":[{"startOffset":7643790,"endOffset":7643893,"count":0}],"isBlockCoverage":false},{"functionName":"originIsObjectLiteralMethod","ranges":[{"startOffset":7643894,"endOffset":7644010,"count":0}],"isBlockCoverage":false},{"functionName":"originIsIgnore","ranges":[{"startOffset":7644011,"endOffset":7644101,"count":0}],"isBlockCoverage":false},{"functionName":"originIsComputedPropertyName","ranges":[{"startOffset":7644102,"endOffset":7644220,"count":0}],"isBlockCoverage":false},{"functionName":"resolvingModuleSpecifiers","ranges":[{"startOffset":7644221,"endOffset":7646918,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCommitCharacters","ranges":[{"startOffset":7646919,"endOffset":7647065,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionsAtPosition","ranges":[{"startOffset":7647066,"endOffset":7651004,"count":0}],"isBlockCoverage":false},{"functionName":"compareCompletionEntries","ranges":[{"startOffset":7651005,"endOffset":7651703,"count":0}],"isBlockCoverage":false},{"functionName":"completionEntryDataIsResolved","ranges":[{"startOffset":7651704,"endOffset":7651811,"count":0}],"isBlockCoverage":false},{"functionName":"continuePreviousIncompleteResponse","ranges":[{"startOffset":7651812,"endOffset":7654259,"count":0}],"isBlockCoverage":false},{"functionName":"jsdocCompletionInfo","ranges":[{"startOffset":7654260,"endOffset":7654537,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterCompletions","ranges":[{"startOffset":7654538,"endOffset":7657699,"count":0}],"isBlockCoverage":false},{"functionName":"generateJSDocParamTagsForDestructuring","ranges":[{"startOffset":7657700,"endOffset":7660374,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParamAnnotation","ranges":[{"startOffset":7660375,"endOffset":7662619,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParamNameWithInitializer","ranges":[{"startOffset":7662620,"endOffset":7662895,"count":0}],"isBlockCoverage":false},{"functionName":"keywordToCompletionEntry","ranges":[{"startOffset":7662896,"endOffset":7663102,"count":0}],"isBlockCoverage":false},{"functionName":"specificKeywordCompletionInfo","ranges":[{"startOffset":7663103,"endOffset":7663397,"count":0}],"isBlockCoverage":false},{"functionName":"keywordCompletionData","ranges":[{"startOffset":7663398,"endOffset":7663658,"count":0}],"isBlockCoverage":false},{"functionName":"keywordFiltersFromSyntaxKind","ranges":[{"startOffset":7663659,"endOffset":7663914,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionalReplacementSpan","ranges":[{"startOffset":7663915,"endOffset":7664086,"count":0}],"isBlockCoverage":false},{"functionName":"completionInfoFromData","ranges":[{"startOffset":7664087,"endOffset":7668957,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckedFile","ranges":[{"startOffset":7668958,"endOffset":7669109,"count":0}],"isBlockCoverage":false},{"functionName":"getExhaustiveCaseSnippets","ranges":[{"startOffset":7669110,"endOffset":7672886,"count":0}],"isBlockCoverage":false},{"functionName":"typeNodeToExpression","ranges":[{"startOffset":7672887,"endOffset":7674416,"count":0}],"isBlockCoverage":false},{"functionName":"entityNameToExpression","ranges":[{"startOffset":7674417,"endOffset":7675100,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberCompletionKind","ranges":[{"startOffset":7675101,"endOffset":7675322,"count":0}],"isBlockCoverage":false},{"functionName":"getJsxClosingTagCompletion","ranges":[{"startOffset":7675323,"endOffset":7676662,"count":0}],"isBlockCoverage":false},{"functionName":"getJSCompletionEntries","ranges":[{"startOffset":7676663,"endOffset":7677296,"count":0}],"isBlockCoverage":false},{"functionName":"completionNameForLiteral","ranges":[{"startOffset":7677297,"endOffset":7677532,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionEntryForLiteral","ranges":[{"startOffset":7677533,"endOffset":7677830,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionEntry","ranges":[{"startOffset":7677831,"endOffset":7686609,"count":0}],"isBlockCoverage":false},{"functionName":"generateIdentifierForArbitraryString","ranges":[{"startOffset":7686610,"endOffset":7687221,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLikeMemberCompletion","ranges":[{"startOffset":7687222,"endOffset":7687796,"count":0}],"isBlockCoverage":false},{"functionName":"getEntryForMemberCompletion","ranges":[{"startOffset":7687797,"endOffset":7692299,"count":0}],"isBlockCoverage":false},{"functionName":"getPresentModifiers","ranges":[{"startOffset":7692300,"endOffset":7693533,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike2","ranges":[{"startOffset":7693534,"endOffset":7693842,"count":0}],"isBlockCoverage":false},{"functionName":"getEntryForObjectLiteralMethodCompletion","ranges":[{"startOffset":7693843,"endOffset":7695662,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectLiteralMethod","ranges":[{"startOffset":7695663,"endOffset":7698716,"count":0}],"isBlockCoverage":false},{"functionName":"createSnippetPrinter","ranges":[{"startOffset":7698717,"endOffset":7702815,"count":0}],"isBlockCoverage":false},{"functionName":"originToCompletionEntryData","ranges":[{"startOffset":7702816,"endOffset":7703659,"count":0}],"isBlockCoverage":false},{"functionName":"completionEntryDataToSymbolOriginInfo","ranges":[{"startOffset":7703660,"endOffset":7704552,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertTextAndReplacementSpanForImportCompletion","ranges":[{"startOffset":7704553,"endOffset":7706420,"count":0}],"isBlockCoverage":false},{"functionName":"quotePropertyName","ranges":[{"startOffset":7706421,"endOffset":7706578,"count":0}],"isBlockCoverage":false},{"functionName":"isRecommendedCompletionMatch","ranges":[{"startOffset":7706579,"endOffset":7706840,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFromOrigin","ranges":[{"startOffset":7706841,"endOffset":7707296,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesFromSymbols","ranges":[{"startOffset":7707297,"endOffset":7712792,"count":0}],"isBlockCoverage":false},{"functionName":"getLabelCompletionAtPosition","ranges":[{"startOffset":7712793,"endOffset":7713178,"count":0}],"isBlockCoverage":false},{"functionName":"getLabelStatementCompletions","ranges":[{"startOffset":7713179,"endOffset":7713772,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolCompletionFromEntryId","ranges":[{"startOffset":7713773,"endOffset":7716270,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDetails","ranges":[{"startOffset":7716271,"endOffset":7719931,"count":0}],"isBlockCoverage":false},{"functionName":"createSimpleDetails","ranges":[{"startOffset":7719932,"endOffset":7720072,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetailsForSymbol","ranges":[{"startOffset":7720073,"endOffset":7720651,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetails","ranges":[{"startOffset":7720652,"endOffset":7720890,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryCodeActionsAndSourceDisplay","ranges":[{"startOffset":7720891,"endOffset":7724587,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntrySymbol","ranges":[{"startOffset":7724588,"endOffset":7724874,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7724913,"endOffset":7725387,"count":1}],"isBlockCoverage":false},{"functionName":"getRecommendedCompletion","ranges":[{"startOffset":7725412,"endOffset":7725856,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualType","ranges":[{"startOffset":7725857,"endOffset":7727621,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstSymbolInChain","ranges":[{"startOffset":7727622,"endOffset":7728036,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSymbol","ranges":[{"startOffset":7728037,"endOffset":7728190,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionData","ranges":[{"startOffset":7728191,"endOffset":7797326,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetObjectLikeCompletionContainer","ranges":[{"startOffset":7797327,"endOffset":7799656,"count":0}],"isBlockCoverage":false},{"functionName":"getRelevantTokens","ranges":[{"startOffset":7799657,"endOffset":7800141,"count":0}],"isBlockCoverage":false},{"functionName":"getAutoImportSymbolFromCompletionEntryData","ranges":[{"startOffset":7800142,"endOffset":7801122,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDisplayNameForSymbol","ranges":[{"startOffset":7801123,"endOffset":7802505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7802573,"endOffset":7802860,"count":0}],"isBlockCoverage":false},{"functionName":"getKeywordCompletions","ranges":[{"startOffset":7802863,"endOffset":7803263,"count":0}],"isBlockCoverage":false},{"functionName":"getTypescriptKeywordCompletions","ranges":[{"startOffset":7803264,"endOffset":7804623,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeScriptOnlyKeyword","ranges":[{"startOffset":7804624,"endOffset":7805666,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceOrTypeLiteralCompletionKeyword","ranges":[{"startOffset":7805667,"endOffset":7805772,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberCompletionKeyword","ranges":[{"startOffset":7805773,"endOffset":7806195,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeBodyKeyword","ranges":[{"startOffset":7806196,"endOffset":7806528,"count":0}],"isBlockCoverage":false},{"functionName":"keywordForNode","ranges":[{"startOffset":7806529,"endOffset":7806654,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualKeywords","ranges":[{"startOffset":7806655,"endOffset":7807410,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagAtPosition","ranges":[{"startOffset":7807411,"endOffset":7807587,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesForObjectExpression","ranges":[{"startOffset":7807588,"endOffset":7808576,"count":0}],"isBlockCoverage":false},{"functionName":"getApparentProperties","ranges":[{"startOffset":7808577,"endOffset":7809078,"count":0}],"isBlockCoverage":false},{"functionName":"containsNonPublicProperties","ranges":[{"startOffset":7809079,"endOffset":7809242,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesForCompletion","ranges":[{"startOffset":7809243,"endOffset":7809563,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetObjectTypeDeclarationCompletionContainer","ranges":[{"startOffset":7809564,"endOffset":7812076,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetTypeLiteralNode","ranges":[{"startOffset":7812077,"endOffset":7812580,"count":0}],"isBlockCoverage":false},{"functionName":"getConstraintOfTypeArgumentProperty","ranges":[{"startOffset":7812581,"endOffset":7813150,"count":0}],"isBlockCoverage":false},{"functionName":"isFromObjectTypeDeclaration","ranges":[{"startOffset":7813151,"endOffset":7813303,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTrigger","ranges":[{"startOffset":7813304,"endOffset":7814354,"count":0}],"isBlockCoverage":false},{"functionName":"binaryExpressionMayBeOpenTag","ranges":[{"startOffset":7814355,"endOffset":7814436,"count":0}],"isBlockCoverage":false},{"functionName":"isProbablyGlobalType","ranges":[{"startOffset":7814437,"endOffset":7815313,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticProperty","ranges":[{"startOffset":7815314,"endOffset":7815509,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetObjectLiteralContextualType","ranges":[{"startOffset":7815510,"endOffset":7816000,"count":0}],"isBlockCoverage":false},{"functionName":"getImportStatementCompletionInfo","ranges":[{"startOffset":7816001,"endOffset":7818823,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleLineReplacementSpanForImportCompletionNode","ranges":[{"startOffset":7818824,"endOffset":7819785,"count":0}],"isBlockCoverage":false},{"functionName":"getPotentiallyInvalidImportSpecifier","ranges":[{"startOffset":7819786,"endOffset":7820214,"count":0}],"isBlockCoverage":false},{"functionName":"couldBeTypeOnlyImportSpecifier","ranges":[{"startOffset":7820215,"endOffset":7820455,"count":0}],"isBlockCoverage":false},{"functionName":"canCompleteFromNamedBindings","ranges":[{"startOffset":7820456,"endOffset":7820951,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierMissingOrEmpty","ranges":[{"startOffset":7820952,"endOffset":7821211,"count":0}],"isBlockCoverage":false},{"functionName":"getClosestSymbolDeclaration","ranges":[{"startOffset":7821212,"endOffset":7821798,"count":0}],"isBlockCoverage":false},{"functionName":"isInTypeParameterDefault","ranges":[{"startOffset":7821799,"endOffset":7822179,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionBody","ranges":[{"startOffset":7822180,"endOffset":7822379,"count":0}],"isBlockCoverage":false},{"functionName":"symbolCanBeReferencedAtTypeLocation","ranges":[{"startOffset":7822380,"endOffset":7822973,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecated","ranges":[{"startOffset":7822974,"endOffset":7823161,"count":0}],"isBlockCoverage":false},{"functionName":"charactersFuzzyMatchInString","ranges":[{"startOffset":7823162,"endOffset":7824177,"count":0}],"isBlockCoverage":false},{"functionName":"toUpperCharCode","ranges":[{"startOffset":7824178,"endOffset":7824324,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeywordInAutoImportableExpressionSpace","ranges":[{"startOffset":7824325,"endOffset":7824621,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionDetails","ranges":[{"startOffset":7824828,"endOffset":7824867,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletions","ranges":[{"startOffset":7824900,"endOffset":7824933,"count":0}],"isBlockCoverage":false},{"functionName":"createNameAndKindSet","ranges":[{"startOffset":7825130,"endOffset":7825492,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletions","ranges":[{"startOffset":7825493,"endOffset":7826282,"count":0}],"isBlockCoverage":false},{"functionName":"convertStringLiteralCompletions","ranges":[{"startOffset":7826283,"endOffset":7828891,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionDetails","ranges":[{"startOffset":7828892,"endOffset":7829368,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralCompletionDetails","ranges":[{"startOffset":7829369,"endOffset":7830213,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathCompletions","ranges":[{"startOffset":7830214,"endOffset":7830744,"count":0}],"isBlockCoverage":false},{"functionName":"kindModifiersFromExtension","ranges":[{"startOffset":7830745,"endOffset":7831858,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionEntries","ranges":[{"startOffset":7831859,"endOffset":7837150,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParentheses","ranges":[{"startOffset":7837151,"endOffset":7837424,"count":0}],"isBlockCoverage":false},{"functionName":"getAlreadyUsedTypesInStringLiteralUnion","ranges":[{"startOffset":7837425,"endOffset":7837644,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionsFromSignature","ranges":[{"startOffset":7837645,"endOffset":7838711,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralCompletionsFromProperties","ranges":[{"startOffset":7838712,"endOffset":7839026,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralCompletionsForObjectLiteral","ranges":[{"startOffset":7839027,"endOffset":7839583,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralTypes","ranges":[{"startOffset":7839584,"endOffset":7839936,"count":0}],"isBlockCoverage":false},{"functionName":"nameAndKind","ranges":[{"startOffset":7839937,"endOffset":7840020,"count":0}],"isBlockCoverage":false},{"functionName":"directoryResult","ranges":[{"startOffset":7840021,"endOffset":7840154,"count":0}],"isBlockCoverage":false},{"functionName":"addReplacementSpans","ranges":[{"startOffset":7840155,"endOffset":7840567,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionsFromModuleNames","ranges":[{"startOffset":7840568,"endOffset":7840837,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionsFromModuleNamesWorker","ranges":[{"startOffset":7840838,"endOffset":7841977,"count":0}],"isBlockCoverage":false},{"functionName":"getExtensionOptions","ranges":[{"startOffset":7841978,"endOffset":7842384,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForRelativeModules","ranges":[{"startOffset":7842385,"endOffset":7843176,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsForModuleResolution","ranges":[{"startOffset":7843177,"endOffset":7843833,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectoriesFromRootDirs","ranges":[{"startOffset":7843834,"endOffset":7844563,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForDirectoryFragmentWithRootDirs","ranges":[{"startOffset":7844564,"endOffset":7845516,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForDirectoryFragment","ranges":[{"startOffset":7845517,"endOffset":7848242,"count":0}],"isBlockCoverage":false},{"functionName":"getFilenameWithExtensionOption","ranges":[{"startOffset":7848243,"endOffset":7850232,"count":0}],"isBlockCoverage":false},{"functionName":"addCompletionEntriesFromPaths","ranges":[{"startOffset":7850233,"endOffset":7851077,"count":0}],"isBlockCoverage":false},{"functionName":"addCompletionEntriesFromPathsOrExportsOrImports","ranges":[{"startOffset":7851078,"endOffset":7852721,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForNonRelativeModules","ranges":[{"startOffset":7852722,"endOffset":7858646,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromFirstMatchingCondition","ranges":[{"startOffset":7858647,"endOffset":7859141,"count":0}],"isBlockCoverage":false},{"functionName":"getFragmentDirectory","ranges":[{"startOffset":7859142,"endOffset":7859310,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionsForPathMapping","ranges":[{"startOffset":7859311,"endOffset":7860681,"count":0}],"isBlockCoverage":false},{"functionName":"getModulesForPathsPattern","ranges":[{"startOffset":7860682,"endOffset":7865309,"count":0}],"isBlockCoverage":false},{"functionName":"withoutStartAndEnd","ranges":[{"startOffset":7865310,"endOffset":7865463,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDirectorySeparator","ranges":[{"startOffset":7865464,"endOffset":7865578,"count":0}],"isBlockCoverage":false},{"functionName":"getAmbientModuleCompletions","ranges":[{"startOffset":7865579,"endOffset":7866174,"count":0}],"isBlockCoverage":false},{"functionName":"getTripleSlashReferenceCompletion","ranges":[{"startOffset":7866175,"endOffset":7867553,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesFromTypings","ranges":[{"startOffset":7867554,"endOffset":7869514,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateNodeModulesVisibleToScript","ranges":[{"startOffset":7869515,"endOffset":7870097,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryFragmentTextSpan","ranges":[{"startOffset":7870098,"endOffset":7870494,"count":0}],"isBlockCoverage":false},{"functionName":"isPathRelativeToScript","ranges":[{"startOffset":7870495,"endOffset":7870857,"count":0}],"isBlockCoverage":false},{"functionName":"containsSlash","ranges":[{"startOffset":7871078,"endOffset":7871162,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCallArgument","ranges":[{"startOffset":7871163,"endOffset":7871387,"count":0}],"isBlockCoverage":false},{"functionName":"Core","ranges":[{"startOffset":7871529,"endOffset":7871539,"count":0}],"isBlockCoverage":false},{"functionName":"DefinitionKind","ranges":[{"startOffset":7871559,"endOffset":7871579,"count":0}],"isBlockCoverage":false},{"functionName":"EntryKind","ranges":[{"startOffset":7871594,"endOffset":7871609,"count":0}],"isBlockCoverage":false},{"functionName":"ExportKind","ranges":[{"startOffset":7871625,"endOffset":7871642,"count":0}],"isBlockCoverage":false},{"functionName":"FindReferencesUse","ranges":[{"startOffset":7871665,"endOffset":7871688,"count":0}],"isBlockCoverage":false},{"functionName":"ImportExport","ranges":[{"startOffset":7871706,"endOffset":7871724,"count":0}],"isBlockCoverage":false},{"functionName":"createImportTracker","ranges":[{"startOffset":7871749,"endOffset":7871774,"count":0}],"isBlockCoverage":false},{"functionName":"findModuleReferences","ranges":[{"startOffset":7871800,"endOffset":7871826,"count":0}],"isBlockCoverage":false},{"functionName":"findReferenceOrRenameEntries","ranges":[{"startOffset":7871860,"endOffset":7871894,"count":0}],"isBlockCoverage":false},{"functionName":"findReferencedSymbols","ranges":[{"startOffset":7871921,"endOffset":7871948,"count":0}],"isBlockCoverage":false},{"functionName":"getContextNode","ranges":[{"startOffset":7871968,"endOffset":7871988,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfo","ranges":[{"startOffset":7872007,"endOffset":7872026,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementationsAtPosition","ranges":[{"startOffset":7872060,"endOffset":7872094,"count":0}],"isBlockCoverage":false},{"functionName":"getImportOrExportSymbol","ranges":[{"startOffset":7872123,"endOffset":7872152,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceEntriesForNode","ranges":[{"startOffset":7872184,"endOffset":7872216,"count":0}],"isBlockCoverage":false},{"functionName":"isContextWithStartAndEndNode","ranges":[{"startOffset":7872250,"endOffset":7872284,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationOfSymbol","ranges":[{"startOffset":7872311,"endOffset":7872338,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccessForReference","ranges":[{"startOffset":7872369,"endOffset":7872400,"count":0}],"isBlockCoverage":false},{"functionName":"toContextSpan","ranges":[{"startOffset":7872419,"endOffset":7872438,"count":0}],"isBlockCoverage":false},{"functionName":"toHighlightSpan","ranges":[{"startOffset":7872459,"endOffset":7872480,"count":0}],"isBlockCoverage":false},{"functionName":"toReferenceEntry","ranges":[{"startOffset":7872502,"endOffset":7872524,"count":0}],"isBlockCoverage":false},{"functionName":"toRenameLocation","ranges":[{"startOffset":7872546,"endOffset":7872568,"count":0}],"isBlockCoverage":false},{"functionName":"createImportTracker","ranges":[{"startOffset":7872607,"endOffset":7873136,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7873172,"endOffset":7873385,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7873443,"endOffset":7873603,"count":1}],"isBlockCoverage":false},{"functionName":"getImportersForExport","ranges":[{"startOffset":7873626,"endOffset":7879968,"count":0}],"isBlockCoverage":false},{"functionName":"getSearchesFromDirectImports","ranges":[{"startOffset":7879969,"endOffset":7883393,"count":0}],"isBlockCoverage":false},{"functionName":"findNamespaceReExports","ranges":[{"startOffset":7883394,"endOffset":7883922,"count":0}],"isBlockCoverage":false},{"functionName":"findModuleReferences","ranges":[{"startOffset":7883923,"endOffset":7885339,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectImportsMap","ranges":[{"startOffset":7885340,"endOffset":7885972,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPossibleImportOrExportStatement","ranges":[{"startOffset":7885973,"endOffset":7886344,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImport","ranges":[{"startOffset":7886345,"endOffset":7887218,"count":0}],"isBlockCoverage":false},{"functionName":"getImportOrExportSymbol","ranges":[{"startOffset":7887219,"endOffset":7891173,"count":0}],"isBlockCoverage":false},{"functionName":"getExportEqualsLocalSymbol","ranges":[{"startOffset":7891174,"endOffset":7891764,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNode","ranges":[{"startOffset":7891765,"endOffset":7892181,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeImport","ranges":[{"startOffset":7892182,"endOffset":7892784,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfo","ranges":[{"startOffset":7892785,"endOffset":7893102,"count":0}],"isBlockCoverage":false},{"functionName":"skipExportSpecifierSymbol","ranges":[{"startOffset":7893103,"endOffset":7893970,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingModuleSymbol","ranges":[{"startOffset":7893971,"endOffset":7894118,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileLikeForImportDeclaration","ranges":[{"startOffset":7894119,"endOffset":7894524,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModuleDeclaration","ranges":[{"startOffset":7894525,"endOffset":7894667,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEquals","ranges":[{"startOffset":7894668,"endOffset":7894850,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7894927,"endOffset":7895367,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7895425,"endOffset":7895806,"count":1}],"isBlockCoverage":false},{"functionName":"nodeEntry","ranges":[{"startOffset":7895826,"endOffset":7895976,"count":0}],"isBlockCoverage":false},{"functionName":"isContextWithStartAndEndNode","ranges":[{"startOffset":7895977,"endOffset":7896063,"count":0}],"isBlockCoverage":false},{"functionName":"getContextNodeForNodeEntry","ranges":[{"startOffset":7896064,"endOffset":7898036,"count":0}],"isBlockCoverage":false},{"functionName":"getContextNode","ranges":[{"startOffset":7898037,"endOffset":7899579,"count":0}],"isBlockCoverage":false},{"functionName":"toContextSpan","ranges":[{"startOffset":7899580,"endOffset":7899934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7899976,"endOffset":7900239,"count":1}],"isBlockCoverage":false},{"functionName":"findReferencedSymbols","ranges":[{"startOffset":7900267,"endOffset":7901281,"count":0}],"isBlockCoverage":false},{"functionName":"isDefinitionForReference","ranges":[{"startOffset":7901282,"endOffset":7901544,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementationsAtPosition","ranges":[{"startOffset":7901545,"endOffset":7902760,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementationReferenceEntries","ranges":[{"startOffset":7902761,"endOffset":7903580,"count":0}],"isBlockCoverage":false},{"functionName":"findReferenceOrRenameEntries","ranges":[{"startOffset":7903581,"endOffset":7903896,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceEntriesForNode","ranges":[{"startOffset":7903897,"endOffset":7904210,"count":0}],"isBlockCoverage":false},{"functionName":"flattenEntries","ranges":[{"startOffset":7904211,"endOffset":7904333,"count":0}],"isBlockCoverage":false},{"functionName":"definitionToReferencedSymbolDefinitionInfo","ranges":[{"startOffset":7904334,"endOffset":7907155,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndTextSpanFromNode","ranges":[{"startOffset":7907156,"endOffset":7907369,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionKindAndDisplayParts","ranges":[{"startOffset":7907370,"endOffset":7907882,"count":0}],"isBlockCoverage":false},{"functionName":"toRenameLocation","ranges":[{"startOffset":7907883,"endOffset":7908135,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedSymbolEntry","ranges":[{"startOffset":7908136,"endOffset":7908405,"count":0}],"isBlockCoverage":false},{"functionName":"toReferenceEntry","ranges":[{"startOffset":7908406,"endOffset":7908772,"count":0}],"isBlockCoverage":false},{"functionName":"entryToDocumentSpan","ranges":[{"startOffset":7908773,"endOffset":7909173,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefixAndSuffixText","ranges":[{"startOffset":7909174,"endOffset":7911223,"count":0}],"isBlockCoverage":false},{"functionName":"toImplementationLocation","ranges":[{"startOffset":7911224,"endOffset":7911580,"count":0}],"isBlockCoverage":false},{"functionName":"implementationKindDisplayParts","ranges":[{"startOffset":7911581,"endOffset":7912429,"count":0}],"isBlockCoverage":false},{"functionName":"toHighlightSpan","ranges":[{"startOffset":7912430,"endOffset":7913137,"count":0}],"isBlockCoverage":false},{"functionName":"getTextSpan","ranges":[{"startOffset":7913138,"endOffset":7913562,"count":0}],"isBlockCoverage":false},{"functionName":"getTextSpanOfEntry","ranges":[{"startOffset":7913563,"endOffset":7913710,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccessForReference","ranges":[{"startOffset":7913711,"endOffset":7913915,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationOfSymbol","ranges":[{"startOffset":7913916,"endOffset":7914504,"count":0}],"isBlockCoverage":false},{"functionName":"declarationIsWriteAccess","ranges":[{"startOffset":7914505,"endOffset":7916253,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7916265,"endOffset":7981833,"count":1}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsForNode","ranges":[{"startOffset":7916280,"endOffset":7919686,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedNode2","ranges":[{"startOffset":7919756,"endOffset":7920015,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForFileName","ranges":[{"startOffset":7920062,"endOffset":7920850,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForNonModule","ranges":[{"startOffset":7920914,"endOffset":7921571,"count":0}],"isBlockCoverage":false},{"functionName":"getMergedAliasedSymbolOfNamespaceExportDeclaration","ranges":[{"startOffset":7921574,"endOffset":7921965,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsForModuleIfDeclaredBySourceFile","ranges":[{"startOffset":7921968,"endOffset":7922898,"count":0}],"isBlockCoverage":false},{"functionName":"mergeReferences","ranges":[{"startOffset":7922901,"endOffset":7924444,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileIndexOfEntry","ranges":[{"startOffset":7924447,"endOffset":7924681,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsForModule","ranges":[{"startOffset":7924684,"endOffset":7927265,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyTypeOperator","ranges":[{"startOffset":7927268,"endOffset":7927452,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsSpecial","ranges":[{"startOffset":7927455,"endOffset":7928889,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsForSymbol","ranges":[{"startOffset":7928892,"endOffset":7930793,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesInContainerOrFiles","ranges":[{"startOffset":7930796,"endOffset":7931335,"count":0}],"isBlockCoverage":false},{"functionName":"getSpecialSearchKind","ranges":[{"startOffset":7931338,"endOffset":7931753,"count":0}],"isBlockCoverage":false},{"functionName":"skipPastExportOrImportSpecifierOrUnion","ranges":[{"startOffset":7931756,"endOffset":7932525,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7932554,"endOffset":7932794,"count":1}],"isBlockCoverage":false},{"functionName":"getNonModuleSymbolOfMergedModuleSymbol","ranges":[{"startOffset":7932846,"endOffset":7933147,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":7933168,"endOffset":7934968,"count":0}],"isBlockCoverage":false},{"functionName":"includesSourceFile","ranges":[{"startOffset":7934973,"endOffset":7935070,"count":0}],"isBlockCoverage":false},{"functionName":"getImportSearches","ranges":[{"startOffset":7935216,"endOffset":7935513,"count":0}],"isBlockCoverage":false},{"functionName":"createSearch","ranges":[{"startOffset":7935602,"endOffset":7936220,"count":0}],"isBlockCoverage":false},{"functionName":"referenceAdder","ranges":[{"startOffset":7936410,"endOffset":7936823,"count":0}],"isBlockCoverage":false},{"functionName":"addStringOrCommentReference","ranges":[{"startOffset":7936886,"endOffset":7937069,"count":0}],"isBlockCoverage":false},{"functionName":"markSearchedSymbols","ranges":[{"startOffset":7937172,"endOffset":7937593,"count":0}],"isBlockCoverage":false},{"functionName":"searchForImportsOfExport","ranges":[{"startOffset":7937600,"endOffset":7938915,"count":0}],"isBlockCoverage":false},{"functionName":"eachExportReference","ranges":[{"startOffset":7938918,"endOffset":7940261,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAddSingleReference","ranges":[{"startOffset":7940315,"endOffset":7940687,"count":0}],"isBlockCoverage":false},{"functionName":"searchForImportedSymbol","ranges":[{"startOffset":7940690,"endOffset":7941050,"count":0}],"isBlockCoverage":false},{"functionName":"searchForName","ranges":[{"startOffset":7941053,"endOffset":7941245,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolOfDestructuringAssignment","ranges":[{"startOffset":7941248,"endOffset":7941482,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolScope","ranges":[{"startOffset":7941485,"endOffset":7943068,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolReferencedInFile","ranges":[{"startOffset":7943071,"endOffset":7943282,"count":0}],"isBlockCoverage":false},{"functionName":"eachSymbolReferenceInFile","ranges":[{"startOffset":7943346,"endOffset":7944311,"count":0}],"isBlockCoverage":false},{"functionName":"getTopMostDeclarationNamesInFile","ranges":[{"startOffset":7944377,"endOffset":7945226,"count":0}],"isBlockCoverage":false},{"functionName":"someSignatureUsage","ranges":[{"startOffset":7945306,"endOffset":7946232,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleSymbolReferenceNodes","ranges":[{"startOffset":7946284,"endOffset":7946643,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleSymbolReferencePositions","ranges":[{"startOffset":7946646,"endOffset":7947504,"count":0}],"isBlockCoverage":false},{"functionName":"getLabelReferencesInNode","ranges":[{"startOffset":7947507,"endOffset":7948104,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReferencePosition","ranges":[{"startOffset":7948107,"endOffset":7949229,"count":0}],"isBlockCoverage":false},{"functionName":"getAllReferencesForImportMeta","ranges":[{"startOffset":7949232,"endOffset":7949789,"count":0}],"isBlockCoverage":false},{"functionName":"getAllReferencesForKeyword","ranges":[{"startOffset":7949792,"endOffset":7950435,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesInSourceFile","ranges":[{"startOffset":7950438,"endOffset":7950686,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesInContainer","ranges":[{"startOffset":7950689,"endOffset":7951075,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingMeaning","ranges":[{"startOffset":7951078,"endOffset":7951217,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesAtLocation","ranges":[{"startOffset":7951220,"endOffset":7953878,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesAtJSDocTypeLiteral","ranges":[{"startOffset":7953881,"endOffset":7954235,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesAtExportSpecifier","ranges":[{"startOffset":7954238,"endOffset":7956440,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportSpecifier","ranges":[{"startOffset":7956443,"endOffset":7956706,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifierAlias","ranges":[{"startOffset":7956709,"endOffset":7957073,"count":0}],"isBlockCoverage":false},{"functionName":"getImportOrExportReferences","ranges":[{"startOffset":7957076,"endOffset":7957664,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceForShorthandProperty","ranges":[{"startOffset":7957667,"endOffset":7958092,"count":0}],"isBlockCoverage":false},{"functionName":"addReference","ranges":[{"startOffset":7958095,"endOffset":7958614,"count":0}],"isBlockCoverage":false},{"functionName":"addConstructorReferences","ranges":[{"startOffset":7958617,"endOffset":7959400,"count":0}],"isBlockCoverage":false},{"functionName":"addClassStaticThisReferences","ranges":[{"startOffset":7959403,"endOffset":7960213,"count":0}],"isBlockCoverage":false},{"functionName":"findOwnConstructorReferences","ranges":[{"startOffset":7960216,"endOffset":7961189,"count":0}],"isBlockCoverage":false},{"functionName":"getClassConstructorSymbol","ranges":[{"startOffset":7961192,"endOffset":7961339,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperConstructorAccesses","ranges":[{"startOffset":7961342,"endOffset":7961903,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnConstructor","ranges":[{"startOffset":7961906,"endOffset":7962021,"count":0}],"isBlockCoverage":false},{"functionName":"findInheritedConstructorReferences","ranges":[{"startOffset":7962024,"endOffset":7962397,"count":0}],"isBlockCoverage":false},{"functionName":"addImplementationReferences","ranges":[{"startOffset":7962400,"endOffset":7964067,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeIfInHeritageClause","ranges":[{"startOffset":7964070,"endOffset":7964362,"count":0}],"isBlockCoverage":false},{"functionName":"isImplementationExpression","ranges":[{"startOffset":7964365,"endOffset":7964813,"count":0}],"isBlockCoverage":false},{"functionName":"explicitlyInheritsFrom","ranges":[{"startOffset":7964816,"endOffset":7965554,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForSuperKeyword","ranges":[{"startOffset":7965557,"endOffset":7966898,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterName","ranges":[{"startOffset":7966901,"endOffset":7967056,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForThisKeyword","ranges":[{"startOffset":7967059,"endOffset":7970278,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForStringLiteral","ranges":[{"startOffset":7970281,"endOffset":7971330,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralPropertyReference","ranges":[{"startOffset":7971333,"endOffset":7971543,"count":0}],"isBlockCoverage":false},{"functionName":"populateSearchSymbolSet","ranges":[{"startOffset":7971546,"endOffset":7972230,"count":0}],"isBlockCoverage":false},{"functionName":"forEachRelatedSymbol","ranges":[{"startOffset":7972233,"endOffset":7977217,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromBaseTypes","ranges":[{"startOffset":7977220,"endOffset":7977944,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticSymbol","ranges":[{"startOffset":7977947,"endOffset":7978159,"count":0}],"isBlockCoverage":false},{"functionName":"getRelatedSymbol","ranges":[{"startOffset":7978162,"endOffset":7979164,"count":0}],"isBlockCoverage":false},{"functionName":"getIntersectingMeaningFromDeclarations","ranges":[{"startOffset":7979167,"endOffset":7979740,"count":0}],"isBlockCoverage":false},{"functionName":"isImplementation","ranges":[{"startOffset":7979832,"endOffset":7980136,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceEntriesForShorthandPropertyAssignment","ranges":[{"startOffset":7980139,"endOffset":7980617,"count":0}],"isBlockCoverage":false},{"functionName":"forEachDescendantOfKind","ranges":[{"startOffset":7980731,"endOffset":7980949,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassByExtendingIdentifier","ranges":[{"startOffset":7980952,"endOffset":7981103,"count":0}],"isBlockCoverage":false},{"functionName":"getParentSymbolsOfPropertyAccess","ranges":[{"startOffset":7981106,"endOffset":7981680,"count":0}],"isBlockCoverage":false},{"functionName":"isForRenameWithPrefixAndSuffixText","ranges":[{"startOffset":7981683,"endOffset":7981831,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionInfo","ranges":[{"startOffset":7982005,"endOffset":7982031,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAndBoundSpan","ranges":[{"startOffset":7982062,"endOffset":7982093,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAtPosition","ranges":[{"startOffset":7982122,"endOffset":7982151,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceAtPosition","ranges":[{"startOffset":7982179,"endOffset":7982207,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeDefinitionAtPosition","ranges":[{"startOffset":7982240,"endOffset":7982273,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAtPosition","ranges":[{"startOffset":7982313,"endOffset":7989112,"count":0}],"isBlockCoverage":false},{"functionName":"symbolMatchesSignature","ranges":[{"startOffset":7989113,"endOffset":7989461,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionFromObjectLiteralElement","ranges":[{"startOffset":7989462,"endOffset":7990000,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionFromOverriddenMember","ranges":[{"startOffset":7990001,"endOffset":7990940,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceAtPosition","ranges":[{"startOffset":7990941,"endOffset":7992951,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUnwrapFirstTypeArgumentTypeDefinitionFromTypeReference","ranges":[{"startOffset":7993288,"endOffset":7993720,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUnwrapFirstTypeArgumentTypeDefinitionFromAlias","ranges":[{"startOffset":7993721,"endOffset":7994197,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTypeArgumentDefinitions","ranges":[{"startOffset":7994198,"endOffset":7995332,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeDefinitionAtPosition","ranges":[{"startOffset":7995333,"endOffset":7996897,"count":0}],"isBlockCoverage":false},{"functionName":"definitionFromType","ranges":[{"startOffset":7996898,"endOffset":7997154,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetReturnTypeOfFunction","ranges":[{"startOffset":7997155,"endOffset":7997643,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAndBoundSpan","ranges":[{"startOffset":7997644,"endOffset":7998350,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionInfoForIndexSignatures","ranges":[{"startOffset":7998351,"endOffset":7998573,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbol","ranges":[{"startOffset":7998574,"endOffset":7999096,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSkipAlias","ranges":[{"startOffset":7999097,"endOffset":7999445,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoDeclaration","ranges":[{"startOffset":7999446,"endOffset":7999828,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionFromSymbol","ranges":[{"startOffset":7999829,"endOffset":8001917,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionInfo","ranges":[{"startOffset":8001918,"endOffset":8002386,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionInfoFromName","ranges":[{"startOffset":8002387,"endOffset":8003227,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionInfoFromSwitch","ranges":[{"startOffset":8003228,"endOffset":8003838,"count":0}],"isBlockCoverage":false},{"functionName":"isDefinitionVisible","ranges":[{"startOffset":8003839,"endOffset":8004863,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionFromSignatureDeclaration","ranges":[{"startOffset":8004864,"endOffset":8005105,"count":0}],"isBlockCoverage":false},{"functionName":"findReferenceInPosition","ranges":[{"startOffset":8005106,"endOffset":8005229,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionInfoForFileReference","ranges":[{"startOffset":8005230,"endOffset":8005543,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestorCallLikeExpression","ranges":[{"startOffset":8005544,"endOffset":8005847,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSignatureDeclaration","ranges":[{"startOffset":8005848,"endOffset":8006144,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxConstructorLike","ranges":[{"startOffset":8006145,"endOffset":8006404,"count":0}],"isBlockCoverage":false},{"functionName":"provideInlayHints","ranges":[{"startOffset":8006538,"endOffset":8006561,"count":0}],"isBlockCoverage":false},{"functionName":"leadingParameterNameCommentRegexFactory","ranges":[{"startOffset":8006643,"endOffset":8006720,"count":0}],"isBlockCoverage":false},{"functionName":"shouldShowParameterNameHints","ranges":[{"startOffset":8006722,"endOffset":8006900,"count":0}],"isBlockCoverage":false},{"functionName":"shouldShowLiteralParameterNameHintsOnly","ranges":[{"startOffset":8006901,"endOffset":8007034,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseInteractiveInlayHints","ranges":[{"startOffset":8007035,"endOffset":8007144,"count":0}],"isBlockCoverage":false},{"functionName":"provideInlayHints","ranges":[{"startOffset":8007145,"endOffset":8035939,"count":0}],"isBlockCoverage":false},{"functionName":"getDocCommentTemplateAtPosition","ranges":[{"startOffset":8036072,"endOffset":8036109,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletionDetails","ranges":[{"startOffset":8036153,"endOffset":8036197,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletions","ranges":[{"startOffset":8036235,"endOffset":8036273,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletionDetails","ranges":[{"startOffset":8036307,"endOffset":8036341,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletions","ranges":[{"startOffset":8036369,"endOffset":8036397,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagNameCompletionDetails","ranges":[{"startOffset":8036435,"endOffset":8036473,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagNameCompletions","ranges":[{"startOffset":8036505,"endOffset":8036537,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocCommentsFromDeclarations","ranges":[{"startOffset":8036575,"endOffset":8036613,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagsFromDeclarations","ranges":[{"startOffset":8036647,"endOffset":8036681,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocCommentsFromDeclarations","ranges":[{"startOffset":8037888,"endOffset":8039128,"count":0}],"isBlockCoverage":false},{"functionName":"isIdenticalListOfDisplayParts","ranges":[{"startOffset":8039129,"endOffset":8039284,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentHavingNodes","ranges":[{"startOffset":8039285,"endOffset":8039814,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagsFromDeclarations","ranges":[{"startOffset":8039815,"endOffset":8040453,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPropertyTagsInfo","ranges":[{"startOffset":8040454,"endOffset":8040709,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocPropertyTags","ranges":[{"startOffset":8040710,"endOffset":8040936,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayPartsFromComment","ranges":[{"startOffset":8040937,"endOffset":8041207,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentDisplayParts","ranges":[{"startOffset":8041208,"endOffset":8043522,"count":0}],"isBlockCoverage":false},{"functionName":"getTagNameDisplayPart","ranges":[{"startOffset":8043523,"endOffset":8043937,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagNameCompletions","ranges":[{"startOffset":8043938,"endOffset":8044263,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletions","ranges":[{"startOffset":8044333,"endOffset":8044652,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletionDetails","ranges":[{"startOffset":8044653,"endOffset":8044925,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletions","ranges":[{"startOffset":8044926,"endOffset":8045659,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletionDetails","ranges":[{"startOffset":8045660,"endOffset":8045921,"count":0}],"isBlockCoverage":false},{"functionName":"getDocCommentTemplateAtPosition","ranges":[{"startOffset":8045922,"endOffset":8047742,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationStringAtPosition","ranges":[{"startOffset":8047743,"endOffset":8048057,"count":0}],"isBlockCoverage":false},{"functionName":"parameterDocComments","ranges":[{"startOffset":8048058,"endOffset":8048456,"count":0}],"isBlockCoverage":false},{"functionName":"returnsDocComment","ranges":[{"startOffset":8048457,"endOffset":8048563,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentOwnerInfo","ranges":[{"startOffset":8048564,"endOffset":8048701,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentOwnerInfoWorker","ranges":[{"startOffset":8048702,"endOffset":8051066,"count":0}],"isBlockCoverage":false},{"functionName":"hasReturn","ranges":[{"startOffset":8051067,"endOffset":8051382,"count":0}],"isBlockCoverage":false},{"functionName":"getRightHandSideOfAssignment","ranges":[{"startOffset":8051383,"endOffset":8051799,"count":0}],"isBlockCoverage":false},{"functionName":"mapCode","ranges":[{"startOffset":8051914,"endOffset":8051927,"count":0}],"isBlockCoverage":false},{"functionName":"mapCode","ranges":[{"startOffset":8051960,"endOffset":8052494,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":8052495,"endOffset":8053619,"count":0}],"isBlockCoverage":false},{"functionName":"placeNodeGroup","ranges":[{"startOffset":8053620,"endOffset":8053995,"count":0}],"isBlockCoverage":false},{"functionName":"placeClassNodeGroup","ranges":[{"startOffset":8053996,"endOffset":8055108,"count":0}],"isBlockCoverage":false},{"functionName":"placeStatements","ranges":[{"startOffset":8055109,"endOffset":8056559,"count":0}],"isBlockCoverage":false},{"functionName":"matchNode","ranges":[{"startOffset":8056560,"endOffset":8057858,"count":0}],"isBlockCoverage":false},{"functionName":"wipeNode","ranges":[{"startOffset":8057859,"endOffset":8057938,"count":0}],"isBlockCoverage":false},{"functionName":"resetNodePositions","ranges":[{"startOffset":8057939,"endOffset":8058051,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportsOrRequireStatements","ranges":[{"startOffset":8058216,"endOffset":8058255,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiers","ranges":[{"startOffset":8058284,"endOffset":8058314,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclarationInsertionIndex","ranges":[{"startOffset":8058354,"endOffset":8058394,"count":0}],"isBlockCoverage":false},{"functionName":"getImportSpecifierInsertionIndex","ranges":[{"startOffset":8058432,"endOffset":8058470,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedImportSpecifierComparerWithDetection","ranges":[{"startOffset":8058520,"endOffset":8058570,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsStringComparerWithDetection","ranges":[{"startOffset":8058621,"endOffset":8058672,"count":0}],"isBlockCoverage":false},{"functionName":"organizeImports","ranges":[{"startOffset":8058693,"endOffset":8058714,"count":0}],"isBlockCoverage":false},{"functionName":"testCoalesceExports","ranges":[{"startOffset":8058739,"endOffset":8058764,"count":0}],"isBlockCoverage":false},{"functionName":"testCoalesceImports","ranges":[{"startOffset":8058789,"endOffset":8058814,"count":0}],"isBlockCoverage":false},{"functionName":"organizeImports","ranges":[{"startOffset":8058855,"endOffset":8064694,"count":0}],"isBlockCoverage":false},{"functionName":"getDetectionLists","ranges":[{"startOffset":8064695,"endOffset":8065242,"count":0}],"isBlockCoverage":false},{"functionName":"groupByNewlineContiguous","ranges":[{"startOffset":8065243,"endOffset":8065726,"count":0}],"isBlockCoverage":false},{"functionName":"isNewGroup","ranges":[{"startOffset":8065727,"endOffset":8066194,"count":0}],"isBlockCoverage":false},{"functionName":"getTopLevelExportGroups","ranges":[{"startOffset":8066195,"endOffset":8067058,"count":0}],"isBlockCoverage":false},{"functionName":"removeUnusedImports","ranges":[{"startOffset":8067059,"endOffset":8069146,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName2","ranges":[{"startOffset":8069147,"endOffset":8069284,"count":0}],"isBlockCoverage":false},{"functionName":"getCategorizedImports","ranges":[{"startOffset":8069285,"endOffset":8070267,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceImportsWorker","ranges":[{"startOffset":8070268,"endOffset":8074574,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceExportsWorker","ranges":[{"startOffset":8074575,"endOffset":8076500,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportDeclarationAndClause","ranges":[{"startOffset":8076501,"endOffset":8076911,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportOrExportSpecifiers","ranges":[{"startOffset":8076912,"endOffset":8077373,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiersWorker","ranges":[{"startOffset":8077374,"endOffset":8077753,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNamesFromDecls","ranges":[{"startOffset":8077754,"endOffset":8077887,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierExpression","ranges":[{"startOffset":8077888,"endOffset":8078349,"count":0}],"isBlockCoverage":false},{"functionName":"hasModuleDeclarationMatchingSpecifier","ranges":[{"startOffset":8078350,"endOffset":8078685,"count":0}],"isBlockCoverage":false},{"functionName":"getNewImportSpecifiers","ranges":[{"startOffset":8078686,"endOffset":8079186,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNamedBindingElements","ranges":[{"startOffset":8079187,"endOffset":8079446,"count":0}],"isBlockCoverage":false},{"functionName":"detectModuleSpecifierCaseBySort","ranges":[{"startOffset":8079447,"endOffset":8079772,"count":0}],"isBlockCoverage":false},{"functionName":"detectNamedImportOrganizationBySort","ranges":[{"startOffset":8079773,"endOffset":8082368,"count":0}],"isBlockCoverage":false},{"functionName":"measureSortedness","ranges":[{"startOffset":8082369,"endOffset":8082549,"count":0}],"isBlockCoverage":false},{"functionName":"detectCaseSensitivityBySort","ranges":[{"startOffset":8082550,"endOffset":8083172,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportKind","ranges":[{"startOffset":8083173,"endOffset":8083283,"count":0}],"isBlockCoverage":false},{"functionName":"getImportKindOrder","ranges":[{"startOffset":8083284,"endOffset":8083767,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsOrdinalStringComparer","ranges":[{"startOffset":8083768,"endOffset":8083931,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsUnicodeStringComparer","ranges":[{"startOffset":8083932,"endOffset":8084550,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsLocale","ranges":[{"startOffset":8084551,"endOffset":8084913,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsStringComparer","ranges":[{"startOffset":8084914,"endOffset":8085210,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsStringComparerWithDetection","ranges":[{"startOffset":8085211,"endOffset":8085416,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedImportSpecifierComparer","ranges":[{"startOffset":8085417,"endOffset":8085694,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedImportSpecifierComparerWithDetection","ranges":[{"startOffset":8085695,"endOffset":8086996,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclarationInsertionIndex","ranges":[{"startOffset":8086997,"endOffset":8087244,"count":0}],"isBlockCoverage":false},{"functionName":"getImportSpecifierInsertionIndex","ranges":[{"startOffset":8087245,"endOffset":8087439,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportsOrRequireStatements","ranges":[{"startOffset":8087440,"endOffset":8087651,"count":0}],"isBlockCoverage":false},{"functionName":"testCoalesceImports","ranges":[{"startOffset":8087652,"endOffset":8088062,"count":0}],"isBlockCoverage":false},{"functionName":"testCoalesceExports","ranges":[{"startOffset":8088063,"endOffset":8088424,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiers2","ranges":[{"startOffset":8088425,"endOffset":8088614,"count":0}],"isBlockCoverage":false},{"functionName":"collectElements","ranges":[{"startOffset":8088794,"endOffset":8088815,"count":0}],"isBlockCoverage":false},{"functionName":"collectElements","ranges":[{"startOffset":8088867,"endOffset":8089138,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeOutliningSpans","ranges":[{"startOffset":8089139,"endOffset":8091550,"count":0}],"isBlockCoverage":false},{"functionName":"addRegionOutliningSpans","ranges":[{"startOffset":8091551,"endOffset":8092561,"count":0}],"isBlockCoverage":false},{"functionName":"parseRegionDelimiter","ranges":[{"startOffset":8092616,"endOffset":8092943,"count":0}],"isBlockCoverage":false},{"functionName":"addOutliningForLeadingCommentsForPos","ranges":[{"startOffset":8092944,"endOffset":8094430,"count":0}],"isBlockCoverage":false},{"functionName":"addOutliningForLeadingCommentsForNode","ranges":[{"startOffset":8094431,"endOffset":8094631,"count":0}],"isBlockCoverage":false},{"functionName":"createOutliningSpanFromBounds","ranges":[{"startOffset":8094632,"endOffset":8094762,"count":0}],"isBlockCoverage":false},{"functionName":"getOutliningSpanForNode","ranges":[{"startOffset":8094763,"endOffset":8101791,"count":0}],"isBlockCoverage":false},{"functionName":"functionSpan","ranges":[{"startOffset":8101792,"endOffset":8102172,"count":0}],"isBlockCoverage":false},{"functionName":"spanBetweenTokens","ranges":[{"startOffset":8102173,"endOffset":8102558,"count":0}],"isBlockCoverage":false},{"functionName":"createOutliningSpan","ranges":[{"startOffset":8102559,"endOffset":8102735,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetFunctionOpenToken","ranges":[{"startOffset":8102736,"endOffset":8103076,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfo","ranges":[{"startOffset":8103194,"endOffset":8103213,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsEligibleForRename","ranges":[{"startOffset":8103242,"endOffset":8103271,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfo","ranges":[{"startOffset":8103303,"endOffset":8103742,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoForNode","ranges":[{"startOffset":8103743,"endOffset":8105964,"count":0}],"isBlockCoverage":false},{"functionName":"isDefinedInLibraryFile","ranges":[{"startOffset":8105965,"endOffset":8106188,"count":0}],"isBlockCoverage":false},{"functionName":"wouldRenameInOtherNodeModules","ranges":[{"startOffset":8106189,"endOffset":8107551,"count":0}],"isBlockCoverage":false},{"functionName":"getPackagePathComponents","ranges":[{"startOffset":8107552,"endOffset":8107818,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoForModule","ranges":[{"startOffset":8107819,"endOffset":8108914,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoSuccess","ranges":[{"startOffset":8108915,"endOffset":8109207,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoError","ranges":[{"startOffset":8109208,"endOffset":8109343,"count":0}],"isBlockCoverage":false},{"functionName":"createTriggerSpanForNode","ranges":[{"startOffset":8109344,"endOffset":8109591,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsEligibleForRename","ranges":[{"startOffset":8109592,"endOffset":8109995,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentInfoForCompletions","ranges":[{"startOffset":8110150,"endOffset":8110185,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItems","ranges":[{"startOffset":8110212,"endOffset":8110239,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItems","ranges":[{"startOffset":8110278,"endOffset":8111732,"count":0}],"isBlockCoverage":false},{"functionName":"getCandidateOrTypeInfo","ranges":[{"startOffset":8111733,"endOffset":8113080,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntacticOwner","ranges":[{"startOffset":8113081,"endOffset":8113708,"count":0}],"isBlockCoverage":false},{"functionName":"createJSSignatureHelpItems","ranges":[{"startOffset":8113709,"endOffset":8114795,"count":0}],"isBlockCoverage":false},{"functionName":"containsPrecedingToken","ranges":[{"startOffset":8114796,"endOffset":8115314,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentInfoForCompletions","ranges":[{"startOffset":8115315,"endOffset":8115687,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentOrParameterListInfo","ranges":[{"startOffset":8115688,"endOffset":8116108,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentOrParameterListAndIndex","ranges":[{"startOffset":8116109,"endOffset":8116520,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyContainingArgumentInfo","ranges":[{"startOffset":8116521,"endOffset":8119419,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyContainingArgumentOrContextualParameterInfo","ranges":[{"startOffset":8119420,"endOffset":8119671,"count":0}],"isBlockCoverage":false},{"functionName":"getHighestBinary","ranges":[{"startOffset":8119672,"endOffset":8119776,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryExpressionParameters","ranges":[{"startOffset":8119777,"endOffset":8119911,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetParameterInfo","ranges":[{"startOffset":8119912,"endOffset":8120789,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedNode","ranges":[{"startOffset":8120790,"endOffset":8121113,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualSignatureLocationInfo","ranges":[{"startOffset":8121114,"endOffset":8122440,"count":0}],"isBlockCoverage":false},{"functionName":"chooseBetterSymbol","ranges":[{"startOffset":8122441,"endOffset":8122696,"count":0}],"isBlockCoverage":false},{"functionName":"getSpreadElementCount","ranges":[{"startOffset":8122697,"endOffset":8123138,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentIndex","ranges":[{"startOffset":8123139,"endOffset":8123262,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentCount","ranges":[{"startOffset":8123263,"endOffset":8123411,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentIndexOrCount","ranges":[{"startOffset":8123412,"endOffset":8124260,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentIndexForTemplatePiece","ranges":[{"startOffset":8124261,"endOffset":8124618,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentListInfoForTemplate","ranges":[{"startOffset":8124619,"endOffset":8125156,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableSpanForArguments","ranges":[{"startOffset":8125157,"endOffset":8125504,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableSpanForTaggedTemplate","ranges":[{"startOffset":8125505,"endOffset":8126117,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingArgumentInfo","ranges":[{"startOffset":8126118,"endOffset":8126669,"count":0}],"isBlockCoverage":false},{"functionName":"getChildListThatStartsWithOpenerToken","ranges":[{"startOffset":8126670,"endOffset":8126994,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionFromInvocation","ranges":[{"startOffset":8126995,"endOffset":8127150,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingDeclarationFromInvocation","ranges":[{"startOffset":8127151,"endOffset":8127351,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureHelpItems","ranges":[{"startOffset":8127502,"endOffset":8129534,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeHelpItems","ranges":[{"startOffset":8129535,"endOffset":8130024,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeHelpItem","ranges":[{"startOffset":8130025,"endOffset":8130767,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItem","ranges":[{"startOffset":8130849,"endOffset":8131669,"count":0}],"isBlockCoverage":false},{"functionName":"returnTypeToDisplayParts","ranges":[{"startOffset":8131670,"endOffset":8132302,"count":0}],"isBlockCoverage":false},{"functionName":"itemInfoForTypeParameters","ranges":[{"startOffset":8132303,"endOffset":8133508,"count":0}],"isBlockCoverage":false},{"functionName":"itemInfoForParameters","ranges":[{"startOffset":8133509,"endOffset":8134832,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureHelpParameterForParameter","ranges":[{"startOffset":8134833,"endOffset":8135516,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureHelpParameterForTypeParameter","ranges":[{"startOffset":8135517,"endOffset":8136059,"count":0}],"isBlockCoverage":false},{"functionName":"getSmartSelectionRange","ranges":[{"startOffset":8136225,"endOffset":8136253,"count":0}],"isBlockCoverage":false},{"functionName":"getSmartSelectionRange","ranges":[{"startOffset":8136293,"endOffset":8140258,"count":0}],"isBlockCoverage":false},{"functionName":"positionShouldSnapToNode","ranges":[{"startOffset":8140259,"endOffset":8140543,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectionChildren","ranges":[{"startOffset":8140612,"endOffset":8142830,"count":0}],"isBlockCoverage":false},{"functionName":"groupChildren","ranges":[{"startOffset":8142831,"endOffset":8143257,"count":0}],"isBlockCoverage":false},{"functionName":"splitChildren","ranges":[{"startOffset":8143258,"endOffset":8144109,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxList2","ranges":[{"startOffset":8144110,"endOffset":8144315,"count":0}],"isBlockCoverage":false},{"functionName":"isListOpener","ranges":[{"startOffset":8144316,"endOffset":8144541,"count":0}],"isBlockCoverage":false},{"functionName":"isListCloser","ranges":[{"startOffset":8144542,"endOffset":8144770,"count":0}],"isBlockCoverage":false},{"functionName":"getEndPos","ranges":[{"startOffset":8144771,"endOffset":8145123,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolDisplayPartsDocumentationAndSymbolKind","ranges":[{"startOffset":8145296,"endOffset":8145349,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolKind","ranges":[{"startOffset":8145368,"endOffset":8145387,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolModifiers","ranges":[{"startOffset":8145411,"endOffset":8145435,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolKind","ranges":[{"startOffset":8145624,"endOffset":8146622,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolKindOfConstructorPropertyMethodAccessorFunctionOrVar","ranges":[{"startOffset":8146623,"endOffset":8149643,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedSymbolModifiers","ranges":[{"startOffset":8149644,"endOffset":8150147,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolModifiers","ranges":[{"startOffset":8150148,"endOffset":8150782,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolDisplayPartsDocumentationAndSymbolKindWorker","ranges":[{"startOffset":8150783,"endOffset":8176395,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolDisplayPartsDocumentationAndSymbolKind","ranges":[{"startOffset":8176396,"endOffset":8176790,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalVariableOrFunction","ranges":[{"startOffset":8176791,"endOffset":8177417,"count":0}],"isBlockCoverage":false},{"functionName":"ChangeTracker","ranges":[{"startOffset":8177550,"endOffset":8177569,"count":0}],"isBlockCoverage":false},{"functionName":"LeadingTriviaOption","ranges":[{"startOffset":8177594,"endOffset":8177619,"count":0}],"isBlockCoverage":false},{"functionName":"TrailingTriviaOption","ranges":[{"startOffset":8177645,"endOffset":8177671,"count":0}],"isBlockCoverage":false},{"functionName":"applyChanges","ranges":[{"startOffset":8177689,"endOffset":8177707,"count":0}],"isBlockCoverage":false},{"functionName":"assignPositionsToNode","ranges":[{"startOffset":8177734,"endOffset":8177761,"count":0}],"isBlockCoverage":false},{"functionName":"createWriter","ranges":[{"startOffset":8177779,"endOffset":8177797,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNode","ranges":[{"startOffset":8177813,"endOffset":8177829,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedEndPosition","ranges":[{"startOffset":8177857,"endOffset":8177885,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotatable","ranges":[{"startOffset":8177912,"endOffset":8177939,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLocationToAddComment","ranges":[{"startOffset":8177972,"endOffset":8178005,"count":0}],"isBlockCoverage":false},{"functionName":"getPos2","ranges":[{"startOffset":8178042,"endOffset":8178152,"count":0}],"isBlockCoverage":false},{"functionName":"setPos","ranges":[{"startOffset":8178153,"endOffset":8178238,"count":0}],"isBlockCoverage":false},{"functionName":"getEnd","ranges":[{"startOffset":8178239,"endOffset":8178348,"count":0}],"isBlockCoverage":false},{"functionName":"setEnd","ranges":[{"startOffset":8178349,"endOffset":8178434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8178478,"endOffset":8178836,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8178910,"endOffset":8179217,"count":1}],"isBlockCoverage":false},{"functionName":"skipWhitespacesAndLineBreaks","ranges":[{"startOffset":8179248,"endOffset":8179419,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommentsBeforeLineBreak","ranges":[{"startOffset":8179420,"endOffset":8179677,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRange","ranges":[{"startOffset":8179793,"endOffset":8180002,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedStartPosition","ranges":[{"startOffset":8180003,"endOffset":8181955,"count":0}],"isBlockCoverage":false},{"functionName":"getEndPositionOfMultilineTrailingComment","ranges":[{"startOffset":8181956,"endOffset":8182877,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedEndPosition","ranges":[{"startOffset":8182878,"endOffset":8183864,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":8183865,"endOffset":8184093,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotatable","ranges":[{"startOffset":8184094,"endOffset":8184244,"count":0}],"isBlockCoverage":false},{"functionName":"_ChangeTracker","ranges":[{"startOffset":8184369,"endOffset":8184701,"count":0}],"isBlockCoverage":false},{"functionName":"fromContext","ranges":[{"startOffset":8184711,"endOffset":8184865,"count":0}],"isBlockCoverage":false},{"functionName":"with","ranges":[{"startOffset":8184875,"endOffset":8185005,"count":0}],"isBlockCoverage":false},{"functionName":"pushRaw","ranges":[{"startOffset":8185008,"endOffset":8185306,"count":0}],"isBlockCoverage":false},{"functionName":"deleteRange","ranges":[{"startOffset":8185309,"endOffset":8185413,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":8185416,"endOffset":8185496,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNode","ranges":[{"startOffset":8185604,"endOffset":8185778,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodes","ranges":[{"startOffset":8185781,"endOffset":8186238,"count":0}],"isBlockCoverage":false},{"functionName":"deleteModifier","ranges":[{"startOffset":8186241,"endOffset":8186464,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodeRange","ranges":[{"startOffset":8186467,"endOffset":8186817,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodeRangeExcludingEnd","ranges":[{"startOffset":8186820,"endOffset":8187243,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRange","ranges":[{"startOffset":8187246,"endOffset":8187413,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNode","ranges":[{"startOffset":8187416,"endOffset":8187608,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeRange","ranges":[{"startOffset":8187611,"endOffset":8187825,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRangeWithNodes","ranges":[{"startOffset":8187828,"endOffset":8188010,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeWithNodes","ranges":[{"startOffset":8188013,"endOffset":8188225,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeWithText","ranges":[{"startOffset":8188228,"endOffset":8188402,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeRangeWithNodes","ranges":[{"startOffset":8188405,"endOffset":8188639,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasTrailingComment","ranges":[{"startOffset":8188642,"endOffset":8188827,"count":0}],"isBlockCoverage":false},{"functionName":"nextCommaToken","ranges":[{"startOffset":8188830,"endOffset":8189001,"count":0}],"isBlockCoverage":false},{"functionName":"replacePropertyAssignment","ranges":[{"startOffset":8189004,"endOffset":8189225,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAt","ranges":[{"startOffset":8189228,"endOffset":8189357,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAt","ranges":[{"startOffset":8189360,"endOffset":8189501,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtTopOfFile","ranges":[{"startOffset":8189504,"endOffset":8189637,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAtTopOfFile","ranges":[{"startOffset":8189640,"endOffset":8189776,"count":0}],"isBlockCoverage":false},{"functionName":"insertAtTopOfFile","ranges":[{"startOffset":8189779,"endOffset":8190297,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAtEndOfFile","ranges":[{"startOffset":8190300,"endOffset":8190436,"count":0}],"isBlockCoverage":false},{"functionName":"insertAtEndOfFile","ranges":[{"startOffset":8190439,"endOffset":8190746,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsInNewFile","ranges":[{"startOffset":8190749,"endOffset":8190959,"count":0}],"isBlockCoverage":false},{"functionName":"insertFirstParameter","ranges":[{"startOffset":8190962,"endOffset":8191218,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeBefore","ranges":[{"startOffset":8191221,"endOffset":8191482,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesBefore","ranges":[{"startOffset":8191485,"endOffset":8191758,"count":0}],"isBlockCoverage":false},{"functionName":"insertModifierAt","ranges":[{"startOffset":8191761,"endOffset":8191904,"count":0}],"isBlockCoverage":false},{"functionName":"insertModifierBefore","ranges":[{"startOffset":8191907,"endOffset":8192065,"count":0}],"isBlockCoverage":false},{"functionName":"insertCommentBeforeLine","ranges":[{"startOffset":8192068,"endOffset":8192763,"count":0}],"isBlockCoverage":false},{"functionName":"insertJsdocCommentBefore","ranges":[{"startOffset":8192766,"endOffset":8193470,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocText","ranges":[{"startOffset":8193473,"endOffset":8193893,"count":0}],"isBlockCoverage":false},{"functionName":"replaceJSDocComment","ranges":[{"startOffset":8193896,"endOffset":8194114,"count":0}],"isBlockCoverage":false},{"functionName":"addJSDocTags","ranges":[{"startOffset":8194117,"endOffset":8194545,"count":0}],"isBlockCoverage":false},{"functionName":"filterJSDocTags","ranges":[{"startOffset":8194548,"endOffset":8194719,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRangeWithText","ranges":[{"startOffset":8194722,"endOffset":8194845,"count":0}],"isBlockCoverage":false},{"functionName":"insertText","ranges":[{"startOffset":8194848,"endOffset":8194954,"count":0}],"isBlockCoverage":false},{"functionName":"tryInsertTypeAnnotation","ranges":[{"startOffset":8195096,"endOffset":8195632,"count":0}],"isBlockCoverage":false},{"functionName":"tryInsertThisTypeAnnotation","ranges":[{"startOffset":8195635,"endOffset":8195928,"count":0}],"isBlockCoverage":false},{"functionName":"insertTypeParameters","ranges":[{"startOffset":8195931,"endOffset":8196221,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForInsertNodeBefore","ranges":[{"startOffset":8196224,"endOffset":8196956,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtConstructorStart","ranges":[{"startOffset":8196959,"endOffset":8197322,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtConstructorStartAfterSuperCall","ranges":[{"startOffset":8197325,"endOffset":8197772,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtConstructorEnd","ranges":[{"startOffset":8197775,"endOffset":8198131,"count":0}],"isBlockCoverage":false},{"functionName":"replaceConstructorBody","ranges":[{"startOffset":8198134,"endOffset":8198312,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtEndOfScope","ranges":[{"startOffset":8198315,"endOffset":8198698,"count":0}],"isBlockCoverage":false},{"functionName":"insertMemberAtStart","ranges":[{"startOffset":8198701,"endOffset":8198820,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtObjectStart","ranges":[{"startOffset":8198823,"endOffset":8198944,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtStartWorker","ranges":[{"startOffset":8198947,"endOffset":8199299,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentationFromExistingMembers","ranges":[{"startOffset":8199480,"endOffset":8200233,"count":0}],"isBlockCoverage":false},{"functionName":"computeIndentationForNewMember","ranges":[{"startOffset":8200236,"endOffset":8200570,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertNodeAtStartInsertOptions","ranges":[{"startOffset":8200573,"endOffset":8201388,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAfterComma","ranges":[{"startOffset":8201391,"endOffset":8201675,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAfter","ranges":[{"startOffset":8201678,"endOffset":8201915,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtEndOfList","ranges":[{"startOffset":8201918,"endOffset":8202044,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAfter","ranges":[{"startOffset":8202047,"endOffset":8202296,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAfterWorker","ranges":[{"startOffset":8202299,"endOffset":8202698,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertNodeAfterOptions","ranges":[{"startOffset":8202701,"endOffset":8202983,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertNodeAfterOptionsWorker","ranges":[{"startOffset":8202986,"endOffset":8203713,"count":0}],"isBlockCoverage":false},{"functionName":"insertName","ranges":[{"startOffset":8203716,"endOffset":8205138,"count":0}],"isBlockCoverage":false},{"functionName":"insertExportModifier","ranges":[{"startOffset":8205141,"endOffset":8205256,"count":0}],"isBlockCoverage":false},{"functionName":"insertImportSpecifierAtIndex","ranges":[{"startOffset":8205259,"endOffset":8205762,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeInListAfter","ranges":[{"startOffset":8206057,"endOffset":8208726,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeExpression","ranges":[{"startOffset":8208729,"endOffset":8208892,"count":0}],"isBlockCoverage":false},{"functionName":"finishClassesWithNodesInsertedAtStart","ranges":[{"startOffset":8208895,"endOffset":8209640,"count":0}],"isBlockCoverage":false},{"functionName":"finishDeleteDeclarations","ranges":[{"startOffset":8209643,"endOffset":8210700,"count":0}],"isBlockCoverage":false},{"functionName":"getChanges","ranges":[{"startOffset":8211030,"endOffset":8211517,"count":0}],"isBlockCoverage":false},{"functionName":"createNewFile","ranges":[{"startOffset":8211520,"endOffset":8211637,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocHost","ranges":[{"startOffset":8211641,"endOffset":8211923,"count":0}],"isBlockCoverage":false},{"functionName":"tryMergeJsdocTags","ranges":[{"startOffset":8211924,"endOffset":8212887,"count":0}],"isBlockCoverage":false},{"functionName":"startPositionToDeleteNodeInList","ranges":[{"startOffset":8212888,"endOffset":8213160,"count":0}],"isBlockCoverage":false},{"functionName":"endPositionToDeleteNodeInList","ranges":[{"startOffset":8213161,"endOffset":8214166,"count":0}],"isBlockCoverage":false},{"functionName":"getClassOrObjectBraceEnds","ranges":[{"startOffset":8214167,"endOffset":8214453,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOrProperties","ranges":[{"startOffset":8214454,"endOffset":8214570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8214591,"endOffset":8219908,"count":1}],"isBlockCoverage":false},{"functionName":"getTextChangesFromChanges","ranges":[{"startOffset":8214615,"endOffset":8216035,"count":0}],"isBlockCoverage":false},{"functionName":"newFileChanges","ranges":[{"startOffset":8216110,"endOffset":8216418,"count":0}],"isBlockCoverage":false},{"functionName":"newFileChangesWorker","ranges":[{"startOffset":8216471,"endOffset":8217171,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewText","ranges":[{"startOffset":8217236,"endOffset":8218204,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattedTextOfNode","ranges":[{"startOffset":8218207,"endOffset":8219378,"count":0}],"isBlockCoverage":false},{"functionName":"getNonformattedText","ranges":[{"startOffset":8219381,"endOffset":8219846,"count":0}],"isBlockCoverage":false},{"functionName":"applyChanges","ranges":[{"startOffset":8219950,"endOffset":8220194,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia2","ranges":[{"startOffset":8220195,"endOffset":8220260,"count":0}],"isBlockCoverage":false},{"functionName":"assignPositionsToNode","ranges":[{"startOffset":8220497,"endOffset":8220844,"count":0}],"isBlockCoverage":false},{"functionName":"assignPositionsToNodeArray","ranges":[{"startOffset":8220845,"endOffset":8221229,"count":0}],"isBlockCoverage":false},{"functionName":"createWriter","ranges":[{"startOffset":8221230,"endOffset":8225323,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertionPositionAtSourceFileTop","ranges":[{"startOffset":8225324,"endOffset":8227514,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLocationToAddComment","ranges":[{"startOffset":8227515,"endOffset":8227742,"count":0}],"isBlockCoverage":false},{"functionName":"needSemicolonBetween","ranges":[{"startOffset":8227743,"endOffset":8227992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8228017,"endOffset":8233365,"count":1}],"isBlockCoverage":false},{"functionName":"deleteDeclaration2","ranges":[{"startOffset":8228045,"endOffset":8231077,"count":0}],"isBlockCoverage":false},{"functionName":"deleteDefaultImport","ranges":[{"startOffset":8231141,"endOffset":8231866,"count":0}],"isBlockCoverage":false},{"functionName":"deleteImportBinding","ranges":[{"startOffset":8231869,"endOffset":8232294,"count":0}],"isBlockCoverage":false},{"functionName":"deleteVariableDeclaration","ranges":[{"startOffset":8232297,"endOffset":8233363,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNode","ranges":[{"startOffset":8233415,"endOffset":8233747,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodeInList","ranges":[{"startOffset":8233748,"endOffset":8234524,"count":0}],"isBlockCoverage":false},{"functionName":"FormattingContext","ranges":[{"startOffset":8234658,"endOffset":8234681,"count":0}],"isBlockCoverage":false},{"functionName":"FormattingRequestKind","ranges":[{"startOffset":8234708,"endOffset":8234735,"count":0}],"isBlockCoverage":false},{"functionName":"RuleAction","ranges":[{"startOffset":8234751,"endOffset":8234767,"count":0}],"isBlockCoverage":false},{"functionName":"RuleFlags","ranges":[{"startOffset":8234782,"endOffset":8234797,"count":0}],"isBlockCoverage":false},{"functionName":"SmartIndenter","ranges":[{"startOffset":8234816,"endOffset":8234835,"count":0}],"isBlockCoverage":false},{"functionName":"anyContext","ranges":[{"startOffset":8234851,"endOffset":8234867,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeWithKind","ranges":[{"startOffset":8234896,"endOffset":8234925,"count":0}],"isBlockCoverage":false},{"functionName":"formatDocument","ranges":[{"startOffset":8234945,"endOffset":8234965,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeGivenIndentation","ranges":[{"startOffset":8234997,"endOffset":8235029,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnClosingCurly","ranges":[{"startOffset":8235055,"endOffset":8235081,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnEnter","ranges":[{"startOffset":8235100,"endOffset":8235119,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnOpeningCurly","ranges":[{"startOffset":8235145,"endOffset":8235171,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnSemicolon","ranges":[{"startOffset":8235194,"endOffset":8235217,"count":0}],"isBlockCoverage":false},{"functionName":"formatSelection","ranges":[{"startOffset":8235238,"endOffset":8235259,"count":0}],"isBlockCoverage":false},{"functionName":"getAllRules","ranges":[{"startOffset":8235276,"endOffset":8235293,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatContext","ranges":[{"startOffset":8235315,"endOffset":8235337,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingScanner","ranges":[{"startOffset":8235363,"endOffset":8235389,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationString","ranges":[{"startOffset":8235415,"endOffset":8235441,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeOfEnclosingComment","ranges":[{"startOffset":8235473,"endOffset":8235505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8235604,"endOffset":8236264,"count":1}],"isBlockCoverage":false},{"functionName":"FormattingContext","ranges":[{"startOffset":8236330,"endOffset":8236509,"count":0}],"isBlockCoverage":false},{"functionName":"updateContext","ranges":[{"startOffset":8236512,"endOffset":8237131,"count":0}],"isBlockCoverage":false},{"functionName":"ContextNodeAllOnSameLine","ranges":[{"startOffset":8237134,"endOffset":8237344,"count":0}],"isBlockCoverage":false},{"functionName":"NextNodeAllOnSameLine","ranges":[{"startOffset":8237347,"endOffset":8237549,"count":0}],"isBlockCoverage":false},{"functionName":"TokensAreOnSameLine","ranges":[{"startOffset":8237552,"endOffset":8237926,"count":0}],"isBlockCoverage":false},{"functionName":"ContextNodeBlockIsOnOneLine","ranges":[{"startOffset":8237929,"endOffset":8238152,"count":0}],"isBlockCoverage":false},{"functionName":"NextNodeBlockIsOnOneLine","ranges":[{"startOffset":8238155,"endOffset":8238370,"count":0}],"isBlockCoverage":false},{"functionName":"NodeIsOnOneLine","ranges":[{"startOffset":8238373,"endOffset":8238627,"count":0}],"isBlockCoverage":false},{"functionName":"BlockIsOnOneLine","ranges":[{"startOffset":8238630,"endOffset":8239137,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingScanner","ranges":[{"startOffset":8239388,"endOffset":8247021,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8247121,"endOffset":8247957,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8248011,"endOffset":8248171,"count":1}],"isBlockCoverage":false},{"functionName":"getAllRules","ranges":[{"startOffset":8248228,"endOffset":8281774,"count":0}],"isBlockCoverage":false},{"functionName":"rule","ranges":[{"startOffset":8281775,"endOffset":8281987,"count":0}],"isBlockCoverage":false},{"functionName":"tokenRangeFrom","ranges":[{"startOffset":8281988,"endOffset":8282062,"count":0}],"isBlockCoverage":false},{"functionName":"toTokenRange","ranges":[{"startOffset":8282063,"endOffset":8282194,"count":0}],"isBlockCoverage":false},{"functionName":"tokenRangeFromRange","ranges":[{"startOffset":8282195,"endOffset":8282425,"count":0}],"isBlockCoverage":false},{"functionName":"optionEquals","ranges":[{"startOffset":8282426,"endOffset":8282562,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionEnabled","ranges":[{"startOffset":8282563,"endOffset":8282719,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionDisabled","ranges":[{"startOffset":8282720,"endOffset":8282876,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionDisabledOrUndefined","ranges":[{"startOffset":8282877,"endOffset":8283046,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionDisabledOrUndefinedOrTokensOnSameLine","ranges":[{"startOffset":8283047,"endOffset":8283267,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionEnabledOrUndefined","ranges":[{"startOffset":8283268,"endOffset":8283437,"count":0}],"isBlockCoverage":false},{"functionName":"isForContext","ranges":[{"startOffset":8283438,"endOffset":8283534,"count":0}],"isBlockCoverage":false},{"functionName":"isNotForContext","ranges":[{"startOffset":8283535,"endOffset":8283605,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOpContext","ranges":[{"startOffset":8283606,"endOffset":8285594,"count":0}],"isBlockCoverage":false},{"functionName":"isNotBinaryOpContext","ranges":[{"startOffset":8285595,"endOffset":8285675,"count":0}],"isBlockCoverage":false},{"functionName":"isNotTypeAnnotationContext","ranges":[{"startOffset":8285676,"endOffset":8285768,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotationContext","ranges":[{"startOffset":8285769,"endOffset":8286088,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalPropertyContext","ranges":[{"startOffset":8286089,"endOffset":8286226,"count":0}],"isBlockCoverage":false},{"functionName":"isNonOptionalPropertyContext","ranges":[{"startOffset":8286227,"endOffset":8286323,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalOperatorContext","ranges":[{"startOffset":8286324,"endOffset":8286503,"count":0}],"isBlockCoverage":false},{"functionName":"isSameLineTokenOrBeforeBlockContext","ranges":[{"startOffset":8286504,"endOffset":8286634,"count":0}],"isBlockCoverage":false},{"functionName":"isBraceWrappedContext","ranges":[{"startOffset":8286635,"endOffset":8286838,"count":0}],"isBlockCoverage":false},{"functionName":"isBeforeMultilineBlockContext","ranges":[{"startOffset":8286839,"endOffset":8287006,"count":0}],"isBlockCoverage":false},{"functionName":"isMultilineBlockContext","ranges":[{"startOffset":8287007,"endOffset":8287168,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleLineBlockContext","ranges":[{"startOffset":8287169,"endOffset":8287330,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockContext","ranges":[{"startOffset":8287331,"endOffset":8287417,"count":0}],"isBlockCoverage":false},{"functionName":"isBeforeBlockContext","ranges":[{"startOffset":8287418,"endOffset":8287514,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsBlockContext","ranges":[{"startOffset":8287515,"endOffset":8287819,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclContext","ranges":[{"startOffset":8287820,"endOffset":8288613,"count":0}],"isBlockCoverage":false},{"functionName":"isNotFunctionDeclContext","ranges":[{"startOffset":8288614,"endOffset":8288702,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclarationOrFunctionExpressionContext","ranges":[{"startOffset":8288703,"endOffset":8288903,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeScriptDeclWithBlockContext","ranges":[{"startOffset":8288904,"endOffset":8289026,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsTypeScriptDeclWithBlockContext","ranges":[{"startOffset":8289027,"endOffset":8289506,"count":0}],"isBlockCoverage":false},{"functionName":"isAfterCodeBlockContext","ranges":[{"startOffset":8289507,"endOffset":8290098,"count":0}],"isBlockCoverage":false},{"functionName":"isControlDeclContext","ranges":[{"startOffset":8290099,"endOffset":8290640,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectContext","ranges":[{"startOffset":8290641,"endOffset":8290751,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionCallContext","ranges":[{"startOffset":8290752,"endOffset":8290859,"count":0}],"isBlockCoverage":false},{"functionName":"isNewContext","ranges":[{"startOffset":8290860,"endOffset":8290957,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionCallOrNewContext","ranges":[{"startOffset":8290958,"endOffset":8291072,"count":0}],"isBlockCoverage":false},{"functionName":"isPreviousTokenNotComma","ranges":[{"startOffset":8291073,"endOffset":8291182,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenNotCloseBracket","ranges":[{"startOffset":8291183,"endOffset":8291299,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenNotCloseParen","ranges":[{"startOffset":8291300,"endOffset":8291412,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionContext","ranges":[{"startOffset":8291413,"endOffset":8291520,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeContext","ranges":[{"startOffset":8291521,"endOffset":8291622,"count":0}],"isBlockCoverage":false},{"functionName":"isNonJsxSameLineTokenContext","ranges":[{"startOffset":8291623,"endOffset":8291762,"count":0}],"isBlockCoverage":false},{"functionName":"isNonJsxTextContext","ranges":[{"startOffset":8291763,"endOffset":8291860,"count":0}],"isBlockCoverage":false},{"functionName":"isNonJsxElementOrFragmentContext","ranges":[{"startOffset":8291861,"endOffset":8292029,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpressionContext","ranges":[{"startOffset":8292030,"endOffset":8292198,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenParentJsxAttribute","ranges":[{"startOffset":8292199,"endOffset":8292446,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeContext","ranges":[{"startOffset":8292447,"endOffset":8292552,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenParentNotJsxNamespacedName","ranges":[{"startOffset":8292553,"endOffset":8292683,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenParentJsxNamespacedName","ranges":[{"startOffset":8292684,"endOffset":8292811,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElementContext","ranges":[{"startOffset":8292812,"endOffset":8292935,"count":0}],"isBlockCoverage":false},{"functionName":"isNotBeforeBlockInFunctionDeclarationContext","ranges":[{"startOffset":8292936,"endOffset":8293078,"count":0}],"isBlockCoverage":false},{"functionName":"isEndOfDecoratorContextOnSameLine","ranges":[{"startOffset":8293079,"endOffset":8293322,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsInDecoratorContext","ranges":[{"startOffset":8293323,"endOffset":8293485,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfVariableDeclarationList","ranges":[{"startOffset":8293486,"endOffset":8293712,"count":0}],"isBlockCoverage":false},{"functionName":"isNotFormatOnEnter","ranges":[{"startOffset":8293713,"endOffset":8293819,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclContext","ranges":[{"startOffset":8293820,"endOffset":8293928,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeContext","ranges":[{"startOffset":8293929,"endOffset":8294031,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorSignatureContext","ranges":[{"startOffset":8294032,"endOffset":8294151,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeArgumentOrParameterOrAssertion","ranges":[{"startOffset":8294152,"endOffset":8295022,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeArgumentOrParameterOrAssertionContext","ranges":[{"startOffset":8295023,"endOffset":8295277,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionContext","ranges":[{"startOffset":8295278,"endOffset":8295395,"count":0}],"isBlockCoverage":false},{"functionName":"isNonTypeAssertionContext","ranges":[{"startOffset":8295396,"endOffset":8295486,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidOpContext","ranges":[{"startOffset":8295487,"endOffset":8295654,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldOrYieldStarWithOperand","ranges":[{"startOffset":8295655,"endOffset":8295816,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAssertionContext","ranges":[{"startOffset":8295817,"endOffset":8295931,"count":0}],"isBlockCoverage":false},{"functionName":"isNotStatementConditionContext","ranges":[{"startOffset":8295932,"endOffset":8296032,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementConditionContext","ranges":[{"startOffset":8296033,"endOffset":8296378,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonDeletionContext","ranges":[{"startOffset":8296379,"endOffset":8298697,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonInsertionContext","ranges":[{"startOffset":8298698,"endOffset":8298858,"count":0}],"isBlockCoverage":false},{"functionName":"isNotPropertyAccessOnIntegerLiteral","ranges":[{"startOffset":8298859,"endOffset":8299086,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatContext","ranges":[{"startOffset":8299127,"endOffset":8299224,"count":0}],"isBlockCoverage":false},{"functionName":"getRulesMap","ranges":[{"startOffset":8299244,"endOffset":8299383,"count":0}],"isBlockCoverage":false},{"functionName":"getRuleActionExclusion","ranges":[{"startOffset":8299384,"endOffset":8299867,"count":0}],"isBlockCoverage":false},{"functionName":"createRulesMap","ranges":[{"startOffset":8299868,"endOffset":8300496,"count":0}],"isBlockCoverage":false},{"functionName":"buildMap","ranges":[{"startOffset":8300497,"endOffset":8301198,"count":0}],"isBlockCoverage":false},{"functionName":"getRuleBucketIndex","ranges":[{"startOffset":8301199,"endOffset":8301409,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8301511,"endOffset":8302117,"count":1}],"isBlockCoverage":false},{"functionName":"addRule","ranges":[{"startOffset":8302141,"endOffset":8302764,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertionIndex","ranges":[{"startOffset":8302765,"endOffset":8302988,"count":0}],"isBlockCoverage":false},{"functionName":"increaseInsertionIndex","ranges":[{"startOffset":8302989,"endOffset":8303307,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeWithKind","ranges":[{"startOffset":8303350,"endOffset":8303625,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnEnter","ranges":[{"startOffset":8303626,"endOffset":8304346,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnSemicolon","ranges":[{"startOffset":8304347,"endOffset":8304643,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnOpeningCurly","ranges":[{"startOffset":8304644,"endOffset":8305236,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnClosingCurly","ranges":[{"startOffset":8305237,"endOffset":8305555,"count":0}],"isBlockCoverage":false},{"functionName":"formatDocument","ranges":[{"startOffset":8305556,"endOffset":8305754,"count":0}],"isBlockCoverage":false},{"functionName":"formatSelection","ranges":[{"startOffset":8305755,"endOffset":8305992,"count":0}],"isBlockCoverage":false},{"functionName":"findImmediatelyPrecedingTokenOfKind","ranges":[{"startOffset":8305993,"endOffset":8306270,"count":0}],"isBlockCoverage":false},{"functionName":"findOutermostNodeWithinListLevel","ranges":[{"startOffset":8306271,"endOffset":8306512,"count":0}],"isBlockCoverage":false},{"functionName":"isListElement","ranges":[{"startOffset":8306513,"endOffset":8307155,"count":0}],"isBlockCoverage":false},{"functionName":"findEnclosingNode","ranges":[{"startOffset":8307156,"endOffset":8307502,"count":0}],"isBlockCoverage":false},{"functionName":"prepareRangeContainsErrorFunction","ranges":[{"startOffset":8307503,"endOffset":8308264,"count":0}],"isBlockCoverage":false},{"functionName":"getScanStartPosition","ranges":[{"startOffset":8308265,"endOffset":8308741,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnOrInheritedDelta","ranges":[{"startOffset":8308742,"endOffset":8309235,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeGivenIndentation","ranges":[{"startOffset":8309236,"endOffset":8309738,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeLines","ranges":[{"startOffset":8309739,"endOffset":8310035,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpan","ranges":[{"startOffset":8310036,"endOffset":8310794,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpanWorker","ranges":[{"startOffset":8310795,"endOffset":8341331,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeOfEnclosingComment","ranges":[{"startOffset":8341332,"endOffset":8342949,"count":0}],"isBlockCoverage":false},{"functionName":"getOpenTokenForList","ranges":[{"startOffset":8342950,"endOffset":8344529,"count":0}],"isBlockCoverage":false},{"functionName":"getCloseTokenForOpenToken","ranges":[{"startOffset":8344530,"endOffset":8344841,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationString","ranges":[{"startOffset":8344921,"endOffset":8346410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8346476,"endOffset":8370406,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8346514,"endOffset":8346579,"count":1}],"isBlockCoverage":false},{"functionName":"getIndentation","ranges":[{"startOffset":8346607,"endOffset":8349001,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentIndent","ranges":[{"startOffset":8349054,"endOffset":8350003,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockIndent","ranges":[{"startOffset":8350006,"endOffset":8350417,"count":0}],"isBlockCoverage":false},{"functionName":"getSmartIndent","ranges":[{"startOffset":8350420,"endOffset":8351907,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationForNode","ranges":[{"startOffset":8351910,"endOffset":8352292,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseIndentation","ranges":[{"startOffset":8352359,"endOffset":8352441,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationForNodeWorker","ranges":[{"startOffset":8352502,"endOffset":8354616,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingListOrParentStart","ranges":[{"startOffset":8354619,"endOffset":8354909,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForListItemBeforeComma","ranges":[{"startOffset":8354912,"endOffset":8355302,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForNode","ranges":[{"startOffset":8355305,"endOffset":8355772,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8355797,"endOffset":8356021,"count":1}],"isBlockCoverage":false},{"functionName":"nextTokenIsCurlyBraceOnSameLineAsCursor","ranges":[{"startOffset":8356065,"endOffset":8356671,"count":0}],"isBlockCoverage":false},{"functionName":"getStartLineAndCharacterForNode","ranges":[{"startOffset":8356674,"endOffset":8356812,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentAndStartLineOverlapsExpressionBeingCalled","ranges":[{"startOffset":8356815,"endOffset":8357290,"count":0}],"isBlockCoverage":false},{"functionName":"childStartsOnTheSameLineWithElseInIfStatement","ranges":[{"startOffset":8357417,"endOffset":8357912,"count":0}],"isBlockCoverage":false},{"functionName":"childIsUnindentedBranchOfConditionalExpression","ranges":[{"startOffset":8358027,"endOffset":8358761,"count":0}],"isBlockCoverage":false},{"functionName":"argumentStartsOnSameLineAsPreviousArgument","ranges":[{"startOffset":8358878,"endOffset":8359569,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingList","ranges":[{"startOffset":8359678,"endOffset":8359837,"count":0}],"isBlockCoverage":false},{"functionName":"getListByPosition","ranges":[{"startOffset":8359896,"endOffset":8360014,"count":0}],"isBlockCoverage":false},{"functionName":"getListByRange","ranges":[{"startOffset":8360017,"endOffset":8361788,"count":0}],"isBlockCoverage":false},{"functionName":"getVisualListRange","ranges":[{"startOffset":8361791,"endOffset":8362144,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForListStartLine","ranges":[{"startOffset":8362147,"endOffset":8362411,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForListItem","ranges":[{"startOffset":8362414,"endOffset":8363144,"count":0}],"isBlockCoverage":false},{"functionName":"deriveActualIndentationFromList","ranges":[{"startOffset":8363147,"endOffset":8363868,"count":0}],"isBlockCoverage":false},{"functionName":"findColumnForFirstNonWhitespaceCharacterInLine","ranges":[{"startOffset":8363871,"endOffset":8364174,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonWhitespaceCharacterAndColumn","ranges":[{"startOffset":8364177,"endOffset":8364674,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonWhitespaceColumn","ranges":[{"startOffset":8364779,"endOffset":8364960,"count":0}],"isBlockCoverage":false},{"functionName":"nodeWillIndentChild","ranges":[{"startOffset":8365041,"endOffset":8369329,"count":0}],"isBlockCoverage":false},{"functionName":"isControlFlowEndingStatement","ranges":[{"startOffset":8369392,"endOffset":8369714,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIndentChildNode","ranges":[{"startOffset":8369717,"endOffset":8370031,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnOneLine","ranges":[{"startOffset":8370098,"endOffset":8370404,"count":0}],"isBlockCoverage":false},{"functionName":"preparePasteEdits","ranges":[{"startOffset":8370602,"endOffset":8370625,"count":0}],"isBlockCoverage":false},{"functionName":"preparePasteEdits","ranges":[{"startOffset":8370668,"endOffset":8371916,"count":0}],"isBlockCoverage":false},{"functionName":"pasteEditsProvider","ranges":[{"startOffset":8372051,"endOffset":8372075,"count":0}],"isBlockCoverage":false},{"functionName":"pasteEditsProvider","ranges":[{"startOffset":8372150,"endOffset":8372581,"count":0}],"isBlockCoverage":false},{"functionName":"pasteEdits","ranges":[{"startOffset":8372582,"endOffset":8377059,"count":0}],"isBlockCoverage":false},{"functionName":"getUsageInfoRangeForPasteEdits","ranges":[{"startOffset":8377060,"endOffset":8377631,"count":0}],"isBlockCoverage":false},{"functionName":"ANONYMOUS","ranges":[{"startOffset":8377724,"endOffset":8377739,"count":0}],"isBlockCoverage":false},{"functionName":"AccessFlags","ranges":[{"startOffset":8377756,"endOffset":8377773,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionLevel","ranges":[{"startOffset":8377793,"endOffset":8377813,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentDeclarationKind","ranges":[{"startOffset":8377844,"endOffset":8377875,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentKind","ranges":[{"startOffset":8377895,"endOffset":8377915,"count":0}],"isBlockCoverage":false},{"functionName":"Associativity","ranges":[{"startOffset":8377934,"endOffset":8377953,"count":0}],"isBlockCoverage":false},{"functionName":"BreakpointResolver","ranges":[{"startOffset":8377977,"endOffset":8378012,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderFileEmit","ranges":[{"startOffset":8378033,"endOffset":8378054,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderProgramKind","ranges":[{"startOffset":8378078,"endOffset":8378102,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderState","ranges":[{"startOffset":8378120,"endOffset":8378138,"count":0}],"isBlockCoverage":false},{"functionName":"CallHierarchy","ranges":[{"startOffset":8378157,"endOffset":8378187,"count":0}],"isBlockCoverage":false},{"functionName":"CharacterCodes","ranges":[{"startOffset":8378207,"endOffset":8378227,"count":0}],"isBlockCoverage":false},{"functionName":"CheckFlags","ranges":[{"startOffset":8378243,"endOffset":8378259,"count":0}],"isBlockCoverage":false},{"functionName":"CheckMode","ranges":[{"startOffset":8378274,"endOffset":8378289,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationType","ranges":[{"startOffset":8378313,"endOffset":8378337,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationTypeNames","ranges":[{"startOffset":8378366,"endOffset":8378395,"count":0}],"isBlockCoverage":false},{"functionName":"CommentDirectiveType","ranges":[{"startOffset":8378421,"endOffset":8378447,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":8378463,"endOffset":8378479,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionInfoFlags","ranges":[{"startOffset":8378504,"endOffset":8378529,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionTriggerKind","ranges":[{"startOffset":8378556,"endOffset":8378583,"count":0}],"isBlockCoverage":false},{"functionName":"Completions","ranges":[{"startOffset":8378600,"endOffset":8378628,"count":0}],"isBlockCoverage":false},{"functionName":"ContainerFlags","ranges":[{"startOffset":8378648,"endOffset":8378668,"count":0}],"isBlockCoverage":false},{"functionName":"ContextFlags","ranges":[{"startOffset":8378686,"endOffset":8378704,"count":0}],"isBlockCoverage":false},{"functionName":"Debug","ranges":[{"startOffset":8378715,"endOffset":8378726,"count":0}],"isBlockCoverage":false},{"functionName":"DiagnosticCategory","ranges":[{"startOffset":8378750,"endOffset":8378774,"count":0}],"isBlockCoverage":false},{"functionName":"Diagnostics","ranges":[{"startOffset":8378791,"endOffset":8378808,"count":0}],"isBlockCoverage":false},{"functionName":"DocumentHighlights","ranges":[{"startOffset":8378832,"endOffset":8378856,"count":0}],"isBlockCoverage":false},{"functionName":"ElementFlags","ranges":[{"startOffset":8378874,"endOffset":8378892,"count":0}],"isBlockCoverage":false},{"functionName":"EmitFlags","ranges":[{"startOffset":8378907,"endOffset":8378922,"count":0}],"isBlockCoverage":false},{"functionName":"EmitHint","ranges":[{"startOffset":8378936,"endOffset":8378950,"count":0}],"isBlockCoverage":false},{"functionName":"EmitOnly","ranges":[{"startOffset":8378964,"endOffset":8378978,"count":0}],"isBlockCoverage":false},{"functionName":"EndOfLineState","ranges":[{"startOffset":8378998,"endOffset":8379018,"count":0}],"isBlockCoverage":false},{"functionName":"ExitStatus","ranges":[{"startOffset":8379034,"endOffset":8379050,"count":0}],"isBlockCoverage":false},{"functionName":"ExportKind","ranges":[{"startOffset":8379066,"endOffset":8379082,"count":0}],"isBlockCoverage":false},{"functionName":"Extension","ranges":[{"startOffset":8379097,"endOffset":8379112,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalEmitHelpers","ranges":[{"startOffset":8379137,"endOffset":8379162,"count":0}],"isBlockCoverage":false},{"functionName":"FileIncludeKind","ranges":[{"startOffset":8379183,"endOffset":8379204,"count":0}],"isBlockCoverage":false},{"functionName":"FilePreprocessingDiagnosticsKind","ranges":[{"startOffset":8379242,"endOffset":8379280,"count":0}],"isBlockCoverage":false},{"functionName":"FileSystemEntryKind","ranges":[{"startOffset":8379305,"endOffset":8379330,"count":0}],"isBlockCoverage":false},{"functionName":"FileWatcherEventKind","ranges":[{"startOffset":8379356,"endOffset":8379382,"count":0}],"isBlockCoverage":false},{"functionName":"FindAllReferences","ranges":[{"startOffset":8379405,"endOffset":8379439,"count":0}],"isBlockCoverage":false},{"functionName":"FlattenLevel","ranges":[{"startOffset":8379457,"endOffset":8379475,"count":0}],"isBlockCoverage":false},{"functionName":"FlowFlags","ranges":[{"startOffset":8379490,"endOffset":8379505,"count":0}],"isBlockCoverage":false},{"functionName":"ForegroundColorEscapeSequences","ranges":[{"startOffset":8379541,"endOffset":8379577,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionFlags","ranges":[{"startOffset":8379596,"endOffset":8379615,"count":0}],"isBlockCoverage":false},{"functionName":"GeneratedIdentifierFlags","ranges":[{"startOffset":8379645,"endOffset":8379675,"count":0}],"isBlockCoverage":false},{"functionName":"GetLiteralTextFlags","ranges":[{"startOffset":8379700,"endOffset":8379725,"count":0}],"isBlockCoverage":false},{"functionName":"GoToDefinition","ranges":[{"startOffset":8379745,"endOffset":8379776,"count":0}],"isBlockCoverage":false},{"functionName":"HighlightSpanKind","ranges":[{"startOffset":8379799,"endOffset":8379822,"count":0}],"isBlockCoverage":false},{"functionName":"IdentifierNameMap","ranges":[{"startOffset":8379845,"endOffset":8379868,"count":0}],"isBlockCoverage":false},{"functionName":"ImportKind","ranges":[{"startOffset":8379884,"endOffset":8379900,"count":0}],"isBlockCoverage":false},{"functionName":"ImportsNotUsedAsValues","ranges":[{"startOffset":8379928,"endOffset":8379956,"count":0}],"isBlockCoverage":false},{"functionName":"IndentStyle","ranges":[{"startOffset":8379973,"endOffset":8379990,"count":0}],"isBlockCoverage":false},{"functionName":"IndexFlags","ranges":[{"startOffset":8380006,"endOffset":8380022,"count":0}],"isBlockCoverage":false},{"functionName":"IndexKind","ranges":[{"startOffset":8380037,"endOffset":8380052,"count":0}],"isBlockCoverage":false},{"functionName":"InferenceFlags","ranges":[{"startOffset":8380072,"endOffset":8380092,"count":0}],"isBlockCoverage":false},{"functionName":"InferencePriority","ranges":[{"startOffset":8380115,"endOffset":8380138,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHintKind","ranges":[{"startOffset":8380157,"endOffset":8380177,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHints","ranges":[{"startOffset":8380193,"endOffset":8380220,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEmitFlags","ranges":[{"startOffset":8380243,"endOffset":8380266,"count":0}],"isBlockCoverage":false},{"functionName":"InternalNodeBuilderFlags","ranges":[{"startOffset":8380296,"endOffset":8380326,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSymbolName","ranges":[{"startOffset":8380350,"endOffset":8380374,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionFlags","ranges":[{"startOffset":8380397,"endOffset":8380420,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidatedProjectKind","ranges":[{"startOffset":8380448,"endOffset":8380476,"count":0}],"isBlockCoverage":false},{"functionName":"JSDocParsingMode","ranges":[{"startOffset":8380498,"endOffset":8380520,"count":0}],"isBlockCoverage":false},{"functionName":"JsDoc","ranges":[{"startOffset":8380531,"endOffset":8380553,"count":0}],"isBlockCoverage":false},{"functionName":"JsTyping","ranges":[{"startOffset":8380567,"endOffset":8380592,"count":0}],"isBlockCoverage":false},{"functionName":"JsxEmit","ranges":[{"startOffset":8380605,"endOffset":8380618,"count":0}],"isBlockCoverage":false},{"functionName":"JsxFlags","ranges":[{"startOffset":8380632,"endOffset":8380646,"count":0}],"isBlockCoverage":false},{"functionName":"JsxReferenceKind","ranges":[{"startOffset":8380668,"endOffset":8380690,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageFeatureMinimumTarget","ranges":[{"startOffset":8380724,"endOffset":8380758,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageServiceMode","ranges":[{"startOffset":8380783,"endOffset":8380808,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageVariant","ranges":[{"startOffset":8380829,"endOffset":8380850,"count":0}],"isBlockCoverage":false},{"functionName":"LexicalEnvironmentFlags","ranges":[{"startOffset":8380879,"endOffset":8380908,"count":0}],"isBlockCoverage":false},{"functionName":"ListFormat","ranges":[{"startOffset":8380924,"endOffset":8380940,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":8380954,"endOffset":8380968,"count":0}],"isBlockCoverage":false},{"functionName":"MapCode","ranges":[{"startOffset":8380981,"endOffset":8381005,"count":0}],"isBlockCoverage":false},{"functionName":"MemberOverrideStatus","ranges":[{"startOffset":8381031,"endOffset":8381057,"count":0}],"isBlockCoverage":false},{"functionName":"ModifierFlags","ranges":[{"startOffset":8381076,"endOffset":8381095,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleDetectionKind","ranges":[{"startOffset":8381120,"endOffset":8381145,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleInstanceState","ranges":[{"startOffset":8381170,"endOffset":8381195,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleKind","ranges":[{"startOffset":8381211,"endOffset":8381227,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleResolutionKind","ranges":[{"startOffset":8381253,"endOffset":8381279,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleSpecifierEnding","ranges":[{"startOffset":8381306,"endOffset":8381333,"count":0}],"isBlockCoverage":false},{"functionName":"NavigateTo","ranges":[{"startOffset":8381349,"endOffset":8381376,"count":0}],"isBlockCoverage":false},{"functionName":"NavigationBar","ranges":[{"startOffset":8381395,"endOffset":8381425,"count":0}],"isBlockCoverage":false},{"functionName":"NewLineKind","ranges":[{"startOffset":8381442,"endOffset":8381459,"count":0}],"isBlockCoverage":false},{"functionName":"NodeBuilderFlags","ranges":[{"startOffset":8381481,"endOffset":8381503,"count":0}],"isBlockCoverage":false},{"functionName":"NodeCheckFlags","ranges":[{"startOffset":8381523,"endOffset":8381543,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFactoryFlags","ranges":[{"startOffset":8381565,"endOffset":8381587,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFlags","ranges":[{"startOffset":8381602,"endOffset":8381617,"count":0}],"isBlockCoverage":false},{"functionName":"NodeResolutionFeatures","ranges":[{"startOffset":8381645,"endOffset":8381673,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFlags","ranges":[{"startOffset":8381690,"endOffset":8381707,"count":0}],"isBlockCoverage":false},{"functionName":"OperationCanceledException","ranges":[{"startOffset":8381739,"endOffset":8381771,"count":0}],"isBlockCoverage":false},{"functionName":"OperatorPrecedence","ranges":[{"startOffset":8381795,"endOffset":8381819,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImports","ranges":[{"startOffset":8381840,"endOffset":8381872,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImportsMode","ranges":[{"startOffset":8381897,"endOffset":8381922,"count":0}],"isBlockCoverage":false},{"functionName":"OuterExpressionKinds","ranges":[{"startOffset":8381948,"endOffset":8381974,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningElementsCollector","ranges":[{"startOffset":8382006,"endOffset":8382049,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningSpanKind","ranges":[{"startOffset":8382072,"endOffset":8382095,"count":0}],"isBlockCoverage":false},{"functionName":"OutputFileType","ranges":[{"startOffset":8382115,"endOffset":8382135,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonAutoImportPreference","ranges":[{"startOffset":8382172,"endOffset":8382209,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonDependencyGroup","ranges":[{"startOffset":8382241,"endOffset":8382273,"count":0}],"isBlockCoverage":false},{"functionName":"PatternMatchKind","ranges":[{"startOffset":8382295,"endOffset":8382317,"count":0}],"isBlockCoverage":false},{"functionName":"PollingInterval","ranges":[{"startOffset":8382338,"endOffset":8382359,"count":0}],"isBlockCoverage":false},{"functionName":"PollingWatchKind","ranges":[{"startOffset":8382381,"endOffset":8382403,"count":0}],"isBlockCoverage":false},{"functionName":"PragmaKindFlags","ranges":[{"startOffset":8382424,"endOffset":8382445,"count":0}],"isBlockCoverage":false},{"functionName":"PredicateSemantics","ranges":[{"startOffset":8382469,"endOffset":8382493,"count":0}],"isBlockCoverage":false},{"functionName":"PreparePasteEdits","ranges":[{"startOffset":8382516,"endOffset":8382550,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateIdentifierKind","ranges":[{"startOffset":8382577,"endOffset":8382604,"count":0}],"isBlockCoverage":false},{"functionName":"ProcessLevel","ranges":[{"startOffset":8382622,"endOffset":8382640,"count":0}],"isBlockCoverage":false},{"functionName":"ProgramUpdateLevel","ranges":[{"startOffset":8382664,"endOffset":8382688,"count":0}],"isBlockCoverage":false},{"functionName":"QuotePreference","ranges":[{"startOffset":8382709,"endOffset":8382730,"count":0}],"isBlockCoverage":false},{"functionName":"RegularExpressionFlags","ranges":[{"startOffset":8382758,"endOffset":8382786,"count":0}],"isBlockCoverage":false},{"functionName":"RelationComparisonResult","ranges":[{"startOffset":8382816,"endOffset":8382846,"count":0}],"isBlockCoverage":false},{"functionName":"Rename","ranges":[{"startOffset":8382858,"endOffset":8382881,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKind","ranges":[{"startOffset":8382904,"endOffset":8382927,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKindModifier","ranges":[{"startOffset":8382958,"endOffset":8382989,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptKind","ranges":[{"startOffset":8383005,"endOffset":8383021,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptSnapshot","ranges":[{"startOffset":8383041,"endOffset":8383061,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptTarget","ranges":[{"startOffset":8383079,"endOffset":8383097,"count":0}],"isBlockCoverage":false},{"functionName":"SemanticClassificationFormat","ranges":[{"startOffset":8383131,"endOffset":8383165,"count":0}],"isBlockCoverage":false},{"functionName":"SemanticMeaning","ranges":[{"startOffset":8383186,"endOffset":8383207,"count":0}],"isBlockCoverage":false},{"functionName":"SemicolonPreference","ranges":[{"startOffset":8383232,"endOffset":8383257,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureCheckMode","ranges":[{"startOffset":8383281,"endOffset":8383305,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureFlags","ranges":[{"startOffset":8383325,"endOffset":8383345,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureHelp","ranges":[{"startOffset":8383364,"endOffset":8383394,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureInfo","ranges":[{"startOffset":8383413,"endOffset":8383432,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureKind","ranges":[{"startOffset":8383451,"endOffset":8383470,"count":0}],"isBlockCoverage":false},{"functionName":"SmartSelectionRange","ranges":[{"startOffset":8383495,"endOffset":8383531,"count":0}],"isBlockCoverage":false},{"functionName":"SnippetKind","ranges":[{"startOffset":8383548,"endOffset":8383565,"count":0}],"isBlockCoverage":false},{"functionName":"StatisticType","ranges":[{"startOffset":8383584,"endOffset":8383603,"count":0}],"isBlockCoverage":false},{"functionName":"StructureIsReused","ranges":[{"startOffset":8383626,"endOffset":8383649,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolAccessibility","ranges":[{"startOffset":8383674,"endOffset":8383699,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplay","ranges":[{"startOffset":8383718,"endOffset":8383748,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplayPartKind","ranges":[{"startOffset":8383775,"endOffset":8383802,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFlags","ranges":[{"startOffset":8383819,"endOffset":8383836,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFormatFlags","ranges":[{"startOffset":8383859,"endOffset":8383882,"count":0}],"isBlockCoverage":false},{"functionName":"SyntaxKind","ranges":[{"startOffset":8383898,"endOffset":8383914,"count":0}],"isBlockCoverage":false},{"functionName":"Ternary","ranges":[{"startOffset":8383927,"endOffset":8383940,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledCancellationToken","ranges":[{"startOffset":8383972,"endOffset":8384004,"count":0}],"isBlockCoverage":false},{"functionName":"TokenClass","ranges":[{"startOffset":8384020,"endOffset":8384036,"count":0}],"isBlockCoverage":false},{"functionName":"TokenFlags","ranges":[{"startOffset":8384052,"endOffset":8384068,"count":0}],"isBlockCoverage":false},{"functionName":"TransformFlags","ranges":[{"startOffset":8384088,"endOffset":8384108,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFacts","ranges":[{"startOffset":8384123,"endOffset":8384138,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFlags","ranges":[{"startOffset":8384153,"endOffset":8384168,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFormatFlags","ranges":[{"startOffset":8384189,"endOffset":8384210,"count":0}],"isBlockCoverage":false},{"functionName":"TypeMapKind","ranges":[{"startOffset":8384227,"endOffset":8384244,"count":0}],"isBlockCoverage":false},{"functionName":"TypePredicateKind","ranges":[{"startOffset":8384267,"endOffset":8384290,"count":0}],"isBlockCoverage":false},{"functionName":"TypeReferenceSerializationKind","ranges":[{"startOffset":8384326,"endOffset":8384362,"count":0}],"isBlockCoverage":false},{"functionName":"UnionReduction","ranges":[{"startOffset":8384382,"endOffset":8384402,"count":0}],"isBlockCoverage":false},{"functionName":"UpToDateStatusType","ranges":[{"startOffset":8384426,"endOffset":8384450,"count":0}],"isBlockCoverage":false},{"functionName":"VarianceFlags","ranges":[{"startOffset":8384469,"endOffset":8384488,"count":0}],"isBlockCoverage":false},{"functionName":"Version","ranges":[{"startOffset":8384501,"endOffset":8384514,"count":0}],"isBlockCoverage":false},{"functionName":"VersionRange","ranges":[{"startOffset":8384532,"endOffset":8384550,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryFlags","ranges":[{"startOffset":8384575,"endOffset":8384600,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryKind","ranges":[{"startOffset":8384624,"endOffset":8384648,"count":0}],"isBlockCoverage":false},{"functionName":"WatchFileKind","ranges":[{"startOffset":8384667,"endOffset":8384686,"count":0}],"isBlockCoverage":false},{"functionName":"WatchLogLevel","ranges":[{"startOffset":8384705,"endOffset":8384724,"count":0}],"isBlockCoverage":false},{"functionName":"WatchType","ranges":[{"startOffset":8384739,"endOffset":8384754,"count":0}],"isBlockCoverage":false},{"functionName":"accessPrivateIdentifier","ranges":[{"startOffset":8384783,"endOffset":8384812,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlags","ranges":[{"startOffset":8384830,"endOffset":8384848,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelper","ranges":[{"startOffset":8384867,"endOffset":8384886,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelpers","ranges":[{"startOffset":8384906,"endOffset":8384926,"count":0}],"isBlockCoverage":false},{"functionName":"addInternalEmitFlags","ranges":[{"startOffset":8384952,"endOffset":8384978,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeFactoryPatcher","ranges":[{"startOffset":8385005,"endOffset":8385032,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectAllocatorPatcher","ranges":[{"startOffset":8385063,"endOffset":8385094,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":8385108,"endOffset":8385122,"count":0}],"isBlockCoverage":false},{"functionName":"addRelatedInfo","ranges":[{"startOffset":8385142,"endOffset":8385162,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticLeadingComment","ranges":[{"startOffset":8385194,"endOffset":8385226,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticTrailingComment","ranges":[{"startOffset":8385259,"endOffset":8385292,"count":0}],"isBlockCoverage":false},{"functionName":"addToSeen","ranges":[{"startOffset":8385307,"endOffset":8385322,"count":0}],"isBlockCoverage":false},{"functionName":"advancedAsyncSuperHelper","ranges":[{"startOffset":8385352,"endOffset":8385382,"count":0}],"isBlockCoverage":false},{"functionName":"affectsDeclarationPathOptionDeclarations","ranges":[{"startOffset":8385428,"endOffset":8385474,"count":0}],"isBlockCoverage":false},{"functionName":"affectsEmitOptionDeclarations","ranges":[{"startOffset":8385509,"endOffset":8385544,"count":0}],"isBlockCoverage":false},{"functionName":"allKeysStartWithDot","ranges":[{"startOffset":8385569,"endOffset":8385594,"count":0}],"isBlockCoverage":false},{"functionName":"altDirectorySeparator","ranges":[{"startOffset":8385621,"endOffset":8385648,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":8385657,"endOffset":8385666,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":8385678,"endOffset":8385690,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfUnique","ranges":[{"startOffset":8385710,"endOffset":8385730,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFrom","ranges":[{"startOffset":8385745,"endOffset":8385760,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsEqualTo","ranges":[{"startOffset":8385780,"endOffset":8385800,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsHomogeneous","ranges":[{"startOffset":8385824,"endOffset":8385848,"count":0}],"isBlockCoverage":false},{"functionName":"arrayOf","ranges":[{"startOffset":8385861,"endOffset":8385874,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReverseIterator","ranges":[{"startOffset":8385900,"endOffset":8385926,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMap","ranges":[{"startOffset":8385942,"endOffset":8385958,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMultiMap","ranges":[{"startOffset":8385979,"endOffset":8386000,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToNumericMap","ranges":[{"startOffset":8386023,"endOffset":8386046,"count":0}],"isBlockCoverage":false},{"functionName":"assertType","ranges":[{"startOffset":8386062,"endOffset":8386078,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":8386090,"endOffset":8386102,"count":0}],"isBlockCoverage":false},{"functionName":"asyncSuperHelper","ranges":[{"startOffset":8386124,"endOffset":8386146,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostics","ranges":[{"startOffset":8386175,"endOffset":8386204,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":8386222,"endOffset":8386240,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":8386258,"endOffset":8386276,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":8386294,"endOffset":8386312,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearchKey","ranges":[{"startOffset":8386333,"endOffset":8386354,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFile","ranges":[{"startOffset":8386374,"endOffset":8386394,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoCharacterSpans","ranges":[{"startOffset":8386423,"endOffset":8386452,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoWordSpans","ranges":[{"startOffset":8386476,"endOffset":8386500,"count":0}],"isBlockCoverage":false},{"functionName":"buildLinkParts","ranges":[{"startOffset":8386520,"endOffset":8386540,"count":0}],"isBlockCoverage":false},{"functionName":"buildOpts","ranges":[{"startOffset":8386555,"endOffset":8386570,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverload","ranges":[{"startOffset":8386589,"endOffset":8386608,"count":0}],"isBlockCoverage":false},{"functionName":"bundlerModuleNameResolver","ranges":[{"startOffset":8386639,"endOffset":8386670,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToAsync","ranges":[{"startOffset":8386697,"endOffset":8386724,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveDecorators","ranges":[{"startOffset":8386747,"endOffset":8386770,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveExportModifier","ranges":[{"startOffset":8386797,"endOffset":8386824,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveFlowNode","ranges":[{"startOffset":8386845,"endOffset":8386866,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalDecorators","ranges":[{"startOffset":8386896,"endOffset":8386926,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalModifiers","ranges":[{"startOffset":8386955,"endOffset":8386984,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalType","ranges":[{"startOffset":8387008,"endOffset":8387032,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalTypeParameters","ranges":[{"startOffset":8387066,"endOffset":8387100,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveJSDoc","ranges":[{"startOffset":8387118,"endOffset":8387136,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLocals","ranges":[{"startOffset":8387155,"endOffset":8387174,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModifiers","ranges":[{"startOffset":8387196,"endOffset":8387218,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModuleSpecifier","ranges":[{"startOffset":8387246,"endOffset":8387274,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveSymbol","ranges":[{"startOffset":8387293,"endOffset":8387312,"count":0}],"isBlockCoverage":false},{"functionName":"canIncludeBindAndCheckDiagnostics","ranges":[{"startOffset":8387351,"endOffset":8387390,"count":0}],"isBlockCoverage":false},{"functionName":"canJsonReportNoInputFiles","ranges":[{"startOffset":8387421,"endOffset":8387452,"count":0}],"isBlockCoverage":false},{"functionName":"canProduceDiagnostics","ranges":[{"startOffset":8387479,"endOffset":8387506,"count":0}],"isBlockCoverage":false},{"functionName":"canUsePropertyAccess","ranges":[{"startOffset":8387532,"endOffset":8387558,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectingLocation","ranges":[{"startOffset":8387589,"endOffset":8387620,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAtTypes","ranges":[{"startOffset":8387641,"endOffset":8387662,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFile","ranges":[{"startOffset":8387691,"endOffset":8387720,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFilePath","ranges":[{"startOffset":8387753,"endOffset":8387786,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProduct","ranges":[{"startOffset":8387808,"endOffset":8387830,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":8387840,"endOffset":8387850,"count":0}],"isBlockCoverage":false},{"functionName":"chainBundle","ranges":[{"startOffset":8387867,"endOffset":8387884,"count":0}],"isBlockCoverage":false},{"functionName":"chainDiagnosticMessages","ranges":[{"startOffset":8387913,"endOffset":8387942,"count":0}],"isBlockCoverage":false},{"functionName":"changeAnyExtension","ranges":[{"startOffset":8387966,"endOffset":8387990,"count":0}],"isBlockCoverage":false},{"functionName":"changeCompilerHostLikeToUseCache","ranges":[{"startOffset":8388028,"endOffset":8388066,"count":0}],"isBlockCoverage":false},{"functionName":"changeExtension","ranges":[{"startOffset":8388087,"endOffset":8388108,"count":0}],"isBlockCoverage":false},{"functionName":"changeFullExtension","ranges":[{"startOffset":8388133,"endOffset":8388158,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectModuleResolution","ranges":[{"startOffset":8388193,"endOffset":8388228,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectingProgramStructure","ranges":[{"startOffset":8388266,"endOffset":8388304,"count":0}],"isBlockCoverage":false},{"functionName":"characterCodeToRegularExpressionFlag","ranges":[{"startOffset":8388346,"endOffset":8388388,"count":0}],"isBlockCoverage":false},{"functionName":"childIsDecorated","ranges":[{"startOffset":8388410,"endOffset":8388432,"count":0}],"isBlockCoverage":false},{"functionName":"classElementOrClassElementParameterIsDecorated","ranges":[{"startOffset":8388484,"endOffset":8388536,"count":0}],"isBlockCoverage":false},{"functionName":"classHasClassThisAssignment","ranges":[{"startOffset":8388569,"endOffset":8388602,"count":0}],"isBlockCoverage":false},{"functionName":"classHasDeclaredOrExplicitlyAssignedName","ranges":[{"startOffset":8388648,"endOffset":8388694,"count":0}],"isBlockCoverage":false},{"functionName":"classHasExplicitlyAssignedName","ranges":[{"startOffset":8388730,"endOffset":8388766,"count":0}],"isBlockCoverage":false},{"functionName":"classOrConstructorParameterIsDecorated","ranges":[{"startOffset":8388810,"endOffset":8388854,"count":0}],"isBlockCoverage":false},{"functionName":"classicNameResolver","ranges":[{"startOffset":8388879,"endOffset":8388904,"count":0}],"isBlockCoverage":false},{"functionName":"classifier","ranges":[{"startOffset":8388920,"endOffset":8388947,"count":0}],"isBlockCoverage":false},{"functionName":"cleanExtendedConfigCache","ranges":[{"startOffset":8388977,"endOffset":8389007,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":8389018,"endOffset":8389029,"count":0}],"isBlockCoverage":false},{"functionName":"clearMap","ranges":[{"startOffset":8389043,"endOffset":8389057,"count":0}],"isBlockCoverage":false},{"functionName":"clearSharedExtendedConfigFileWatcher","ranges":[{"startOffset":8389099,"endOffset":8389141,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyAccess","ranges":[{"startOffset":8389170,"endOffset":8389199,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":8389210,"endOffset":8389221,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCompilerOptions","ranges":[{"startOffset":8389247,"endOffset":8389273,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcher","ranges":[{"startOffset":8389295,"endOffset":8389317,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcherOf","ranges":[{"startOffset":8389341,"endOffset":8389365,"count":0}],"isBlockCoverage":false},{"functionName":"codefix","ranges":[{"startOffset":8389378,"endOffset":8389402,"count":0}],"isBlockCoverage":false},{"functionName":"collapseTextChangeRangesAcrossMultipleVersions","ranges":[{"startOffset":8389454,"endOffset":8389506,"count":0}],"isBlockCoverage":false},{"functionName":"collectExternalModuleInfo","ranges":[{"startOffset":8389537,"endOffset":8389568,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":8389581,"endOffset":8389594,"count":0}],"isBlockCoverage":false},{"functionName":"combinePaths","ranges":[{"startOffset":8389612,"endOffset":8389630,"count":0}],"isBlockCoverage":false},{"functionName":"commandLineOptionOfCustomType","ranges":[{"startOffset":8389665,"endOffset":8389700,"count":0}],"isBlockCoverage":false},{"functionName":"commentPragmas","ranges":[{"startOffset":8389720,"endOffset":8389740,"count":0}],"isBlockCoverage":false},{"functionName":"commonOptionsWithBuild","ranges":[{"startOffset":8389768,"endOffset":8389796,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":8389809,"endOffset":8389822,"count":0}],"isBlockCoverage":false},{"functionName":"compareBooleans","ranges":[{"startOffset":8389843,"endOffset":8389864,"count":0}],"isBlockCoverage":false},{"functionName":"compareDataObjects","ranges":[{"startOffset":8389888,"endOffset":8389912,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnostics","ranges":[{"startOffset":8389936,"endOffset":8389960,"count":0}],"isBlockCoverage":false},{"functionName":"compareEmitHelpers","ranges":[{"startOffset":8389984,"endOffset":8390008,"count":0}],"isBlockCoverage":false},{"functionName":"compareNumberOfDirectorySeparators","ranges":[{"startOffset":8390048,"endOffset":8390088,"count":0}],"isBlockCoverage":false},{"functionName":"comparePaths","ranges":[{"startOffset":8390106,"endOffset":8390124,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseInsensitive","ranges":[{"startOffset":8390157,"endOffset":8390190,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseSensitive","ranges":[{"startOffset":8390221,"endOffset":8390252,"count":0}],"isBlockCoverage":false},{"functionName":"comparePatternKeys","ranges":[{"startOffset":8390276,"endOffset":8390300,"count":0}],"isBlockCoverage":false},{"functionName":"compareProperties","ranges":[{"startOffset":8390323,"endOffset":8390346,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitive","ranges":[{"startOffset":8390381,"endOffset":8390416,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitiveEslintCompatible","ranges":[{"startOffset":8390467,"endOffset":8390518,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitive","ranges":[{"startOffset":8390551,"endOffset":8390584,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitiveUI","ranges":[{"startOffset":8390619,"endOffset":8390654,"count":0}],"isBlockCoverage":false},{"functionName":"compareTextSpans","ranges":[{"startOffset":8390676,"endOffset":8390698,"count":0}],"isBlockCoverage":false},{"functionName":"compareValues","ranges":[{"startOffset":8390717,"endOffset":8390736,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectDeclarationPath","ranges":[{"startOffset":8390778,"endOffset":8390820,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectEmit","ranges":[{"startOffset":8390851,"endOffset":8390882,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectSemanticDiagnostics","ranges":[{"startOffset":8390928,"endOffset":8390974,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsDidYouMeanDiagnostics","ranges":[{"startOffset":8391016,"endOffset":8391058,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsIndicateEsModules","ranges":[{"startOffset":8391096,"endOffset":8391134,"count":0}],"isBlockCoverage":false},{"functionName":"computeCommonSourceDirectoryOfFilenames","ranges":[{"startOffset":8391179,"endOffset":8391224,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineAndCharacterOfPosition","ranges":[{"startOffset":8391263,"endOffset":8391302,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineOfPosition","ranges":[{"startOffset":8391329,"endOffset":8391356,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineStarts","ranges":[{"startOffset":8391379,"endOffset":8391402,"count":0}],"isBlockCoverage":false},{"functionName":"computePositionOfLineAndCharacter","ranges":[{"startOffset":8391441,"endOffset":8391480,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignatureWithDiagnostics","ranges":[{"startOffset":8391517,"endOffset":8391554,"count":0}],"isBlockCoverage":false},{"functionName":"computeSuggestionDiagnostics","ranges":[{"startOffset":8391588,"endOffset":8391622,"count":0}],"isBlockCoverage":false},{"functionName":"computedOptions","ranges":[{"startOffset":8391643,"endOffset":8391664,"count":0}],"isBlockCoverage":false},{"functionName":"concatenate","ranges":[{"startOffset":8391681,"endOffset":8391698,"count":0}],"isBlockCoverage":false},{"functionName":"concatenateDiagnosticMessageChains","ranges":[{"startOffset":8391738,"endOffset":8391778,"count":0}],"isBlockCoverage":false},{"functionName":"consumesNodeCoreModules","ranges":[{"startOffset":8391807,"endOffset":8391836,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":8391850,"endOffset":8391864,"count":0}],"isBlockCoverage":false},{"functionName":"containsIgnoredPath","ranges":[{"startOffset":8391889,"endOffset":8391914,"count":0}],"isBlockCoverage":false},{"functionName":"containsObjectRestOrSpread","ranges":[{"startOffset":8391946,"endOffset":8391978,"count":0}],"isBlockCoverage":false},{"functionName":"containsParseError","ranges":[{"startOffset":8392002,"endOffset":8392026,"count":0}],"isBlockCoverage":false},{"functionName":"containsPath","ranges":[{"startOffset":8392044,"endOffset":8392062,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsForTelemetry","ranges":[{"startOffset":8392102,"endOffset":8392142,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsFromJson","ranges":[{"startOffset":8392178,"endOffset":8392214,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOption","ranges":[{"startOffset":8392237,"endOffset":8392260,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBase64","ranges":[{"startOffset":8392281,"endOffset":8392302,"count":0}],"isBlockCoverage":false},{"functionName":"convertToJson","ranges":[{"startOffset":8392321,"endOffset":8392340,"count":0}],"isBlockCoverage":false},{"functionName":"convertToObject","ranges":[{"startOffset":8392361,"endOffset":8392382,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionsWithAbsolutePaths","ranges":[{"startOffset":8392421,"endOffset":8392460,"count":0}],"isBlockCoverage":false},{"functionName":"convertToRelativePath","ranges":[{"startOffset":8392487,"endOffset":8392514,"count":0}],"isBlockCoverage":false},{"functionName":"convertToTSConfig","ranges":[{"startOffset":8392537,"endOffset":8392560,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisitionFromJson","ranges":[{"startOffset":8392596,"endOffset":8392632,"count":0}],"isBlockCoverage":false},{"functionName":"copyComments","ranges":[{"startOffset":8392650,"endOffset":8392668,"count":0}],"isBlockCoverage":false},{"functionName":"copyEntries","ranges":[{"startOffset":8392685,"endOffset":8392702,"count":0}],"isBlockCoverage":false},{"functionName":"copyLeadingComments","ranges":[{"startOffset":8392727,"endOffset":8392752,"count":0}],"isBlockCoverage":false},{"functionName":"copyProperties","ranges":[{"startOffset":8392772,"endOffset":8392792,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingAsLeadingComments","ranges":[{"startOffset":8392827,"endOffset":8392862,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingComments","ranges":[{"startOffset":8392888,"endOffset":8392914,"count":0}],"isBlockCoverage":false},{"functionName":"couldStartTrivia","ranges":[{"startOffset":8392936,"endOffset":8392958,"count":0}],"isBlockCoverage":false},{"functionName":"countWhere","ranges":[{"startOffset":8392974,"endOffset":8392990,"count":0}],"isBlockCoverage":false},{"functionName":"createAbstractBuilder","ranges":[{"startOffset":8393017,"endOffset":8393044,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyBackingField","ranges":[{"startOffset":8393084,"endOffset":8393124,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyGetRedirector","ranges":[{"startOffset":8393165,"endOffset":8393206,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertySetRedirector","ranges":[{"startOffset":8393247,"endOffset":8393288,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNodeFactory","ranges":[{"startOffset":8393315,"endOffset":8393342,"count":0}],"isBlockCoverage":false},{"functionName":"createBinaryExpressionTrampoline","ranges":[{"startOffset":8393380,"endOffset":8393418,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgram","ranges":[{"startOffset":8393444,"endOffset":8393470,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramUsingIncrementalBuildInfo","ranges":[{"startOffset":8393521,"endOffset":8393572,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderStatusReporter","ranges":[{"startOffset":8393605,"endOffset":8393638,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheableExportInfoMap","ranges":[{"startOffset":8393672,"endOffset":8393706,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDirectoryStructureHost","ranges":[{"startOffset":8393746,"endOffset":8393786,"count":0}],"isBlockCoverage":false},{"functionName":"createClassifier","ranges":[{"startOffset":8393808,"endOffset":8393830,"count":0}],"isBlockCoverage":false},{"functionName":"createCommentDirectivesMap","ranges":[{"startOffset":8393862,"endOffset":8393894,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnostic","ranges":[{"startOffset":8393924,"endOffset":8393954,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticForInvalidCustomType","ranges":[{"startOffset":8394004,"endOffset":8394054,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticFromMessageChain","ranges":[{"startOffset":8394100,"endOffset":8394146,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHost","ranges":[{"startOffset":8394170,"endOffset":8394194,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostFromProgramHost","ranges":[{"startOffset":8394233,"endOffset":8394272,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostWorker","ranges":[{"startOffset":8394302,"endOffset":8394332,"count":0}],"isBlockCoverage":false},{"functionName":"createDetachedDiagnostic","ranges":[{"startOffset":8394362,"endOffset":8394392,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticCollection","ranges":[{"startOffset":8394424,"endOffset":8394456,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForFileFromMessageChain","ranges":[{"startOffset":8394501,"endOffset":8394546,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNode","ranges":[{"startOffset":8394575,"endOffset":8394604,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArray","ranges":[{"startOffset":8394638,"endOffset":8394672,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArrayFromMessageChain","ranges":[{"startOffset":8394722,"endOffset":8394772,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeFromMessageChain","ranges":[{"startOffset":8394817,"endOffset":8394862,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeInSourceFile","ranges":[{"startOffset":8394903,"endOffset":8394944,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForRange","ranges":[{"startOffset":8394974,"endOffset":8395004,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticMessageChainFromDiagnostic","ranges":[{"startOffset":8395052,"endOffset":8395100,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticReporter","ranges":[{"startOffset":8395130,"endOffset":8395160,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentPositionMapper","ranges":[{"startOffset":8395194,"endOffset":8395228,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistry","ranges":[{"startOffset":8395256,"endOffset":8395284,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistryInternal","ranges":[{"startOffset":8395320,"endOffset":8395356,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitAndSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":8395408,"endOffset":8395460,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitHelperFactory","ranges":[{"startOffset":8395489,"endOffset":8395518,"count":0}],"isBlockCoverage":false},{"functionName":"createEmptyExports","ranges":[{"startOffset":8395542,"endOffset":8395566,"count":0}],"isBlockCoverage":false},{"functionName":"createEvaluator","ranges":[{"startOffset":8395587,"endOffset":8395608,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxElement","ranges":[{"startOffset":8395643,"endOffset":8395678,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxFragment","ranges":[{"startOffset":8395714,"endOffset":8395750,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForObjectLiteralElementLike","ranges":[{"startOffset":8395799,"endOffset":8395848,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyName","ranges":[{"startOffset":8395885,"endOffset":8395922,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionFromEntityName","ranges":[{"startOffset":8395958,"endOffset":8395994,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalHelpersImportDeclarationIfNeeded","ranges":[{"startOffset":8396046,"endOffset":8396098,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnostic","ranges":[{"startOffset":8396124,"endOffset":8396150,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnosticFromMessageChain","ranges":[{"startOffset":8396192,"endOffset":8396234,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowNode","ranges":[{"startOffset":8396254,"endOffset":8396274,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfBindingStatement","ranges":[{"startOffset":8396307,"endOffset":8396340,"count":0}],"isBlockCoverage":false},{"functionName":"createFutureSourceFile","ranges":[{"startOffset":8396368,"endOffset":8396396,"count":0}],"isBlockCoverage":false},{"functionName":"createGetCanonicalFileName","ranges":[{"startOffset":8396428,"endOffset":8396460,"count":0}],"isBlockCoverage":false},{"functionName":"createGetIsolatedDeclarationErrors","ranges":[{"startOffset":8396500,"endOffset":8396540,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSourceFile","ranges":[{"startOffset":8396565,"endOffset":8396590,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNode","ranges":[{"startOffset":8396641,"endOffset":8396692,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNodeName","ranges":[{"startOffset":8396747,"endOffset":8396802,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolWalker","ranges":[{"startOffset":8396829,"endOffset":8396856,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalCompilerHost","ranges":[{"startOffset":8396891,"endOffset":8396926,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalProgram","ranges":[{"startOffset":8396956,"endOffset":8396986,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpression","ranges":[{"startOffset":8397018,"endOffset":8397050,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageService","ranges":[{"startOffset":8397077,"endOffset":8397104,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageServiceSourceFile","ranges":[{"startOffset":8397141,"endOffset":8397178,"count":0}],"isBlockCoverage":false},{"functionName":"createMemberAccessForPropertyName","ranges":[{"startOffset":8397217,"endOffset":8397256,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCache","ranges":[{"startOffset":8397282,"endOffset":8397308,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCacheKey","ranges":[{"startOffset":8397337,"endOffset":8397366,"count":0}],"isBlockCoverage":false},{"functionName":"createModeMismatchDetails","ranges":[{"startOffset":8397397,"endOffset":8397428,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleNotFoundChain","ranges":[{"startOffset":8397459,"endOffset":8397490,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionCache","ranges":[{"startOffset":8397523,"endOffset":8397556,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoader","ranges":[{"startOffset":8397590,"endOffset":8397624,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoaderUsingGlobalCache","ranges":[{"startOffset":8397674,"endOffset":8397724,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierResolutionHost","ranges":[{"startOffset":8397765,"endOffset":8397806,"count":0}],"isBlockCoverage":false},{"functionName":"createMultiMap","ranges":[{"startOffset":8397826,"endOffset":8397846,"count":0}],"isBlockCoverage":false},{"functionName":"createNameResolver","ranges":[{"startOffset":8397870,"endOffset":8397894,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeConverters","ranges":[{"startOffset":8397920,"endOffset":8397946,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeFactory","ranges":[{"startOffset":8397969,"endOffset":8397992,"count":0}],"isBlockCoverage":false},{"functionName":"createOptionNameMap","ranges":[{"startOffset":8398017,"endOffset":8398042,"count":0}],"isBlockCoverage":false},{"functionName":"createOverload","ranges":[{"startOffset":8398062,"endOffset":8398082,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonImportFilter","ranges":[{"startOffset":8398117,"endOffset":8398152,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfo","ranges":[{"startOffset":8398179,"endOffset":8398206,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizerRules","ranges":[{"startOffset":8398236,"endOffset":8398266,"count":0}],"isBlockCoverage":false},{"functionName":"createPatternMatcher","ranges":[{"startOffset":8398292,"endOffset":8398318,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinter","ranges":[{"startOffset":8398337,"endOffset":8398356,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithDefaults","ranges":[{"startOffset":8398387,"endOffset":8398418,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveComments","ranges":[{"startOffset":8398455,"endOffset":8398492,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsNeverAsciiEscape","ranges":[{"startOffset":8398545,"endOffset":8398598,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsOmitTrailingSemicolon","ranges":[{"startOffset":8398656,"endOffset":8398714,"count":0}],"isBlockCoverage":false},{"functionName":"createProgram","ranges":[{"startOffset":8398733,"endOffset":8398752,"count":0}],"isBlockCoverage":false},{"functionName":"createProgramDiagnostics","ranges":[{"startOffset":8398782,"endOffset":8398812,"count":0}],"isBlockCoverage":false},{"functionName":"createProgramHost","ranges":[{"startOffset":8398835,"endOffset":8398858,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameNodeForIdentifierOrLiteral","ranges":[{"startOffset":8398908,"endOffset":8398958,"count":0}],"isBlockCoverage":false},{"functionName":"createQueue","ranges":[{"startOffset":8398975,"endOffset":8398992,"count":0}],"isBlockCoverage":false},{"functionName":"createRange","ranges":[{"startOffset":8399009,"endOffset":8399026,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectedBuilderProgram","ranges":[{"startOffset":8399062,"endOffset":8399098,"count":0}],"isBlockCoverage":false},{"functionName":"createResolutionCache","ranges":[{"startOffset":8399125,"endOffset":8399152,"count":0}],"isBlockCoverage":false},{"functionName":"createRuntimeTypeSerializer","ranges":[{"startOffset":8399185,"endOffset":8399218,"count":0}],"isBlockCoverage":false},{"functionName":"createScanner","ranges":[{"startOffset":8399237,"endOffset":8399256,"count":0}],"isBlockCoverage":false},{"functionName":"createSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":8399301,"endOffset":8399346,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":8399361,"endOffset":8399376,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilder","ranges":[{"startOffset":8399403,"endOffset":8399430,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHost","ranges":[{"startOffset":8399461,"endOffset":8399492,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatch","ranges":[{"startOffset":8399528,"endOffset":8399564,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatchHost","ranges":[{"startOffset":8399604,"endOffset":8399644,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":8399667,"endOffset":8399690,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile","ranges":[{"startOffset":8399712,"endOffset":8399734,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapGenerator","ranges":[{"startOffset":8399764,"endOffset":8399794,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapSource","ranges":[{"startOffset":8399821,"endOffset":8399848,"count":0}],"isBlockCoverage":false},{"functionName":"createSuperAccessVariableStatement","ranges":[{"startOffset":8399888,"endOffset":8399928,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbolTable","ranges":[{"startOffset":8399951,"endOffset":8399974,"count":0}],"isBlockCoverage":false},{"functionName":"createSymlinkCache","ranges":[{"startOffset":8399998,"endOffset":8400022,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntacticTypeNodeBuilder","ranges":[{"startOffset":8400058,"endOffset":8400094,"count":0}],"isBlockCoverage":false},{"functionName":"createSystemWatchFunctions","ranges":[{"startOffset":8400126,"endOffset":8400158,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChange","ranges":[{"startOffset":8400180,"endOffset":8400202,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeFromStartLength","ranges":[{"startOffset":8400239,"endOffset":8400276,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeRange","ranges":[{"startOffset":8400303,"endOffset":8400330,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromNode","ranges":[{"startOffset":8400359,"endOffset":8400388,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromSpan","ranges":[{"startOffset":8400417,"endOffset":8400446,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpan","ranges":[{"startOffset":8400466,"endOffset":8400486,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromBounds","ranges":[{"startOffset":8400516,"endOffset":8400546,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromNode","ranges":[{"startOffset":8400574,"endOffset":8400602,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromRange","ranges":[{"startOffset":8400631,"endOffset":8400660,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromStringLiteralLikeContent","ranges":[{"startOffset":8400708,"endOffset":8400756,"count":0}],"isBlockCoverage":false},{"functionName":"createTextWriter","ranges":[{"startOffset":8400778,"endOffset":8400800,"count":0}],"isBlockCoverage":false},{"functionName":"createTokenRange","ranges":[{"startOffset":8400822,"endOffset":8400844,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeChecker","ranges":[{"startOffset":8400867,"endOffset":8400890,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceDirectiveResolutionCache","ranges":[{"startOffset":8400939,"endOffset":8400988,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceResolutionLoader","ranges":[{"startOffset":8401029,"endOffset":8401070,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost","ranges":[{"startOffset":8401099,"endOffset":8401129,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfConfigFile","ranges":[{"startOffset":8401170,"endOffset":8401211,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfFilesAndCompilerOptions","ranges":[{"startOffset":8401265,"endOffset":8401319,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactory","ranges":[{"startOffset":8401343,"endOffset":8401367,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchHost","ranges":[{"startOffset":8401388,"endOffset":8401409,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchProgram","ranges":[{"startOffset":8401433,"endOffset":8401457,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchStatusReporter","ranges":[{"startOffset":8401488,"endOffset":8401519,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteFileMeasuringIO","ranges":[{"startOffset":8401551,"endOffset":8401583,"count":0}],"isBlockCoverage":false},{"functionName":"declarationNameToString","ranges":[{"startOffset":8401612,"endOffset":8401641,"count":0}],"isBlockCoverage":false},{"functionName":"decodeMappings","ranges":[{"startOffset":8401661,"endOffset":8401681,"count":0}],"isBlockCoverage":false},{"functionName":"decodedTextSpanIntersectsWith","ranges":[{"startOffset":8401716,"endOffset":8401751,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicate","ranges":[{"startOffset":8401768,"endOffset":8401785,"count":0}],"isBlockCoverage":false},{"functionName":"defaultInitCompilerOptions","ranges":[{"startOffset":8401817,"endOffset":8401849,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMaximumTruncationLength","ranges":[{"startOffset":8401885,"endOffset":8401921,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticCategoryName","ranges":[{"startOffset":8401949,"endOffset":8401977,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticToString","ranges":[{"startOffset":8402001,"endOffset":8402025,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticsEqualityComparer","ranges":[{"startOffset":8402058,"endOffset":8402091,"count":0}],"isBlockCoverage":false},{"functionName":"directoryProbablyExists","ranges":[{"startOffset":8402120,"endOffset":8402149,"count":0}],"isBlockCoverage":false},{"functionName":"directorySeparator","ranges":[{"startOffset":8402173,"endOffset":8402197,"count":0}],"isBlockCoverage":false},{"functionName":"displayPart","ranges":[{"startOffset":8402214,"endOffset":8402231,"count":0}],"isBlockCoverage":false},{"functionName":"displayPartsToString","ranges":[{"startOffset":8402257,"endOffset":8402283,"count":0}],"isBlockCoverage":false},{"functionName":"disposeEmitNodes","ranges":[{"startOffset":8402305,"endOffset":8402327,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpansEqual","ranges":[{"startOffset":8402351,"endOffset":8402375,"count":0}],"isBlockCoverage":false},{"functionName":"dumpTracingLegend","ranges":[{"startOffset":8402398,"endOffset":8402421,"count":0}],"isBlockCoverage":false},{"functionName":"elementAt","ranges":[{"startOffset":8402436,"endOffset":8402451,"count":0}],"isBlockCoverage":false},{"functionName":"elideNodes","ranges":[{"startOffset":8402467,"endOffset":8402483,"count":0}],"isBlockCoverage":false},{"functionName":"emitDetachedComments","ranges":[{"startOffset":8402509,"endOffset":8402535,"count":0}],"isBlockCoverage":false},{"functionName":"emitFiles","ranges":[{"startOffset":8402550,"endOffset":8402565,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrors","ranges":[{"startOffset":8402595,"endOffset":8402625,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrorsAndGetExitStatus","ranges":[{"startOffset":8402671,"endOffset":8402717,"count":0}],"isBlockCoverage":false},{"functionName":"emitModuleKindIsNonNodeESM","ranges":[{"startOffset":8402749,"endOffset":8402781,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentOfPosition","ranges":[{"startOffset":8402828,"endOffset":8402875,"count":0}],"isBlockCoverage":false},{"functionName":"emitResolverSkipsTypeChecking","ranges":[{"startOffset":8402910,"endOffset":8402945,"count":0}],"isBlockCoverage":false},{"functionName":"emitSkippedWithNoDiagnostics","ranges":[{"startOffset":8402979,"endOffset":8403013,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":8403029,"endOffset":8403045,"count":0}],"isBlockCoverage":false},{"functionName":"emptyFileSystemEntries","ranges":[{"startOffset":8403073,"endOffset":8403101,"count":0}],"isBlockCoverage":false},{"functionName":"emptyMap","ranges":[{"startOffset":8403115,"endOffset":8403129,"count":0}],"isBlockCoverage":false},{"functionName":"emptyOptions","ranges":[{"startOffset":8403147,"endOffset":8403165,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":8403179,"endOffset":8403193,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePathIsNonModuleName","ranges":[{"startOffset":8403224,"endOffset":8403255,"count":0}],"isBlockCoverage":false},{"functionName":"ensureScriptKind","ranges":[{"startOffset":8403277,"endOffset":8403299,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":8403337,"endOffset":8403375,"count":0}],"isBlockCoverage":false},{"functionName":"entityNameToString","ranges":[{"startOffset":8403399,"endOffset":8403423,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateInsertsAndDeletes","ranges":[{"startOffset":8403455,"endOffset":8403487,"count":0}],"isBlockCoverage":false},{"functionName":"equalOwnProperties","ranges":[{"startOffset":8403511,"endOffset":8403535,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseInsensitive","ranges":[{"startOffset":8403569,"endOffset":8403603,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseSensitive","ranges":[{"startOffset":8403635,"endOffset":8403667,"count":0}],"isBlockCoverage":false},{"functionName":"equateValues","ranges":[{"startOffset":8403685,"endOffset":8403703,"count":0}],"isBlockCoverage":false},{"functionName":"escapeJsxAttributeString","ranges":[{"startOffset":8403733,"endOffset":8403763,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLeadingUnderscores","ranges":[{"startOffset":8403793,"endOffset":8403823,"count":0}],"isBlockCoverage":false},{"functionName":"escapeNonAsciiString","ranges":[{"startOffset":8403849,"endOffset":8403875,"count":0}],"isBlockCoverage":false},{"functionName":"escapeSnippetText","ranges":[{"startOffset":8403898,"endOffset":8403921,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":8403939,"endOffset":8403957,"count":0}],"isBlockCoverage":false},{"functionName":"escapeTemplateSubstitution","ranges":[{"startOffset":8403989,"endOffset":8404021,"count":0}],"isBlockCoverage":false},{"functionName":"evaluatorResult","ranges":[{"startOffset":8404042,"endOffset":8404063,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":8404074,"endOffset":8404085,"count":0}],"isBlockCoverage":false},{"functionName":"exclusivelyPrefixedNodeCoreModules","ranges":[{"startOffset":8404125,"endOffset":8404165,"count":0}],"isBlockCoverage":false},{"functionName":"executeCommandLine","ranges":[{"startOffset":8404189,"endOffset":8404213,"count":0}],"isBlockCoverage":false},{"functionName":"expandPreOrPostfixIncrementOrDecrementExpression","ranges":[{"startOffset":8404267,"endOffset":8404321,"count":0}],"isBlockCoverage":false},{"functionName":"explainFiles","ranges":[{"startOffset":8404339,"endOffset":8404357,"count":0}],"isBlockCoverage":false},{"functionName":"explainIfFileIsRedirectAndImpliedFormat","ranges":[{"startOffset":8404402,"endOffset":8404447,"count":0}],"isBlockCoverage":false},{"functionName":"exportAssignmentIsAlias","ranges":[{"startOffset":8404476,"endOffset":8404505,"count":0}],"isBlockCoverage":false},{"functionName":"expressionResultIsUnused","ranges":[{"startOffset":8404535,"endOffset":8404565,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":8404577,"endOffset":8404589,"count":0}],"isBlockCoverage":false},{"functionName":"extensionFromPath","ranges":[{"startOffset":8404612,"endOffset":8404635,"count":0}],"isBlockCoverage":false},{"functionName":"extensionIsTS","ranges":[{"startOffset":8404654,"endOffset":8404673,"count":0}],"isBlockCoverage":false},{"functionName":"extensionsNotSupportingExtensionlessResolution","ranges":[{"startOffset":8404725,"endOffset":8404777,"count":0}],"isBlockCoverage":false},{"functionName":"externalHelpersModuleNameText","ranges":[{"startOffset":8404812,"endOffset":8404847,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":8404860,"endOffset":8404873,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIs","ranges":[{"startOffset":8404894,"endOffset":8404915,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIsOneOf","ranges":[{"startOffset":8404941,"endOffset":8404967,"count":0}],"isBlockCoverage":false},{"functionName":"fileIncludeReasonToDiagnostics","ranges":[{"startOffset":8405003,"endOffset":8405039,"count":0}],"isBlockCoverage":false},{"functionName":"fileShouldUseJavaScriptRequire","ranges":[{"startOffset":8405075,"endOffset":8405111,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":8405123,"endOffset":8405135,"count":0}],"isBlockCoverage":false},{"functionName":"filterMutate","ranges":[{"startOffset":8405153,"endOffset":8405171,"count":0}],"isBlockCoverage":false},{"functionName":"filterSemanticDiagnostics","ranges":[{"startOffset":8405202,"endOffset":8405233,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":8405243,"endOffset":8405253,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestor","ranges":[{"startOffset":8405271,"endOffset":8405289,"count":0}],"isBlockCoverage":false},{"functionName":"findBestPatternMatch","ranges":[{"startOffset":8405315,"endOffset":8405341,"count":0}],"isBlockCoverage":false},{"functionName":"findChildOfKind","ranges":[{"startOffset":8405362,"endOffset":8405383,"count":0}],"isBlockCoverage":false},{"functionName":"findComputedPropertyNameCacheAssignment","ranges":[{"startOffset":8405428,"endOffset":8405473,"count":0}],"isBlockCoverage":false},{"functionName":"findConfigFile","ranges":[{"startOffset":8405493,"endOffset":8405513,"count":0}],"isBlockCoverage":false},{"functionName":"findConstructorDeclaration","ranges":[{"startOffset":8405545,"endOffset":8405577,"count":0}],"isBlockCoverage":false},{"functionName":"findContainingList","ranges":[{"startOffset":8405601,"endOffset":8405625,"count":0}],"isBlockCoverage":false},{"functionName":"findDiagnosticForNode","ranges":[{"startOffset":8405652,"endOffset":8405679,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonJsxWhitespaceToken","ranges":[{"startOffset":8405715,"endOffset":8405751,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":8405766,"endOffset":8405781,"count":0}],"isBlockCoverage":false},{"functionName":"findLast","ranges":[{"startOffset":8405795,"endOffset":8405809,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":8405828,"endOffset":8405847,"count":0}],"isBlockCoverage":false},{"functionName":"findListItemInfo","ranges":[{"startOffset":8405869,"endOffset":8405891,"count":0}],"isBlockCoverage":false},{"functionName":"findModifier","ranges":[{"startOffset":8405909,"endOffset":8405927,"count":0}],"isBlockCoverage":false},{"functionName":"findNextToken","ranges":[{"startOffset":8405946,"endOffset":8405965,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJson","ranges":[{"startOffset":8405986,"endOffset":8406007,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJsons","ranges":[{"startOffset":8406029,"endOffset":8406051,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingMatchingToken","ranges":[{"startOffset":8406083,"endOffset":8406115,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingToken","ranges":[{"startOffset":8406139,"endOffset":8406163,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPath","ranges":[{"startOffset":8406196,"endOffset":8406229,"count":0}],"isBlockCoverage":false},{"functionName":"findTokenOnLeftOfPosition","ranges":[{"startOffset":8406260,"endOffset":8406291,"count":0}],"isBlockCoverage":false},{"functionName":"findUseStrictPrologue","ranges":[{"startOffset":8406318,"endOffset":8406345,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":8406356,"endOffset":8406367,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefined","ranges":[{"startOffset":8406385,"endOffset":8406403,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefinedIterator","ranges":[{"startOffset":8406429,"endOffset":8406455,"count":0}],"isBlockCoverage":false},{"functionName":"firstIterator","ranges":[{"startOffset":8406474,"endOffset":8406493,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrOnly","ranges":[{"startOffset":8406510,"endOffset":8406527,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefined","ranges":[{"startOffset":8406549,"endOffset":8406571,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefinedIterator","ranges":[{"startOffset":8406601,"endOffset":8406631,"count":0}],"isBlockCoverage":false},{"functionName":"fixupCompilerOptions","ranges":[{"startOffset":8406657,"endOffset":8406683,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8406696,"endOffset":8406709,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapIterator","ranges":[{"startOffset":8406730,"endOffset":8406751,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapToMutable","ranges":[{"startOffset":8406773,"endOffset":8406795,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":8406808,"endOffset":8406821,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaList","ranges":[{"startOffset":8406843,"endOffset":8406865,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringAssignment","ranges":[{"startOffset":8406901,"endOffset":8406937,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringBinding","ranges":[{"startOffset":8406970,"endOffset":8407003,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDiagnosticMessageText","ranges":[{"startOffset":8407037,"endOffset":8407071,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":8407084,"endOffset":8407097,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestor","ranges":[{"startOffset":8407118,"endOffset":8407139,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectory","ranges":[{"startOffset":8407169,"endOffset":8407199,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectoryStoppingAtGlobalCache","ranges":[{"startOffset":8407250,"endOffset":8407301,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":8407319,"endOffset":8407337,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildRecursively","ranges":[{"startOffset":8407366,"endOffset":8407395,"count":0}],"isBlockCoverage":false},{"functionName":"forEachDynamicImportOrRequireCall","ranges":[{"startOffset":8407434,"endOffset":8407473,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEmittedFile","ranges":[{"startOffset":8407497,"endOffset":8407521,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnclosingBlockScopeContainer","ranges":[{"startOffset":8407562,"endOffset":8407603,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEntry","ranges":[{"startOffset":8407621,"endOffset":8407639,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModuleToImportFrom","ranges":[{"startOffset":8407678,"endOffset":8407717,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportClauseDeclaration","ranges":[{"startOffset":8407753,"endOffset":8407789,"count":0}],"isBlockCoverage":false},{"functionName":"forEachKey","ranges":[{"startOffset":8407805,"endOffset":8407821,"count":0}],"isBlockCoverage":false},{"functionName":"forEachLeadingCommentRange","ranges":[{"startOffset":8407853,"endOffset":8407885,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameInAccessChainWalkingLeft","ranges":[{"startOffset":8407926,"endOffset":8407967,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameOfDefaultExport","ranges":[{"startOffset":8407999,"endOffset":8408031,"count":0}],"isBlockCoverage":false},{"functionName":"forEachOptionsSyntaxByName","ranges":[{"startOffset":8408063,"endOffset":8408095,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProjectReference","ranges":[{"startOffset":8408124,"endOffset":8408153,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPropertyAssignment","ranges":[{"startOffset":8408184,"endOffset":8408215,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":8408252,"endOffset":8408289,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReturnStatement","ranges":[{"startOffset":8408317,"endOffset":8408345,"count":0}],"isBlockCoverage":false},{"functionName":"forEachRight","ranges":[{"startOffset":8408363,"endOffset":8408381,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTrailingCommentRange","ranges":[{"startOffset":8408414,"endOffset":8408447,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTsConfigPropArray","ranges":[{"startOffset":8408477,"endOffset":8408507,"count":0}],"isBlockCoverage":false},{"functionName":"forEachUnique","ranges":[{"startOffset":8408526,"endOffset":8408545,"count":0}],"isBlockCoverage":false},{"functionName":"forEachYieldExpression","ranges":[{"startOffset":8408573,"endOffset":8408601,"count":0}],"isBlockCoverage":false},{"functionName":"formatColorAndReset","ranges":[{"startOffset":8408626,"endOffset":8408651,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostic","ranges":[{"startOffset":8408673,"endOffset":8408695,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostics","ranges":[{"startOffset":8408718,"endOffset":8408741,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticsWithColorAndContext","ranges":[{"startOffset":8408783,"endOffset":8408825,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedName","ranges":[{"startOffset":8408850,"endOffset":8408875,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedNamePart","ranges":[{"startOffset":8408904,"endOffset":8408933,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":8408953,"endOffset":8408973,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":8408992,"endOffset":8409011,"count":0}],"isBlockCoverage":false},{"functionName":"formatStringFromArgs","ranges":[{"startOffset":8409037,"endOffset":8409063,"count":0}],"isBlockCoverage":false},{"functionName":"formatting","ranges":[{"startOffset":8409079,"endOffset":8409106,"count":0}],"isBlockCoverage":false},{"functionName":"generateDjb2Hash","ranges":[{"startOffset":8409128,"endOffset":8409150,"count":0}],"isBlockCoverage":false},{"functionName":"generateTSConfig","ranges":[{"startOffset":8409172,"endOffset":8409194,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedReferenceLocation","ranges":[{"startOffset":8409228,"endOffset":8409262,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRenameLocation","ranges":[{"startOffset":8409293,"endOffset":8409324,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasDeclarationFromName","ranges":[{"startOffset":8409357,"endOffset":8409390,"count":0}],"isBlockCoverage":false},{"functionName":"getAllAccessorDeclarations","ranges":[{"startOffset":8409422,"endOffset":8409454,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClass","ranges":[{"startOffset":8409483,"endOffset":8409512,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClassElement","ranges":[{"startOffset":8409548,"endOffset":8409584,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTags","ranges":[{"startOffset":8409605,"endOffset":8409626,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTagsOfKind","ranges":[{"startOffset":8409653,"endOffset":8409680,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":8409696,"endOffset":8409712,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectOutputs","ranges":[{"startOffset":8409738,"endOffset":8409764,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSuperTypeNodes","ranges":[{"startOffset":8409790,"endOffset":8409816,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowImportingTsExtensions","ranges":[{"startOffset":8409851,"endOffset":8409886,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowJSCompilerOption","ranges":[{"startOffset":8409916,"endOffset":8409946,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowSyntheticDefaultImports","ranges":[{"startOffset":8409983,"endOffset":8410020,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestor","ranges":[{"startOffset":8410037,"endOffset":8410054,"count":0}],"isBlockCoverage":false},{"functionName":"getAnyExtensionFromPath","ranges":[{"startOffset":8410083,"endOffset":8410112,"count":0}],"isBlockCoverage":false},{"functionName":"getAreDeclarationMapsEnabled","ranges":[{"startOffset":8410146,"endOffset":8410180,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedExpandoInitializer","ranges":[{"startOffset":8410215,"endOffset":8410250,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedName","ranges":[{"startOffset":8410271,"endOffset":8410292,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKind","ranges":[{"startOffset":8410326,"endOffset":8410360,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationPropertyAccessKind","ranges":[{"startOffset":8410408,"endOffset":8410456,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentTargetKind","ranges":[{"startOffset":8410485,"endOffset":8410514,"count":0}],"isBlockCoverage":false},{"functionName":"getAutomaticTypeDirectiveNames","ranges":[{"startOffset":8410550,"endOffset":8410586,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseFileName","ranges":[{"startOffset":8410607,"endOffset":8410628,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryOperatorPrecedence","ranges":[{"startOffset":8410661,"endOffset":8410694,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo","ranges":[{"startOffset":8410712,"endOffset":8410730,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoFileVersionMap","ranges":[{"startOffset":8410762,"endOffset":8410794,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoText","ranges":[{"startOffset":8410816,"endOffset":8410838,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFromAnyBuildOrder","ranges":[{"startOffset":8410874,"endOffset":8410910,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderCreationParameters","ranges":[{"startOffset":8410944,"endOffset":8410978,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderFileEmit","ranges":[{"startOffset":8411002,"endOffset":8411026,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalDiagnostic","ranges":[{"startOffset":8411054,"endOffset":8411082,"count":0}],"isBlockCoverage":false},{"functionName":"getCheckFlags","ranges":[{"startOffset":8411101,"endOffset":8411120,"count":0}],"isBlockCoverage":false},{"functionName":"getClassExtendsHeritageElement","ranges":[{"startOffset":8411156,"endOffset":8411192,"count":0}],"isBlockCoverage":false},{"functionName":"getClassLikeDeclarationOfSymbol","ranges":[{"startOffset":8411229,"endOffset":8411266,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedLocalAndExportSymbolFlags","ranges":[{"startOffset":8411308,"endOffset":8411350,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedModifierFlags","ranges":[{"startOffset":8411380,"endOffset":8411410,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlags","ranges":[{"startOffset":8411436,"endOffset":8411462,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":8411506,"endOffset":8411550,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentRange","ranges":[{"startOffset":8411571,"endOffset":8411592,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectory","ranges":[{"startOffset":8411622,"endOffset":8411652,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectoryOfConfig","ranges":[{"startOffset":8411690,"endOffset":8411728,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionValue","ranges":[{"startOffset":8411756,"endOffset":8411784,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiffValue","ranges":[{"startOffset":8411817,"endOffset":8411850,"count":0}],"isBlockCoverage":false},{"functionName":"getConditions","ranges":[{"startOffset":8411869,"endOffset":8411888,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileParsingDiagnostics","ranges":[{"startOffset":8411925,"endOffset":8411962,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantValue","ranges":[{"startOffset":8411984,"endOffset":8412006,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerFlags","ranges":[{"startOffset":8412029,"endOffset":8412052,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerNode","ranges":[{"startOffset":8412074,"endOffset":8412096,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClass","ranges":[{"startOffset":8412120,"endOffset":8412144,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassExcludingClassDecorators","ranges":[{"startOffset":8412192,"endOffset":8412240,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassStaticBlock","ranges":[{"startOffset":8412275,"endOffset":8412310,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunction","ranges":[{"startOffset":8412337,"endOffset":8412364,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionDeclaration","ranges":[{"startOffset":8412402,"endOffset":8412440,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionOrClassStaticBlock","ranges":[{"startOffset":8412485,"endOffset":8412530,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeArray","ranges":[{"startOffset":8412558,"endOffset":8412586,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElement","ranges":[{"startOffset":8412625,"endOffset":8412664,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParent","ranges":[{"startOffset":8412697,"endOffset":8412730,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParentOrAncestorTypeNode","ranges":[{"startOffset":8412781,"endOffset":8412832,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationDiagnostics","ranges":[{"startOffset":8412863,"endOffset":8412894,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitExtensionForPath","ranges":[{"startOffset":8412934,"endOffset":8412974,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePath","ranges":[{"startOffset":8413012,"endOffset":8413050,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePathWorker","ranges":[{"startOffset":8413094,"endOffset":8413138,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFileExtension","ranges":[{"startOffset":8413171,"endOffset":8413204,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFromName","ranges":[{"startOffset":8413232,"endOffset":8413260,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationModifierFlagsFromSymbol","ranges":[{"startOffset":8413303,"endOffset":8413346,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationOfKind","ranges":[{"startOffset":8413372,"endOffset":8413398,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationsOfKind","ranges":[{"startOffset":8413425,"endOffset":8413452,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaredExpandoInitializer","ranges":[{"startOffset":8413487,"endOffset":8413522,"count":0}],"isBlockCoverage":false},{"functionName":"getDecorators","ranges":[{"startOffset":8413541,"endOffset":8413560,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions","ranges":[{"startOffset":8413591,"endOffset":8413623,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultFormatCodeSettings","ranges":[{"startOffset":8413657,"endOffset":8413691,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":8413718,"endOffset":8413745,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFilePath","ranges":[{"startOffset":8413772,"endOffset":8413799,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportInfo","ranges":[{"startOffset":8413829,"endOffset":8413859,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportNameFromDeclaration","ranges":[{"startOffset":8413904,"endOffset":8413949,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolutionModeForFileWorker","ranges":[{"startOffset":8413992,"endOffset":8414035,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticText","ranges":[{"startOffset":8414058,"endOffset":8414081,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWithinSpan","ranges":[{"startOffset":8414111,"endOffset":8414141,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryPath","ranges":[{"startOffset":8414163,"endOffset":8414185,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocation","ranges":[{"startOffset":8414230,"endOffset":8414275,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocationFromTypeRoot","ranges":[{"startOffset":8414332,"endOffset":8414389,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":8414420,"endOffset":8414451,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentSpansEqualityComparer","ranges":[{"startOffset":8414489,"endOffset":8414527,"count":0}],"isBlockCoverage":false},{"functionName":"getESModuleInterop","ranges":[{"startOffset":8414551,"endOffset":8414575,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":8414602,"endOffset":8414629,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveBaseTypeNode","ranges":[{"startOffset":8414659,"endOffset":8414689,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveConstraintOfTypeParameter","ranges":[{"startOffset":8414732,"endOffset":8414775,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveContainerForJSDocTemplateTag","ranges":[{"startOffset":8414821,"endOffset":8414867,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveImplementsTypeNodes","ranges":[{"startOffset":8414904,"endOffset":8414941,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveInitializer","ranges":[{"startOffset":8414970,"endOffset":8414999,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveJSDocHost","ranges":[{"startOffset":8415026,"endOffset":8415053,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlags","ranges":[{"startOffset":8415084,"endOffset":8415115,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":8415164,"endOffset":8415213,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsNoCache","ranges":[{"startOffset":8415251,"endOffset":8415289,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveReturnTypeNode","ranges":[{"startOffset":8415321,"endOffset":8415353,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveSetAccessorTypeAnnotationNode","ranges":[{"startOffset":8415400,"endOffset":8415447,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeAnnotationNode","ranges":[{"startOffset":8415483,"endOffset":8415519,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeParameterDeclarations","ranges":[{"startOffset":8415562,"endOffset":8415605,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":8415632,"endOffset":8415659,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessArgumentExpressionOrName","ranges":[{"startOffset":8415715,"endOffset":8415771,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessName","ranges":[{"startOffset":8415807,"endOffset":8415843,"count":0}],"isBlockCoverage":false},{"functionName":"getElementsOfBindingOrAssignmentPattern","ranges":[{"startOffset":8415888,"endOffset":8415933,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitDeclarations","ranges":[{"startOffset":8415958,"endOffset":8415983,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitFlags","ranges":[{"startOffset":8416001,"endOffset":8416019,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitHelpers","ranges":[{"startOffset":8416039,"endOffset":8416059,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleDetectionKind","ranges":[{"startOffset":8416091,"endOffset":8416123,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleFormatOfFileWorker","ranges":[{"startOffset":8416160,"endOffset":8416197,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleKind","ranges":[{"startOffset":8416220,"endOffset":8416243,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleResolutionKind","ranges":[{"startOffset":8416276,"endOffset":8416309,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitScriptTarget","ranges":[{"startOffset":8416334,"endOffset":8416359,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitStandardClassFields","ranges":[{"startOffset":8416391,"endOffset":8416423,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingBlockScopeContainer","ranges":[{"startOffset":8416460,"endOffset":8416497,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingContainer","ranges":[{"startOffset":8416524,"endOffset":8416551,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":8416590,"endOffset":8416629,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":8416669,"endOffset":8416709,"count":0}],"isBlockCoverage":false},{"functionName":"getEndLinePosition","ranges":[{"startOffset":8416733,"endOffset":8416757,"count":0}],"isBlockCoverage":false},{"functionName":"getEntityNameFromTypeNode","ranges":[{"startOffset":8416788,"endOffset":8416819,"count":0}],"isBlockCoverage":false},{"functionName":"getEntrypointsFromPackageJsonInfo","ranges":[{"startOffset":8416858,"endOffset":8416897,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorCountForSummary","ranges":[{"startOffset":8416926,"endOffset":8416955,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForNode","ranges":[{"startOffset":8416980,"endOffset":8417005,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSummaryText","ranges":[{"startOffset":8417030,"endOffset":8417055,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfIdentifierOrLiteral","ranges":[{"startOffset":8417096,"endOffset":8417137,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxAttributeName","ranges":[{"startOffset":8417175,"endOffset":8417213,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxNamespacedName","ranges":[{"startOffset":8417252,"endOffset":8417291,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandoInitializer","ranges":[{"startOffset":8417318,"endOffset":8417345,"count":0}],"isBlockCoverage":false},{"functionName":"getExportAssignmentExpression","ranges":[{"startOffset":8417380,"endOffset":8417415,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfoMap","ranges":[{"startOffset":8417437,"endOffset":8417459,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNeedsImportStarHelper","ranges":[{"startOffset":8417495,"endOffset":8417531,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionAssociativity","ranges":[{"startOffset":8417563,"endOffset":8417595,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionPrecedence","ranges":[{"startOffset":8417624,"endOffset":8417653,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalHelpersModuleName","ranges":[{"startOffset":8417687,"endOffset":8417721,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleImportEqualsDeclarationExpression","ranges":[{"startOffset":8417777,"endOffset":8417833,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName","ranges":[{"startOffset":8417860,"endOffset":8417887,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromDeclaration","ranges":[{"startOffset":8417929,"endOffset":8417971,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromPath","ranges":[{"startOffset":8418006,"endOffset":8418041,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameLiteral","ranges":[{"startOffset":8418075,"endOffset":8418109,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleRequireArgument","ranges":[{"startOffset":8418147,"endOffset":8418185,"count":0}],"isBlockCoverage":false},{"functionName":"getFallbackOptions","ranges":[{"startOffset":8418209,"endOffset":8418233,"count":0}],"isBlockCoverage":false},{"functionName":"getFileEmitOutput","ranges":[{"startOffset":8418256,"endOffset":8418279,"count":0}],"isBlockCoverage":false},{"functionName":"getFileMatcherPatterns","ranges":[{"startOffset":8418307,"endOffset":8418335,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesFromConfigSpecs","ranges":[{"startOffset":8418368,"endOffset":8418401,"count":0}],"isBlockCoverage":false},{"functionName":"getFileWatcherEventKind","ranges":[{"startOffset":8418430,"endOffset":8418459,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesInErrorForSummary","ranges":[{"startOffset":8418490,"endOffset":8418521,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstConstructorWithBody","ranges":[{"startOffset":8418554,"endOffset":8418587,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIdentifier","ranges":[{"startOffset":8418611,"endOffset":8418635,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstNonSpaceCharacterPosition","ranges":[{"startOffset":8418674,"endOffset":8418713,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstProjectOutput","ranges":[{"startOffset":8418740,"endOffset":8418767,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanExpression","ranges":[{"startOffset":8418802,"endOffset":8418837,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettingsForWriting","ranges":[{"startOffset":8418874,"endOffset":8418911,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":8418929,"endOffset":8418947,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionFlags","ranges":[{"startOffset":8418969,"endOffset":8418991,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClause","ranges":[{"startOffset":8419014,"endOffset":8419037,"count":0}],"isBlockCoverage":false},{"functionName":"getHostSignatureFromJSDoc","ranges":[{"startOffset":8419068,"endOffset":8419099,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierAutoGenerate","ranges":[{"startOffset":8419130,"endOffset":8419161,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierGeneratedImportReference","ranges":[{"startOffset":8419204,"endOffset":8419247,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierTypeArguments","ranges":[{"startOffset":8419279,"endOffset":8419311,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":8419356,"endOffset":8419401,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForEmitWorker","ranges":[{"startOffset":8419440,"endOffset":8419479,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFile","ranges":[{"startOffset":8419512,"endOffset":8419545,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFileWorker","ranges":[{"startOffset":8419584,"endOffset":8419623,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportDefaultHelper","ranges":[{"startOffset":8419662,"endOffset":8419701,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportStarHelper","ranges":[{"startOffset":8419737,"endOffset":8419773,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":8419794,"endOffset":8419815,"count":0}],"isBlockCoverage":false},{"functionName":"getInferredLibraryNameResolveFrom","ranges":[{"startOffset":8419854,"endOffset":8419893,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializedVariables","ranges":[{"startOffset":8419922,"endOffset":8419951,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBinaryExpression","ranges":[{"startOffset":8419989,"endOffset":8420027,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBindingOrAssignmentElement","ranges":[{"startOffset":8420075,"endOffset":8420123,"count":0}],"isBlockCoverage":false},{"functionName":"getInterfaceBaseTypeNodes","ranges":[{"startOffset":8420154,"endOffset":8420185,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalEmitFlags","ranges":[{"startOffset":8420211,"endOffset":8420237,"count":0}],"isBlockCoverage":false},{"functionName":"getInvokedExpression","ranges":[{"startOffset":8420263,"endOffset":8420289,"count":0}],"isBlockCoverage":false},{"functionName":"getIsFileExcluded","ranges":[{"startOffset":8420312,"endOffset":8420335,"count":0}],"isBlockCoverage":false},{"functionName":"getIsolatedModules","ranges":[{"startOffset":8420359,"endOffset":8420383,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocAugmentsTag","ranges":[{"startOffset":8420408,"endOffset":8420433,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocClassTag","ranges":[{"startOffset":8420455,"endOffset":8420477,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentRanges","ranges":[{"startOffset":8420504,"endOffset":8420531,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentsAndTags","ranges":[{"startOffset":8420560,"endOffset":8420589,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTag","ranges":[{"startOffset":8420616,"endOffset":8420643,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTagNoCache","ranges":[{"startOffset":8420677,"endOffset":8420711,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocEnumTag","ranges":[{"startOffset":8420732,"endOffset":8420753,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocHost","ranges":[{"startOffset":8420771,"endOffset":8420789,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocImplementsTags","ranges":[{"startOffset":8420817,"endOffset":8420845,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverloadTags","ranges":[{"startOffset":8420871,"endOffset":8420897,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverrideTagNoCache","ranges":[{"startOffset":8420929,"endOffset":8420961,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTags","ranges":[{"startOffset":8420988,"endOffset":8421015,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsNoCache","ranges":[{"startOffset":8421049,"endOffset":8421083,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTag","ranges":[{"startOffset":8421107,"endOffset":8421131,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTagNoCache","ranges":[{"startOffset":8421162,"endOffset":8421193,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTag","ranges":[{"startOffset":8421219,"endOffset":8421245,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTagNoCache","ranges":[{"startOffset":8421278,"endOffset":8421311,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTag","ranges":[{"startOffset":8421334,"endOffset":8421357,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTagNoCache","ranges":[{"startOffset":8421387,"endOffset":8421417,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTag","ranges":[{"startOffset":8421442,"endOffset":8421467,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTagNoCache","ranges":[{"startOffset":8421499,"endOffset":8421531,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnTag","ranges":[{"startOffset":8421554,"endOffset":8421577,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnType","ranges":[{"startOffset":8421601,"endOffset":8421625,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocRoot","ranges":[{"startOffset":8421643,"endOffset":8421661,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesExpressionType","ranges":[{"startOffset":8421698,"endOffset":8421735,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesTag","ranges":[{"startOffset":8421761,"endOffset":8421787,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTags","ranges":[{"startOffset":8421805,"endOffset":8421823,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTemplateTag","ranges":[{"startOffset":8421848,"endOffset":8421873,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocThisTag","ranges":[{"startOffset":8421894,"endOffset":8421915,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocType","ranges":[{"startOffset":8421933,"endOffset":8421951,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAliasName","ranges":[{"startOffset":8421978,"endOffset":8422005,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAssertionType","ranges":[{"startOffset":8422036,"endOffset":8422067,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterDeclarations","ranges":[{"startOffset":8422106,"endOffset":8422145,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTags","ranges":[{"startOffset":8422176,"endOffset":8422207,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsNoCache","ranges":[{"startOffset":8422245,"endOffset":8422283,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeTag","ranges":[{"startOffset":8422304,"endOffset":8422325,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXImplicitImportBase","ranges":[{"startOffset":8422355,"endOffset":8422385,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXRuntimeImport","ranges":[{"startOffset":8422410,"endOffset":8422435,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXTransformEnabled","ranges":[{"startOffset":8422463,"endOffset":8422491,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilerOptions","ranges":[{"startOffset":8422521,"endOffset":8422551,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageVariant","ranges":[{"startOffset":8422575,"endOffset":8422599,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChild","ranges":[{"startOffset":8422617,"endOffset":8422635,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRanges","ranges":[{"startOffset":8422664,"endOffset":8422693,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRangesOfNode","ranges":[{"startOffset":8422728,"endOffset":8422763,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostAccessExpression","ranges":[{"startOffset":8422796,"endOffset":8422829,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostExpression","ranges":[{"startOffset":8422856,"endOffset":8422883,"count":0}],"isBlockCoverage":false},{"functionName":"getLibFileNameFromLibReference","ranges":[{"startOffset":8422919,"endOffset":8422955,"count":0}],"isBlockCoverage":false},{"functionName":"getLibNameFromLibReference","ranges":[{"startOffset":8422987,"endOffset":8423019,"count":0}],"isBlockCoverage":false},{"functionName":"getLibraryNameFromLibFileName","ranges":[{"startOffset":8423054,"endOffset":8423089,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":8423124,"endOffset":8423159,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":8423176,"endOffset":8423193,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPosition","ranges":[{"startOffset":8423221,"endOffset":8423249,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStartPositionForPosition","ranges":[{"startOffset":8423286,"endOffset":8423323,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":8423342,"endOffset":8423361,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndNextNonWhitespaceCharacter","ranges":[{"startOffset":8423419,"endOffset":8423477,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter","ranges":[{"startOffset":8423540,"endOffset":8423603,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositions","ranges":[{"startOffset":8423633,"endOffset":8423663,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndAndRangeStart","ranges":[{"startOffset":8423705,"endOffset":8423747,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndPositions","ranges":[{"startOffset":8423785,"endOffset":8423823,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteralText","ranges":[{"startOffset":8423843,"endOffset":8423863,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalNameForExternalImport","ranges":[{"startOffset":8423898,"endOffset":8423933,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportDefault","ranges":[{"startOffset":8423969,"endOffset":8424005,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleSpecificMessage","ranges":[{"startOffset":8424035,"endOffset":8424065,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleTimeString","ranges":[{"startOffset":8424090,"endOffset":8424115,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpan","ranges":[{"startOffset":8424141,"endOffset":8424167,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpan","ranges":[{"startOffset":8424194,"endOffset":8424221,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocation","ranges":[{"startOffset":8424244,"endOffset":8424267,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedFileSpec","ranges":[{"startOffset":8424291,"endOffset":8424315,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedIncludeSpec","ranges":[{"startOffset":8424342,"endOffset":8424369,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromDeclaration","ranges":[{"startOffset":8424400,"endOffset":8424431,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromLocation","ranges":[{"startOffset":8424459,"endOffset":8424487,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOfDeclaration","ranges":[{"startOffset":8424516,"endOffset":8424545,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForFileReference","ranges":[{"startOffset":8424574,"endOffset":8424603,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForResolutionAtIndex","ranges":[{"startOffset":8424636,"endOffset":8424669,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocation","ranges":[{"startOffset":8424698,"endOffset":8424727,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":8424748,"endOffset":8424769,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers","ranges":[{"startOffset":8424787,"endOffset":8424805,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceState","ranges":[{"startOffset":8424833,"endOffset":8424861,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNameStringLiteralAt","ranges":[{"startOffset":8424895,"endOffset":8424929,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierEndingPreference","ranges":[{"startOffset":8424969,"endOffset":8425009,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierResolverHost","ranges":[{"startOffset":8425045,"endOffset":8425081,"count":0}],"isBlockCoverage":false},{"functionName":"getNameForExportedSymbol","ranges":[{"startOffset":8425111,"endOffset":8425141,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromImportAttribute","ranges":[{"startOffset":8425173,"endOffset":8425205,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromIndexInfo","ranges":[{"startOffset":8425231,"endOffset":8425257,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromPropertyName","ranges":[{"startOffset":8425286,"endOffset":8425315,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfAccessExpression","ranges":[{"startOffset":8425346,"endOffset":8425377,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfCompilerOptionValue","ranges":[{"startOffset":8425411,"endOffset":8425445,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfDeclaration","ranges":[{"startOffset":8425471,"endOffset":8425497,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfExpando","ranges":[{"startOffset":8425519,"endOffset":8425541,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfJSDocTypedef","ranges":[{"startOffset":8425568,"endOffset":8425595,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfScriptTarget","ranges":[{"startOffset":8425622,"endOffset":8425649,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrArgument","ranges":[{"startOffset":8425672,"endOffset":8425695,"count":0}],"isBlockCoverage":false},{"functionName":"getNameTable","ranges":[{"startOffset":8425713,"endOffset":8425731,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceDeclarationNode","ranges":[{"startOffset":8425764,"endOffset":8425797,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineCharacter","ranges":[{"startOffset":8425822,"endOffset":8425847,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineKind","ranges":[{"startOffset":8425867,"endOffset":8425887,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineOrDefaultFromHost","ranges":[{"startOffset":8425920,"endOffset":8425953,"count":0}],"isBlockCoverage":false},{"functionName":"getNewTargetContainer","ranges":[{"startOffset":8425980,"endOffset":8426007,"count":0}],"isBlockCoverage":false},{"functionName":"getNextJSDocCommentLocation","ranges":[{"startOffset":8426040,"endOffset":8426073,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeChildren","ranges":[{"startOffset":8426094,"endOffset":8426115,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeForGeneratedName","ranges":[{"startOffset":8426144,"endOffset":8426173,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeId","ranges":[{"startOffset":8426188,"endOffset":8426203,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeKind","ranges":[{"startOffset":8426220,"endOffset":8426237,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModifiers","ranges":[{"startOffset":8426259,"endOffset":8426281,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulePathParts","ranges":[{"startOffset":8426309,"endOffset":8426337,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignedNameOfDeclaration","ranges":[{"startOffset":8426374,"endOffset":8426411,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignmentOperatorForCompoundAssignment","ranges":[{"startOffset":8426462,"endOffset":8426513,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAugmentationDeclaration","ranges":[{"startOffset":8426548,"endOffset":8426583,"count":0}],"isBlockCoverage":false},{"functionName":"getNonDecoratorTokenPosOfNode","ranges":[{"startOffset":8426618,"endOffset":8426653,"count":0}],"isBlockCoverage":false},{"functionName":"getNonIncrementalBuildInfoRoots","ranges":[{"startOffset":8426690,"endOffset":8426727,"count":0}],"isBlockCoverage":false},{"functionName":"getNonModifierTokenPosOfNode","ranges":[{"startOffset":8426761,"endOffset":8426795,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":8426826,"endOffset":8426857,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePathWithoutRoot","ranges":[{"startOffset":8426899,"endOffset":8426941,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":8426974,"endOffset":8427007,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectFlags","ranges":[{"startOffset":8427027,"endOffset":8427047,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorAssociativity","ranges":[{"startOffset":8427077,"endOffset":8427107,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorPrecedence","ranges":[{"startOffset":8427134,"endOffset":8427161,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionFromName","ranges":[{"startOffset":8427184,"endOffset":8427207,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForLibraryResolution","ranges":[{"startOffset":8427243,"endOffset":8427279,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsNameMap","ranges":[{"startOffset":8427302,"endOffset":8427325,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsSyntaxByArrayElementValue","ranges":[{"startOffset":8427366,"endOffset":8427407,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsSyntaxByValue","ranges":[{"startOffset":8427436,"endOffset":8427465,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateEmitNode","ranges":[{"startOffset":8427490,"endOffset":8427515,"count":0}],"isBlockCoverage":false},{"functionName":"getOrUpdate","ranges":[{"startOffset":8427532,"endOffset":8427549,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNode","ranges":[{"startOffset":8427570,"endOffset":8427591,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNodeId","ranges":[{"startOffset":8427614,"endOffset":8427637,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileName","ranges":[{"startOffset":8427671,"endOffset":8427705,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileNameWorker","ranges":[{"startOffset":8427745,"endOffset":8427785,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputExtension","ranges":[{"startOffset":8427809,"endOffset":8427833,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputFileNames","ranges":[{"startOffset":8427857,"endOffset":8427881,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileNameWorker","ranges":[{"startOffset":8427912,"endOffset":8427943,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsFor","ranges":[{"startOffset":8427966,"endOffset":8427989,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEmitOutputFilePath","ranges":[{"startOffset":8428019,"endOffset":8428049,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnKeys","ranges":[{"startOffset":8428065,"endOffset":8428081,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnValues","ranges":[{"startOffset":8428099,"endOffset":8428117,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonTypesVersionsPaths","ranges":[{"startOffset":8428155,"endOffset":8428193,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageNameFromTypesPackageName","ranges":[{"startOffset":8428233,"endOffset":8428273,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeForPath","ranges":[{"startOffset":8428301,"endOffset":8428329,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterSymbolFromJSDoc","ranges":[{"startOffset":8428362,"endOffset":8428395,"count":0}],"isBlockCoverage":false},{"functionName":"getParentNodeInSpan","ranges":[{"startOffset":8428420,"endOffset":8428445,"count":0}],"isBlockCoverage":false},{"functionName":"getParseTreeNode","ranges":[{"startOffset":8428467,"endOffset":8428489,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLineOfConfigFile","ranges":[{"startOffset":8428527,"endOffset":8428565,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponents","ranges":[{"startOffset":8428588,"endOffset":8428611,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromPathComponents","ranges":[{"startOffset":8428642,"endOffset":8428673,"count":0}],"isBlockCoverage":false},{"functionName":"getPathUpdater","ranges":[{"startOffset":8428693,"endOffset":8428713,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsBasePath","ranges":[{"startOffset":8428735,"endOffset":8428757,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":8428781,"endOffset":8428805,"count":0}],"isBlockCoverage":false},{"functionName":"getPendingEmitKindWithSeen","ranges":[{"startOffset":8428837,"endOffset":8428869,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":8428904,"endOffset":8428939,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleGenericSignatures","ranges":[{"startOffset":8428973,"endOffset":8429007,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputExtensionForExtension","ranges":[{"startOffset":8429058,"endOffset":8429109,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputPathWithoutChangingExt","ranges":[{"startOffset":8429161,"endOffset":8429213,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleTypeArgumentsInfo","ranges":[{"startOffset":8429247,"endOffset":8429281,"count":0}],"isBlockCoverage":false},{"functionName":"getPreEmitDiagnostics","ranges":[{"startOffset":8429308,"endOffset":8429335,"count":0}],"isBlockCoverage":false},{"functionName":"getPrecedingNonSpaceCharacterPosition","ranges":[{"startOffset":8429378,"endOffset":8429421,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifier","ranges":[{"startOffset":8429447,"endOffset":8429473,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":8429492,"endOffset":8429511,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty","ranges":[{"startOffset":8429528,"endOffset":8429545,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentAliasLikeExpression","ranges":[{"startOffset":8429591,"endOffset":8429637,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForPropertyNameNode","ranges":[{"startOffset":8429677,"endOffset":8429717,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameFromType","ranges":[{"startOffset":8429746,"endOffset":8429775,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":8429824,"endOffset":8429873,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolFromBindingElement","ranges":[{"startOffset":8429914,"endOffset":8429955,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromContextualType","ranges":[{"startOffset":8429997,"endOffset":8430039,"count":0}],"isBlockCoverage":false},{"functionName":"getQuoteFromPreference","ranges":[{"startOffset":8430067,"endOffset":8430095,"count":0}],"isBlockCoverage":false},{"functionName":"getQuotePreference","ranges":[{"startOffset":8430119,"endOffset":8430143,"count":0}],"isBlockCoverage":false},{"functionName":"getRangesWhere","ranges":[{"startOffset":8430163,"endOffset":8430183,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorContextSpan","ranges":[{"startOffset":8430211,"endOffset":8430239,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileLocation","ranges":[{"startOffset":8430270,"endOffset":8430301,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexFromPattern","ranges":[{"startOffset":8430326,"endOffset":8430351,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionForWildcard","ranges":[{"startOffset":8430388,"endOffset":8430425,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionsForWildcards","ranges":[{"startOffset":8430464,"endOffset":8430503,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromDirectory","ranges":[{"startOffset":8430537,"endOffset":8430571,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromFile","ranges":[{"startOffset":8430600,"endOffset":8430629,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathToDirectoryOrUrl","ranges":[{"startOffset":8430666,"endOffset":8430703,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocation","ranges":[{"startOffset":8430726,"endOffset":8430749,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementSpanForContextToken","ranges":[{"startOffset":8430788,"endOffset":8430827,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionDiagnostic","ranges":[{"startOffset":8430856,"endOffset":8430885,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionModeOverride","ranges":[{"startOffset":8430916,"endOffset":8430947,"count":0}],"isBlockCoverage":false},{"functionName":"getResolveJsonModule","ranges":[{"startOffset":8430973,"endOffset":8430999,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonExports","ranges":[{"startOffset":8431033,"endOffset":8431067,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonImports","ranges":[{"startOffset":8431101,"endOffset":8431135,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedExternalModuleName","ranges":[{"startOffset":8431170,"endOffset":8431205,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedModuleFromResolution","ranges":[{"startOffset":8431242,"endOffset":8431279,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedTypeReferenceDirectiveFromResolution","ranges":[{"startOffset":8431332,"endOffset":8431385,"count":0}],"isBlockCoverage":false},{"functionName":"getRestIndicatorOfBindingOrAssignmentElement","ranges":[{"startOffset":8431435,"endOffset":8431485,"count":0}],"isBlockCoverage":false},{"functionName":"getRestParameterElementType","ranges":[{"startOffset":8431518,"endOffset":8431551,"count":0}],"isBlockCoverage":false},{"functionName":"getRightMostAssignedExpression","ranges":[{"startOffset":8431587,"endOffset":8431623,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDeclaration","ranges":[{"startOffset":8431647,"endOffset":8431671,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDirectoryOfResolutionCache","ranges":[{"startOffset":8431710,"endOffset":8431749,"count":0}],"isBlockCoverage":false},{"functionName":"getRootLength","ranges":[{"startOffset":8431768,"endOffset":8431787,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8431806,"endOffset":8431825,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKindFromFileName","ranges":[{"startOffset":8431856,"endOffset":8431887,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptTargetFeatures","ranges":[{"startOffset":8431916,"endOffset":8431945,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedEffectiveModifierFlags","ranges":[{"startOffset":8431984,"endOffset":8432023,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedSyntacticModifierFlags","ranges":[{"startOffset":8432062,"endOffset":8432101,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":8432133,"endOffset":8432165,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticJsxChildren","ranges":[{"startOffset":8432193,"endOffset":8432221,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorTypeAnnotationNode","ranges":[{"startOffset":8432259,"endOffset":8432297,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorValueParameter","ranges":[{"startOffset":8432331,"endOffset":8432365,"count":0}],"isBlockCoverage":false},{"functionName":"getSetExternalModuleIndicator","ranges":[{"startOffset":8432400,"endOffset":8432435,"count":0}],"isBlockCoverage":false},{"functionName":"getShebang","ranges":[{"startOffset":8432451,"endOffset":8432467,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleVariableOfVariableStatement","ranges":[{"startOffset":8432509,"endOffset":8432551,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotText","ranges":[{"startOffset":8432572,"endOffset":8432593,"count":0}],"isBlockCoverage":false},{"functionName":"getSnippetElement","ranges":[{"startOffset":8432616,"endOffset":8432639,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfModule","ranges":[{"startOffset":8432666,"endOffset":8432693,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfNode","ranges":[{"startOffset":8432718,"endOffset":8432743,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDir","ranges":[{"startOffset":8432774,"endOffset":8432805,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileVersionAsHashFromText","ranges":[{"startOffset":8432845,"endOffset":8432885,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilesToEmit","ranges":[{"startOffset":8432911,"endOffset":8432937,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapRange","ranges":[{"startOffset":8432960,"endOffset":8432983,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":8433004,"endOffset":8433025,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTextOfNodeFromSourceFile","ranges":[{"startOffset":8433064,"endOffset":8433103,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfTokenAtPosition","ranges":[{"startOffset":8433133,"endOffset":8433163,"count":0}],"isBlockCoverage":false},{"functionName":"getSpellingSuggestion","ranges":[{"startOffset":8433190,"endOffset":8433217,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfLine","ranges":[{"startOffset":8433245,"endOffset":8433273,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfRange","ranges":[{"startOffset":8433302,"endOffset":8433331,"count":0}],"isBlockCoverage":false},{"functionName":"getStartsOnNewLine","ranges":[{"startOffset":8433355,"endOffset":8433379,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticPropertiesAndClassStaticBlock","ranges":[{"startOffset":8433423,"endOffset":8433467,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptionValue","ranges":[{"startOffset":8433493,"endOffset":8433519,"count":0}],"isBlockCoverage":false},{"functionName":"getStringComparer","ranges":[{"startOffset":8433542,"endOffset":8433565,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":8433592,"endOffset":8433619,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperCallFromStatement","ranges":[{"startOffset":8433650,"endOffset":8433681,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperContainer","ranges":[{"startOffset":8433704,"endOffset":8433727,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":8433754,"endOffset":8433781,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensions","ranges":[{"startOffset":8433809,"endOffset":8433837,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsWithJsonIfResolveJsonModule","ranges":[{"startOffset":8433892,"endOffset":8433947,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchedType","ranges":[{"startOffset":8433968,"endOffset":8433989,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolId","ranges":[{"startOffset":8434006,"endOffset":8434023,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNameForPrivateIdentifier","ranges":[{"startOffset":8434062,"endOffset":8434101,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolTarget","ranges":[{"startOffset":8434122,"endOffset":8434143,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticClassifications","ranges":[{"startOffset":8434176,"endOffset":8434209,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlags","ranges":[{"startOffset":8434240,"endOffset":8434271,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlagsNoCache","ranges":[{"startOffset":8434309,"endOffset":8434347,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClone","ranges":[{"startOffset":8434376,"endOffset":8434405,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWithReplacements","ranges":[{"startOffset":8434450,"endOffset":8434495,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClones","ranges":[{"startOffset":8434525,"endOffset":8434555,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClonesWithReplacements","ranges":[{"startOffset":8434601,"endOffset":8434647,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticLeadingComments","ranges":[{"startOffset":8434680,"endOffset":8434713,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticTrailingComments","ranges":[{"startOffset":8434747,"endOffset":8434781,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetLabel","ranges":[{"startOffset":8434801,"endOffset":8434821,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetOfBindingOrAssignmentElement","ranges":[{"startOffset":8434864,"endOffset":8434907,"count":0}],"isBlockCoverage":false},{"functionName":"getTemporaryModuleResolutionState","ranges":[{"startOffset":8434946,"endOffset":8434985,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfConstantValue","ranges":[{"startOffset":8435013,"endOffset":8435041,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfIdentifierOrLiteral","ranges":[{"startOffset":8435075,"endOffset":8435109,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJSDocComment","ranges":[{"startOffset":8435136,"endOffset":8435163,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxAttributeName","ranges":[{"startOffset":8435194,"endOffset":8435225,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxNamespacedName","ranges":[{"startOffset":8435257,"endOffset":8435289,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNode","ranges":[{"startOffset":8435308,"endOffset":8435327,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNodeFromSourceText","ranges":[{"startOffset":8435360,"endOffset":8435393,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfPropertyName","ranges":[{"startOffset":8435420,"endOffset":8435447,"count":0}],"isBlockCoverage":false},{"functionName":"getThisContainer","ranges":[{"startOffset":8435469,"endOffset":8435491,"count":0}],"isBlockCoverage":false},{"functionName":"getThisParameter","ranges":[{"startOffset":8435513,"endOffset":8435535,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":8435559,"endOffset":8435583,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenPosOfNode","ranges":[{"startOffset":8435606,"endOffset":8435629,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenSourceMapRange","ranges":[{"startOffset":8435657,"endOffset":8435685,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingPropertyName","ranges":[{"startOffset":8435714,"endOffset":8435743,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingToken","ranges":[{"startOffset":8435765,"endOffset":8435787,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingCommentRanges","ranges":[{"startOffset":8435817,"endOffset":8435847,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingSemicolonDeferringWriter","ranges":[{"startOffset":8435888,"endOffset":8435929,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformers","ranges":[{"startOffset":8435950,"endOffset":8435971,"count":0}],"isBlockCoverage":false},{"functionName":"getTsBuildInfoEmitOutputFilePath","ranges":[{"startOffset":8436009,"endOffset":8436047,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigObjectLiteralExpression","ranges":[{"startOffset":8436087,"endOffset":8436127,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigPropArrayElementValue","ranges":[{"startOffset":8436165,"endOffset":8436203,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationNode","ranges":[{"startOffset":8436230,"endOffset":8436257,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeArgumentOrTypeParameterList","ranges":[{"startOffset":8436297,"endOffset":8436337,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeKeywordOfTypeOnlyImport","ranges":[{"startOffset":8436373,"endOffset":8436409,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode","ranges":[{"startOffset":8436426,"endOffset":8436443,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNodeIfAccessible","ranges":[{"startOffset":8436472,"endOffset":8436501,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterFromJsDoc","ranges":[{"startOffset":8436532,"endOffset":8436563,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterOwner","ranges":[{"startOffset":8436590,"endOffset":8436617,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageName","ranges":[{"startOffset":8436642,"endOffset":8436667,"count":0}],"isBlockCoverage":false},{"functionName":"getUILocale","ranges":[{"startOffset":8436684,"endOffset":8436701,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueName","ranges":[{"startOffset":8436720,"endOffset":8436739,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueSymbolId","ranges":[{"startOffset":8436762,"endOffset":8436785,"count":0}],"isBlockCoverage":false},{"functionName":"getUseDefineForClassFields","ranges":[{"startOffset":8436817,"endOffset":8436849,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchErrorSummaryDiagnosticMessage","ranges":[{"startOffset":8436892,"endOffset":8436935,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchFactory","ranges":[{"startOffset":8436956,"endOffset":8436977,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":8436988,"endOffset":8436999,"count":0}],"isBlockCoverage":false},{"functionName":"groupBy","ranges":[{"startOffset":8437012,"endOffset":8437025,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentation","ranges":[{"startOffset":8437047,"endOffset":8437069,"count":0}],"isBlockCoverage":false},{"functionName":"handleNoEmitOptions","ranges":[{"startOffset":8437094,"endOffset":8437119,"count":0}],"isBlockCoverage":false},{"functionName":"handleWatchOptionsConfigDirTemplateSubstitution","ranges":[{"startOffset":8437172,"endOffset":8437225,"count":0}],"isBlockCoverage":false},{"functionName":"hasAbstractModifier","ranges":[{"startOffset":8437250,"endOffset":8437275,"count":0}],"isBlockCoverage":false},{"functionName":"hasAccessorModifier","ranges":[{"startOffset":8437300,"endOffset":8437325,"count":0}],"isBlockCoverage":false},{"functionName":"hasAmbientModifier","ranges":[{"startOffset":8437349,"endOffset":8437373,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangesInResolutions","ranges":[{"startOffset":8437402,"endOffset":8437431,"count":0}],"isBlockCoverage":false},{"functionName":"hasContextSensitiveParameters","ranges":[{"startOffset":8437466,"endOffset":8437501,"count":0}],"isBlockCoverage":false},{"functionName":"hasDecorators","ranges":[{"startOffset":8437520,"endOffset":8437539,"count":0}],"isBlockCoverage":false},{"functionName":"hasDocComment","ranges":[{"startOffset":8437558,"endOffset":8437577,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicName","ranges":[{"startOffset":8437597,"endOffset":8437617,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifier","ranges":[{"startOffset":8437643,"endOffset":8437669,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifiers","ranges":[{"startOffset":8437696,"endOffset":8437723,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveReadonlyModifier","ranges":[{"startOffset":8437757,"endOffset":8437791,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":8437809,"endOffset":8437827,"count":0}],"isBlockCoverage":false},{"functionName":"hasImplementationTSFileExtension","ranges":[{"startOffset":8437865,"endOffset":8437903,"count":0}],"isBlockCoverage":false},{"functionName":"hasIndexSignature","ranges":[{"startOffset":8437926,"endOffset":8437949,"count":0}],"isBlockCoverage":false},{"functionName":"hasInferredType","ranges":[{"startOffset":8437970,"endOffset":8437991,"count":0}],"isBlockCoverage":false},{"functionName":"hasInitializer","ranges":[{"startOffset":8438011,"endOffset":8438031,"count":0}],"isBlockCoverage":false},{"functionName":"hasInvalidEscape","ranges":[{"startOffset":8438053,"endOffset":8438075,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocNodes","ranges":[{"startOffset":8438094,"endOffset":8438113,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocParameterTags","ranges":[{"startOffset":8438140,"endOffset":8438167,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSFileExtension","ranges":[{"startOffset":8438191,"endOffset":8438215,"count":0}],"isBlockCoverage":false},{"functionName":"hasJsonModuleEmitEnabled","ranges":[{"startOffset":8438245,"endOffset":8438275,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyExpressionInitializer","ranges":[{"startOffset":8438309,"endOffset":8438343,"count":0}],"isBlockCoverage":false},{"functionName":"hasOverrideModifier","ranges":[{"startOffset":8438368,"endOffset":8438393,"count":0}],"isBlockCoverage":false},{"functionName":"hasPossibleExternalModuleReference","ranges":[{"startOffset":8438433,"endOffset":8438473,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":8438490,"endOffset":8438507,"count":0}],"isBlockCoverage":false},{"functionName":"hasPropertyAccessExpressionWithName","ranges":[{"startOffset":8438548,"endOffset":8438589,"count":0}],"isBlockCoverage":false},{"functionName":"hasQuestionToken","ranges":[{"startOffset":8438611,"endOffset":8438633,"count":0}],"isBlockCoverage":false},{"functionName":"hasRecordedExternalHelpers","ranges":[{"startOffset":8438665,"endOffset":8438697,"count":0}],"isBlockCoverage":false},{"functionName":"hasResolutionModeOverride","ranges":[{"startOffset":8438728,"endOffset":8438759,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestParameter","ranges":[{"startOffset":8438781,"endOffset":8438803,"count":0}],"isBlockCoverage":false},{"functionName":"hasScopeMarker","ranges":[{"startOffset":8438823,"endOffset":8438843,"count":0}],"isBlockCoverage":false},{"functionName":"hasStaticModifier","ranges":[{"startOffset":8438866,"endOffset":8438889,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifier","ranges":[{"startOffset":8438915,"endOffset":8438941,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifiers","ranges":[{"startOffset":8438968,"endOffset":8438995,"count":0}],"isBlockCoverage":false},{"functionName":"hasTSFileExtension","ranges":[{"startOffset":8439019,"endOffset":8439043,"count":0}],"isBlockCoverage":false},{"functionName":"hasTabstop","ranges":[{"startOffset":8439059,"endOffset":8439075,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":8439110,"endOffset":8439145,"count":0}],"isBlockCoverage":false},{"functionName":"hasType","ranges":[{"startOffset":8439158,"endOffset":8439171,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeArguments","ranges":[{"startOffset":8439193,"endOffset":8439215,"count":0}],"isBlockCoverage":false},{"functionName":"hasZeroOrOneAsteriskCharacter","ranges":[{"startOffset":8439250,"endOffset":8439285,"count":0}],"isBlockCoverage":false},{"functionName":"hostGetCanonicalFileName","ranges":[{"startOffset":8439315,"endOffset":8439345,"count":0}],"isBlockCoverage":false},{"functionName":"hostUsesCaseSensitiveFileNames","ranges":[{"startOffset":8439381,"endOffset":8439417,"count":0}],"isBlockCoverage":false},{"functionName":"idText","ranges":[{"startOffset":8439429,"endOffset":8439441,"count":0}],"isBlockCoverage":false},{"functionName":"identifierIsThisKeyword","ranges":[{"startOffset":8439470,"endOffset":8439499,"count":0}],"isBlockCoverage":false},{"functionName":"identifierToKeywordKind","ranges":[{"startOffset":8439528,"endOffset":8439557,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":8439571,"endOffset":8439585,"count":0}],"isBlockCoverage":false},{"functionName":"identitySourceMapConsumer","ranges":[{"startOffset":8439616,"endOffset":8439647,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreSourceNewlines","ranges":[{"startOffset":8439673,"endOffset":8439699,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPaths","ranges":[{"startOffset":8439717,"endOffset":8439735,"count":0}],"isBlockCoverage":false},{"functionName":"importFromModuleSpecifier","ranges":[{"startOffset":8439766,"endOffset":8439797,"count":0}],"isBlockCoverage":false},{"functionName":"importSyntaxAffectsModuleResolution","ranges":[{"startOffset":8439838,"endOffset":8439879,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfAnyCharCode","ranges":[{"startOffset":8439903,"endOffset":8439927,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfNode","ranges":[{"startOffset":8439944,"endOffset":8439961,"count":0}],"isBlockCoverage":false},{"functionName":"indicesOf","ranges":[{"startOffset":8439976,"endOffset":8439991,"count":0}],"isBlockCoverage":false},{"functionName":"inferredTypesContainingFile","ranges":[{"startOffset":8440024,"endOffset":8440057,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassNamedEvaluationHelperBlockIfMissing","ranges":[{"startOffset":8440109,"endOffset":8440161,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassThisAssignmentIfMissing","ranges":[{"startOffset":8440201,"endOffset":8440241,"count":0}],"isBlockCoverage":false},{"functionName":"insertImports","ranges":[{"startOffset":8440260,"endOffset":8440279,"count":0}],"isBlockCoverage":false},{"functionName":"insertSorted","ranges":[{"startOffset":8440297,"endOffset":8440315,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterCustomPrologue","ranges":[{"startOffset":8440355,"endOffset":8440395,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterStandardPrologue","ranges":[{"startOffset":8440437,"endOffset":8440479,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterCustomPrologue","ranges":[{"startOffset":8440520,"endOffset":8440561,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterStandardPrologue","ranges":[{"startOffset":8440604,"endOffset":8440647,"count":0}],"isBlockCoverage":false},{"functionName":"intersperse","ranges":[{"startOffset":8440664,"endOffset":8440681,"count":0}],"isBlockCoverage":false},{"functionName":"intrinsicTagNameToString","ranges":[{"startOffset":8440711,"endOffset":8440741,"count":0}],"isBlockCoverage":false},{"functionName":"introducesArgumentsExoticObject","ranges":[{"startOffset":8440778,"endOffset":8440815,"count":0}],"isBlockCoverage":false},{"functionName":"inverseJsxOptionMap","ranges":[{"startOffset":8440840,"endOffset":8440865,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractConstructorSymbol","ranges":[{"startOffset":8440898,"endOffset":8440931,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractModifier","ranges":[{"startOffset":8440955,"endOffset":8440979,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessExpression","ranges":[{"startOffset":8441003,"endOffset":8441027,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessibilityModifier","ranges":[{"startOffset":8441056,"endOffset":8441085,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessor","ranges":[{"startOffset":8441101,"endOffset":8441117,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessorModifier","ranges":[{"startOffset":8441141,"endOffset":8441165,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasableExpression","ranges":[{"startOffset":8441192,"endOffset":8441219,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModule","ranges":[{"startOffset":8441240,"endOffset":8441261,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientPropertyDeclaration","ranges":[{"startOffset":8441295,"endOffset":8441329,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":8441358,"endOffset":8441387,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrBareOrAccessedRequire","ranges":[{"startOffset":8441427,"endOffset":8441467,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrReExport","ranges":[{"startOffset":8441494,"endOffset":8441521,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrRequireStatement","ranges":[{"startOffset":8441556,"endOffset":8441591,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportSyntax","ranges":[{"startOffset":8441614,"endOffset":8441637,"count":0}],"isBlockCoverage":false},{"functionName":"isAnySupportedFileExtension","ranges":[{"startOffset":8441670,"endOffset":8441703,"count":0}],"isBlockCoverage":false},{"functionName":"isApplicableVersionedTypesKey","ranges":[{"startOffset":8441738,"endOffset":8441773,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentExpressionOfElementAccess","ranges":[{"startOffset":8441814,"endOffset":8441855,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":8441868,"endOffset":8441881,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingElement","ranges":[{"startOffset":8441908,"endOffset":8441935,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentElement","ranges":[{"startOffset":8441974,"endOffset":8442013,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentPattern","ranges":[{"startOffset":8442052,"endOffset":8442091,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingPattern","ranges":[{"startOffset":8442118,"endOffset":8442145,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralExpression","ranges":[{"startOffset":8442175,"endOffset":8442205,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralOrObjectLiteralDestructuringPattern","ranges":[{"startOffset":8442260,"endOffset":8442315,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeNode","ranges":[{"startOffset":8442336,"endOffset":8442357,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunction","ranges":[{"startOffset":8442378,"endOffset":8442399,"count":0}],"isBlockCoverage":false},{"functionName":"isAsExpression","ranges":[{"startOffset":8442419,"endOffset":8442439,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertClause","ranges":[{"startOffset":8442459,"endOffset":8442479,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertEntry","ranges":[{"startOffset":8442498,"endOffset":8442517,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertionExpression","ranges":[{"startOffset":8442544,"endOffset":8442571,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertsKeyword","ranges":[{"startOffset":8442593,"endOffset":8442615,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentDeclaration","ranges":[{"startOffset":8442644,"endOffset":8442673,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":8442701,"endOffset":8442729,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperator","ranges":[{"startOffset":8442755,"endOffset":8442781,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":8442806,"endOffset":8442831,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentTarget","ranges":[{"startOffset":8442855,"endOffset":8442879,"count":0}],"isBlockCoverage":false},{"functionName":"isAsteriskToken","ranges":[{"startOffset":8442900,"endOffset":8442921,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":8442942,"endOffset":8442963,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncModifier","ranges":[{"startOffset":8442984,"endOffset":8443005,"count":0}],"isBlockCoverage":false},{"functionName":"isAutoAccessorPropertyDeclaration","ranges":[{"startOffset":8443044,"endOffset":8443083,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":8443106,"endOffset":8443129,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitKeyword","ranges":[{"startOffset":8443149,"endOffset":8443169,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":8443190,"endOffset":8443211,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":8443235,"endOffset":8443259,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryLogicalOperator","ranges":[{"startOffset":8443288,"endOffset":8443317,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperatorToken","ranges":[{"startOffset":8443344,"endOffset":8443371,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableObjectDefinePropertyCall","ranges":[{"startOffset":8443411,"endOffset":8443451,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticAccessExpression","ranges":[{"startOffset":8443489,"endOffset":8443527,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticElementAccessExpression","ranges":[{"startOffset":8443572,"endOffset":8443617,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticNameExpression","ranges":[{"startOffset":8443653,"endOffset":8443689,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElement","ranges":[{"startOffset":8443711,"endOffset":8443733,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElementOfBareOrAccessedRequire","ranges":[{"startOffset":8443778,"endOffset":8443823,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingName","ranges":[{"startOffset":8443842,"endOffset":8443861,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentElement","ranges":[{"startOffset":8443895,"endOffset":8443929,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentPattern","ranges":[{"startOffset":8443963,"endOffset":8443997,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingPattern","ranges":[{"startOffset":8444019,"endOffset":8444041,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":8444054,"endOffset":8444067,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockLike","ranges":[{"startOffset":8444084,"endOffset":8444101,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockOrCatchScoped","ranges":[{"startOffset":8444127,"endOffset":8444153,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScope","ranges":[{"startOffset":8444171,"endOffset":8444189,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScopedContainerTopLevel","ranges":[{"startOffset":8444225,"endOffset":8444261,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":8444283,"endOffset":8444305,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakOrContinueStatement","ranges":[{"startOffset":8444337,"endOffset":8444369,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":8444391,"endOffset":8444413,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildCommand","ranges":[{"startOffset":8444433,"endOffset":8444453,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildInfoFile","ranges":[{"startOffset":8444474,"endOffset":8444495,"count":0}],"isBlockCoverage":false},{"functionName":"isBuilderProgram","ranges":[{"startOffset":8444517,"endOffset":8444539,"count":0}],"isBlockCoverage":false},{"functionName":"isBundle","ranges":[{"startOffset":8444553,"endOffset":8444567,"count":0}],"isBlockCoverage":false},{"functionName":"isCallChain","ranges":[{"startOffset":8444584,"endOffset":8444601,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":8444623,"endOffset":8444645,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpressionTarget","ranges":[{"startOffset":8444673,"endOffset":8444701,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeExpression","ranges":[{"startOffset":8444727,"endOffset":8444753,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeOrFunctionLikeExpression","ranges":[{"startOffset":8444793,"endOffset":8444833,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpression","ranges":[{"startOffset":8444860,"endOffset":8444887,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpressionTarget","ranges":[{"startOffset":8444920,"endOffset":8444953,"count":0}],"isBlockCoverage":false},{"functionName":"isCallSignatureDeclaration","ranges":[{"startOffset":8444985,"endOffset":8445017,"count":0}],"isBlockCoverage":false},{"functionName":"isCallToHelper","ranges":[{"startOffset":8445037,"endOffset":8445057,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseBlock","ranges":[{"startOffset":8445074,"endOffset":8445091,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseClause","ranges":[{"startOffset":8445109,"endOffset":8445127,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseKeyword","ranges":[{"startOffset":8445146,"endOffset":8445165,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseOrDefaultClause","ranges":[{"startOffset":8445192,"endOffset":8445219,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":8445238,"endOffset":8445257,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclaration","ranges":[{"startOffset":8445295,"endOffset":8445333,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclarationOrBindingElement","ranges":[{"startOffset":8445387,"endOffset":8445441,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckJsEnabledForFile","ranges":[{"startOffset":8445470,"endOffset":8445499,"count":0}],"isBlockCoverage":false},{"functionName":"isCircularBuildOrder","ranges":[{"startOffset":8445525,"endOffset":8445551,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":8445575,"endOffset":8445599,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElement","ranges":[{"startOffset":8445619,"endOffset":8445639,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":8445662,"endOffset":8445685,"count":0}],"isBlockCoverage":false},{"functionName":"isClassInstanceProperty","ranges":[{"startOffset":8445714,"endOffset":8445743,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLike","ranges":[{"startOffset":8445760,"endOffset":8445777,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberModifier","ranges":[{"startOffset":8445804,"endOffset":8445831,"count":0}],"isBlockCoverage":false},{"functionName":"isClassNamedEvaluationHelperBlock","ranges":[{"startOffset":8445870,"endOffset":8445909,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrTypeElement","ranges":[{"startOffset":8445935,"endOffset":8445961,"count":0}],"isBlockCoverage":false},{"functionName":"isClassStaticBlockDeclaration","ranges":[{"startOffset":8445996,"endOffset":8446031,"count":0}],"isBlockCoverage":false},{"functionName":"isClassThisAssignmentBlock","ranges":[{"startOffset":8446063,"endOffset":8446095,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":8446113,"endOffset":8446131,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaExpression","ranges":[{"startOffset":8446154,"endOffset":8446177,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaListExpression","ranges":[{"startOffset":8446204,"endOffset":8446231,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaSequence","ranges":[{"startOffset":8446252,"endOffset":8446273,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":8446291,"endOffset":8446309,"count":0}],"isBlockCoverage":false},{"functionName":"isComment","ranges":[{"startOffset":8446324,"endOffset":8446339,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportPropertyAssignment","ranges":[{"startOffset":8446379,"endOffset":8446419,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportedExpression","ranges":[{"startOffset":8446453,"endOffset":8446487,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundAssignment","ranges":[{"startOffset":8446513,"endOffset":8446539,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedNonLiteralName","ranges":[{"startOffset":8446569,"endOffset":8446599,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedPropertyName","ranges":[{"startOffset":8446627,"endOffset":8446655,"count":0}],"isBlockCoverage":false},{"functionName":"isConciseBody","ranges":[{"startOffset":8446674,"endOffset":8446693,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":8446722,"endOffset":8446751,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalTypeNode","ranges":[{"startOffset":8446778,"endOffset":8446805,"count":0}],"isBlockCoverage":false},{"functionName":"isConstAssertion","ranges":[{"startOffset":8446827,"endOffset":8446849,"count":0}],"isBlockCoverage":false},{"functionName":"isConstTypeReference","ranges":[{"startOffset":8446875,"endOffset":8446901,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructSignatureDeclaration","ranges":[{"startOffset":8446938,"endOffset":8446975,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorDeclaration","ranges":[{"startOffset":8447005,"endOffset":8447035,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorTypeNode","ranges":[{"startOffset":8447062,"endOffset":8447089,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeyword","ranges":[{"startOffset":8447114,"endOffset":8447139,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":8447164,"endOffset":8447189,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomPrologue","ranges":[{"startOffset":8447211,"endOffset":8447233,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":8447258,"endOffset":8447283,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":8447302,"endOffset":8447321,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationBindingElement","ranges":[{"startOffset":8447354,"endOffset":8447387,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationFileName","ranges":[{"startOffset":8447414,"endOffset":8447441,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationName","ranges":[{"startOffset":8447464,"endOffset":8447487,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOfEnumOrNamespace","ranges":[{"startOffset":8447527,"endOffset":8447567,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationReadonly","ranges":[{"startOffset":8447594,"endOffset":8447621,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatement","ranges":[{"startOffset":8447649,"endOffset":8447677,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameterChildren","ranges":[{"startOffset":8447721,"endOffset":8447765,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameters","ranges":[{"startOffset":8447802,"endOffset":8447839,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":8447856,"endOffset":8447873,"count":0}],"isBlockCoverage":false},{"functionName":"isDecoratorTarget","ranges":[{"startOffset":8447896,"endOffset":8447919,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultClause","ranges":[{"startOffset":8447940,"endOffset":8447961,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultImport","ranges":[{"startOffset":8447982,"endOffset":8448003,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier","ranges":[{"startOffset":8448026,"endOffset":8448049,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultedExpandoInitializer","ranges":[{"startOffset":8448084,"endOffset":8448119,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteExpression","ranges":[{"startOffset":8448143,"endOffset":8448167,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteTarget","ranges":[{"startOffset":8448187,"endOffset":8448207,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecatedDeclaration","ranges":[{"startOffset":8448236,"endOffset":8448265,"count":0}],"isBlockCoverage":false},{"functionName":"isDestructuringAssignment","ranges":[{"startOffset":8448296,"endOffset":8448327,"count":0}],"isBlockCoverage":false},{"functionName":"isDiskPathRoot","ranges":[{"startOffset":8448347,"endOffset":8448367,"count":0}],"isBlockCoverage":false},{"functionName":"isDoStatement","ranges":[{"startOffset":8448386,"endOffset":8448405,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentRegistryEntry","ranges":[{"startOffset":8448434,"endOffset":8448463,"count":0}],"isBlockCoverage":false},{"functionName":"isDotDotDotToken","ranges":[{"startOffset":8448485,"endOffset":8448507,"count":0}],"isBlockCoverage":false},{"functionName":"isDottedName","ranges":[{"startOffset":8448525,"endOffset":8448543,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicName","ranges":[{"startOffset":8448562,"endOffset":8448581,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveExternalModule","ranges":[{"startOffset":8448612,"endOffset":8448643,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveStrictModeSourceFile","ranges":[{"startOffset":8448680,"endOffset":8448717,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessChain","ranges":[{"startOffset":8448743,"endOffset":8448769,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessExpression","ranges":[{"startOffset":8448800,"endOffset":8448831,"count":0}],"isBlockCoverage":false},{"functionName":"isEmittedFileOfProgram","ranges":[{"startOffset":8448859,"endOffset":8448887,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyArrayLiteral","ranges":[{"startOffset":8448912,"endOffset":8448937,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingElement","ranges":[{"startOffset":8448964,"endOffset":8448991,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingPattern","ranges":[{"startOffset":8449018,"endOffset":8449045,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObjectLiteral","ranges":[{"startOffset":8449071,"endOffset":8449097,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":8449119,"endOffset":8449141,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStringLiteral","ranges":[{"startOffset":8449167,"endOffset":8449193,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityName","ranges":[{"startOffset":8449211,"endOffset":8449229,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityNameExpression","ranges":[{"startOffset":8449257,"endOffset":8449285,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumConst","ranges":[{"startOffset":8449302,"endOffset":8449319,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":8449342,"endOffset":8449365,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":8449383,"endOffset":8449401,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorKind","ranges":[{"startOffset":8449429,"endOffset":8449457,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualsGreaterThanToken","ranges":[{"startOffset":8449487,"endOffset":8449517,"count":0}],"isBlockCoverage":false},{"functionName":"isExclamationToken","ranges":[{"startOffset":8449541,"endOffset":8449565,"count":0}],"isBlockCoverage":false},{"functionName":"isExcludedFile","ranges":[{"startOffset":8449585,"endOffset":8449605,"count":0}],"isBlockCoverage":false},{"functionName":"isExclusivelyTypeOnlyImportOrExport","ranges":[{"startOffset":8449646,"endOffset":8449687,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoPropertyDeclaration","ranges":[{"startOffset":8449721,"endOffset":8449755,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAssignment","ranges":[{"startOffset":8449779,"endOffset":8449803,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":8449828,"endOffset":8449853,"count":0}],"isBlockCoverage":false},{"functionName":"isExportModifier","ranges":[{"startOffset":8449875,"endOffset":8449897,"count":0}],"isBlockCoverage":false},{"functionName":"isExportName","ranges":[{"startOffset":8449915,"endOffset":8449933,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceAsDefaultDeclaration","ranges":[{"startOffset":8449976,"endOffset":8450019,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultModifier","ranges":[{"startOffset":8450050,"endOffset":8450081,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":8450104,"endOffset":8450127,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsIdentifier","ranges":[{"startOffset":8450152,"endOffset":8450177,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsOrModuleExportsOrAlias","ranges":[{"startOffset":8450214,"endOffset":8450251,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":8450269,"endOffset":8450287,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionNode","ranges":[{"startOffset":8450309,"endOffset":8450331,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":8450388,"endOffset":8450445,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfOptionalChainRoot","ranges":[{"startOffset":8450482,"endOffset":8450519,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":8450546,"endOffset":8450573,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArguments","ranges":[{"startOffset":8450608,"endOffset":8450643,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArgumentsInClassExtendsClause","ranges":[{"startOffset":8450698,"endOffset":8450753,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModule","ranges":[{"startOffset":8450775,"endOffset":8450797,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleAugmentation","ranges":[{"startOffset":8450831,"endOffset":8450865,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":8450910,"endOffset":8450955,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleIndicator","ranges":[{"startOffset":8450986,"endOffset":8451017,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleNameRelative","ranges":[{"startOffset":8451051,"endOffset":8451085,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference","ranges":[{"startOffset":8451116,"endOffset":8451147,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleSymbol","ranges":[{"startOffset":8451175,"endOffset":8451203,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalOrCommonJsModule","ranges":[{"startOffset":8451235,"endOffset":8451267,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelReservedGeneratedIdentifier","ranges":[{"startOffset":8451311,"endOffset":8451355,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelUniqueName","ranges":[{"startOffset":8451382,"endOffset":8451409,"count":0}],"isBlockCoverage":false},{"functionName":"isFileProbablyExternalModule","ranges":[{"startOffset":8451443,"endOffset":8451477,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstDeclarationOfSymbolParameter","ranges":[{"startOffset":8451518,"endOffset":8451559,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseHandler","ranges":[{"startOffset":8451588,"endOffset":8451617,"count":0}],"isBlockCoverage":false},{"functionName":"isForInOrOfStatement","ranges":[{"startOffset":8451643,"endOffset":8451669,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":8451691,"endOffset":8451713,"count":0}],"isBlockCoverage":false},{"functionName":"isForInitializer","ranges":[{"startOffset":8451735,"endOffset":8451757,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":8451779,"endOffset":8451801,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":8451821,"endOffset":8451841,"count":0}],"isBlockCoverage":false},{"functionName":"isFullSourceFile","ranges":[{"startOffset":8451863,"endOffset":8451885,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBlock","ranges":[{"startOffset":8451906,"endOffset":8451927,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBody","ranges":[{"startOffset":8451947,"endOffset":8451967,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":8451994,"endOffset":8452021,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":8452047,"endOffset":8452073,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpressionOrArrowFunction","ranges":[{"startOffset":8452114,"endOffset":8452155,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLike","ranges":[{"startOffset":8452175,"endOffset":8452195,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclaration","ranges":[{"startOffset":8452226,"endOffset":8452257,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeKind","ranges":[{"startOffset":8452281,"endOffset":8452305,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeOrClassStaticBlockDeclaration","ranges":[{"startOffset":8452354,"endOffset":8452403,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrConstructorTypeNode","ranges":[{"startOffset":8452440,"endOffset":8452477,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrModuleBlock","ranges":[{"startOffset":8452506,"endOffset":8452535,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionSymbol","ranges":[{"startOffset":8452557,"endOffset":8452579,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeNode","ranges":[{"startOffset":8452603,"endOffset":8452627,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedIdentifier","ranges":[{"startOffset":8452654,"endOffset":8452681,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedPrivateIdentifier","ranges":[{"startOffset":8452715,"endOffset":8452749,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessor","ranges":[{"startOffset":8452768,"endOffset":8452787,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessorDeclaration","ranges":[{"startOffset":8452817,"endOffset":8452847,"count":0}],"isBlockCoverage":false},{"functionName":"isGetOrSetAccessorDeclaration","ranges":[{"startOffset":8452882,"endOffset":8452917,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalScopeAugmentation","ranges":[{"startOffset":8452948,"endOffset":8452979,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalSourceFile","ranges":[{"startOffset":8453003,"endOffset":8453027,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarError","ranges":[{"startOffset":8453047,"endOffset":8453067,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause","ranges":[{"startOffset":8453089,"endOffset":8453111,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedFunction","ranges":[{"startOffset":8453134,"endOffset":8453157,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariableStatement","ranges":[{"startOffset":8453189,"endOffset":8453221,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":8453239,"endOffset":8453257,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierANonContextualKeyword","ranges":[{"startOffset":8453296,"endOffset":8453335,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":8453357,"endOffset":8453379,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierOrThisTypeNode","ranges":[{"startOffset":8453411,"endOffset":8453443,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPart","ranges":[{"startOffset":8453465,"endOffset":8453487,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":8453510,"endOffset":8453533,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierText","ranges":[{"startOffset":8453555,"endOffset":8453577,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypePredicate","ranges":[{"startOffset":8453608,"endOffset":8453639,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypeReference","ranges":[{"startOffset":8453670,"endOffset":8453701,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":8453720,"endOffset":8453739,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredFileFromWildCardWatching","ranges":[{"startOffset":8453778,"endOffset":8453817,"count":0}],"isBlockCoverage":false},{"functionName":"isImplicitGlob","ranges":[{"startOffset":8453837,"endOffset":8453857,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":8453880,"endOffset":8453903,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributeName","ranges":[{"startOffset":8453930,"endOffset":8453957,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributes","ranges":[{"startOffset":8453981,"endOffset":8454005,"count":0}],"isBlockCoverage":false},{"functionName":"isImportCall","ranges":[{"startOffset":8454023,"endOffset":8454041,"count":0}],"isBlockCoverage":false},{"functionName":"isImportClause","ranges":[{"startOffset":8454061,"endOffset":8454081,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":8454106,"endOffset":8454131,"count":0}],"isBlockCoverage":false},{"functionName":"isImportEqualsDeclaration","ranges":[{"startOffset":8454162,"endOffset":8454193,"count":0}],"isBlockCoverage":false},{"functionName":"isImportKeyword","ranges":[{"startOffset":8454214,"endOffset":8454235,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta","ranges":[{"startOffset":8454253,"endOffset":8454271,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifier","ranges":[{"startOffset":8454302,"endOffset":8454333,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifierName","ranges":[{"startOffset":8454368,"endOffset":8454403,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":8454426,"endOffset":8454449,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeAssertionContainer","ranges":[{"startOffset":8454485,"endOffset":8454521,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeNode","ranges":[{"startOffset":8454543,"endOffset":8454565,"count":0}],"isBlockCoverage":false},{"functionName":"isImportable","ranges":[{"startOffset":8454583,"endOffset":8454601,"count":0}],"isBlockCoverage":false},{"functionName":"isInComment","ranges":[{"startOffset":8454618,"endOffset":8454635,"count":0}],"isBlockCoverage":false},{"functionName":"isInCompoundLikeAssignment","ranges":[{"startOffset":8454667,"endOffset":8454699,"count":0}],"isBlockCoverage":false},{"functionName":"isInExpressionContext","ranges":[{"startOffset":8454726,"endOffset":8454753,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSDoc","ranges":[{"startOffset":8454768,"endOffset":8454783,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSFile","ranges":[{"startOffset":8454799,"endOffset":8454815,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXText","ranges":[{"startOffset":8454832,"endOffset":8454849,"count":0}],"isBlockCoverage":false},{"functionName":"isInJsonFile","ranges":[{"startOffset":8454867,"endOffset":8454885,"count":0}],"isBlockCoverage":false},{"functionName":"isInNonReferenceComment","ranges":[{"startOffset":8454914,"endOffset":8454943,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceComment","ranges":[{"startOffset":8454969,"endOffset":8454995,"count":0}],"isBlockCoverage":false},{"functionName":"isInRightSideOfInternalImportEqualsDeclaration","ranges":[{"startOffset":8455047,"endOffset":8455099,"count":0}],"isBlockCoverage":false},{"functionName":"isInString","ranges":[{"startOffset":8455115,"endOffset":8455131,"count":0}],"isBlockCoverage":false},{"functionName":"isInTemplateString","ranges":[{"startOffset":8455155,"endOffset":8455179,"count":0}],"isBlockCoverage":false},{"functionName":"isInTopLevelContext","ranges":[{"startOffset":8455204,"endOffset":8455229,"count":0}],"isBlockCoverage":false},{"functionName":"isInTypeQuery","ranges":[{"startOffset":8455248,"endOffset":8455267,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalBuildInfo","ranges":[{"startOffset":8455295,"endOffset":8455323,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalBundleEmitBuildInfo","ranges":[{"startOffset":8455361,"endOffset":8455399,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalCompilation","ranges":[{"startOffset":8455429,"endOffset":8455459,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignatureDeclaration","ranges":[{"startOffset":8455492,"endOffset":8455525,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexedAccessTypeNode","ranges":[{"startOffset":8455554,"endOffset":8455583,"count":0}],"isBlockCoverage":false},{"functionName":"isInferTypeNode","ranges":[{"startOffset":8455604,"endOffset":8455625,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinityOrNaNString","ranges":[{"startOffset":8455652,"endOffset":8455679,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedProperty","ranges":[{"startOffset":8455706,"endOffset":8455733,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedVariable","ranges":[{"startOffset":8455760,"endOffset":8455787,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElement","ranges":[{"startOffset":8455811,"endOffset":8455835,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElementOrAttribute","ranges":[{"startOffset":8455870,"endOffset":8455905,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":8455930,"endOffset":8455955,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideTemplateLiteral","ranges":[{"startOffset":8455984,"endOffset":8456013,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceOfExpression","ranges":[{"startOffset":8456041,"endOffset":8456069,"count":0}],"isBlockCoverage":false},{"functionName":"isInstantiatedModule","ranges":[{"startOffset":8456095,"endOffset":8456121,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":8456149,"endOffset":8456177,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalDeclaration","ranges":[{"startOffset":8456204,"endOffset":8456231,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalModuleImportEqualsDeclaration","ranges":[{"startOffset":8456276,"endOffset":8456321,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalName","ranges":[{"startOffset":8456341,"endOffset":8456361,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeNode","ranges":[{"startOffset":8456389,"endOffset":8456417,"count":0}],"isBlockCoverage":false},{"functionName":"isIntrinsicJsxName","ranges":[{"startOffset":8456441,"endOffset":8456465,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":8456491,"endOffset":8456517,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDoc","ranges":[{"startOffset":8456530,"endOffset":8456543,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAllType","ranges":[{"startOffset":8456563,"endOffset":8456583,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAugmentsTag","ranges":[{"startOffset":8456607,"endOffset":8456631,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAuthorTag","ranges":[{"startOffset":8456653,"endOffset":8456675,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCallbackTag","ranges":[{"startOffset":8456699,"endOffset":8456723,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocClassTag","ranges":[{"startOffset":8456744,"endOffset":8456765,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCommentContainingNode","ranges":[{"startOffset":8456799,"endOffset":8456833,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocConstructSignature","ranges":[{"startOffset":8456864,"endOffset":8456895,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocDeprecatedTag","ranges":[{"startOffset":8456921,"endOffset":8456947,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocEnumTag","ranges":[{"startOffset":8456967,"endOffset":8456987,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocFunctionType","ranges":[{"startOffset":8457012,"endOffset":8457037,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImplementsTag","ranges":[{"startOffset":8457063,"endOffset":8457089,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImportTag","ranges":[{"startOffset":8457111,"endOffset":8457133,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocIndexSignature","ranges":[{"startOffset":8457160,"endOffset":8457187,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLikeText","ranges":[{"startOffset":8457208,"endOffset":8457229,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLink","ranges":[{"startOffset":8457246,"endOffset":8457263,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkCode","ranges":[{"startOffset":8457284,"endOffset":8457305,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkLike","ranges":[{"startOffset":8457326,"endOffset":8457347,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkPlain","ranges":[{"startOffset":8457369,"endOffset":8457391,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocMemberName","ranges":[{"startOffset":8457414,"endOffset":8457437,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNameReference","ranges":[{"startOffset":8457463,"endOffset":8457489,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamepathType","ranges":[{"startOffset":8457514,"endOffset":8457539,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamespaceBody","ranges":[{"startOffset":8457565,"endOffset":8457591,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNode","ranges":[{"startOffset":8457608,"endOffset":8457625,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNonNullableType","ranges":[{"startOffset":8457653,"endOffset":8457681,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNullableType","ranges":[{"startOffset":8457706,"endOffset":8457731,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalParameter","ranges":[{"startOffset":8457761,"endOffset":8457791,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalType","ranges":[{"startOffset":8457816,"endOffset":8457841,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverloadTag","ranges":[{"startOffset":8457865,"endOffset":8457889,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverrideTag","ranges":[{"startOffset":8457913,"endOffset":8457937,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocParameterTag","ranges":[{"startOffset":8457962,"endOffset":8457987,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPrivateTag","ranges":[{"startOffset":8458010,"endOffset":8458033,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyLikeTag","ranges":[{"startOffset":8458061,"endOffset":8458089,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyTag","ranges":[{"startOffset":8458113,"endOffset":8458137,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocProtectedTag","ranges":[{"startOffset":8458162,"endOffset":8458187,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPublicTag","ranges":[{"startOffset":8458209,"endOffset":8458231,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReadonlyTag","ranges":[{"startOffset":8458255,"endOffset":8458279,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReturnTag","ranges":[{"startOffset":8458301,"endOffset":8458323,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesExpression","ranges":[{"startOffset":8458355,"endOffset":8458387,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesTag","ranges":[{"startOffset":8458412,"endOffset":8458437,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSeeTag","ranges":[{"startOffset":8458456,"endOffset":8458475,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSignature","ranges":[{"startOffset":8458497,"endOffset":8458519,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTag","ranges":[{"startOffset":8458535,"endOffset":8458551,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTemplateTag","ranges":[{"startOffset":8458575,"endOffset":8458599,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThisTag","ranges":[{"startOffset":8458619,"endOffset":8458639,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThrowsTag","ranges":[{"startOffset":8458661,"endOffset":8458683,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAlias","ranges":[{"startOffset":8458705,"endOffset":8458727,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAssertion","ranges":[{"startOffset":8458753,"endOffset":8458779,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeExpression","ranges":[{"startOffset":8458806,"endOffset":8458833,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeLiteral","ranges":[{"startOffset":8458857,"endOffset":8458881,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeTag","ranges":[{"startOffset":8458901,"endOffset":8458921,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypedefTag","ranges":[{"startOffset":8458944,"endOffset":8458967,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownTag","ranges":[{"startOffset":8458990,"endOffset":8459013,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownType","ranges":[{"startOffset":8459037,"endOffset":8459061,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocVariadicType","ranges":[{"startOffset":8459086,"endOffset":8459111,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXTagName","ranges":[{"startOffset":8459129,"endOffset":8459147,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonEqual","ranges":[{"startOffset":8459164,"endOffset":8459181,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonSourceFile","ranges":[{"startOffset":8459203,"endOffset":8459225,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttribute","ranges":[{"startOffset":8459245,"endOffset":8459265,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeLike","ranges":[{"startOffset":8459289,"endOffset":8459313,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeName","ranges":[{"startOffset":8459337,"endOffset":8459361,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributes","ranges":[{"startOffset":8459382,"endOffset":8459403,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxCallLike","ranges":[{"startOffset":8459422,"endOffset":8459441,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxChild","ranges":[{"startOffset":8459457,"endOffset":8459473,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingElement","ranges":[{"startOffset":8459498,"endOffset":8459523,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingFragment","ranges":[{"startOffset":8459549,"endOffset":8459575,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxElement","ranges":[{"startOffset":8459593,"endOffset":8459611,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpression","ranges":[{"startOffset":8459632,"endOffset":8459653,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxFragment","ranges":[{"startOffset":8459672,"endOffset":8459691,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxNamespacedName","ranges":[{"startOffset":8459716,"endOffset":8459741,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningElement","ranges":[{"startOffset":8459766,"endOffset":8459791,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningFragment","ranges":[{"startOffset":8459817,"endOffset":8459843,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElement","ranges":[{"startOffset":8459872,"endOffset":8459901,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElementTagName","ranges":[{"startOffset":8459937,"endOffset":8459973,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElement","ranges":[{"startOffset":8460002,"endOffset":8460031,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSpreadAttribute","ranges":[{"startOffset":8460057,"endOffset":8460083,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxTagNameExpression","ranges":[{"startOffset":8460111,"endOffset":8460139,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxText","ranges":[{"startOffset":8460154,"endOffset":8460169,"count":0}],"isBlockCoverage":false},{"functionName":"isJumpStatementTarget","ranges":[{"startOffset":8460196,"endOffset":8460223,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":8460238,"endOffset":8460253,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordOrPunctuation","ranges":[{"startOffset":8460281,"endOffset":8460309,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownSymbol","ranges":[{"startOffset":8460328,"endOffset":8460347,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelName","ranges":[{"startOffset":8460364,"endOffset":8460381,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelOfLabeledStatement","ranges":[{"startOffset":8460412,"endOffset":8460443,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":8460467,"endOffset":8460491,"count":0}],"isBlockCoverage":false},{"functionName":"isLateVisibilityPaintedStatement","ranges":[{"startOffset":8460529,"endOffset":8460567,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideExpression","ranges":[{"startOffset":8460597,"endOffset":8460627,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":8460638,"endOffset":8460649,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":8460666,"endOffset":8460683,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralComputedPropertyDeclarationName","ranges":[{"startOffset":8460729,"endOffset":8460775,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpression","ranges":[{"startOffset":8460800,"endOffset":8460825,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpressionOfObject","ranges":[{"startOffset":8460858,"endOffset":8460891,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralImportTypeNode","ranges":[{"startOffset":8460920,"endOffset":8460949,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralKind","ranges":[{"startOffset":8460968,"endOffset":8460987,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralNameOfPropertyDeclarationOrIndexAccess","ranges":[{"startOffset":8461040,"endOffset":8461093,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLiteral","ranges":[{"startOffset":8461119,"endOffset":8461145,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeNode","ranges":[{"startOffset":8461168,"endOffset":8461191,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalName","ranges":[{"startOffset":8461208,"endOffset":8461225,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator","ranges":[{"startOffset":8461248,"endOffset":8461271,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentExpression","ranges":[{"startOffset":8461318,"endOffset":8461365,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentOperator","ranges":[{"startOffset":8461410,"endOffset":8461455,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryExpression","ranges":[{"startOffset":8461498,"endOffset":8461541,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryOperator","ranges":[{"startOffset":8461582,"endOffset":8461623,"count":0}],"isBlockCoverage":false},{"functionName":"isMappedTypeNode","ranges":[{"startOffset":8461645,"endOffset":8461667,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberName","ranges":[{"startOffset":8461685,"endOffset":8461703,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":8461723,"endOffset":8461743,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodDeclaration","ranges":[{"startOffset":8461768,"endOffset":8461793,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodOrAccessor","ranges":[{"startOffset":8461817,"endOffset":8461841,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodSignature","ranges":[{"startOffset":8461864,"endOffset":8461887,"count":0}],"isBlockCoverage":false},{"functionName":"isMinusToken","ranges":[{"startOffset":8461905,"endOffset":8461923,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingDeclaration","ranges":[{"startOffset":8461949,"endOffset":8461975,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingPackageJsonInfo","ranges":[{"startOffset":8462005,"endOffset":8462035,"count":0}],"isBlockCoverage":false},{"functionName":"isModifier","ranges":[{"startOffset":8462051,"endOffset":8462067,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierKind","ranges":[{"startOffset":8462087,"endOffset":8462107,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike","ranges":[{"startOffset":8462127,"endOffset":8462147,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleAugmentationExternal","ranges":[{"startOffset":8462181,"endOffset":8462215,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBlock","ranges":[{"startOffset":8462234,"endOffset":8462253,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBody","ranges":[{"startOffset":8462271,"endOffset":8462289,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":8462314,"endOffset":8462339,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportName","ranges":[{"startOffset":8462363,"endOffset":8462387,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsAccessExpression","ranges":[{"startOffset":8462424,"endOffset":8462461,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleIdentifier","ranges":[{"startOffset":8462485,"endOffset":8462509,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleName","ranges":[{"startOffset":8462527,"endOffset":8462545,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleOrEnumDeclaration","ranges":[{"startOffset":8462576,"endOffset":8462607,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleReference","ranges":[{"startOffset":8462630,"endOffset":8462653,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierLike","ranges":[{"startOffset":8462680,"endOffset":8462707,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleWithStringLiteralName","ranges":[{"startOffset":8462742,"endOffset":8462777,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfFunctionDeclaration","ranges":[{"startOffset":8462810,"endOffset":8462843,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfModuleDeclaration","ranges":[{"startOffset":8462874,"endOffset":8462905,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDeclaration","ranges":[{"startOffset":8462929,"endOffset":8462953,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluation","ranges":[{"startOffset":8462976,"endOffset":8462999,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluationSource","ranges":[{"startOffset":8463028,"endOffset":8463057,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExportBindings","ranges":[{"startOffset":8463084,"endOffset":8463111,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExports","ranges":[{"startOffset":8463131,"endOffset":8463151,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportBindings","ranges":[{"startOffset":8463178,"endOffset":8463205,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImports","ranges":[{"startOffset":8463225,"endOffset":8463245,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportsOrExports","ranges":[{"startOffset":8463274,"endOffset":8463303,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedTupleMember","ranges":[{"startOffset":8463327,"endOffset":8463351,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceBody","ranges":[{"startOffset":8463372,"endOffset":8463393,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExport","ranges":[{"startOffset":8463416,"endOffset":8463439,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExportDeclaration","ranges":[{"startOffset":8463473,"endOffset":8463507,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceImport","ranges":[{"startOffset":8463530,"endOffset":8463553,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReexportDeclaration","ranges":[{"startOffset":8463589,"endOffset":8463625,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":8463646,"endOffset":8463667,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpressionTarget","ranges":[{"startOffset":8463694,"endOffset":8463721,"count":0}],"isBlockCoverage":false},{"functionName":"isNewScopeNode","ranges":[{"startOffset":8463741,"endOffset":8463761,"count":0}],"isBlockCoverage":false},{"functionName":"isNoSubstitutionTemplateLiteral","ranges":[{"startOffset":8463798,"endOffset":8463835,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArray","ranges":[{"startOffset":8463852,"endOffset":8463869,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArrayMultiLine","ranges":[{"startOffset":8463895,"endOffset":8463921,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeDescendantOf","ranges":[{"startOffset":8463945,"endOffset":8463969,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeKind","ranges":[{"startOffset":8463985,"endOffset":8464001,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeLikeSystem","ranges":[{"startOffset":8464023,"endOffset":8464045,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModulesDirectory","ranges":[{"startOffset":8464073,"endOffset":8464101,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeWithPossibleHoistedDeclaration","ranges":[{"startOffset":8464143,"endOffset":8464185,"count":0}],"isBlockCoverage":false},{"functionName":"isNonContextualKeyword","ranges":[{"startOffset":8464213,"endOffset":8464241,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalAmbientModule","ranges":[{"startOffset":8464271,"endOffset":8464301,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAccess","ranges":[{"startOffset":8464322,"endOffset":8464343,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullChain","ranges":[{"startOffset":8464363,"endOffset":8464383,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullExpression","ranges":[{"startOffset":8464408,"endOffset":8464433,"count":0}],"isBlockCoverage":false},{"functionName":"isNonStaticMethodOrAccessorWithPrivateName","ranges":[{"startOffset":8464481,"endOffset":8464529,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedStatement","ranges":[{"startOffset":8464556,"endOffset":8464583,"count":0}],"isBlockCoverage":false},{"functionName":"isNullishCoalesce","ranges":[{"startOffset":8464606,"endOffset":8464629,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":8464643,"endOffset":8464657,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":8464679,"endOffset":8464701,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteralName","ranges":[{"startOffset":8464727,"endOffset":8464753,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingElementWithoutPropertyName","ranges":[{"startOffset":8464800,"endOffset":8464847,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentElement","ranges":[{"startOffset":8464887,"endOffset":8464927,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentPattern","ranges":[{"startOffset":8464967,"endOffset":8465007,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingPattern","ranges":[{"startOffset":8465035,"endOffset":8465063,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElement","ranges":[{"startOffset":8465091,"endOffset":8465119,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElementLike","ranges":[{"startOffset":8465151,"endOffset":8465183,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralExpression","ranges":[{"startOffset":8465214,"endOffset":8465245,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralMethod","ranges":[{"startOffset":8465272,"endOffset":8465299,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralOrClassExpressionMethodOrAccessor","ranges":[{"startOffset":8465353,"endOffset":8465407,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeDeclaration","ranges":[{"startOffset":8465436,"endOffset":8465465,"count":0}],"isBlockCoverage":false},{"functionName":"isOmittedExpression","ranges":[{"startOffset":8465490,"endOffset":8465515,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":8465536,"endOffset":8465557,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChainRoot","ranges":[{"startOffset":8465582,"endOffset":8465607,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalDeclaration","ranges":[{"startOffset":8465634,"endOffset":8465661,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalJSDocPropertyLikeTag","ranges":[{"startOffset":8465697,"endOffset":8465733,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalTypeNode","ranges":[{"startOffset":8465757,"endOffset":8465781,"count":0}],"isBlockCoverage":false},{"functionName":"isOuterExpression","ranges":[{"startOffset":8465804,"endOffset":8465827,"count":0}],"isBlockCoverage":false},{"functionName":"isOutermostOptionalChain","ranges":[{"startOffset":8465857,"endOffset":8465887,"count":0}],"isBlockCoverage":false},{"functionName":"isOverrideModifier","ranges":[{"startOffset":8465911,"endOffset":8465935,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageJsonInfo","ranges":[{"startOffset":8465958,"endOffset":8465981,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedArrayLiteral","ranges":[{"startOffset":8466007,"endOffset":8466033,"count":0}],"isBlockCoverage":false},{"functionName":"isParameter","ranges":[{"startOffset":8466050,"endOffset":8466067,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyDeclaration","ranges":[{"startOffset":8466103,"endOffset":8466139,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyModifier","ranges":[{"startOffset":8466172,"endOffset":8466205,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":8466236,"endOffset":8466267,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedTypeNode","ranges":[{"startOffset":8466296,"endOffset":8466325,"count":0}],"isBlockCoverage":false},{"functionName":"isParseTreeNode","ranges":[{"startOffset":8466346,"endOffset":8466367,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfParameterDeclaration","ranges":[{"startOffset":8466401,"endOffset":8466435,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeNode","ranges":[{"startOffset":8466457,"endOffset":8466479,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":8466526,"endOffset":8466573,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeQuery","ranges":[{"startOffset":8466596,"endOffset":8466619,"count":0}],"isBlockCoverage":false},{"functionName":"isPartiallyEmittedExpression","ranges":[{"startOffset":8466653,"endOffset":8466687,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternMatch","ranges":[{"startOffset":8466707,"endOffset":8466727,"count":0}],"isBlockCoverage":false},{"functionName":"isPinnedComment","ranges":[{"startOffset":8466748,"endOffset":8466769,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainJsFile","ranges":[{"startOffset":8466788,"endOffset":8466807,"count":0}],"isBlockCoverage":false},{"functionName":"isPlusToken","ranges":[{"startOffset":8466824,"endOffset":8466841,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyTypeArgumentPosition","ranges":[{"startOffset":8466877,"endOffset":8466913,"count":0}],"isBlockCoverage":false},{"functionName":"isPostfixUnaryExpression","ranges":[{"startOffset":8466943,"endOffset":8466973,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpression","ranges":[{"startOffset":8467002,"endOffset":8467031,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitiveLiteralValue","ranges":[{"startOffset":8467060,"endOffset":8467089,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifier","ranges":[{"startOffset":8467114,"endOffset":8467139,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierClassElementDeclaration","ranges":[{"startOffset":8467187,"endOffset":8467235,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierPropertyAccessExpression","ranges":[{"startOffset":8467284,"endOffset":8467333,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierSymbol","ranges":[{"startOffset":8467364,"endOffset":8467395,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramUptoDate","ranges":[{"startOffset":8467418,"endOffset":8467441,"count":0}],"isBlockCoverage":false},{"functionName":"isPrologueDirective","ranges":[{"startOffset":8467466,"endOffset":8467491,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessChain","ranges":[{"startOffset":8467518,"endOffset":8467545,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessEntityNameExpression","ranges":[{"startOffset":8467587,"endOffset":8467629,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessExpression","ranges":[{"startOffset":8467661,"endOffset":8467693,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedName","ranges":[{"startOffset":8467730,"endOffset":8467767,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedNameOrImportTypeNode","ranges":[{"startOffset":8467820,"endOffset":8467873,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAssignment","ranges":[{"startOffset":8467899,"endOffset":8467925,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDeclaration","ranges":[{"startOffset":8467952,"endOffset":8467979,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyName","ranges":[{"startOffset":8467999,"endOffset":8468019,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyNameLiteral","ranges":[{"startOffset":8468046,"endOffset":8468073,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertySignature","ranges":[{"startOffset":8468098,"endOffset":8468123,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypeAccess","ranges":[{"startOffset":8468146,"endOffset":8468169,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypePropertyAssignment","ranges":[{"startOffset":8468204,"endOffset":8468239,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuation","ranges":[{"startOffset":8468258,"endOffset":8468277,"count":0}],"isBlockCoverage":false},{"functionName":"isPushOrUnshiftIdentifier","ranges":[{"startOffset":8468308,"endOffset":8468339,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedName","ranges":[{"startOffset":8468360,"endOffset":8468381,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionDotToken","ranges":[{"startOffset":8468405,"endOffset":8468429,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrExclamationToken","ranges":[{"startOffset":8468463,"endOffset":8468497,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrPlusOrMinusToken","ranges":[{"startOffset":8468531,"endOffset":8468565,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionToken","ranges":[{"startOffset":8468586,"endOffset":8468607,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeyword","ranges":[{"startOffset":8468630,"endOffset":8468653,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeywordOrPlusOrMinusToken","ranges":[{"startOffset":8468694,"endOffset":8468735,"count":0}],"isBlockCoverage":false},{"functionName":"isRecognizedTripleSlashComment","ranges":[{"startOffset":8468771,"endOffset":8468807,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceFileLocation","ranges":[{"startOffset":8468836,"endOffset":8468865,"count":0}],"isBlockCoverage":false},{"functionName":"isReferencedFile","ranges":[{"startOffset":8468887,"endOffset":8468909,"count":0}],"isBlockCoverage":false},{"functionName":"isRegularExpressionLiteral","ranges":[{"startOffset":8468941,"endOffset":8468973,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCall","ranges":[{"startOffset":8468992,"endOffset":8469011,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireVariableStatement","ranges":[{"startOffset":8469043,"endOffset":8469075,"count":0}],"isBlockCoverage":false},{"functionName":"isRestParameter","ranges":[{"startOffset":8469096,"endOffset":8469117,"count":0}],"isBlockCoverage":false},{"functionName":"isRestTypeNode","ranges":[{"startOffset":8469137,"endOffset":8469157,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":8469180,"endOffset":8469203,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":8469251,"endOffset":8469299,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfAccessExpression","ranges":[{"startOffset":8469334,"endOffset":8469369,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfInstanceofExpression","ranges":[{"startOffset":8469408,"endOffset":8469447,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfPropertyAccess","ranges":[{"startOffset":8469480,"endOffset":8469513,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedName","ranges":[{"startOffset":8469545,"endOffset":8469577,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess","ranges":[{"startOffset":8469625,"endOffset":8469673,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName","ranges":[{"startOffset":8469738,"endOffset":8469803,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":8469825,"endOffset":8469847,"count":0}],"isBlockCoverage":false},{"functionName":"isSameEntityName","ranges":[{"startOffset":8469869,"endOffset":8469891,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiesExpression","ranges":[{"startOffset":8469918,"endOffset":8469945,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonClassElement","ranges":[{"startOffset":8469974,"endOffset":8470003,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessor","ranges":[{"startOffset":8470022,"endOffset":8470041,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessorDeclaration","ranges":[{"startOffset":8470071,"endOffset":8470101,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperatorOrHigher","ranges":[{"startOffset":8470130,"endOffset":8470159,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModuleSymbol","ranges":[{"startOffset":8470195,"endOffset":8470231,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyAssignment","ranges":[{"startOffset":8470266,"endOffset":8470301,"count":0}],"isBlockCoverage":false},{"functionName":"isSideEffectImport","ranges":[{"startOffset":8470325,"endOffset":8470349,"count":0}],"isBlockCoverage":false},{"functionName":"isSignedNumericLiteral","ranges":[{"startOffset":8470377,"endOffset":8470405,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleCopiableExpression","ranges":[{"startOffset":8470437,"endOffset":8470469,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleInlineableExpression","ranges":[{"startOffset":8470503,"endOffset":8470537,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameterList","ranges":[{"startOffset":8470564,"endOffset":8470591,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleOrDoubleQuote","ranges":[{"startOffset":8470618,"endOffset":8470645,"count":0}],"isBlockCoverage":false},{"functionName":"isSolutionConfig","ranges":[{"startOffset":8470667,"endOffset":8470689,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":8470710,"endOffset":8470731,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFile","ranges":[{"startOffset":8470749,"endOffset":8470767,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileFromLibrary","ranges":[{"startOffset":8470796,"endOffset":8470825,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileJS","ranges":[{"startOffset":8470845,"endOffset":8470865,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJson","ranges":[{"startOffset":8470890,"endOffset":8470915,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMapping","ranges":[{"startOffset":8470936,"endOffset":8470957,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecialPropertyDeclaration","ranges":[{"startOffset":8470991,"endOffset":8471025,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadAssignment","ranges":[{"startOffset":8471049,"endOffset":8471073,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":8471094,"endOffset":8471115,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":8471132,"endOffset":8471149,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementButNotDeclaration","ranges":[{"startOffset":8471183,"endOffset":8471217,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":8471241,"endOffset":8471265,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementWithLocals","ranges":[{"startOffset":8471292,"endOffset":8471319,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":8471333,"endOffset":8471347,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticModifier","ranges":[{"startOffset":8471369,"endOffset":8471391,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":8471405,"endOffset":8471419,"count":0}],"isBlockCoverage":false},{"functionName":"isStringANonContextualKeyword","ranges":[{"startOffset":8471454,"endOffset":8471489,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAndEmptyAnonymousObjectIntersection","ranges":[{"startOffset":8471538,"endOffset":8471587,"count":0}],"isBlockCoverage":false},{"functionName":"isStringDoubleQuoted","ranges":[{"startOffset":8471613,"endOffset":8471639,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":8471660,"endOffset":8471681,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralLike","ranges":[{"startOffset":8471706,"endOffset":8471731,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrJsxExpression","ranges":[{"startOffset":8471767,"endOffset":8471803,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrTemplate","ranges":[{"startOffset":8471834,"endOffset":8471865,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteralLike","ranges":[{"startOffset":8471899,"endOffset":8471933,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrRegularExpressionOrTemplateLiteral","ranges":[{"startOffset":8471983,"endOffset":8472033,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTextContainingNode","ranges":[{"startOffset":8472065,"endOffset":8472097,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperCall","ranges":[{"startOffset":8472114,"endOffset":8472131,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperKeyword","ranges":[{"startOffset":8472151,"endOffset":8472171,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperProperty","ranges":[{"startOffset":8472192,"endOffset":8472213,"count":0}],"isBlockCoverage":false},{"functionName":"isSupportedSourceFileName","ranges":[{"startOffset":8472244,"endOffset":8472275,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":8472298,"endOffset":8472321,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxList","ranges":[{"startOffset":8472339,"endOffset":8472357,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticExpression","ranges":[{"startOffset":8472384,"endOffset":8472411,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticReference","ranges":[{"startOffset":8472437,"endOffset":8472463,"count":0}],"isBlockCoverage":false},{"functionName":"isTagName","ranges":[{"startOffset":8472478,"endOffset":8472493,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":8472525,"endOffset":8472557,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateTag","ranges":[{"startOffset":8472582,"endOffset":8472607,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateExpression","ranges":[{"startOffset":8472633,"endOffset":8472659,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateHead","ranges":[{"startOffset":8472679,"endOffset":8472699,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":8472722,"endOffset":8472745,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralKind","ranges":[{"startOffset":8472772,"endOffset":8472799,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralToken","ranges":[{"startOffset":8472827,"endOffset":8472855,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeNode","ranges":[{"startOffset":8472886,"endOffset":8472917,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeSpan","ranges":[{"startOffset":8472948,"endOffset":8472979,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddle","ranges":[{"startOffset":8473001,"endOffset":8473023,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddleOrTemplateTail","ranges":[{"startOffset":8473059,"endOffset":8473095,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateSpan","ranges":[{"startOffset":8473115,"endOffset":8473135,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateTail","ranges":[{"startOffset":8473155,"endOffset":8473175,"count":0}],"isBlockCoverage":false},{"functionName":"isTextWhiteSpaceLike","ranges":[{"startOffset":8473201,"endOffset":8473227,"count":0}],"isBlockCoverage":false},{"functionName":"isThis","ranges":[{"startOffset":8473239,"endOffset":8473251,"count":0}],"isBlockCoverage":false},{"functionName":"isThisContainerOrFunctionBlock","ranges":[{"startOffset":8473287,"endOffset":8473323,"count":0}],"isBlockCoverage":false},{"functionName":"isThisIdentifier","ranges":[{"startOffset":8473345,"endOffset":8473367,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInTypeQuery","ranges":[{"startOffset":8473390,"endOffset":8473413,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedDeclaration","ranges":[{"startOffset":8473447,"endOffset":8473481,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedObjectBindingExpression","ranges":[{"startOffset":8473527,"endOffset":8473573,"count":0}],"isBlockCoverage":false},{"functionName":"isThisProperty","ranges":[{"startOffset":8473593,"endOffset":8473613,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeNode","ranges":[{"startOffset":8473633,"endOffset":8473653,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeParameter","ranges":[{"startOffset":8473678,"endOffset":8473703,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypePredicate","ranges":[{"startOffset":8473728,"endOffset":8473753,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":8473775,"endOffset":8473797,"count":0}],"isBlockCoverage":false},{"functionName":"isToken","ranges":[{"startOffset":8473810,"endOffset":8473823,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenKind","ranges":[{"startOffset":8473840,"endOffset":8473857,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceEnabled","ranges":[{"startOffset":8473877,"endOffset":8473897,"count":0}],"isBlockCoverage":false},{"functionName":"isTransientSymbol","ranges":[{"startOffset":8473920,"endOffset":8473943,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia","ranges":[{"startOffset":8473957,"endOffset":8473971,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":8473991,"endOffset":8474011,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeNode","ranges":[{"startOffset":8474032,"endOffset":8474053,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":8474070,"endOffset":8474087,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAliasDeclaration","ranges":[{"startOffset":8474115,"endOffset":8474143,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionExpression","ranges":[{"startOffset":8474174,"endOffset":8474205,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDeclaration","ranges":[{"startOffset":8474228,"endOffset":8474251,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeElement","ranges":[{"startOffset":8474270,"endOffset":8474289,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeyword","ranges":[{"startOffset":8474308,"endOffset":8474327,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordTokenOrIdentifier","ranges":[{"startOffset":8474363,"endOffset":8474399,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeLiteralNode","ranges":[{"startOffset":8474422,"endOffset":8474445,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNode","ranges":[{"startOffset":8474461,"endOffset":8474477,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNodeKind","ranges":[{"startOffset":8474497,"endOffset":8474517,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOfExpression","ranges":[{"startOffset":8474541,"endOffset":8474565,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyExportDeclaration","ranges":[{"startOffset":8474598,"endOffset":8474631,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportDeclaration","ranges":[{"startOffset":8474664,"endOffset":8474697,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":8474738,"endOffset":8474779,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOperatorNode","ranges":[{"startOffset":8474803,"endOffset":8474827,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":8474859,"endOffset":8474891,"count":0}],"isBlockCoverage":false},{"functionName":"isTypePredicateNode","ranges":[{"startOffset":8474916,"endOffset":8474941,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeQueryNode","ranges":[{"startOffset":8474962,"endOffset":8474983,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceNode","ranges":[{"startOffset":8475008,"endOffset":8475033,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceType","ranges":[{"startOffset":8475058,"endOffset":8475083,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeUsableAsPropertyName","ranges":[{"startOffset":8475115,"endOffset":8475147,"count":0}],"isBlockCoverage":false},{"functionName":"isUMDExportSymbol","ranges":[{"startOffset":8475170,"endOffset":8475193,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":8475216,"endOffset":8475239,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionWithWrite","ranges":[{"startOffset":8475271,"endOffset":8475303,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierStart","ranges":[{"startOffset":8475333,"endOffset":8475363,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeNode","ranges":[{"startOffset":8475384,"endOffset":8475405,"count":0}],"isBlockCoverage":false},{"functionName":"isUrl","ranges":[{"startOffset":8475416,"endOffset":8475427,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBigIntString","ranges":[{"startOffset":8475452,"endOffset":8475477,"count":0}],"isBlockCoverage":false},{"functionName":"isValidESSymbolDeclaration","ranges":[{"startOffset":8475509,"endOffset":8475541,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTypeOnlyAliasUseSite","ranges":[{"startOffset":8475574,"endOffset":8475607,"count":0}],"isBlockCoverage":false},{"functionName":"isValueSignatureDeclaration","ranges":[{"startOffset":8475640,"endOffset":8475673,"count":0}],"isBlockCoverage":false},{"functionName":"isVarAwaitUsing","ranges":[{"startOffset":8475694,"endOffset":8475715,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConst","ranges":[{"startOffset":8475731,"endOffset":8475747,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConstLike","ranges":[{"startOffset":8475767,"endOffset":8475787,"count":0}],"isBlockCoverage":false},{"functionName":"isVarUsing","ranges":[{"startOffset":8475803,"endOffset":8475819,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":8475846,"endOffset":8475873,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInVariableStatement","ranges":[{"startOffset":8475919,"endOffset":8475965,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToBareOrAccessedRequire","ranges":[{"startOffset":8476026,"endOffset":8476087,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToRequire","ranges":[{"startOffset":8476134,"endOffset":8476181,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationList","ranges":[{"startOffset":8476212,"endOffset":8476243,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike","ranges":[{"startOffset":8476263,"endOffset":8476283,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableStatement","ranges":[{"startOffset":8476308,"endOffset":8476333,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidExpression","ranges":[{"startOffset":8476355,"endOffset":8476377,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchSet","ranges":[{"startOffset":8476393,"endOffset":8476409,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":8476431,"endOffset":8476453,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceLike","ranges":[{"startOffset":8476475,"endOffset":8476497,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceSingleLine","ranges":[{"startOffset":8476525,"endOffset":8476553,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":8476574,"endOffset":8476595,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccess","ranges":[{"startOffset":8476614,"endOffset":8476633,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteOnlyAccess","ranges":[{"startOffset":8476656,"endOffset":8476679,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":8476702,"endOffset":8476725,"count":0}],"isBlockCoverage":false},{"functionName":"jsxModeNeedsExplicitImport","ranges":[{"startOffset":8476757,"endOffset":8476789,"count":0}],"isBlockCoverage":false},{"functionName":"keywordPart","ranges":[{"startOffset":8476806,"endOffset":8476823,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":8476833,"endOffset":8476843,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":8476864,"endOffset":8476885,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":8476897,"endOffset":8476909,"count":0}],"isBlockCoverage":false},{"functionName":"libMap","ranges":[{"startOffset":8476921,"endOffset":8476933,"count":0}],"isBlockCoverage":false},{"functionName":"libs","ranges":[{"startOffset":8476943,"endOffset":8476953,"count":0}],"isBlockCoverage":false},{"functionName":"lineBreakPart","ranges":[{"startOffset":8476972,"endOffset":8476991,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromGlobalCache","ranges":[{"startOffset":8477022,"endOffset":8477053,"count":0}],"isBlockCoverage":false},{"functionName":"loadWithModeAwareCache","ranges":[{"startOffset":8477081,"endOffset":8477109,"count":0}],"isBlockCoverage":false},{"functionName":"makeIdentifierFromModuleName","ranges":[{"startOffset":8477143,"endOffset":8477177,"count":0}],"isBlockCoverage":false},{"functionName":"makeImport","ranges":[{"startOffset":8477193,"endOffset":8477209,"count":0}],"isBlockCoverage":false},{"functionName":"makeStringLiteral","ranges":[{"startOffset":8477232,"endOffset":8477255,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageName","ranges":[{"startOffset":8477284,"endOffset":8477313,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":8477322,"endOffset":8477331,"count":0}],"isBlockCoverage":false},{"functionName":"mapAllOrFail","ranges":[{"startOffset":8477349,"endOffset":8477367,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefined","ranges":[{"startOffset":8477383,"endOffset":8477399,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinedIterator","ranges":[{"startOffset":8477423,"endOffset":8477447,"count":0}],"isBlockCoverage":false},{"functionName":"mapEntries","ranges":[{"startOffset":8477463,"endOffset":8477479,"count":0}],"isBlockCoverage":false},{"functionName":"mapIterator","ranges":[{"startOffset":8477496,"endOffset":8477513,"count":0}],"isBlockCoverage":false},{"functionName":"mapOneOrMany","ranges":[{"startOffset":8477531,"endOffset":8477549,"count":0}],"isBlockCoverage":false},{"functionName":"mapToDisplayParts","ranges":[{"startOffset":8477572,"endOffset":8477595,"count":0}],"isBlockCoverage":false},{"functionName":"matchFiles","ranges":[{"startOffset":8477611,"endOffset":8477627,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatternOrExact","ranges":[{"startOffset":8477652,"endOffset":8477677,"count":0}],"isBlockCoverage":false},{"functionName":"matchedText","ranges":[{"startOffset":8477694,"endOffset":8477711,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExclude","ranges":[{"startOffset":8477731,"endOffset":8477751,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExcludeWorker","ranges":[{"startOffset":8477777,"endOffset":8477803,"count":0}],"isBlockCoverage":false},{"functionName":"maxBy","ranges":[{"startOffset":8477814,"endOffset":8477825,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind","ranges":[{"startOffset":8477840,"endOffset":8477855,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSetLocalizedDiagnosticMessages","ranges":[{"startOffset":8477896,"endOffset":8477937,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":8477950,"endOffset":8477963,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeOne","ranges":[{"startOffset":8477979,"endOffset":8477995,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":8478004,"endOffset":8478013,"count":0}],"isBlockCoverage":false},{"functionName":"minAndMax","ranges":[{"startOffset":8478028,"endOffset":8478043,"count":0}],"isBlockCoverage":false},{"functionName":"missingFileModifiedTime","ranges":[{"startOffset":8478072,"endOffset":8478101,"count":0}],"isBlockCoverage":false},{"functionName":"modifierToFlag","ranges":[{"startOffset":8478121,"endOffset":8478141,"count":0}],"isBlockCoverage":false},{"functionName":"modifiersToFlags","ranges":[{"startOffset":8478163,"endOffset":8478185,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameIsDefault","ranges":[{"startOffset":8478216,"endOffset":8478247,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameTextEscaped","ranges":[{"startOffset":8478280,"endOffset":8478313,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExportNameTextUnescaped","ranges":[{"startOffset":8478348,"endOffset":8478383,"count":0}],"isBlockCoverage":false},{"functionName":"moduleOptionDeclaration","ranges":[{"startOffset":8478412,"endOffset":8478441,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionIsEqualTo","ranges":[{"startOffset":8478472,"endOffset":8478503,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionNameAndModeGetter","ranges":[{"startOffset":8478542,"endOffset":8478581,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionOptionDeclarations","ranges":[{"startOffset":8478621,"endOffset":8478661,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionSupportsPackageJsonExportsAndImports","ranges":[{"startOffset":8478719,"endOffset":8478777,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionUsesNodeModules","ranges":[{"startOffset":8478814,"endOffset":8478851,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierToValidIdentifier","ranges":[{"startOffset":8478889,"endOffset":8478927,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifiers","ranges":[{"startOffset":8478949,"endOffset":8478982,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSupportsImportAttributes","ranges":[{"startOffset":8479018,"endOffset":8479054,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSymbolToValidIdentifier","ranges":[{"startOffset":8479089,"endOffset":8479124,"count":0}],"isBlockCoverage":false},{"functionName":"moveEmitHelpers","ranges":[{"startOffset":8479145,"endOffset":8479166,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangeEnd","ranges":[{"startOffset":8479184,"endOffset":8479202,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastDecorators","ranges":[{"startOffset":8479231,"endOffset":8479260,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastModifiers","ranges":[{"startOffset":8479288,"endOffset":8479316,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePos","ranges":[{"startOffset":8479334,"endOffset":8479352,"count":0}],"isBlockCoverage":false},{"functionName":"moveSyntheticComments","ranges":[{"startOffset":8479379,"endOffset":8479406,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMap","ranges":[{"startOffset":8479421,"endOffset":8479436,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMapSkippingNewValues","ranges":[{"startOffset":8479468,"endOffset":8479500,"count":0}],"isBlockCoverage":false},{"functionName":"needsParentheses","ranges":[{"startOffset":8479522,"endOffset":8479544,"count":0}],"isBlockCoverage":false},{"functionName":"needsScopeMarker","ranges":[{"startOffset":8479566,"endOffset":8479588,"count":0}],"isBlockCoverage":false},{"functionName":"newCaseClauseTracker","ranges":[{"startOffset":8479614,"endOffset":8479640,"count":0}],"isBlockCoverage":false},{"functionName":"newPrivateEnvironment","ranges":[{"startOffset":8479667,"endOffset":8479694,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitNotification","ranges":[{"startOffset":8479718,"endOffset":8479742,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitSubstitution","ranges":[{"startOffset":8479766,"endOffset":8479790,"count":0}],"isBlockCoverage":false},{"functionName":"noTransformers","ranges":[{"startOffset":8479810,"endOffset":8479830,"count":0}],"isBlockCoverage":false},{"functionName":"noTruncationMaximumTruncationLength","ranges":[{"startOffset":8479871,"endOffset":8479912,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCanBeDecorated","ranges":[{"startOffset":8479936,"endOffset":8479960,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCoreModules","ranges":[{"startOffset":8479981,"endOffset":8480002,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasName","ranges":[{"startOffset":8480019,"endOffset":8480036,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsDecorated","ranges":[{"startOffset":8480057,"endOffset":8480078,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsMissing","ranges":[{"startOffset":8480097,"endOffset":8480116,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsPresent","ranges":[{"startOffset":8480135,"endOffset":8480154,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsSynthesized","ranges":[{"startOffset":8480177,"endOffset":8480200,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolver","ranges":[{"startOffset":8480228,"endOffset":8480256,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModulesPathPart","ranges":[{"startOffset":8480281,"endOffset":8480306,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextJsonConfigResolver","ranges":[{"startOffset":8480338,"endOffset":8480370,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOrChildIsDecorated","ranges":[{"startOffset":8480398,"endOffset":8480426,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOverlapsWithStartEnd","ranges":[{"startOffset":8480456,"endOffset":8480486,"count":0}],"isBlockCoverage":false},{"functionName":"nodePosToString","ranges":[{"startOffset":8480507,"endOffset":8480528,"count":0}],"isBlockCoverage":false},{"functionName":"nodeSeenTracker","ranges":[{"startOffset":8480549,"endOffset":8480570,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStartsNewLexicalEnvironment","ranges":[{"startOffset":8480607,"endOffset":8480644,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":8480654,"endOffset":8480664,"count":0}],"isBlockCoverage":false},{"functionName":"noopFileWatcher","ranges":[{"startOffset":8480685,"endOffset":8480706,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":8480725,"endOffset":8480744,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSlashes","ranges":[{"startOffset":8480766,"endOffset":8480788,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpans","ranges":[{"startOffset":8480808,"endOffset":8480828,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":8480837,"endOffset":8480846,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":8480866,"endOffset":8480886,"count":0}],"isBlockCoverage":false},{"functionName":"notImplementedResolver","ranges":[{"startOffset":8480914,"endOffset":8480942,"count":0}],"isBlockCoverage":false},{"functionName":"nullNodeConverters","ranges":[{"startOffset":8480966,"endOffset":8480990,"count":0}],"isBlockCoverage":false},{"functionName":"nullParenthesizerRules","ranges":[{"startOffset":8481018,"endOffset":8481046,"count":0}],"isBlockCoverage":false},{"functionName":"nullTransformationContext","ranges":[{"startOffset":8481077,"endOffset":8481108,"count":0}],"isBlockCoverage":false},{"functionName":"objectAllocator","ranges":[{"startOffset":8481129,"endOffset":8481150,"count":0}],"isBlockCoverage":false},{"functionName":"operatorPart","ranges":[{"startOffset":8481168,"endOffset":8481186,"count":0}],"isBlockCoverage":false},{"functionName":"optionDeclarations","ranges":[{"startOffset":8481210,"endOffset":8481234,"count":0}],"isBlockCoverage":false},{"functionName":"optionMapToObject","ranges":[{"startOffset":8481257,"endOffset":8481280,"count":0}],"isBlockCoverage":false},{"functionName":"optionsAffectingProgramStructure","ranges":[{"startOffset":8481318,"endOffset":8481356,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForBuild","ranges":[{"startOffset":8481377,"endOffset":8481398,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForWatch","ranges":[{"startOffset":8481419,"endOffset":8481440,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveChanges","ranges":[{"startOffset":8481464,"endOffset":8481488,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":8481496,"endOffset":8481504,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItem","ranges":[{"startOffset":8481527,"endOffset":8481550,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItemAt","ranges":[{"startOffset":8481575,"endOffset":8481600,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToPackageName","ranges":[{"startOffset":8481628,"endOffset":8481656,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToString","ranges":[{"startOffset":8481679,"endOffset":8481702,"count":0}],"isBlockCoverage":false},{"functionName":"parameterIsThisKeyword","ranges":[{"startOffset":8481730,"endOffset":8481758,"count":0}],"isBlockCoverage":false},{"functionName":"parameterNamePart","ranges":[{"startOffset":8481781,"endOffset":8481804,"count":0}],"isBlockCoverage":false},{"functionName":"parseBaseNodeFactory","ranges":[{"startOffset":8481830,"endOffset":8481856,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigInt","ranges":[{"startOffset":8481873,"endOffset":8481890,"count":0}],"isBlockCoverage":false},{"functionName":"parseBuildCommand","ranges":[{"startOffset":8481913,"endOffset":8481936,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLine","ranges":[{"startOffset":8481958,"endOffset":8481980,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLineWorker","ranges":[{"startOffset":8482008,"endOffset":8482036,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileTextToJson","ranges":[{"startOffset":8482067,"endOffset":8482098,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileWithSystem","ranges":[{"startOffset":8482129,"endOffset":8482160,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigHostFromCompilerHostLike","ranges":[{"startOffset":8482201,"endOffset":8482242,"count":0}],"isBlockCoverage":false},{"functionName":"parseCustomTypeOption","ranges":[{"startOffset":8482269,"endOffset":8482296,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName","ranges":[{"startOffset":8482325,"endOffset":8482354,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment","ranges":[{"startOffset":8482385,"endOffset":8482416,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpressionForTests","ranges":[{"startOffset":8482454,"endOffset":8482492,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonConfigFileContent","ranges":[{"startOffset":8482524,"endOffset":8482556,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonSourceFileConfigFileContent","ranges":[{"startOffset":8482598,"endOffset":8482640,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText","ranges":[{"startOffset":8482659,"endOffset":8482678,"count":0}],"isBlockCoverage":false},{"functionName":"parseListTypeOption","ranges":[{"startOffset":8482703,"endOffset":8482728,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeFactory","ranges":[{"startOffset":8482750,"endOffset":8482772,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeModuleFromPath","ranges":[{"startOffset":8482801,"endOffset":8482830,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":8482852,"endOffset":8482874,"count":0}],"isBlockCoverage":false},{"functionName":"parsePseudoBigInt","ranges":[{"startOffset":8482897,"endOffset":8482920,"count":0}],"isBlockCoverage":false},{"functionName":"parseValidBigInt","ranges":[{"startOffset":8482942,"endOffset":8482964,"count":0}],"isBlockCoverage":false},{"functionName":"pasteEdits","ranges":[{"startOffset":8482980,"endOffset":8483007,"count":0}],"isBlockCoverage":false},{"functionName":"patchWriteFileEnsuringDirectory","ranges":[{"startOffset":8483044,"endOffset":8483081,"count":0}],"isBlockCoverage":false},{"functionName":"pathContainsNodeModules","ranges":[{"startOffset":8483110,"endOffset":8483139,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsAbsolute","ranges":[{"startOffset":8483159,"endOffset":8483179,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsBareSpecifier","ranges":[{"startOffset":8483204,"endOffset":8483229,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsRelative","ranges":[{"startOffset":8483249,"endOffset":8483269,"count":0}],"isBlockCoverage":false},{"functionName":"patternText","ranges":[{"startOffset":8483286,"endOffset":8483303,"count":0}],"isBlockCoverage":false},{"functionName":"performIncrementalCompilation","ranges":[{"startOffset":8483338,"endOffset":8483373,"count":0}],"isBlockCoverage":false},{"functionName":"performance","ranges":[{"startOffset":8483390,"endOffset":8483418,"count":0}],"isBlockCoverage":false},{"functionName":"positionBelongsToNode","ranges":[{"startOffset":8483445,"endOffset":8483472,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsASICandidate","ranges":[{"startOffset":8483500,"endOffset":8483528,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsSynthesized","ranges":[{"startOffset":8483555,"endOffset":8483582,"count":0}],"isBlockCoverage":false},{"functionName":"positionsAreOnSameLine","ranges":[{"startOffset":8483610,"endOffset":8483638,"count":0}],"isBlockCoverage":false},{"functionName":"preProcessFile","ranges":[{"startOffset":8483658,"endOffset":8483678,"count":0}],"isBlockCoverage":false},{"functionName":"probablyUsesSemicolons","ranges":[{"startOffset":8483706,"endOffset":8483734,"count":0}],"isBlockCoverage":false},{"functionName":"processCommentPragmas","ranges":[{"startOffset":8483761,"endOffset":8483788,"count":0}],"isBlockCoverage":false},{"functionName":"processPragmasIntoFields","ranges":[{"startOffset":8483818,"endOffset":8483848,"count":0}],"isBlockCoverage":false},{"functionName":"processTaggedTemplateExpression","ranges":[{"startOffset":8483885,"endOffset":8483922,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsEsModules","ranges":[{"startOffset":8483952,"endOffset":8483982,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsModules","ranges":[{"startOffset":8484010,"endOffset":8484038,"count":0}],"isBlockCoverage":false},{"functionName":"projectReferenceIsEqualTo","ranges":[{"startOffset":8484069,"endOffset":8484100,"count":0}],"isBlockCoverage":false},{"functionName":"propertyNamePart","ranges":[{"startOffset":8484122,"endOffset":8484144,"count":0}],"isBlockCoverage":false},{"functionName":"pseudoBigIntToString","ranges":[{"startOffset":8484170,"endOffset":8484196,"count":0}],"isBlockCoverage":false},{"functionName":"punctuationPart","ranges":[{"startOffset":8484217,"endOffset":8484238,"count":0}],"isBlockCoverage":false},{"functionName":"pushIfUnique","ranges":[{"startOffset":8484256,"endOffset":8484274,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":8484285,"endOffset":8484296,"count":0}],"isBlockCoverage":false},{"functionName":"quotePreferenceFromString","ranges":[{"startOffset":8484327,"endOffset":8484358,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPosition","ranges":[{"startOffset":8484385,"endOffset":8484412,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPositionExclusive","ranges":[{"startOffset":8484448,"endOffset":8484484,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRange","ranges":[{"startOffset":8484508,"endOffset":8484532,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRangeExclusive","ranges":[{"startOffset":8484565,"endOffset":8484598,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsStartEnd","ranges":[{"startOffset":8484625,"endOffset":8484652,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndIsOnSameLineAsRangeStart","ranges":[{"startOffset":8484690,"endOffset":8484728,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndPositionsAreOnSameLine","ranges":[{"startOffset":8484764,"endOffset":8484800,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEquals","ranges":[{"startOffset":8484817,"endOffset":8484834,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnSingleLine","ranges":[{"startOffset":8484859,"endOffset":8484884,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfNode","ranges":[{"startOffset":8484901,"endOffset":8484918,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfTypeParameters","ranges":[{"startOffset":8484945,"endOffset":8484972,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOverlapsWithStartEnd","ranges":[{"startOffset":8485003,"endOffset":8485034,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartIsOnSameLineAsRangeEnd","ranges":[{"startOffset":8485072,"endOffset":8485110,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartPositionsAreOnSameLine","ranges":[{"startOffset":8485148,"endOffset":8485186,"count":0}],"isBlockCoverage":false},{"functionName":"readBuilderProgram","ranges":[{"startOffset":8485210,"endOffset":8485234,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigFile","ranges":[{"startOffset":8485254,"endOffset":8485274,"count":0}],"isBlockCoverage":false},{"functionName":"readJson","ranges":[{"startOffset":8485288,"endOffset":8485302,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonConfigFile","ranges":[{"startOffset":8485326,"endOffset":8485350,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonOrUndefined","ranges":[{"startOffset":8485375,"endOffset":8485400,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachLeadingCommentRange","ranges":[{"startOffset":8485435,"endOffset":8485470,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachTrailingCommentRange","ranges":[{"startOffset":8485506,"endOffset":8485542,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeft","ranges":[{"startOffset":8485558,"endOffset":8485574,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeftIterator","ranges":[{"startOffset":8485598,"endOffset":8485622,"count":0}],"isBlockCoverage":false},{"functionName":"reducePathComponents","ranges":[{"startOffset":8485648,"endOffset":8485674,"count":0}],"isBlockCoverage":false},{"functionName":"refactor","ranges":[{"startOffset":8485688,"endOffset":8485713,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":8485731,"endOffset":8485749,"count":0}],"isBlockCoverage":false},{"functionName":"regularExpressionFlagToCharacterCode","ranges":[{"startOffset":8485791,"endOffset":8485833,"count":0}],"isBlockCoverage":false},{"functionName":"relativeComplement","ranges":[{"startOffset":8485857,"endOffset":8485881,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllComments","ranges":[{"startOffset":8485904,"endOffset":8485927,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmitHelper","ranges":[{"startOffset":8485949,"endOffset":8485971,"count":0}],"isBlockCoverage":false},{"functionName":"removeExtension","ranges":[{"startOffset":8485992,"endOffset":8486013,"count":0}],"isBlockCoverage":false},{"functionName":"removeFileExtension","ranges":[{"startOffset":8486038,"endOffset":8486063,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPath","ranges":[{"startOffset":8486086,"endOffset":8486109,"count":0}],"isBlockCoverage":false},{"functionName":"removeMinAndVersionNumbers","ranges":[{"startOffset":8486141,"endOffset":8486173,"count":0}],"isBlockCoverage":false},{"functionName":"removePrefix","ranges":[{"startOffset":8486191,"endOffset":8486209,"count":0}],"isBlockCoverage":false},{"functionName":"removeSuffix","ranges":[{"startOffset":8486227,"endOffset":8486245,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":8486283,"endOffset":8486321,"count":0}],"isBlockCoverage":false},{"functionName":"repeatString","ranges":[{"startOffset":8486339,"endOffset":8486357,"count":0}],"isBlockCoverage":false},{"functionName":"replaceElement","ranges":[{"startOffset":8486377,"endOffset":8486397,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstStar","ranges":[{"startOffset":8486419,"endOffset":8486441,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionExtensionIsTSOrJson","ranges":[{"startOffset":8486476,"endOffset":8486511,"count":0}],"isBlockCoverage":false},{"functionName":"resolveConfigFileProjectName","ranges":[{"startOffset":8486545,"endOffset":8486579,"count":0}],"isBlockCoverage":false},{"functionName":"resolveJSModule","ranges":[{"startOffset":8486600,"endOffset":8486621,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":8486641,"endOffset":8486661,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleName","ranges":[{"startOffset":8486684,"endOffset":8486707,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameFromCache","ranges":[{"startOffset":8486739,"endOffset":8486771,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageNameToPackageJson","ranges":[{"startOffset":8486808,"endOffset":8486845,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePath","ranges":[{"startOffset":8486862,"endOffset":8486879,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectReferencePath","ranges":[{"startOffset":8486912,"endOffset":8486945,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTripleslashReference","ranges":[{"startOffset":8486978,"endOffset":8487011,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirective","ranges":[{"startOffset":8487046,"endOffset":8487081,"count":0}],"isBlockCoverage":false},{"functionName":"resolvingEmptyArray","ranges":[{"startOffset":8487106,"endOffset":8487131,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":8487148,"endOffset":8487165,"count":0}],"isBlockCoverage":false},{"functionName":"returnNoopFileWatcher","ranges":[{"startOffset":8487192,"endOffset":8487219,"count":0}],"isBlockCoverage":false},{"functionName":"returnTrue","ranges":[{"startOffset":8487235,"endOffset":8487251,"count":0}],"isBlockCoverage":false},{"functionName":"returnUndefined","ranges":[{"startOffset":8487272,"endOffset":8487293,"count":0}],"isBlockCoverage":false},{"functionName":"returnsPromise","ranges":[{"startOffset":8487313,"endOffset":8487333,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteModuleSpecifier","ranges":[{"startOffset":8487361,"endOffset":8487389,"count":0}],"isBlockCoverage":false},{"functionName":"sameFlatMap","ranges":[{"startOffset":8487406,"endOffset":8487423,"count":0}],"isBlockCoverage":false},{"functionName":"sameMap","ranges":[{"startOffset":8487436,"endOffset":8487449,"count":0}],"isBlockCoverage":false},{"functionName":"sameMapping","ranges":[{"startOffset":8487466,"endOffset":8487483,"count":0}],"isBlockCoverage":false},{"functionName":"scanTokenAtPosition","ranges":[{"startOffset":8487508,"endOffset":8487533,"count":0}],"isBlockCoverage":false},{"functionName":"scanner","ranges":[{"startOffset":8487546,"endOffset":8487559,"count":0}],"isBlockCoverage":false},{"functionName":"semanticDiagnosticsOptionDeclarations","ranges":[{"startOffset":8487602,"endOffset":8487645,"count":0}],"isBlockCoverage":false},{"functionName":"serializeCompilerOptions","ranges":[{"startOffset":8487675,"endOffset":8487705,"count":0}],"isBlockCoverage":false},{"functionName":"server","ranges":[{"startOffset":8487717,"endOffset":8487741,"count":0}],"isBlockCoverage":false},{"functionName":"servicesVersion","ranges":[{"startOffset":8487762,"endOffset":8487783,"count":0}],"isBlockCoverage":false},{"functionName":"setCommentRange","ranges":[{"startOffset":8487804,"endOffset":8487825,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigFileInOptions","ranges":[{"startOffset":8487853,"endOffset":8487881,"count":0}],"isBlockCoverage":false},{"functionName":"setConstantValue","ranges":[{"startOffset":8487903,"endOffset":8487925,"count":0}],"isBlockCoverage":false},{"functionName":"setEmitFlags","ranges":[{"startOffset":8487943,"endOffset":8487961,"count":0}],"isBlockCoverage":false},{"functionName":"setGetSourceFileAsHashVersioned","ranges":[{"startOffset":8487998,"endOffset":8488035,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierAutoGenerate","ranges":[{"startOffset":8488066,"endOffset":8488097,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierGeneratedImportReference","ranges":[{"startOffset":8488140,"endOffset":8488183,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierTypeArguments","ranges":[{"startOffset":8488215,"endOffset":8488247,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalEmitFlags","ranges":[{"startOffset":8488273,"endOffset":8488299,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalizedDiagnosticMessages","ranges":[{"startOffset":8488335,"endOffset":8488371,"count":0}],"isBlockCoverage":false},{"functionName":"setNodeChildren","ranges":[{"startOffset":8488392,"endOffset":8488413,"count":0}],"isBlockCoverage":false},{"functionName":"setNodeFlags","ranges":[{"startOffset":8488431,"endOffset":8488449,"count":0}],"isBlockCoverage":false},{"functionName":"setObjectAllocator","ranges":[{"startOffset":8488473,"endOffset":8488497,"count":0}],"isBlockCoverage":false},{"functionName":"setOriginalNode","ranges":[{"startOffset":8488518,"endOffset":8488539,"count":0}],"isBlockCoverage":false},{"functionName":"setParent","ranges":[{"startOffset":8488554,"endOffset":8488569,"count":0}],"isBlockCoverage":false},{"functionName":"setParentRecursive","ranges":[{"startOffset":8488593,"endOffset":8488617,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateIdentifier","ranges":[{"startOffset":8488643,"endOffset":8488669,"count":0}],"isBlockCoverage":false},{"functionName":"setSnippetElement","ranges":[{"startOffset":8488692,"endOffset":8488715,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapRange","ranges":[{"startOffset":8488738,"endOffset":8488761,"count":0}],"isBlockCoverage":false},{"functionName":"setStackTraceLimit","ranges":[{"startOffset":8488785,"endOffset":8488809,"count":0}],"isBlockCoverage":false},{"functionName":"setStartsOnNewLine","ranges":[{"startOffset":8488833,"endOffset":8488857,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticLeadingComments","ranges":[{"startOffset":8488890,"endOffset":8488923,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticTrailingComments","ranges":[{"startOffset":8488957,"endOffset":8488991,"count":0}],"isBlockCoverage":false},{"functionName":"setSys","ranges":[{"startOffset":8489003,"endOffset":8489015,"count":0}],"isBlockCoverage":false},{"functionName":"setSysLog","ranges":[{"startOffset":8489030,"endOffset":8489045,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRange","ranges":[{"startOffset":8489063,"endOffset":8489081,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangeEnd","ranges":[{"startOffset":8489102,"endOffset":8489123,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePos","ranges":[{"startOffset":8489144,"endOffset":8489165,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosEnd","ranges":[{"startOffset":8489189,"endOffset":8489213,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosWidth","ranges":[{"startOffset":8489239,"endOffset":8489265,"count":0}],"isBlockCoverage":false},{"functionName":"setTokenSourceMapRange","ranges":[{"startOffset":8489293,"endOffset":8489321,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeNode","ranges":[{"startOffset":8489338,"endOffset":8489355,"count":0}],"isBlockCoverage":false},{"functionName":"setUILocale","ranges":[{"startOffset":8489372,"endOffset":8489389,"count":0}],"isBlockCoverage":false},{"functionName":"setValueDeclaration","ranges":[{"startOffset":8489414,"endOffset":8489439,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAllowImportingTsExtension","ranges":[{"startOffset":8489476,"endOffset":8489513,"count":0}],"isBlockCoverage":false},{"functionName":"shouldPreserveConstEnums","ranges":[{"startOffset":8489543,"endOffset":8489573,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRewriteModuleSpecifier","ranges":[{"startOffset":8489607,"endOffset":8489641,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseUriStyleNodeCoreModules","ranges":[{"startOffset":8489679,"endOffset":8489717,"count":0}],"isBlockCoverage":false},{"functionName":"showModuleSpecifier","ranges":[{"startOffset":8489742,"endOffset":8489767,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasRestParameter","ranges":[{"startOffset":8489798,"endOffset":8489829,"count":0}],"isBlockCoverage":false},{"functionName":"signatureToDisplayParts","ranges":[{"startOffset":8489858,"endOffset":8489887,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":8489899,"endOffset":8489911,"count":0}],"isBlockCoverage":false},{"functionName":"singleElementArray","ranges":[{"startOffset":8489935,"endOffset":8489959,"count":0}],"isBlockCoverage":false},{"functionName":"singleIterator","ranges":[{"startOffset":8489979,"endOffset":8489999,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrMany","ranges":[{"startOffset":8490017,"endOffset":8490035,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrUndefined","ranges":[{"startOffset":8490058,"endOffset":8490081,"count":0}],"isBlockCoverage":false},{"functionName":"skipAlias","ranges":[{"startOffset":8490096,"endOffset":8490111,"count":0}],"isBlockCoverage":false},{"functionName":"skipConstraint","ranges":[{"startOffset":8490131,"endOffset":8490151,"count":0}],"isBlockCoverage":false},{"functionName":"skipOuterExpressions","ranges":[{"startOffset":8490177,"endOffset":8490203,"count":0}],"isBlockCoverage":false},{"functionName":"skipParentheses","ranges":[{"startOffset":8490224,"endOffset":8490245,"count":0}],"isBlockCoverage":false},{"functionName":"skipPartiallyEmittedExpressions","ranges":[{"startOffset":8490282,"endOffset":8490319,"count":0}],"isBlockCoverage":false},{"functionName":"skipTrivia","ranges":[{"startOffset":8490335,"endOffset":8490351,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeChecking","ranges":[{"startOffset":8490373,"endOffset":8490395,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeCheckingIgnoringNoCheck","ranges":[{"startOffset":8490432,"endOffset":8490469,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeParentheses","ranges":[{"startOffset":8490494,"endOffset":8490519,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhile","ranges":[{"startOffset":8490534,"endOffset":8490549,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAfter","ranges":[{"startOffset":8490565,"endOffset":8490581,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":8490591,"endOffset":8490601,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicate","ranges":[{"startOffset":8490625,"endOffset":8490649,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicateDiagnostics","ranges":[{"startOffset":8490684,"endOffset":8490719,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileAffectingCompilerOptions","ranges":[{"startOffset":8490759,"endOffset":8490799,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileMayBeEmitted","ranges":[{"startOffset":8490827,"endOffset":8490855,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExp","ranges":[{"startOffset":8490883,"endOffset":8490911,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExpDontCareLineStart","ranges":[{"startOffset":8490956,"endOffset":8491001,"count":0}],"isBlockCoverage":false},{"functionName":"spacePart","ranges":[{"startOffset":8491016,"endOffset":8491031,"count":0}],"isBlockCoverage":false},{"functionName":"spanMap","ranges":[{"startOffset":8491044,"endOffset":8491057,"count":0}],"isBlockCoverage":false},{"functionName":"startEndContainsRange","ranges":[{"startOffset":8491084,"endOffset":8491111,"count":0}],"isBlockCoverage":false},{"functionName":"startEndOverlapsWithStartEnd","ranges":[{"startOffset":8491145,"endOffset":8491179,"count":0}],"isBlockCoverage":false},{"functionName":"startOnNewLine","ranges":[{"startOffset":8491199,"endOffset":8491219,"count":0}],"isBlockCoverage":false},{"functionName":"startTracing","ranges":[{"startOffset":8491237,"endOffset":8491255,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":8491271,"endOffset":8491287,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithDirectory","ranges":[{"startOffset":8491312,"endOffset":8491337,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUnderscore","ranges":[{"startOffset":8491363,"endOffset":8491389,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUseStrict","ranges":[{"startOffset":8491414,"endOffset":8491439,"count":0}],"isBlockCoverage":false},{"functionName":"stringContainsAt","ranges":[{"startOffset":8491461,"endOffset":8491483,"count":0}],"isBlockCoverage":false},{"functionName":"stringToToken","ranges":[{"startOffset":8491502,"endOffset":8491521,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":8491538,"endOffset":8491555,"count":0}],"isBlockCoverage":false},{"functionName":"supportedDeclarationExtensions","ranges":[{"startOffset":8491591,"endOffset":8491627,"count":0}],"isBlockCoverage":false},{"functionName":"supportedJSExtensionsFlat","ranges":[{"startOffset":8491658,"endOffset":8491689,"count":0}],"isBlockCoverage":false},{"functionName":"supportedLocaleDirectories","ranges":[{"startOffset":8491721,"endOffset":8491753,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSExtensionsFlat","ranges":[{"startOffset":8491784,"endOffset":8491815,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSImplementationExtensions","ranges":[{"startOffset":8491856,"endOffset":8491897,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingAndTrailingTrivia","ranges":[{"startOffset":8491935,"endOffset":8491973,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingTrivia","ranges":[{"startOffset":8492000,"endOffset":8492027,"count":0}],"isBlockCoverage":false},{"functionName":"suppressTrailingTrivia","ranges":[{"startOffset":8492055,"endOffset":8492083,"count":0}],"isBlockCoverage":false},{"functionName":"symbolEscapedNameNoDefault","ranges":[{"startOffset":8492115,"endOffset":8492147,"count":0}],"isBlockCoverage":false},{"functionName":"symbolName","ranges":[{"startOffset":8492163,"endOffset":8492179,"count":0}],"isBlockCoverage":false},{"functionName":"symbolNameNoDefault","ranges":[{"startOffset":8492204,"endOffset":8492229,"count":0}],"isBlockCoverage":false},{"functionName":"symbolToDisplayParts","ranges":[{"startOffset":8492255,"endOffset":8492281,"count":0}],"isBlockCoverage":false},{"functionName":"sys","ranges":[{"startOffset":8492290,"endOffset":8492299,"count":0}],"isBlockCoverage":false},{"functionName":"sysLog","ranges":[{"startOffset":8492311,"endOffset":8492323,"count":0}],"isBlockCoverage":false},{"functionName":"tagNamesAreEquivalent","ranges":[{"startOffset":8492350,"endOffset":8492377,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":8492392,"endOffset":8492407,"count":0}],"isBlockCoverage":false},{"functionName":"targetOptionDeclaration","ranges":[{"startOffset":8492436,"endOffset":8492465,"count":0}],"isBlockCoverage":false},{"functionName":"targetToLibMap","ranges":[{"startOffset":8492485,"endOffset":8492505,"count":0}],"isBlockCoverage":false},{"functionName":"testFormatSettings","ranges":[{"startOffset":8492529,"endOffset":8492553,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeIsUnchanged","ranges":[{"startOffset":8492585,"endOffset":8492617,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeNewSpan","ranges":[{"startOffset":8492645,"endOffset":8492673,"count":0}],"isBlockCoverage":false},{"functionName":"textChanges","ranges":[{"startOffset":8492690,"endOffset":8492718,"count":0}],"isBlockCoverage":false},{"functionName":"textOrKeywordPart","ranges":[{"startOffset":8492741,"endOffset":8492764,"count":0}],"isBlockCoverage":false},{"functionName":"textPart","ranges":[{"startOffset":8492778,"endOffset":8492792,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsPositionInclusive","ranges":[{"startOffset":8492832,"endOffset":8492872,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsTextSpan","ranges":[{"startOffset":8492903,"endOffset":8492934,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeIntersectsWithTextSpan","ranges":[{"startOffset":8492971,"endOffset":8493008,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsPosition","ranges":[{"startOffset":8493038,"endOffset":8493068,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextRange","ranges":[{"startOffset":8493099,"endOffset":8493130,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextSpan","ranges":[{"startOffset":8493160,"endOffset":8493190,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanEnd","ranges":[{"startOffset":8493207,"endOffset":8493224,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersection","ranges":[{"startOffset":8493250,"endOffset":8493276,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWith","ranges":[{"startOffset":8493304,"endOffset":8493332,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithPosition","ranges":[{"startOffset":8493368,"endOffset":8493404,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithTextSpan","ranges":[{"startOffset":8493440,"endOffset":8493476,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIsEmpty","ranges":[{"startOffset":8493497,"endOffset":8493518,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlap","ranges":[{"startOffset":8493539,"endOffset":8493560,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlapsWith","ranges":[{"startOffset":8493586,"endOffset":8493612,"count":0}],"isBlockCoverage":false},{"functionName":"textSpansEqual","ranges":[{"startOffset":8493632,"endOffset":8493652,"count":0}],"isBlockCoverage":false},{"functionName":"textToKeywordObj","ranges":[{"startOffset":8493674,"endOffset":8493696,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":8493711,"endOffset":8493726,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8493739,"endOffset":8493752,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderFileEmit","ranges":[{"startOffset":8493775,"endOffset":8493798,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderStateFileInfoForMultiEmit","ranges":[{"startOffset":8493838,"endOffset":8493878,"count":0}],"isBlockCoverage":false},{"functionName":"toEditorSettings","ranges":[{"startOffset":8493900,"endOffset":8493922,"count":0}],"isBlockCoverage":false},{"functionName":"toFileNameLowerCase","ranges":[{"startOffset":8493947,"endOffset":8493972,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":8493984,"endOffset":8493996,"count":0}],"isBlockCoverage":false},{"functionName":"toProgramEmitPending","ranges":[{"startOffset":8494022,"endOffset":8494048,"count":0}],"isBlockCoverage":false},{"functionName":"toSorted","ranges":[{"startOffset":8494062,"endOffset":8494076,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeyword","ranges":[{"startOffset":8494108,"endOffset":8494140,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":8494185,"endOffset":8494230,"count":0}],"isBlockCoverage":false},{"functionName":"tokenToString","ranges":[{"startOffset":8494249,"endOffset":8494268,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":8494279,"endOffset":8494290,"count":0}],"isBlockCoverage":false},{"functionName":"tracing","ranges":[{"startOffset":8494303,"endOffset":8494316,"count":0}],"isBlockCoverage":false},{"functionName":"tracingEnabled","ranges":[{"startOffset":8494336,"endOffset":8494356,"count":0}],"isBlockCoverage":false},{"functionName":"transferSourceFileChildren","ranges":[{"startOffset":8494388,"endOffset":8494420,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":8494435,"endOffset":8494450,"count":0}],"isBlockCoverage":false},{"functionName":"transformClassFields","ranges":[{"startOffset":8494476,"endOffset":8494502,"count":0}],"isBlockCoverage":false},{"functionName":"transformDeclarations","ranges":[{"startOffset":8494529,"endOffset":8494556,"count":0}],"isBlockCoverage":false},{"functionName":"transformECMAScriptModule","ranges":[{"startOffset":8494587,"endOffset":8494618,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2015","ranges":[{"startOffset":8494639,"endOffset":8494660,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2016","ranges":[{"startOffset":8494681,"endOffset":8494702,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2017","ranges":[{"startOffset":8494723,"endOffset":8494744,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2018","ranges":[{"startOffset":8494765,"endOffset":8494786,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2019","ranges":[{"startOffset":8494807,"endOffset":8494828,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2020","ranges":[{"startOffset":8494849,"endOffset":8494870,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2021","ranges":[{"startOffset":8494891,"endOffset":8494912,"count":0}],"isBlockCoverage":false},{"functionName":"transformESDecorators","ranges":[{"startOffset":8494939,"endOffset":8494966,"count":0}],"isBlockCoverage":false},{"functionName":"transformESNext","ranges":[{"startOffset":8494987,"endOffset":8495008,"count":0}],"isBlockCoverage":false},{"functionName":"transformGenerators","ranges":[{"startOffset":8495033,"endOffset":8495058,"count":0}],"isBlockCoverage":false},{"functionName":"transformImpliedNodeFormatDependentModule","ranges":[{"startOffset":8495105,"endOffset":8495152,"count":0}],"isBlockCoverage":false},{"functionName":"transformJsx","ranges":[{"startOffset":8495170,"endOffset":8495188,"count":0}],"isBlockCoverage":false},{"functionName":"transformLegacyDecorators","ranges":[{"startOffset":8495219,"endOffset":8495250,"count":0}],"isBlockCoverage":false},{"functionName":"transformModule","ranges":[{"startOffset":8495271,"endOffset":8495292,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluation","ranges":[{"startOffset":8495322,"endOffset":8495352,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodes","ranges":[{"startOffset":8495372,"endOffset":8495392,"count":0}],"isBlockCoverage":false},{"functionName":"transformSystemModule","ranges":[{"startOffset":8495419,"endOffset":8495446,"count":0}],"isBlockCoverage":false},{"functionName":"transformTypeScript","ranges":[{"startOffset":8495471,"endOffset":8495496,"count":0}],"isBlockCoverage":false},{"functionName":"transpile","ranges":[{"startOffset":8495511,"endOffset":8495526,"count":0}],"isBlockCoverage":false},{"functionName":"transpileDeclaration","ranges":[{"startOffset":8495552,"endOffset":8495578,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":8495599,"endOffset":8495620,"count":0}],"isBlockCoverage":false},{"functionName":"transpileOptionValueCompilerOptions","ranges":[{"startOffset":8495661,"endOffset":8495702,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddToSet","ranges":[{"startOffset":8495719,"endOffset":8495736,"count":0}],"isBlockCoverage":false},{"functionName":"tryAndIgnoreErrors","ranges":[{"startOffset":8495760,"endOffset":8495784,"count":0}],"isBlockCoverage":false},{"functionName":"tryCast","ranges":[{"startOffset":8495797,"endOffset":8495810,"count":0}],"isBlockCoverage":false},{"functionName":"tryDirectoryExists","ranges":[{"startOffset":8495834,"endOffset":8495858,"count":0}],"isBlockCoverage":false},{"functionName":"tryExtractTSExtension","ranges":[{"startOffset":8495885,"endOffset":8495912,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileExists","ranges":[{"startOffset":8495931,"endOffset":8495950,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassExtendingExpressionWithTypeArguments","ranges":[{"startOffset":8496003,"endOffset":8496056,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassImplementingOrExtendingExpressionWithTypeArguments","ranges":[{"startOffset":8496123,"endOffset":8496190,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDirectories","ranges":[{"startOffset":8496213,"endOffset":8496236,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExtensionFromPath","ranges":[{"startOffset":8496265,"endOffset":8496295,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportFromModuleSpecifier","ranges":[{"startOffset":8496332,"endOffset":8496369,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocSatisfiesTypeNode","ranges":[{"startOffset":8496403,"endOffset":8496437,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromFile","ranges":[{"startOffset":8496467,"endOffset":8496497,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifierFromDeclaration","ranges":[{"startOffset":8496539,"endOffset":8496581,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNativePerformanceHooks","ranges":[{"startOffset":8496615,"endOffset":8496649,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyAccessOrIdentifierToString","ranges":[{"startOffset":8496695,"endOffset":8496741,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":8496793,"endOffset":8496845,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSourceMappingURL","ranges":[{"startOffset":8496873,"endOffset":8496901,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetTextOfPropertyName","ranges":[{"startOffset":8496931,"endOffset":8496961,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseJson","ranges":[{"startOffset":8496979,"endOffset":8496997,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePattern","ranges":[{"startOffset":8497018,"endOffset":8497039,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePatterns","ranges":[{"startOffset":8497061,"endOffset":8497083,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseRawSourceMap","ranges":[{"startOffset":8497109,"endOffset":8497135,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadDirectory","ranges":[{"startOffset":8497157,"endOffset":8497179,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadFile","ranges":[{"startOffset":8497196,"endOffset":8497213,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveDirectoryPrefix","ranges":[{"startOffset":8497243,"endOffset":8497273,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveExtension","ranges":[{"startOffset":8497297,"endOffset":8497321,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemovePrefix","ranges":[{"startOffset":8497342,"endOffset":8497363,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveSuffix","ranges":[{"startOffset":8497384,"endOffset":8497405,"count":0}],"isBlockCoverage":false},{"functionName":"tscBuildOption","ranges":[{"startOffset":8497425,"endOffset":8497445,"count":0}],"isBlockCoverage":false},{"functionName":"typeAcquisitionDeclarations","ranges":[{"startOffset":8497478,"endOffset":8497511,"count":0}],"isBlockCoverage":false},{"functionName":"typeAliasNamePart","ranges":[{"startOffset":8497534,"endOffset":8497557,"count":0}],"isBlockCoverage":false},{"functionName":"typeDirectiveIsEqualTo","ranges":[{"startOffset":8497585,"endOffset":8497613,"count":0}],"isBlockCoverage":false},{"functionName":"typeKeywords","ranges":[{"startOffset":8497631,"endOffset":8497649,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterNamePart","ranges":[{"startOffset":8497676,"endOffset":8497703,"count":0}],"isBlockCoverage":false},{"functionName":"typeToDisplayParts","ranges":[{"startOffset":8497727,"endOffset":8497751,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedPollThresholds","ranges":[{"startOffset":8497780,"endOffset":8497809,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedTextChangeRange","ranges":[{"startOffset":8497839,"endOffset":8497869,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeLeadingUnderscores","ranges":[{"startOffset":8497901,"endOffset":8497933,"count":0}],"isBlockCoverage":false},{"functionName":"unmangleScopedPackageName","ranges":[{"startOffset":8497964,"endOffset":8497995,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItem","ranges":[{"startOffset":8498020,"endOffset":8498045,"count":0}],"isBlockCoverage":false},{"functionName":"unprefixedNodeCoreModules","ranges":[{"startOffset":8498076,"endOffset":8498107,"count":0}],"isBlockCoverage":false},{"functionName":"unreachableCodeIsError","ranges":[{"startOffset":8498135,"endOffset":8498163,"count":0}],"isBlockCoverage":false},{"functionName":"unsetNodeChildren","ranges":[{"startOffset":8498186,"endOffset":8498209,"count":0}],"isBlockCoverage":false},{"functionName":"unusedLabelIsError","ranges":[{"startOffset":8498233,"endOffset":8498257,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapInnermostStatementOfLabel","ranges":[{"startOffset":8498294,"endOffset":8498331,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":8498366,"endOffset":8498401,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorForNoInputFiles","ranges":[{"startOffset":8498433,"endOffset":8498465,"count":0}],"isBlockCoverage":false},{"functionName":"updateLanguageServiceSourceFile","ranges":[{"startOffset":8498502,"endOffset":8498539,"count":0}],"isBlockCoverage":false},{"functionName":"updateMissingFilePathsWatch","ranges":[{"startOffset":8498572,"endOffset":8498605,"count":0}],"isBlockCoverage":false},{"functionName":"updateResolutionField","ranges":[{"startOffset":8498632,"endOffset":8498659,"count":0}],"isBlockCoverage":false},{"functionName":"updateSharedExtendedConfigFileWatcher","ranges":[{"startOffset":8498702,"endOffset":8498745,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceFile","ranges":[{"startOffset":8498767,"endOffset":8498789,"count":0}],"isBlockCoverage":false},{"functionName":"updateWatchingWildcardDirectories","ranges":[{"startOffset":8498828,"endOffset":8498867,"count":0}],"isBlockCoverage":false},{"functionName":"usingSingleLineStringWriter","ranges":[{"startOffset":8498900,"endOffset":8498933,"count":0}],"isBlockCoverage":false},{"functionName":"utf16EncodeAsString","ranges":[{"startOffset":8498958,"endOffset":8498983,"count":0}],"isBlockCoverage":false},{"functionName":"validateLocaleAndSetLanguage","ranges":[{"startOffset":8499017,"endOffset":8499051,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":8499064,"endOffset":8499077,"count":0}],"isBlockCoverage":false},{"functionName":"versionMajorMinor","ranges":[{"startOffset":8499100,"endOffset":8499123,"count":0}],"isBlockCoverage":false},{"functionName":"visitArray","ranges":[{"startOffset":8499139,"endOffset":8499155,"count":0}],"isBlockCoverage":false},{"functionName":"visitCommaListElements","ranges":[{"startOffset":8499183,"endOffset":8499211,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChild","ranges":[{"startOffset":8499231,"endOffset":8499251,"count":0}],"isBlockCoverage":false},{"functionName":"visitFunctionBody","ranges":[{"startOffset":8499274,"endOffset":8499297,"count":0}],"isBlockCoverage":false},{"functionName":"visitIterationBody","ranges":[{"startOffset":8499321,"endOffset":8499345,"count":0}],"isBlockCoverage":false},{"functionName":"visitLexicalEnvironment","ranges":[{"startOffset":8499374,"endOffset":8499403,"count":0}],"isBlockCoverage":false},{"functionName":"visitNode","ranges":[{"startOffset":8499418,"endOffset":8499433,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes","ranges":[{"startOffset":8499449,"endOffset":8499466,"count":0}],"isBlockCoverage":false},{"functionName":"visitParameterList","ranges":[{"startOffset":8499490,"endOffset":8499514,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpBindingElementsAndPatterns","ranges":[{"startOffset":8499552,"endOffset":8499590,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpOuterExpressions","ranges":[{"startOffset":8499618,"endOffset":8499646,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedExpressions","ranges":[{"startOffset":8499682,"endOffset":8499718,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypes","ranges":[{"startOffset":8499748,"endOffset":8499778,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypesAndGetParentAndChild","ranges":[{"startOffset":8499828,"endOffset":8499878,"count":0}],"isBlockCoverage":false},{"functionName":"whitespaceOrMapCommentRegExp","ranges":[{"startOffset":8499912,"endOffset":8499946,"count":0}],"isBlockCoverage":false},{"functionName":"writeCommentRange","ranges":[{"startOffset":8499969,"endOffset":8499992,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":8500007,"endOffset":8500022,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileEnsuringDirectories","ranges":[{"startOffset":8500056,"endOffset":8500090,"count":0}],"isBlockCoverage":false},{"functionName":"zipWith","ranges":[{"startOffset":8500103,"endOffset":8500116,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeScriptVersion","ranges":[{"startOffset":8500221,"endOffset":8500332,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeprecationMessage","ranges":[{"startOffset":8500333,"endOffset":8500874,"count":0}],"isBlockCoverage":false},{"functionName":"createErrorDeprecation","ranges":[{"startOffset":8500875,"endOffset":8501144,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningDeprecation","ranges":[{"startOffset":8501145,"endOffset":8501535,"count":0}],"isBlockCoverage":false},{"functionName":"createDeprecation","ranges":[{"startOffset":8501536,"endOffset":8502401,"count":0}],"isBlockCoverage":false},{"functionName":"wrapFunction","ranges":[{"startOffset":8502402,"endOffset":8502532,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":8502533,"endOffset":8502736,"count":0}],"isBlockCoverage":false},{"functionName":"createOverload","ranges":[{"startOffset":8502778,"endOffset":8503524,"count":0}],"isBlockCoverage":false},{"functionName":"createBinder2","ranges":[{"startOffset":8503525,"endOffset":8503771,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverload","ranges":[{"startOffset":8503772,"endOffset":8504090,"count":0}],"isBlockCoverage":false},{"functionName":"ActionInvalidate","ranges":[{"startOffset":8504211,"endOffset":8504233,"count":0}],"isBlockCoverage":false},{"functionName":"ActionPackageInstalled","ranges":[{"startOffset":8504261,"endOffset":8504289,"count":0}],"isBlockCoverage":false},{"functionName":"ActionSet","ranges":[{"startOffset":8504304,"endOffset":8504319,"count":0}],"isBlockCoverage":false},{"functionName":"ActionWatchTypingLocations","ranges":[{"startOffset":8504351,"endOffset":8504383,"count":0}],"isBlockCoverage":false},{"functionName":"Arguments","ranges":[{"startOffset":8504398,"endOffset":8504413,"count":0}],"isBlockCoverage":false},{"functionName":"AutoImportProviderProject","ranges":[{"startOffset":8504444,"endOffset":8504475,"count":0}],"isBlockCoverage":false},{"functionName":"AuxiliaryProject","ranges":[{"startOffset":8504497,"endOffset":8504519,"count":0}],"isBlockCoverage":false},{"functionName":"CharRangeSection","ranges":[{"startOffset":8504541,"endOffset":8504563,"count":0}],"isBlockCoverage":false},{"functionName":"CloseFileWatcherEvent","ranges":[{"startOffset":8504590,"endOffset":8504617,"count":0}],"isBlockCoverage":false},{"functionName":"CommandNames","ranges":[{"startOffset":8504635,"endOffset":8504653,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigFileDiagEvent","ranges":[{"startOffset":8504678,"endOffset":8504703,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProject","ranges":[{"startOffset":8504726,"endOffset":8504750,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProjectLoadKind","ranges":[{"startOffset":8504781,"endOffset":8504812,"count":0}],"isBlockCoverage":false},{"functionName":"CreateDirectoryWatcherEvent","ranges":[{"startOffset":8504845,"endOffset":8504878,"count":0}],"isBlockCoverage":false},{"functionName":"CreateFileWatcherEvent","ranges":[{"startOffset":8504906,"endOffset":8504934,"count":0}],"isBlockCoverage":false},{"functionName":"Errors","ranges":[{"startOffset":8504946,"endOffset":8504958,"count":0}],"isBlockCoverage":false},{"functionName":"EventBeginInstallTypes","ranges":[{"startOffset":8504986,"endOffset":8505014,"count":0}],"isBlockCoverage":false},{"functionName":"EventEndInstallTypes","ranges":[{"startOffset":8505040,"endOffset":8505066,"count":0}],"isBlockCoverage":false},{"functionName":"EventInitializationFailed","ranges":[{"startOffset":8505097,"endOffset":8505128,"count":0}],"isBlockCoverage":false},{"functionName":"EventTypesRegistry","ranges":[{"startOffset":8505152,"endOffset":8505176,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalProject","ranges":[{"startOffset":8505197,"endOffset":8505218,"count":0}],"isBlockCoverage":false},{"functionName":"GcTimer","ranges":[{"startOffset":8505231,"endOffset":8505244,"count":0}],"isBlockCoverage":false},{"functionName":"InferredProject","ranges":[{"startOffset":8505265,"endOffset":8505287,"count":0}],"isBlockCoverage":false},{"functionName":"LargeFileReferencedEvent","ranges":[{"startOffset":8505317,"endOffset":8505347,"count":0}],"isBlockCoverage":false},{"functionName":"LineIndex","ranges":[{"startOffset":8505362,"endOffset":8505377,"count":0}],"isBlockCoverage":false},{"functionName":"LineLeaf","ranges":[{"startOffset":8505391,"endOffset":8505405,"count":0}],"isBlockCoverage":false},{"functionName":"LineNode","ranges":[{"startOffset":8505419,"endOffset":8505433,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":8505447,"endOffset":8505462,"count":0}],"isBlockCoverage":false},{"functionName":"Msg","ranges":[{"startOffset":8505471,"endOffset":8505480,"count":0}],"isBlockCoverage":false},{"functionName":"OpenFileInfoTelemetryEvent","ranges":[{"startOffset":8505512,"endOffset":8505544,"count":0}],"isBlockCoverage":false},{"functionName":"Project","ranges":[{"startOffset":8505557,"endOffset":8505571,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectInfoTelemetryEvent","ranges":[{"startOffset":8505602,"endOffset":8505633,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectKind","ranges":[{"startOffset":8505650,"endOffset":8505667,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLanguageServiceStateEvent","ranges":[{"startOffset":8505705,"endOffset":8505743,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingFinishEvent","ranges":[{"startOffset":8505774,"endOffset":8505805,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingStartEvent","ranges":[{"startOffset":8505835,"endOffset":8505865,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectService","ranges":[{"startOffset":8505885,"endOffset":8505906,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectsUpdatedInBackgroundEvent","ranges":[{"startOffset":8505944,"endOffset":8505982,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptInfo","ranges":[{"startOffset":8505998,"endOffset":8506014,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptVersionCache","ranges":[{"startOffset":8506038,"endOffset":8506062,"count":0}],"isBlockCoverage":false},{"functionName":"Session","ranges":[{"startOffset":8506075,"endOffset":8506089,"count":0}],"isBlockCoverage":false},{"functionName":"TextStorage","ranges":[{"startOffset":8506106,"endOffset":8506123,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledOperations","ranges":[{"startOffset":8506148,"endOffset":8506173,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstallerAdapter","ranges":[{"startOffset":8506202,"endOffset":8506231,"count":0}],"isBlockCoverage":false},{"functionName":"allFilesAreJsOrDts","ranges":[{"startOffset":8506255,"endOffset":8506279,"count":0}],"isBlockCoverage":false},{"functionName":"allRootFilesAreJsOrDts","ranges":[{"startOffset":8506307,"endOffset":8506335,"count":0}],"isBlockCoverage":false},{"functionName":"asNormalizedPath","ranges":[{"startOffset":8506357,"endOffset":8506379,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptions","ranges":[{"startOffset":8506407,"endOffset":8506435,"count":0}],"isBlockCoverage":false},{"functionName":"convertFormatOptions","ranges":[{"startOffset":8506461,"endOffset":8506487,"count":0}],"isBlockCoverage":false},{"functionName":"convertScriptKindName","ranges":[{"startOffset":8506514,"endOffset":8506541,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisition","ranges":[{"startOffset":8506569,"endOffset":8506597,"count":0}],"isBlockCoverage":false},{"functionName":"convertUserPreferences","ranges":[{"startOffset":8506625,"endOffset":8506653,"count":0}],"isBlockCoverage":false},{"functionName":"convertWatchOptions","ranges":[{"startOffset":8506678,"endOffset":8506703,"count":0}],"isBlockCoverage":false},{"functionName":"countEachFileTypes","ranges":[{"startOffset":8506727,"endOffset":8506751,"count":0}],"isBlockCoverage":false},{"functionName":"createInstallTypingsRequest","ranges":[{"startOffset":8506784,"endOffset":8506817,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierCache","ranges":[{"startOffset":8506849,"endOffset":8506881,"count":0}],"isBlockCoverage":false},{"functionName":"createNormalizedPathMap","ranges":[{"startOffset":8506910,"endOffset":8506939,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonCache","ranges":[{"startOffset":8506967,"endOffset":8506995,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":8507018,"endOffset":8507042,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":8507058,"endOffset":8507075,"count":0}],"isBlockCoverage":false},{"functionName":"findArgument","ranges":[{"startOffset":8507093,"endOffset":8507111,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticToProtocol","ranges":[{"startOffset":8507143,"endOffset":8507175,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":8507194,"endOffset":8507214,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseConfigFileName","ranges":[{"startOffset":8507241,"endOffset":8507268,"count":0}],"isBlockCoverage":false},{"functionName":"getDetailWatchInfo","ranges":[{"startOffset":8507292,"endOffset":8507316,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationInNewDocument","ranges":[{"startOffset":8507346,"endOffset":8507376,"count":0}],"isBlockCoverage":false},{"functionName":"hasArgument","ranges":[{"startOffset":8507393,"endOffset":8507410,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoTypeScriptSource","ranges":[{"startOffset":8507437,"endOffset":8507464,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":8507476,"endOffset":8507489,"count":0}],"isBlockCoverage":false},{"functionName":"isBackgroundProject","ranges":[{"startOffset":8507514,"endOffset":8507539,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigFile","ranges":[{"startOffset":8507557,"endOffset":8507575,"count":0}],"isBlockCoverage":false},{"functionName":"isConfiguredProject","ranges":[{"startOffset":8507600,"endOffset":8507625,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicFileName","ranges":[{"startOffset":8507648,"endOffset":8507671,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalProject","ranges":[{"startOffset":8507694,"endOffset":8507717,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProject","ranges":[{"startOffset":8507740,"endOffset":8507763,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProjectName","ranges":[{"startOffset":8507790,"endOffset":8507817,"count":0}],"isBlockCoverage":false},{"functionName":"isProjectDeferredClose","ranges":[{"startOffset":8507845,"endOffset":8507873,"count":0}],"isBlockCoverage":false},{"functionName":"makeAutoImportProviderProjectName","ranges":[{"startOffset":8507912,"endOffset":8507951,"count":0}],"isBlockCoverage":false},{"functionName":"makeAuxiliaryProjectName","ranges":[{"startOffset":8507981,"endOffset":8508011,"count":0}],"isBlockCoverage":false},{"functionName":"makeInferredProjectName","ranges":[{"startOffset":8508040,"endOffset":8508069,"count":0}],"isBlockCoverage":false},{"functionName":"maxFileSize","ranges":[{"startOffset":8508086,"endOffset":8508103,"count":0}],"isBlockCoverage":false},{"functionName":"maxProgramSizeForNonTsFiles","ranges":[{"startOffset":8508136,"endOffset":8508169,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedPathToPath","ranges":[{"startOffset":8508195,"endOffset":8508221,"count":0}],"isBlockCoverage":false},{"functionName":"nowString","ranges":[{"startOffset":8508236,"endOffset":8508251,"count":0}],"isBlockCoverage":false},{"functionName":"nullCancellationToken","ranges":[{"startOffset":8508278,"endOffset":8508305,"count":0}],"isBlockCoverage":false},{"functionName":"nullTypingsInstaller","ranges":[{"startOffset":8508331,"endOffset":8508357,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":8508371,"endOffset":8508403,"count":0}],"isBlockCoverage":false},{"functionName":"scriptInfoIsContainedByBackgroundProject","ranges":[{"startOffset":8508449,"endOffset":8508495,"count":0}],"isBlockCoverage":false},{"functionName":"scriptInfoIsContainedByDeferredClosedProject","ranges":[{"startOffset":8508545,"endOffset":8508595,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndented","ranges":[{"startOffset":8508618,"endOffset":8508641,"count":0}],"isBlockCoverage":false},{"functionName":"toEvent","ranges":[{"startOffset":8508654,"endOffset":8508667,"count":0}],"isBlockCoverage":false},{"functionName":"toNormalizedPath","ranges":[{"startOffset":8508689,"endOffset":8508711,"count":0}],"isBlockCoverage":false},{"functionName":"tryConvertScriptKindName","ranges":[{"startOffset":8508741,"endOffset":8508771,"count":0}],"isBlockCoverage":false},{"functionName":"typingsInstaller","ranges":[{"startOffset":8508793,"endOffset":8508833,"count":0}],"isBlockCoverage":false},{"functionName":"updateProjectIfDirty","ranges":[{"startOffset":8508859,"endOffset":8508885,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstaller","ranges":[{"startOffset":8509073,"endOffset":8509095,"count":0}],"isBlockCoverage":false},{"functionName":"getNpmCommandForInstallation","ranges":[{"startOffset":8509129,"endOffset":8509163,"count":0}],"isBlockCoverage":false},{"functionName":"installNpmPackages","ranges":[{"startOffset":8509187,"endOffset":8509211,"count":0}],"isBlockCoverage":false},{"functionName":"typingsName","ranges":[{"startOffset":8509228,"endOffset":8509245,"count":0}],"isBlockCoverage":false},{"functionName":"isEnabled","ranges":[{"startOffset":8509328,"endOffset":8509339,"count":0}],"isBlockCoverage":false},{"functionName":"typingToFileName","ranges":[{"startOffset":8509362,"endOffset":8509838,"count":0}],"isBlockCoverage":false},{"functionName":"installNpmPackages","ranges":[{"startOffset":8509839,"endOffset":8510203,"count":0}],"isBlockCoverage":false},{"functionName":"getNpmCommandForInstallation","ranges":[{"startOffset":8510204,"endOffset":8510779,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstaller","ranges":[{"startOffset":8510813,"endOffset":8511872,"count":0}],"isBlockCoverage":false},{"functionName":"handleRequest","ranges":[{"startOffset":8511894,"endOffset":8512519,"count":0}],"isBlockCoverage":false},{"functionName":"closeProject","ranges":[{"startOffset":8512522,"endOffset":8512586,"count":0}],"isBlockCoverage":false},{"functionName":"closeWatchers","ranges":[{"startOffset":8512589,"endOffset":8513226,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":8513229,"endOffset":8514586,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":8514608,"endOffset":8515587,"count":0}],"isBlockCoverage":false},{"functionName":"initializeSafeList","ranges":[{"startOffset":8515590,"endOffset":8516151,"count":0}],"isBlockCoverage":false},{"functionName":"processCacheLocation","ranges":[{"startOffset":8516154,"endOffset":8518939,"count":0}],"isBlockCoverage":false},{"functionName":"filterTypings","ranges":[{"startOffset":8518942,"endOffset":8520285,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePackageDirectoryExists","ranges":[{"startOffset":8520288,"endOffset":8520856,"count":0}],"isBlockCoverage":false},{"functionName":"installTypings","ranges":[{"startOffset":8520859,"endOffset":8523629,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDirectoryExists","ranges":[{"startOffset":8523632,"endOffset":8523929,"count":0}],"isBlockCoverage":false},{"functionName":"watchFiles","ranges":[{"startOffset":8523932,"endOffset":8524508,"count":0}],"isBlockCoverage":false},{"functionName":"createSetTypings","ranges":[{"startOffset":8524511,"endOffset":8524796,"count":0}],"isBlockCoverage":false},{"functionName":"installTypingsAsync","ranges":[{"startOffset":8524799,"endOffset":8524999,"count":0}],"isBlockCoverage":false},{"functionName":"executeWithThrottling","ranges":[{"startOffset":8525002,"endOffset":8525434,"count":0}],"isBlockCoverage":false},{"functionName":"typingsName","ranges":[{"startOffset":8525438,"endOffset":8525532,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8525600,"endOffset":8525844,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8525931,"endOffset":8526032,"count":1}],"isBlockCoverage":false},{"functionName":"createInstallTypingsRequest","ranges":[{"startOffset":8526046,"endOffset":8526563,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8526577,"endOffset":8527170,"count":1}],"isBlockCoverage":false},{"functionName":"ThrowNoProject","ranges":[{"startOffset":8526594,"endOffset":8526661,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowProjectLanguageServiceDisabled","ranges":[{"startOffset":8526707,"endOffset":8526827,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowProjectDoesNotContainDocument","ranges":[{"startOffset":8526915,"endOffset":8527085,"count":0}],"isBlockCoverage":false},{"functionName":"toNormalizedPath","ranges":[{"startOffset":8527198,"endOffset":8527271,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedPathToPath","ranges":[{"startOffset":8527272,"endOffset":8527520,"count":0}],"isBlockCoverage":false},{"functionName":"asNormalizedPath","ranges":[{"startOffset":8527521,"endOffset":8527579,"count":0}],"isBlockCoverage":false},{"functionName":"createNormalizedPathMap","ranges":[{"startOffset":8527580,"endOffset":8527894,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProjectName","ranges":[{"startOffset":8527895,"endOffset":8527990,"count":0}],"isBlockCoverage":false},{"functionName":"makeInferredProjectName","ranges":[{"startOffset":8527991,"endOffset":8528085,"count":0}],"isBlockCoverage":false},{"functionName":"makeAutoImportProviderProjectName","ranges":[{"startOffset":8528086,"endOffset":8528200,"count":0}],"isBlockCoverage":false},{"functionName":"makeAuxiliaryProjectName","ranges":[{"startOffset":8528201,"endOffset":8528297,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray2","ranges":[{"startOffset":8528298,"endOffset":8528344,"count":1}],"isBlockCoverage":true},{"functionName":"_ThrottledOperations","ranges":[{"startOffset":8528430,"endOffset":8528607,"count":0}],"isBlockCoverage":false},{"functionName":"schedule","ranges":[{"startOffset":8528949,"endOffset":8529384,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":8529387,"endOffset":8529614,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":8529624,"endOffset":8529792,"count":0}],"isBlockCoverage":false},{"functionName":"_GcTimer","ranges":[{"startOffset":8529829,"endOffset":8529939,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleCollect","ranges":[{"startOffset":8529942,"endOffset":8530110,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":8530120,"endOffset":8530431,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseConfigFileName","ranges":[{"startOffset":8530435,"endOffset":8530612,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationType","ranges":[{"startOffset":8530760,"endOffset":8530784,"count":0}],"isBlockCoverage":false},{"functionName":"CommandTypes","ranges":[{"startOffset":8530802,"endOffset":8530820,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionTriggerKind","ranges":[{"startOffset":8530847,"endOffset":8530874,"count":0}],"isBlockCoverage":false},{"functionName":"IndentStyle","ranges":[{"startOffset":8530891,"endOffset":8530909,"count":0}],"isBlockCoverage":false},{"functionName":"JsxEmit","ranges":[{"startOffset":8530922,"endOffset":8530936,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleKind","ranges":[{"startOffset":8530952,"endOffset":8530969,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleResolutionKind","ranges":[{"startOffset":8530995,"endOffset":8531022,"count":0}],"isBlockCoverage":false},{"functionName":"NewLineKind","ranges":[{"startOffset":8531039,"endOffset":8531057,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImportsMode","ranges":[{"startOffset":8531082,"endOffset":8531107,"count":0}],"isBlockCoverage":false},{"functionName":"PollingWatchKind","ranges":[{"startOffset":8531129,"endOffset":8531152,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptTarget","ranges":[{"startOffset":8531170,"endOffset":8531190,"count":0}],"isBlockCoverage":false},{"functionName":"SemicolonPreference","ranges":[{"startOffset":8531215,"endOffset":8531240,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryKind","ranges":[{"startOffset":8531264,"endOffset":8531289,"count":0}],"isBlockCoverage":false},{"functionName":"WatchFileKind","ranges":[{"startOffset":8531308,"endOffset":8531328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8531396,"endOffset":8538160,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8538221,"endOffset":8538681,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8538749,"endOffset":8539083,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8539154,"endOffset":8539444,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8539508,"endOffset":8539655,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8539710,"endOffset":8539969,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8540023,"endOffset":8540559,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8540626,"endOffset":8541012,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8541080,"endOffset":8541186,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8541247,"endOffset":8541910,"count":1}],"isBlockCoverage":false},{"functionName":"TextStorage","ranges":[{"startOffset":8541996,"endOffset":8542472,"count":0}],"isBlockCoverage":false},{"functionName":"getVersion","ranges":[{"startOffset":8542475,"endOffset":8542596,"count":0}],"isBlockCoverage":false},{"functionName":"hasScriptVersionCache_TestOnly","ranges":[{"startOffset":8542599,"endOffset":8542669,"count":0}],"isBlockCoverage":false},{"functionName":"resetSourceMapInfo","ranges":[{"startOffset":8542672,"endOffset":8542949,"count":0}],"isBlockCoverage":false},{"functionName":"useText","ranges":[{"startOffset":8542980,"endOffset":8543188,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":8543191,"endOffset":8543467,"count":0}],"isBlockCoverage":false},{"functionName":"reload","ranges":[{"startOffset":8543549,"endOffset":8543884,"count":0}],"isBlockCoverage":false},{"functionName":"reloadWithFileText","ranges":[{"startOffset":8544020,"endOffset":8544600,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleReloadIfNeeded","ranges":[{"startOffset":8544741,"endOffset":8544876,"count":0}],"isBlockCoverage":false},{"functionName":"delayReloadFromFileIntoText","ranges":[{"startOffset":8544879,"endOffset":8544953,"count":0}],"isBlockCoverage":false},{"functionName":"getTelemetryFileSize","ranges":[{"startOffset":8545379,"endOffset":8545567,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshot","ranges":[{"startOffset":8545570,"endOffset":8545795,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePositionAndLineText","ranges":[{"startOffset":8545798,"endOffset":8546271,"count":0}],"isBlockCoverage":false},{"functionName":"lineToTextSpan","ranges":[{"startOffset":8546318,"endOffset":8546642,"count":0}],"isBlockCoverage":false},{"functionName":"lineOffsetToPosition","ranges":[{"startOffset":8546721,"endOffset":8546979,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8546982,"endOffset":8547273,"count":0}],"isBlockCoverage":false},{"functionName":"getFileTextAndSize","ranges":[{"startOffset":8547276,"endOffset":8548125,"count":0}],"isBlockCoverage":false},{"functionName":"switchToScriptVersionCache","ranges":[{"startOffset":8548147,"endOffset":8548385,"count":0}],"isBlockCoverage":false},{"functionName":"tryUseScriptVersionCache","ranges":[{"startOffset":8548388,"endOffset":8548748,"count":0}],"isBlockCoverage":false},{"functionName":"getOrLoadText","ranges":[{"startOffset":8548751,"endOffset":8549021,"count":0}],"isBlockCoverage":false},{"functionName":"getLineMap","ranges":[{"startOffset":8549024,"endOffset":8549205,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":8549208,"endOffset":8549537,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicFileName","ranges":[{"startOffset":8549541,"endOffset":8549802,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptInfo","ranges":[{"startOffset":8549830,"endOffset":8550446,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicOrHasMixedContent","ranges":[{"startOffset":8550468,"endOffset":8550553,"count":0}],"isBlockCoverage":false},{"functionName":"isScriptOpen","ranges":[{"startOffset":8550556,"endOffset":8550612,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":8550615,"endOffset":8550786,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8550789,"endOffset":8550973,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshot","ranges":[{"startOffset":8550976,"endOffset":8551038,"count":0}],"isBlockCoverage":false},{"functionName":"ensureRealPath","ranges":[{"startOffset":8551041,"endOffset":8551568,"count":0}],"isBlockCoverage":false},{"functionName":"getRealpathIfDifferent","ranges":[{"startOffset":8551590,"endOffset":8551702,"count":0}],"isBlockCoverage":false},{"functionName":"isSymlink","ranges":[{"startOffset":8551853,"endOffset":8551927,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettings","ranges":[{"startOffset":8551930,"endOffset":8551991,"count":0}],"isBlockCoverage":false},{"functionName":"getPreferences","ranges":[{"startOffset":8551994,"endOffset":8552045,"count":0}],"isBlockCoverage":false},{"functionName":"attachToProject","ranges":[{"startOffset":8552048,"endOffset":8552362,"count":0}],"isBlockCoverage":false},{"functionName":"isAttached","ranges":[{"startOffset":8552365,"endOffset":8552732,"count":0}],"isBlockCoverage":false},{"functionName":"detachFromProject","ranges":[{"startOffset":8552735,"endOffset":8553587,"count":0}],"isBlockCoverage":false},{"functionName":"detachAllProjects","ranges":[{"startOffset":8553590,"endOffset":8554200,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultProject","ranges":[{"startOffset":8554203,"endOffset":8555899,"count":0}],"isBlockCoverage":false},{"functionName":"registerFileUpdate","ranges":[{"startOffset":8555902,"endOffset":8556020,"count":0}],"isBlockCoverage":false},{"functionName":"setOptions","ranges":[{"startOffset":8556023,"endOffset":8556541,"count":0}],"isBlockCoverage":false},{"functionName":"getLatestVersion","ranges":[{"startOffset":8556544,"endOffset":8556646,"count":0}],"isBlockCoverage":false},{"functionName":"saveTo","ranges":[{"startOffset":8556649,"endOffset":8556755,"count":0}],"isBlockCoverage":false},{"functionName":"delayReloadNonMixedContentFile","ranges":[{"startOffset":8556777,"endOffset":8556963,"count":0}],"isBlockCoverage":false},{"functionName":"reloadFromFile","ranges":[{"startOffset":8556966,"endOffset":8557148,"count":0}],"isBlockCoverage":false},{"functionName":"editContent","ranges":[{"startOffset":8557151,"endOffset":8557279,"count":0}],"isBlockCoverage":false},{"functionName":"markContainingProjectsAsDirty","ranges":[{"startOffset":8557282,"endOffset":8557408,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8557411,"endOffset":8557518,"count":0}],"isBlockCoverage":false},{"functionName":"lineToTextSpan","ranges":[{"startOffset":8557565,"endOffset":8557641,"count":0}],"isBlockCoverage":false},{"functionName":"lineOffsetToPosition","ranges":[{"startOffset":8557707,"endOffset":8557835,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8557838,"endOffset":8558039,"count":0}],"isBlockCoverage":false},{"functionName":"isJavaScript","ranges":[{"startOffset":8558042,"endOffset":8558140,"count":0}],"isBlockCoverage":false},{"functionName":"closeSourceMapFileWatcher","ranges":[{"startOffset":8558162,"endOffset":8558361,"count":0}],"isBlockCoverage":false},{"functionName":"failIfInvalidPosition","ranges":[{"startOffset":8558365,"endOffset":8558576,"count":0}],"isBlockCoverage":false},{"functionName":"failIfInvalidLocation","ranges":[{"startOffset":8558577,"endOffset":8559049,"count":0}],"isBlockCoverage":false},{"functionName":"scriptInfoIsContainedByBackgroundProject","ranges":[{"startOffset":8559050,"endOffset":8559182,"count":0}],"isBlockCoverage":false},{"functionName":"scriptInfoIsContainedByDeferredClosedProject","ranges":[{"startOffset":8559183,"endOffset":8559322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8559384,"endOffset":8559749,"count":1}],"isBlockCoverage":false},{"functionName":"countEachFileTypes","ranges":[{"startOffset":8559771,"endOffset":8560854,"count":0}],"isBlockCoverage":false},{"functionName":"hasOneOrMoreJsAndNoTsFiles","ranges":[{"startOffset":8560855,"endOffset":8561033,"count":0}],"isBlockCoverage":false},{"functionName":"allRootFilesAreJsOrDts","ranges":[{"startOffset":8561034,"endOffset":8561194,"count":0}],"isBlockCoverage":false},{"functionName":"allFilesAreJsOrDts","ranges":[{"startOffset":8561195,"endOffset":8561347,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoTypeScriptSource","ranges":[{"startOffset":8561348,"endOffset":8561559,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedFileWatcher","ranges":[{"startOffset":8561560,"endOffset":8561647,"count":0}],"isBlockCoverage":false},{"functionName":"setIsEqualTo","ranges":[{"startOffset":8561648,"endOffset":8562208,"count":0}],"isBlockCoverage":false},{"functionName":"typeAcquisitionChanged","ranges":[{"startOffset":8562209,"endOffset":8562384,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsChanged","ranges":[{"startOffset":8562385,"endOffset":8562508,"count":0}],"isBlockCoverage":false},{"functionName":"unresolvedImportsChanged","ranges":[{"startOffset":8562509,"endOffset":8562665,"count":0}],"isBlockCoverage":false},{"functionName":"_Project","ranges":[{"startOffset":8562719,"endOffset":8567507,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedProjectReferenceToRedirect","ranges":[{"startOffset":8567529,"endOffset":8567602,"count":0}],"isBlockCoverage":false},{"functionName":"isNonTsProject","ranges":[{"startOffset":8567605,"endOffset":8567696,"count":0}],"isBlockCoverage":false},{"functionName":"isJsOnlyProject","ranges":[{"startOffset":8567699,"endOffset":8567799,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModule","ranges":[{"startOffset":8567809,"endOffset":8567970,"count":0}],"isBlockCoverage":false},{"functionName":"importServicePluginSync","ranges":[{"startOffset":8567999,"endOffset":8568851,"count":0}],"isBlockCoverage":false},{"functionName":"importServicePluginAsync","ranges":[{"startOffset":8568880,"endOffset":8569848,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownTypesPackageName","ranges":[{"startOffset":8569851,"endOffset":8569965,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":8569968,"endOffset":8570161,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalTypingsCacheLocation","ranges":[{"startOffset":8570183,"endOffset":8570340,"count":0}],"isBlockCoverage":false},{"functionName":"getSymlinkCache","ranges":[{"startOffset":8570362,"endOffset":8570835,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilationSettings","ranges":[{"startOffset":8570873,"endOffset":8570936,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptions","ranges":[{"startOffset":8570973,"endOffset":8571041,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":8571044,"endOffset":8571107,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectVersion","ranges":[{"startOffset":8571110,"endOffset":8571183,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectReferences","ranges":[{"startOffset":8571186,"endOffset":8571233,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptFileNames","ranges":[{"startOffset":8571236,"endOffset":8571604,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoAndAttachToProject","ranges":[{"startOffset":8571607,"endOffset":8572143,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8572146,"endOffset":8572293,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptVersion","ranges":[{"startOffset":8572296,"endOffset":8572575,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptSnapshot","ranges":[{"startOffset":8572578,"endOffset":8572757,"count":0}],"isBlockCoverage":false},{"functionName":"getCancellationToken","ranges":[{"startOffset":8572760,"endOffset":8572823,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":8572826,"endOffset":8572887,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":8572890,"endOffset":8573113,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":8573116,"endOffset":8573212,"count":0}],"isBlockCoverage":false},{"functionName":"readDirectory","ranges":[{"startOffset":8573215,"endOffset":8573374,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":8573377,"endOffset":8573457,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":8573460,"endOffset":8573560,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":8573563,"endOffset":8573766,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameLiterals","ranges":[{"startOffset":8573788,"endOffset":8574072,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionCache","ranges":[{"startOffset":8574094,"endOffset":8574186,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirectiveReferences","ranges":[{"startOffset":8574208,"endOffset":8574580,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":8574602,"endOffset":8574766,"count":0}],"isBlockCoverage":false},{"functionName":"directoryExists","ranges":[{"startOffset":8574769,"endOffset":8574858,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectories","ranges":[{"startOffset":8574861,"endOffset":8574948,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedDirectoryStructureHost","ranges":[{"startOffset":8574970,"endOffset":8575028,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":8575050,"endOffset":8575165,"count":0}],"isBlockCoverage":false},{"functionName":"watchDirectoryOfFailedLookupLocation","ranges":[{"startOffset":8575187,"endOffset":8575457,"count":0}],"isBlockCoverage":false},{"functionName":"watchAffectingFileLocation","ranges":[{"startOffset":8575479,"endOffset":8575726,"count":0}],"isBlockCoverage":false},{"functionName":"clearInvalidateResolutionOfFailedLookupTimer","ranges":[{"startOffset":8575748,"endOffset":8575911,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleInvalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8575933,"endOffset":8576352,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8576374,"endOffset":8576652,"count":0}],"isBlockCoverage":false},{"functionName":"onInvalidatedResolution","ranges":[{"startOffset":8576674,"endOffset":8576797,"count":0}],"isBlockCoverage":false},{"functionName":"watchTypeRootsDirectory","ranges":[{"startOffset":8576819,"endOffset":8577064,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangedAutomaticTypeDirectiveNames","ranges":[{"startOffset":8577086,"endOffset":8577204,"count":0}],"isBlockCoverage":false},{"functionName":"onChangedAutomaticTypeDirectiveNames","ranges":[{"startOffset":8577226,"endOffset":8577362,"count":0}],"isBlockCoverage":false},{"functionName":"fileIsOpen","ranges":[{"startOffset":8577384,"endOffset":8577466,"count":0}],"isBlockCoverage":false},{"functionName":"writeLog","ranges":[{"startOffset":8577488,"endOffset":8577545,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":8577548,"endOffset":8577582,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":8577585,"endOffset":8577655,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalCompilerOptionsForEmittingJsFiles","ranges":[{"startOffset":8577658,"endOffset":8577858,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalProjectErrors","ranges":[{"startOffset":8577933,"endOffset":8578051,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectErrors","ranges":[{"startOffset":8578098,"endOffset":8578171,"count":0}],"isBlockCoverage":false},{"functionName":"setProjectErrors","ranges":[{"startOffset":8578174,"endOffset":8578251,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageService","ranges":[{"startOffset":8578254,"endOffset":8578408,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":8578430,"endOffset":8578509,"count":0}],"isBlockCoverage":false},{"functionName":"clearSourceMapperCache","ranges":[{"startOffset":8578531,"endOffset":8578612,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":8578634,"endOffset":8578799,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileLike","ranges":[{"startOffset":8578821,"endOffset":8578920,"count":0}],"isBlockCoverage":false},{"functionName":"shouldEmitFile","ranges":[{"startOffset":8578942,"endOffset":8579110,"count":0}],"isBlockCoverage":false},{"functionName":"getCompileOnSaveAffectedFileList","ranges":[{"startOffset":8579113,"endOffset":8579758,"count":0}],"isBlockCoverage":false},{"functionName":"emitFile","ranges":[{"startOffset":8579813,"endOffset":8580993,"count":0}],"isBlockCoverage":false},{"functionName":"enableLanguageService","ranges":[{"startOffset":8580996,"endOffset":8581354,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupProgram","ranges":[{"startOffset":8581376,"endOffset":8581692,"count":0}],"isBlockCoverage":false},{"functionName":"disableLanguageService","ranges":[{"startOffset":8581695,"endOffset":8582493,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectName","ranges":[{"startOffset":8582496,"endOffset":8582547,"count":0}],"isBlockCoverage":false},{"functionName":"removeLocalTypingsFromTypeAcquisition","ranges":[{"startOffset":8582550,"endOffset":8582824,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalFiles","ranges":[{"startOffset":8582827,"endOffset":8583306,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFile","ranges":[{"startOffset":8583309,"endOffset":8583437,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOrConfigFile","ranges":[{"startOffset":8583459,"endOffset":8583643,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8583646,"endOffset":8585365,"count":0}],"isBlockCoverage":false},{"functionName":"detachScriptInfoIfNotRoot","ranges":[{"startOffset":8585368,"endOffset":8585569,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":8585572,"endOffset":8585629,"count":0}],"isBlockCoverage":false},{"functionName":"hasRoots","ranges":[{"startOffset":8585632,"endOffset":8585728,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8585750,"endOffset":8585784,"count":0}],"isBlockCoverage":false},{"functionName":"getRootFiles","ranges":[{"startOffset":8585787,"endOffset":8585995,"count":0}],"isBlockCoverage":false},{"functionName":"getRootFilesMap","ranges":[{"startOffset":8586017,"endOffset":8586070,"count":0}],"isBlockCoverage":false},{"functionName":"getRootScriptInfos","ranges":[{"startOffset":8586073,"endOffset":8586192,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfos","ranges":[{"startOffset":8586195,"endOffset":8586669,"count":0}],"isBlockCoverage":false},{"functionName":"getExcludedFiles","ranges":[{"startOffset":8586672,"endOffset":8586720,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNames","ranges":[{"startOffset":8586723,"endOffset":8587845,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesWithRedirectInfo","ranges":[{"startOffset":8587867,"endOffset":8588146,"count":0}],"isBlockCoverage":false},{"functionName":"hasConfigFile","ranges":[{"startOffset":8588149,"endOffset":8588698,"count":0}],"isBlockCoverage":false},{"functionName":"containsScriptInfo","ranges":[{"startOffset":8588701,"endOffset":8588924,"count":0}],"isBlockCoverage":false},{"functionName":"containsFile","ranges":[{"startOffset":8588927,"endOffset":8589172,"count":0}],"isBlockCoverage":false},{"functionName":"isRoot","ranges":[{"startOffset":8589175,"endOffset":8589328,"count":0}],"isBlockCoverage":false},{"functionName":"addRoot","ranges":[{"startOffset":8589363,"endOffset":8589571,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingFileRoot","ranges":[{"startOffset":8589621,"endOffset":8589781,"count":0}],"isBlockCoverage":false},{"functionName":"removeFile","ranges":[{"startOffset":8589784,"endOffset":8590225,"count":0}],"isBlockCoverage":false},{"functionName":"registerFileUpdate","ranges":[{"startOffset":8590228,"endOffset":8590360,"count":0}],"isBlockCoverage":false},{"functionName":"markFileAsDirty","ranges":[{"startOffset":8590382,"endOffset":8590640,"count":0}],"isBlockCoverage":false},{"functionName":"markAsDirty","ranges":[{"startOffset":8590662,"endOffset":8590769,"count":0}],"isBlockCoverage":false},{"functionName":"markAutoImportProviderAsDirty","ranges":[{"startOffset":8590791,"endOffset":8590992,"count":0}],"isBlockCoverage":false},{"functionName":"onAutoImportProviderSettingsChanged","ranges":[{"startOffset":8591014,"endOffset":8591099,"count":0}],"isBlockCoverage":false},{"functionName":"onPackageJsonChange","ranges":[{"startOffset":8591121,"endOffset":8591229,"count":0}],"isBlockCoverage":false},{"functionName":"onFileAddedOrRemoved","ranges":[{"startOffset":8591251,"endOffset":8591400,"count":0}],"isBlockCoverage":false},{"functionName":"onDiscoveredSymlink","ranges":[{"startOffset":8591422,"endOffset":8591492,"count":0}],"isBlockCoverage":false},{"functionName":"onReleaseOldSourceFile","ranges":[{"startOffset":8591514,"endOffset":8591871,"count":0}],"isBlockCoverage":false},{"functionName":"updateFromProject","ranges":[{"startOffset":8591893,"endOffset":8591950,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8592112,"endOffset":8593599,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueInstallTypingsForProject","ranges":[{"startOffset":8593621,"endOffset":8594497,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypingFiles","ranges":[{"startOffset":8594519,"endOffset":8595311,"count":0}],"isBlockCoverage":false},{"functionName":"closeWatchingTypingLocations","ranges":[{"startOffset":8595314,"endOffset":8595462,"count":0}],"isBlockCoverage":false},{"functionName":"onTypingInstallerWatchInvoke","ranges":[{"startOffset":8595465,"endOffset":8595656,"count":0}],"isBlockCoverage":false},{"functionName":"watchTypingLocations","ranges":[{"startOffset":8595678,"endOffset":8599074,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentProgram","ranges":[{"startOffset":8599096,"endOffset":8599146,"count":0}],"isBlockCoverage":false},{"functionName":"removeExistingTypings","ranges":[{"startOffset":8599149,"endOffset":8599370,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraphWorker","ranges":[{"startOffset":8599373,"endOffset":8605992,"count":0}],"isBlockCoverage":false},{"functionName":"sendPerformanceEvent","ranges":[{"startOffset":8606014,"endOffset":8606122,"count":0}],"isBlockCoverage":false},{"functionName":"detachScriptInfoFromProject","ranges":[{"startOffset":8606125,"endOffset":8606488,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingFileWatcher","ranges":[{"startOffset":8606491,"endOffset":8607664,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchedMissingFile","ranges":[{"startOffset":8607667,"endOffset":8607768,"count":0}],"isBlockCoverage":false},{"functionName":"addGeneratedFileWatch","ranges":[{"startOffset":8607790,"endOffset":8608577,"count":0}],"isBlockCoverage":false},{"functionName":"createGeneratedFileWatcher","ranges":[{"startOffset":8608580,"endOffset":8609084,"count":0}],"isBlockCoverage":false},{"functionName":"isValidGeneratedFileWatcher","ranges":[{"startOffset":8609087,"endOffset":8609211,"count":0}],"isBlockCoverage":false},{"functionName":"clearGeneratedFileWatch","ranges":[{"startOffset":8609214,"endOffset":8609521,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoForNormalizedPath","ranges":[{"startOffset":8609524,"endOffset":8609813,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfo","ranges":[{"startOffset":8609816,"endOffset":8609919,"count":0}],"isBlockCoverage":false},{"functionName":"filesToString","ranges":[{"startOffset":8609922,"endOffset":8610127,"count":0}],"isBlockCoverage":false},{"functionName":"filesToStringWorker","ranges":[{"startOffset":8610130,"endOffset":8610843,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":8610865,"endOffset":8611878,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptions","ranges":[{"startOffset":8611881,"endOffset":8612626,"count":0}],"isBlockCoverage":false},{"functionName":"setWatchOptions","ranges":[{"startOffset":8612648,"endOffset":8612721,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchOptions","ranges":[{"startOffset":8612743,"endOffset":8612796,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeAcquisition","ranges":[{"startOffset":8612799,"endOffset":8612972,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAcquisition","ranges":[{"startOffset":8612975,"endOffset":8613040,"count":0}],"isBlockCoverage":false},{"functionName":"getChangesSinceVersion","ranges":[{"startOffset":8613062,"endOffset":8617151,"count":0}],"isBlockCoverage":false},{"functionName":"removeRoot","ranges":[{"startOffset":8617191,"endOffset":8617254,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceOfProjectReferenceRedirect","ranges":[{"startOffset":8617276,"endOffset":8617414,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalPluginSearchPaths","ranges":[{"startOffset":8617436,"endOffset":8617708,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalPlugins","ranges":[{"startOffset":8617711,"endOffset":8618495,"count":0}],"isBlockCoverage":false},{"functionName":"enablePlugin","ranges":[{"startOffset":8618498,"endOffset":8618631,"count":0}],"isBlockCoverage":false},{"functionName":"enableProxy","ranges":[{"startOffset":8618653,"endOffset":8619867,"count":0}],"isBlockCoverage":false},{"functionName":"onPluginConfigurationChanged","ranges":[{"startOffset":8619889,"endOffset":8620163,"count":0}],"isBlockCoverage":false},{"functionName":"refreshDiagnostics","ranges":[{"startOffset":8620290,"endOffset":8620380,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":8620402,"endOffset":8620622,"count":0}],"isBlockCoverage":false},{"functionName":"getNearestAncestorDirectoryWithPackageJson","ranges":[{"startOffset":8620644,"endOffset":8620793,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsForAutoImport","ranges":[{"startOffset":8620815,"endOffset":8620979,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonCache","ranges":[{"startOffset":8621001,"endOffset":8621077,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedExportInfoMap","ranges":[{"startOffset":8621099,"endOffset":8621223,"count":0}],"isBlockCoverage":false},{"functionName":"clearCachedExportInfoMap","ranges":[{"startOffset":8621245,"endOffset":8621351,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierCache","ranges":[{"startOffset":8621373,"endOffset":8621442,"count":0}],"isBlockCoverage":false},{"functionName":"includePackageJsonAutoImports","ranges":[{"startOffset":8621464,"endOffset":8621794,"count":0}],"isBlockCoverage":false},{"functionName":"getHostForAutoImportProvider","ranges":[{"startOffset":8621816,"endOffset":8622722,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonAutoImportProvider","ranges":[{"startOffset":8622744,"endOffset":8624142,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultProjectForOpenFiles","ranges":[{"startOffset":8624145,"endOffset":8624391,"count":0}],"isBlockCoverage":false},{"functionName":"watchNodeModulesForPackageJsonChanges","ranges":[{"startOffset":8624413,"endOffset":8624555,"count":0}],"isBlockCoverage":false},{"functionName":"getIncompleteCompletionsCache","ranges":[{"startOffset":8624577,"endOffset":8624678,"count":0}],"isBlockCoverage":false},{"functionName":"getNoDtsResolutionProject","ranges":[{"startOffset":8624700,"endOffset":8625212,"count":0}],"isBlockCoverage":false},{"functionName":"runWithTemporaryFileUpdate","ranges":[{"startOffset":8625234,"endOffset":8625977,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsForNoDtsResolutionProject","ranges":[{"startOffset":8625999,"endOffset":8626329,"count":0}],"isBlockCoverage":false},{"functionName":"getUnresolvedImports","ranges":[{"startOffset":8626333,"endOffset":8626971,"count":0}],"isBlockCoverage":false},{"functionName":"extractUnresolvedImportsFromSourceFile","ranges":[{"startOffset":8626972,"endOffset":8627588,"count":0}],"isBlockCoverage":false},{"functionName":"InferredProject2","ranges":[{"startOffset":8627658,"endOffset":8628535,"count":0}],"isBlockCoverage":false},{"functionName":"toggleJsInferredProject","ranges":[{"startOffset":8628538,"endOffset":8628743,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptions","ranges":[{"startOffset":8628746,"endOffset":8629247,"count":0}],"isBlockCoverage":false},{"functionName":"addRoot","ranges":[{"startOffset":8629250,"endOffset":8629746,"count":0}],"isBlockCoverage":false},{"functionName":"removeRoot","ranges":[{"startOffset":8629749,"endOffset":8630146,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8630168,"endOffset":8630213,"count":0}],"isBlockCoverage":false},{"functionName":"isProjectWithSingleRoot","ranges":[{"startOffset":8630216,"endOffset":8630372,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8630375,"endOffset":8630521,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAcquisition","ranges":[{"startOffset":8630524,"endOffset":8630691,"count":0}],"isBlockCoverage":false},{"functionName":"AuxiliaryProject","ranges":[{"startOffset":8630745,"endOffset":8631230,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8631233,"endOffset":8631266,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleInvalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8631269,"endOffset":8631341,"count":0}],"isBlockCoverage":false},{"functionName":"_AutoImportProviderProject","ranges":[{"startOffset":8631451,"endOffset":8632256,"count":0}],"isBlockCoverage":false},{"functionName":"getRootFileNames","ranges":[{"startOffset":8632285,"endOffset":8638506,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":8638535,"endOffset":8639022,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":8639044,"endOffset":8639097,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8639119,"endOffset":8639152,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8639155,"endOffset":8639894,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleInvalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8639916,"endOffset":8639988,"count":0}],"isBlockCoverage":false},{"functionName":"hasRoots","ranges":[{"startOffset":8639991,"endOffset":8640090,"count":0}],"isBlockCoverage":false},{"functionName":"markAsDirty","ranges":[{"startOffset":8640112,"endOffset":8640189,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptFileNames","ranges":[{"startOffset":8640192,"endOffset":8640263,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageService","ranges":[{"startOffset":8640266,"endOffset":8640436,"count":0}],"isBlockCoverage":false},{"functionName":"onAutoImportProviderSettingsChanged","ranges":[{"startOffset":8640458,"endOffset":8640608,"count":0}],"isBlockCoverage":false},{"functionName":"onPackageJsonChange","ranges":[{"startOffset":8640630,"endOffset":8640761,"count":0}],"isBlockCoverage":false},{"functionName":"getHostForAutoImportProvider","ranges":[{"startOffset":8640764,"endOffset":8640954,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectReferences","ranges":[{"startOffset":8640957,"endOffset":8641037,"count":0}],"isBlockCoverage":false},{"functionName":"includePackageJsonAutoImports","ranges":[{"startOffset":8641059,"endOffset":8641120,"count":0}],"isBlockCoverage":false},{"functionName":"getSymlinkCache","ranges":[{"startOffset":8641142,"endOffset":8641212,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionCache","ranges":[{"startOffset":8641234,"endOffset":8641383,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProject2","ranges":[{"startOffset":8641761,"endOffset":8642623,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerHost","ranges":[{"startOffset":8642645,"endOffset":8642702,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerHost","ranges":[{"startOffset":8642724,"endOffset":8642777,"count":0}],"isBlockCoverage":false},{"functionName":"useSourceOfProjectReferenceRedirect","ranges":[{"startOffset":8642799,"endOffset":8642882,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLine","ranges":[{"startOffset":8642904,"endOffset":8643853,"count":0}],"isBlockCoverage":false},{"functionName":"onReleaseParsedCommandLine","ranges":[{"startOffset":8643875,"endOffset":8644034,"count":0}],"isBlockCoverage":false},{"functionName":"releaseParsedConfig","ranges":[{"startOffset":8644037,"endOffset":8644241,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8644482,"endOffset":8645885,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedDirectoryStructureHost","ranges":[{"startOffset":8645907,"endOffset":8645986,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFilePath","ranges":[{"startOffset":8645989,"endOffset":8646066,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectReferences","ranges":[{"startOffset":8646069,"endOffset":8646132,"count":0}],"isBlockCoverage":false},{"functionName":"updateReferences","ranges":[{"startOffset":8646135,"endOffset":8646244,"count":0}],"isBlockCoverage":false},{"functionName":"setPotentialProjectReference","ranges":[{"startOffset":8646266,"endOffset":8646493,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedProjectReferenceToRedirect","ranges":[{"startOffset":8646515,"endOffset":8646693,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":8646715,"endOffset":8646870,"count":0}],"isBlockCoverage":false},{"functionName":"enablePluginsWithOptions","ranges":[{"startOffset":8646892,"endOffset":8647870,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalProjectErrors","ranges":[{"startOffset":8647945,"endOffset":8648063,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectErrors","ranges":[{"startOffset":8648110,"endOffset":8648183,"count":0}],"isBlockCoverage":false},{"functionName":"setProjectErrors","ranges":[{"startOffset":8648186,"endOffset":8648263,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8648266,"endOffset":8648572,"count":0}],"isBlockCoverage":false},{"functionName":"markAsDirty","ranges":[{"startOffset":8648594,"endOffset":8648674,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8648696,"endOffset":8648745,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":8648748,"endOffset":8648854,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorOnNoInputFiles","ranges":[{"startOffset":8648876,"endOffset":8649221,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalProject","ranges":[{"startOffset":8649293,"endOffset":8649988,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8649991,"endOffset":8650121,"count":0}],"isBlockCoverage":false},{"functionName":"getExcludedFiles","ranges":[{"startOffset":8650124,"endOffset":8650179,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProject","ranges":[{"startOffset":8650183,"endOffset":8650273,"count":0}],"isBlockCoverage":false},{"functionName":"isConfiguredProject","ranges":[{"startOffset":8650274,"endOffset":8650368,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalProject","ranges":[{"startOffset":8650369,"endOffset":8650459,"count":0}],"isBlockCoverage":false},{"functionName":"isBackgroundProject","ranges":[{"startOffset":8650460,"endOffset":8650607,"count":0}],"isBlockCoverage":false},{"functionName":"isProjectDeferredClose","ranges":[{"startOffset":8650608,"endOffset":8650718,"count":0}],"isBlockCoverage":false},{"functionName":"prepareConvertersForEnumLikeCompilerOptions","ranges":[{"startOffset":8651511,"endOffset":8651915,"count":2},{"startOffset":8651671,"endOffset":8651898,"count":133},{"startOffset":8651714,"endOffset":8651894,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8651777,"endOffset":8651846,"count":61}],"isBlockCoverage":true},{"functionName":"convertFormatOptions","ranges":[{"startOffset":8653409,"endOffset":8653688,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptions","ranges":[{"startOffset":8653689,"endOffset":8653995,"count":0}],"isBlockCoverage":false},{"functionName":"convertWatchOptions","ranges":[{"startOffset":8653996,"endOffset":8654611,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisition","ranges":[{"startOffset":8654612,"endOffset":8654911,"count":0}],"isBlockCoverage":false},{"functionName":"tryConvertScriptKindName","ranges":[{"startOffset":8654912,"endOffset":8655057,"count":0}],"isBlockCoverage":false},{"functionName":"convertScriptKindName","ranges":[{"startOffset":8655058,"endOffset":8655347,"count":0}],"isBlockCoverage":false},{"functionName":"convertUserPreferences","ranges":[{"startOffset":8655348,"endOffset":8655514,"count":0}],"isBlockCoverage":false},{"functionName":"getFileName","ranges":[{"startOffset":8655561,"endOffset":8655569,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8655588,"endOffset":8656005,"count":0}],"isBlockCoverage":false},{"functionName":"hasMixedContent","ranges":[{"startOffset":8656026,"endOffset":8656159,"count":0}],"isBlockCoverage":false},{"functionName":"getFileName","ranges":[{"startOffset":8656213,"endOffset":8656230,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8656249,"endOffset":8656294,"count":0}],"isBlockCoverage":false},{"functionName":"hasMixedContent","ranges":[{"startOffset":8656335,"endOffset":8656361,"count":0}],"isBlockCoverage":false},{"functionName":"findProjectByName","ranges":[{"startOffset":8656365,"endOffset":8656529,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileNameFromCache","ranges":[{"startOffset":8656888,"endOffset":8657502,"count":0}],"isBlockCoverage":false},{"functionName":"isOpenScriptInfo","ranges":[{"startOffset":8657503,"endOffset":8657610,"count":0}],"isBlockCoverage":false},{"functionName":"isAncestorConfigFileInfo","ranges":[{"startOffset":8657611,"endOffset":8657722,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8657772,"endOffset":8658596,"count":1}],"isBlockCoverage":false},{"functionName":"toConfiguredProjectLoadOptimized","ranges":[{"startOffset":8658632,"endOffset":8658702,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorProjectLoad","ranges":[{"startOffset":8658703,"endOffset":8660377,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReferenceProjectLoad","ranges":[{"startOffset":8660378,"endOffset":8663488,"count":0}],"isBlockCoverage":false},{"functionName":"updateProjectFoundUsingFind","ranges":[{"startOffset":8663489,"endOffset":8664916,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPotentialProjectReference","ranges":[{"startOffset":8664917,"endOffset":8665196,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAnyProjectReferenceKind","ranges":[{"startOffset":8665197,"endOffset":8665526,"count":0}],"isBlockCoverage":false},{"functionName":"callbackRefProject","ranges":[{"startOffset":8665527,"endOffset":8665707,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReferencedProject","ranges":[{"startOffset":8665708,"endOffset":8666092,"count":0}],"isBlockCoverage":false},{"functionName":"getDetailWatchInfo","ranges":[{"startOffset":8666093,"endOffset":8666281,"count":0}],"isBlockCoverage":false},{"functionName":"isScriptInfoWatchedFromNodeModules","ranges":[{"startOffset":8666282,"endOffset":8666391,"count":0}],"isBlockCoverage":false},{"functionName":"updateProjectIfDirty","ranges":[{"startOffset":8666392,"endOffset":8666542,"count":0}],"isBlockCoverage":false},{"functionName":"updateWithTriggerFile","ranges":[{"startOffset":8666543,"endOffset":8667113,"count":0}],"isBlockCoverage":false},{"functionName":"updateConfiguredProject","ranges":[{"startOffset":8667114,"endOffset":8667375,"count":0}],"isBlockCoverage":false},{"functionName":"configFileExistenceInfoForOptimizedLoading","ranges":[{"startOffset":8667376,"endOffset":8668092,"count":0}],"isBlockCoverage":false},{"functionName":"useConfigFileExistenceInfoForOptimizedLoading","ranges":[{"startOffset":8668093,"endOffset":8668370,"count":0}],"isBlockCoverage":false},{"functionName":"configFileExistenceInfoForOptimizedReplay","ranges":[{"startOffset":8668371,"endOffset":8668599,"count":0}],"isBlockCoverage":false},{"functionName":"fileOpenReason","ranges":[{"startOffset":8668600,"endOffset":8668711,"count":0}],"isBlockCoverage":false},{"functionName":"reloadReason","ranges":[{"startOffset":8668712,"endOffset":8668799,"count":0}],"isBlockCoverage":false},{"functionName":"setProjectOptionsUsed","ranges":[{"startOffset":8668800,"endOffset":8668920,"count":0}],"isBlockCoverage":false},{"functionName":"createProjectNameFactoryWithCounter","ranges":[{"startOffset":8668921,"endOffset":8669038,"count":0}],"isBlockCoverage":false},{"functionName":"getHostWatcherMap","ranges":[{"startOffset":8669039,"endOffset":8669163,"count":0}],"isBlockCoverage":false},{"functionName":"getCanUseWatchEvents","ranges":[{"startOffset":8669164,"endOffset":8669302,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactoryHostUsingWatchEvents","ranges":[{"startOffset":8669303,"endOffset":8672556,"count":0}],"isBlockCoverage":false},{"functionName":"_ProjectService","ranges":[{"startOffset":8672605,"endOffset":8679758,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":8679761,"endOffset":8679861,"count":0}],"isBlockCoverage":false},{"functionName":"getExecutingFilePath","ranges":[{"startOffset":8679883,"endOffset":8679988,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":8680010,"endOffset":8680132,"count":0}],"isBlockCoverage":false},{"functionName":"setDocument","ranges":[{"startOffset":8680154,"endOffset":8680312,"count":0}],"isBlockCoverage":false},{"functionName":"getDocument","ranges":[{"startOffset":8680334,"endOffset":8680532,"count":0}],"isBlockCoverage":false},{"functionName":"ensureInferredProjectsUpToDate_TestOnly","ranges":[{"startOffset":8680554,"endOffset":8680645,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsForInferredProjects","ranges":[{"startOffset":8680667,"endOffset":8680764,"count":0}],"isBlockCoverage":false},{"functionName":"onUpdateLanguageServiceStateForProject","ranges":[{"startOffset":8680786,"endOffset":8681069,"count":0}],"isBlockCoverage":false},{"functionName":"loadTypesMap","ranges":[{"startOffset":8681072,"endOffset":8681874,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypingsForProject","ranges":[{"startOffset":8681940,"endOffset":8682482,"count":0}],"isBlockCoverage":false},{"functionName":"watchTypingLocations","ranges":[{"startOffset":8682504,"endOffset":8682662,"count":0}],"isBlockCoverage":false},{"functionName":"delayEnsureProjectForOpenFiles","ranges":[{"startOffset":8682684,"endOffset":8683245,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectGraph","ranges":[{"startOffset":8683248,"endOffset":8683743,"count":0}],"isBlockCoverage":false},{"functionName":"hasPendingProjectUpdate","ranges":[{"startOffset":8683765,"endOffset":8683872,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectsUpdatedInBackgroundEvent","ranges":[{"startOffset":8683894,"endOffset":8684222,"count":0}],"isBlockCoverage":false},{"functionName":"sendLargeFileReferencedEvent","ranges":[{"startOffset":8684244,"endOffset":8684488,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectLoadingStartEvent","ranges":[{"startOffset":8684510,"endOffset":8684788,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectLoadingFinishEvent","ranges":[{"startOffset":8684810,"endOffset":8685112,"count":0}],"isBlockCoverage":false},{"functionName":"sendPerformanceEvent","ranges":[{"startOffset":8685134,"endOffset":8685282,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles","ranges":[{"startOffset":8685304,"endOffset":8685465,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectGraphs","ranges":[{"startOffset":8685468,"endOffset":8685775,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptionsForInferredProjects","ranges":[{"startOffset":8685778,"endOffset":8687772,"count":0}],"isBlockCoverage":false},{"functionName":"findProject","ranges":[{"startOffset":8687775,"endOffset":8688123,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProject","ranges":[{"startOffset":8688145,"endOffset":8688288,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnabledProject","ranges":[{"startOffset":8688310,"endOffset":8688484,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultProjectForFile","ranges":[{"startOffset":8688487,"endOffset":8688658,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDefaultProjectForFile","ranges":[{"startOffset":8688680,"endOffset":8688964,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDefaultProjectForEnsuringConfiguredProjectForFile","ranges":[{"startOffset":8689143,"endOffset":8689849,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDefaultProjectForFile","ranges":[{"startOffset":8689871,"endOffset":8690081,"count":0}],"isBlockCoverage":false},{"functionName":"doEnsureDefaultProjectForFile","ranges":[{"startOffset":8690084,"endOffset":8690530,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoEnsuringProjectsUptoDate","ranges":[{"startOffset":8690533,"endOffset":8690689,"count":0}],"isBlockCoverage":false},{"functionName":"ensureProjectStructuresUptoDate","ranges":[{"startOffset":8691010,"endOffset":8691473,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeOptions","ranges":[{"startOffset":8691476,"endOffset":8691661,"count":0}],"isBlockCoverage":false},{"functionName":"getPreferences","ranges":[{"startOffset":8691664,"endOffset":8691838,"count":0}],"isBlockCoverage":false},{"functionName":"getHostFormatCodeOptions","ranges":[{"startOffset":8691841,"endOffset":8691926,"count":0}],"isBlockCoverage":false},{"functionName":"getHostPreferences","ranges":[{"startOffset":8691929,"endOffset":8692002,"count":0}],"isBlockCoverage":false},{"functionName":"onSourceFileChanged","ranges":[{"startOffset":8692005,"endOffset":8692516,"count":0}],"isBlockCoverage":false},{"functionName":"handleSourceMapProjects","ranges":[{"startOffset":8692519,"endOffset":8693114,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateSourceInfoProjects","ranges":[{"startOffset":8693117,"endOffset":8693287,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectsOfScriptInfoPath","ranges":[{"startOffset":8693290,"endOffset":8693536,"count":0}],"isBlockCoverage":false},{"functionName":"handleDeletedFile","ranges":[{"startOffset":8693539,"endOffset":8693971,"count":0}],"isBlockCoverage":false},{"functionName":"watchWildcardDirectory","ranges":[{"startOffset":8694072,"endOffset":8695019,"count":0}],"isBlockCoverage":false},{"functionName":"onWildCardDirectoryWatcherInvoke","ranges":[{"startOffset":8695022,"endOffset":8698476,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectsFromParsedConfigOnConfigFileChange","ranges":[{"startOffset":8698479,"endOffset":8700734,"count":0}],"isBlockCoverage":false},{"functionName":"onConfigFileChanged","ranges":[{"startOffset":8700737,"endOffset":8702383,"count":0}],"isBlockCoverage":false},{"functionName":"removeProject","ranges":[{"startOffset":8702386,"endOffset":8704013,"count":0}],"isBlockCoverage":false},{"functionName":"assignOrphanScriptInfoToInferredProject","ranges":[{"startOffset":8704035,"endOffset":8705603,"count":0}],"isBlockCoverage":false},{"functionName":"assignOrphanScriptInfosToInferredProject","ranges":[{"startOffset":8705606,"endOffset":8705884,"count":0}],"isBlockCoverage":false},{"functionName":"closeOpenFile","ranges":[{"startOffset":8706032,"endOffset":8707998,"count":0}],"isBlockCoverage":false},{"functionName":"deleteScriptInfo","ranges":[{"startOffset":8708001,"endOffset":8708409,"count":0}],"isBlockCoverage":false},{"functionName":"configFileExists","ranges":[{"startOffset":8708412,"endOffset":8709272,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigFileWatcherForParsedConfig","ranges":[{"startOffset":8709275,"endOffset":8710218,"count":0}],"isBlockCoverage":false},{"functionName":"ensureConfigFileWatcherForProject","ranges":[{"startOffset":8710221,"endOffset":8710472,"count":0}],"isBlockCoverage":false},{"functionName":"releaseParsedConfig","ranges":[{"startOffset":8710494,"endOffset":8711740,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatchingConfigFilesForScriptInfo","ranges":[{"startOffset":8711921,"endOffset":8713397,"count":0}],"isBlockCoverage":false},{"functionName":"startWatchingConfigFilesForInferredProjectRoot","ranges":[{"startOffset":8713512,"endOffset":8714907,"count":0}],"isBlockCoverage":false},{"functionName":"forEachConfigFileLocation","ranges":[{"startOffset":8715289,"endOffset":8717232,"count":0}],"isBlockCoverage":false},{"functionName":"findDefaultConfiguredProject","ranges":[{"startOffset":8717254,"endOffset":8717440,"count":0}],"isBlockCoverage":false},{"functionName":"findDefaultConfiguredProjectWorker","ranges":[{"startOffset":8717462,"endOffset":8717641,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileNameForFileFromCache","ranges":[{"startOffset":8717726,"endOffset":8718052,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigFileNameForFileInCache","ranges":[{"startOffset":8718138,"endOffset":8718791,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileNameForFile","ranges":[{"startOffset":8719395,"endOffset":8720063,"count":0}],"isBlockCoverage":false},{"functionName":"printProjects","ranges":[{"startOffset":8720066,"endOffset":8720753,"count":0}],"isBlockCoverage":false},{"functionName":"findConfiguredProjectByProjectName","ranges":[{"startOffset":8720775,"endOffset":8721155,"count":0}],"isBlockCoverage":false},{"functionName":"getConfiguredProjectByCanonicalConfigFilePath","ranges":[{"startOffset":8721158,"endOffset":8721299,"count":0}],"isBlockCoverage":false},{"functionName":"findExternalProjectByProjectName","ranges":[{"startOffset":8721302,"endOffset":8721427,"count":0}],"isBlockCoverage":false},{"functionName":"getFilenameForExceededTotalSizeLimitForNonTsFiles","ranges":[{"startOffset":8721549,"endOffset":8722773,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalProject","ranges":[{"startOffset":8722776,"endOffset":8723819,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectTelemetry","ranges":[{"startOffset":8723841,"endOffset":8725725,"count":0}],"isBlockCoverage":false},{"functionName":"addFilesToNonInferredProject","ranges":[{"startOffset":8725728,"endOffset":8725959,"count":0}],"isBlockCoverage":false},{"functionName":"createConfiguredProject","ranges":[{"startOffset":8725981,"endOffset":8727378,"count":0}],"isBlockCoverage":false},{"functionName":"loadConfiguredProject","ranges":[{"startOffset":8727475,"endOffset":8729946,"count":0}],"isBlockCoverage":false},{"functionName":"ensureParsedConfigUptoDate","ranges":[{"startOffset":8729968,"endOffset":8734434,"count":0}],"isBlockCoverage":false},{"functionName":"watchWildcards","ranges":[{"startOffset":8734456,"endOffset":8735289,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatchingWildCards","ranges":[{"startOffset":8735311,"endOffset":8736084,"count":0}],"isBlockCoverage":false},{"functionName":"updateNonInferredProjectFiles","ranges":[{"startOffset":8736087,"endOffset":8738684,"count":0}],"isBlockCoverage":false},{"functionName":"updateRootAndOptionsOfNonInferredProject","ranges":[{"startOffset":8738687,"endOffset":8739122,"count":0}],"isBlockCoverage":false},{"functionName":"reloadFileNamesOfConfiguredProject","ranges":[{"startOffset":8739236,"endOffset":8739732,"count":0}],"isBlockCoverage":false},{"functionName":"reloadFileNamesOfParsedConfig","ranges":[{"startOffset":8739735,"endOffset":8740422,"count":0}],"isBlockCoverage":false},{"functionName":"setFileNamesOfAutoImportProviderOrAuxillaryProject","ranges":[{"startOffset":8740444,"endOffset":8740604,"count":0}],"isBlockCoverage":false},{"functionName":"reloadConfiguredProjectOptimized","ranges":[{"startOffset":8740626,"endOffset":8740914,"count":0}],"isBlockCoverage":false},{"functionName":"reloadConfiguredProjectClearingSemanticCache","ranges":[{"startOffset":8740936,"endOffset":8741264,"count":0}],"isBlockCoverage":false},{"functionName":"setProjectForReload","ranges":[{"startOffset":8741267,"endOffset":8741506,"count":0}],"isBlockCoverage":false},{"functionName":"reloadConfiguredProject","ranges":[{"startOffset":8741639,"endOffset":8741983,"count":0}],"isBlockCoverage":false},{"functionName":"clearSemanticCache","ranges":[{"startOffset":8741986,"endOffset":8742265,"count":0}],"isBlockCoverage":false},{"functionName":"sendConfigFileDiagEvent","ranges":[{"startOffset":8742287,"endOffset":8742962,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateInferredProjectForProjectRootPathIfEnabled","ranges":[{"startOffset":8742965,"endOffset":8744069,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateSingleInferredProjectIfEnabled","ranges":[{"startOffset":8744072,"endOffset":8744494,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateSingleInferredWithoutProjectRoot","ranges":[{"startOffset":8744497,"endOffset":8745138,"count":0}],"isBlockCoverage":false},{"functionName":"createInferredProject","ranges":[{"startOffset":8745141,"endOffset":8746474,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoNotOpenedByClient","ranges":[{"startOffset":8746496,"endOffset":8746896,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfo","ranges":[{"startOffset":8746899,"endOffset":8747022,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoOrConfig","ranges":[{"startOffset":8747044,"endOffset":8747393,"count":0}],"isBlockCoverage":false},{"functionName":"logErrorForScriptInfoNotFound","ranges":[{"startOffset":8747415,"endOffset":8747838,"count":0}],"isBlockCoverage":false},{"functionName":"getSymlinkedProjects","ranges":[{"startOffset":8748012,"endOffset":8749003,"count":0}],"isBlockCoverage":false},{"functionName":"watchClosedScriptInfo","ranges":[{"startOffset":8749006,"endOffset":8749851,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeModulesWatcher","ranges":[{"startOffset":8749854,"endOffset":8751733,"count":0}],"isBlockCoverage":false},{"functionName":"watchPackageJsonsInNodeModules","ranges":[{"startOffset":8751755,"endOffset":8752405,"count":0}],"isBlockCoverage":false},{"functionName":"watchClosedScriptInfoInNodeModules","ranges":[{"startOffset":8752408,"endOffset":8752826,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":8752829,"endOffset":8752948,"count":0}],"isBlockCoverage":false},{"functionName":"refreshScriptInfo","ranges":[{"startOffset":8752951,"endOffset":8753207,"count":0}],"isBlockCoverage":false},{"functionName":"refreshScriptInfosInDirectory","ranges":[{"startOffset":8753210,"endOffset":8753474,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatchingScriptInfo","ranges":[{"startOffset":8753477,"endOffset":8753610,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoNotOpenedByClientForNormalizedPath","ranges":[{"startOffset":8753613,"endOffset":8754290,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoForNormalizedPath","ranges":[{"startOffset":8754293,"endOffset":8754681,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoWorker","ranges":[{"startOffset":8754684,"endOffset":8757574,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoForNormalizedPath","ranges":[{"startOffset":8757746,"endOffset":8758021,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoForPath","ranges":[{"startOffset":8758024,"endOffset":8758176,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":8758198,"endOffset":8761550,"count":0}],"isBlockCoverage":false},{"functionName":"addSourceInfoToSourceMap","ranges":[{"startOffset":8761553,"endOffset":8761984,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingSourceMapFile","ranges":[{"startOffset":8761987,"endOffset":8762790,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileLike","ranges":[{"startOffset":8762812,"endOffset":8764418,"count":0}],"isBlockCoverage":false},{"functionName":"setPerformanceEventHandler","ranges":[{"startOffset":8764440,"endOffset":8764557,"count":0}],"isBlockCoverage":false},{"functionName":"setHostConfiguration","ranges":[{"startOffset":8764560,"endOffset":8767318,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchOptions","ranges":[{"startOffset":8767340,"endOffset":8767484,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchOptionsFromProjectWatchOptions","ranges":[{"startOffset":8767487,"endOffset":8767918,"count":0}],"isBlockCoverage":false},{"functionName":"closeLog","ranges":[{"startOffset":8767921,"endOffset":8767962,"count":0}],"isBlockCoverage":false},{"functionName":"sendSourceFileChange","ranges":[{"startOffset":8767965,"endOffset":8768677,"count":0}],"isBlockCoverage":false},{"functionName":"reloadProjects","ranges":[{"startOffset":8768859,"endOffset":8771331,"count":0}],"isBlockCoverage":false},{"functionName":"removeRootOfInferredProjectIfNowPartOfOtherProject","ranges":[{"startOffset":8771429,"endOffset":8771918,"count":0}],"isBlockCoverage":false},{"functionName":"ensureProjectForOpenFiles","ranges":[{"startOffset":8772281,"endOffset":8773301,"count":0}],"isBlockCoverage":false},{"functionName":"openClientFile","ranges":[{"startOffset":8773521,"endOffset":8773827,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalLocationEnsuringConfiguredProject","ranges":[{"startOffset":8773849,"endOffset":8776505,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":8776527,"endOffset":8776647,"count":0}],"isBlockCoverage":false},{"functionName":"findExternalProjectContainingOpenScriptInfo","ranges":[{"startOffset":8776650,"endOffset":8776842,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateOpenScriptInfo","ranges":[{"startOffset":8776845,"endOffset":8777370,"count":0}],"isBlockCoverage":false},{"functionName":"assignProjectToOpenedScriptInfo","ranges":[{"startOffset":8777373,"endOffset":8778735,"count":0}],"isBlockCoverage":false},{"functionName":"findCreateOrReloadConfiguredProject","ranges":[{"startOffset":8779182,"endOffset":8781331,"count":0}],"isBlockCoverage":false},{"functionName":"tryFindDefaultConfiguredProjectForOpenScriptInfo","ranges":[{"startOffset":8781555,"endOffset":8782400,"count":0}],"isBlockCoverage":false},{"functionName":"isMatchedByConfig","ranges":[{"startOffset":8782403,"endOffset":8783703,"count":0}],"isBlockCoverage":false},{"functionName":"tryFindDefaultConfiguredProjectForOpenScriptInfoOrClosedFileInfo","ranges":[{"startOffset":8783706,"endOffset":8788437,"count":0}],"isBlockCoverage":false},{"functionName":"tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo","ranges":[{"startOffset":8788440,"endOffset":8789401,"count":0}],"isBlockCoverage":false},{"functionName":"loadAncestorProjectTree","ranges":[{"startOffset":8789423,"endOffset":8790065,"count":0}],"isBlockCoverage":false},{"functionName":"ensureProjectChildren","ranges":[{"startOffset":8790068,"endOffset":8791159,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupConfiguredProjects","ranges":[{"startOffset":8791162,"endOffset":8791531,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupProjectsAndScriptInfos","ranges":[{"startOffset":8791534,"endOffset":8792057,"count":0}],"isBlockCoverage":false},{"functionName":"tryInvokeWildCardDirectories","ranges":[{"startOffset":8792060,"endOffset":8793081,"count":0}],"isBlockCoverage":false},{"functionName":"openClientFileWithNormalizedPath","ranges":[{"startOffset":8793084,"endOffset":8793964,"count":0}],"isBlockCoverage":false},{"functionName":"getOrphanConfiguredProjects","ranges":[{"startOffset":8793986,"endOffset":8797287,"count":0}],"isBlockCoverage":false},{"functionName":"removeOrphanScriptInfos","ranges":[{"startOffset":8797290,"endOffset":8799265,"count":0}],"isBlockCoverage":false},{"functionName":"telemetryOnOpenFile","ranges":[{"startOffset":8799268,"endOffset":8799847,"count":0}],"isBlockCoverage":false},{"functionName":"closeClientFile","ranges":[{"startOffset":8799850,"endOffset":8800243,"count":0}],"isBlockCoverage":false},{"functionName":"collectChanges","ranges":[{"startOffset":8800246,"endOffset":8800632,"count":0}],"isBlockCoverage":false},{"functionName":"synchronizeProjectList","ranges":[{"startOffset":8800654,"endOffset":8801163,"count":0}],"isBlockCoverage":false},{"functionName":"applyChangesInOpenFiles","ranges":[{"startOffset":8801185,"endOffset":8803754,"count":0}],"isBlockCoverage":false},{"functionName":"applyChangesToFile","ranges":[{"startOffset":8803776,"endOffset":8803968,"count":0}],"isBlockCoverage":false},{"functionName":"closeExternalProject","ranges":[{"startOffset":8804034,"endOffset":8804604,"count":0}],"isBlockCoverage":false},{"functionName":"openExternalProjects","ranges":[{"startOffset":8804607,"endOffset":8805294,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFilenameForRegex","ranges":[{"startOffset":8805304,"endOffset":8805406,"count":0}],"isBlockCoverage":false},{"functionName":"resetSafeList","ranges":[{"startOffset":8805409,"endOffset":8805471,"count":0}],"isBlockCoverage":false},{"functionName":"applySafeList","ranges":[{"startOffset":8805474,"endOffset":8805782,"count":0}],"isBlockCoverage":false},{"functionName":"applySafeListWorker","ranges":[{"startOffset":8805785,"endOffset":8809365,"count":0}],"isBlockCoverage":false},{"functionName":"openExternalProject","ranges":[{"startOffset":8809431,"endOffset":8812828,"count":0}],"isBlockCoverage":false},{"functionName":"hasDeferredExtension","ranges":[{"startOffset":8812831,"endOffset":8813041,"count":0}],"isBlockCoverage":false},{"functionName":"requestEnablePlugin","ranges":[{"startOffset":8813216,"endOffset":8814638,"count":0}],"isBlockCoverage":false},{"functionName":"endEnablePlugin","ranges":[{"startOffset":8814748,"endOffset":8815398,"count":0}],"isBlockCoverage":false},{"functionName":"hasNewPluginEnablementRequests","ranges":[{"startOffset":8815420,"endOffset":8815502,"count":0}],"isBlockCoverage":false},{"functionName":"hasPendingPluginEnablements","ranges":[{"startOffset":8815524,"endOffset":8815609,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPendingPlugins","ranges":[{"startOffset":8815711,"endOffset":8815851,"count":0}],"isBlockCoverage":false},{"functionName":"enableRequestedPlugins","ranges":[{"startOffset":8815961,"endOffset":8816085,"count":0}],"isBlockCoverage":false},{"functionName":"enableRequestedPluginsAsync","ranges":[{"startOffset":8816088,"endOffset":8816535,"count":0}],"isBlockCoverage":false},{"functionName":"enableRequestedPluginsWorker","ranges":[{"startOffset":8816538,"endOffset":8817419,"count":0}],"isBlockCoverage":false},{"functionName":"configurePlugin","ranges":[{"startOffset":8817422,"endOffset":8817753,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":8817775,"endOffset":8818863,"count":0}],"isBlockCoverage":false},{"functionName":"getNearestAncestorDirectoryWithPackageJson","ranges":[{"startOffset":8818885,"endOffset":8819415,"count":0}],"isBlockCoverage":false},{"functionName":"watchPackageJsonFile","ranges":[{"startOffset":8819418,"endOffset":8820854,"count":0}],"isBlockCoverage":false},{"functionName":"onPackageJsonChange","ranges":[{"startOffset":8820857,"endOffset":8821040,"count":0}],"isBlockCoverage":false},{"functionName":"includePackageJsonAutoImports","ranges":[{"startOffset":8821062,"endOffset":8821319,"count":0}],"isBlockCoverage":false},{"functionName":"getIncompleteCompletionsCache","ranges":[{"startOffset":8821341,"endOffset":8821496,"count":0}],"isBlockCoverage":false},{"functionName":"createIncompleteCompletionsCache","ranges":[{"startOffset":8821654,"endOffset":8821856,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigFile","ranges":[{"startOffset":8821857,"endOffset":8821923,"count":0}],"isBlockCoverage":false},{"functionName":"printProjectWithoutFileNames","ranges":[{"startOffset":8821924,"endOffset":8822120,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierCache","ranges":[{"startOffset":8822160,"endOffset":8825924,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonCache","ranges":[{"startOffset":8825960,"endOffset":8827827,"count":0}],"isBlockCoverage":false},{"functionName":"isCancellationRequested","ranges":[{"startOffset":8827911,"endOffset":8827922,"count":0}],"isBlockCoverage":false},{"functionName":"setRequest","ranges":[{"startOffset":8827938,"endOffset":8827950,"count":0}],"isBlockCoverage":false},{"functionName":"resetRequest","ranges":[{"startOffset":8827968,"endOffset":8827980,"count":0}],"isBlockCoverage":false},{"functionName":"hrTimeToMilliseconds","ranges":[{"startOffset":8827984,"endOffset":8828127,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationFileInJSOnlyNonConfiguredProject","ranges":[{"startOffset":8828128,"endOffset":8828440,"count":0}],"isBlockCoverage":false},{"functionName":"dtsChangeCanAffectEmit","ranges":[{"startOffset":8828441,"endOffset":8828595,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiag","ranges":[{"startOffset":8828596,"endOffset":8829217,"count":0}],"isBlockCoverage":false},{"functionName":"formatRelatedInformation","ranges":[{"startOffset":8829218,"endOffset":8829847,"count":0}],"isBlockCoverage":false},{"functionName":"convertToLocation","ranges":[{"startOffset":8829848,"endOffset":8829982,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticToProtocol","ranges":[{"startOffset":8829983,"endOffset":8830787,"count":0}],"isBlockCoverage":false},{"functionName":"allEditsBeforePos","ranges":[{"startOffset":8830788,"endOffset":8830892,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage2","ranges":[{"startOffset":8830926,"endOffset":8831270,"count":0}],"isBlockCoverage":false},{"functionName":"MultistepOperation","ranges":[{"startOffset":8831306,"endOffset":8831378,"count":0}],"isBlockCoverage":false},{"functionName":"startNew","ranges":[{"startOffset":8831381,"endOffset":8831519,"count":0}],"isBlockCoverage":false},{"functionName":"complete","ranges":[{"startOffset":8831522,"endOffset":8831803,"count":0}],"isBlockCoverage":false},{"functionName":"immediate","ranges":[{"startOffset":8831806,"endOffset":8832254,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":8832257,"endOffset":8832741,"count":0}],"isBlockCoverage":false},{"functionName":"executeAction","ranges":[{"startOffset":8832744,"endOffset":8833910,"count":0}],"isBlockCoverage":false},{"functionName":"setTimerHandle","ranges":[{"startOffset":8833913,"endOffset":8834100,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediateId","ranges":[{"startOffset":8834103,"endOffset":8834292,"count":0}],"isBlockCoverage":false},{"functionName":"hasPendingWork","ranges":[{"startOffset":8834295,"endOffset":8834370,"count":0}],"isBlockCoverage":false},{"functionName":"toEvent","ranges":[{"startOffset":8834374,"endOffset":8834489,"count":0}],"isBlockCoverage":false},{"functionName":"combineProjectOutput","ranges":[{"startOffset":8834490,"endOffset":8834988,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentSpanSet","ranges":[{"startOffset":8834989,"endOffset":8835194,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocationsWorker","ranges":[{"startOffset":8835195,"endOffset":8836279,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionLocation","ranges":[{"startOffset":8836280,"endOffset":8836719,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesWorker","ranges":[{"startOffset":8836720,"endOffset":8840540,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProjectInProjects","ranges":[{"startOffset":8840541,"endOffset":8840943,"count":0}],"isBlockCoverage":false},{"functionName":"getPerProjectReferences","ranges":[{"startOffset":8840944,"endOffset":8844791,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinitionInProjectIfFileInProject","ranges":[{"startOffset":8844792,"endOffset":8845019,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinitionInProject","ranges":[{"startOffset":8845020,"endOffset":8845584,"count":0}],"isBlockCoverage":false},{"functionName":"isLocationProjectReferenceRedirect","ranges":[{"startOffset":8845585,"endOffset":8845971,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectKey","ranges":[{"startOffset":8845972,"endOffset":8846107,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpanLocation","ranges":[{"startOffset":8846108,"endOffset":8846209,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocationForProject","ranges":[{"startOffset":8846210,"endOffset":8846379,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpanForProject","ranges":[{"startOffset":8846380,"endOffset":8846565,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpanForProject","ranges":[{"startOffset":8846566,"endOffset":8846749,"count":0}],"isBlockCoverage":false},{"functionName":"_Session","ranges":[{"startOffset":8849850,"endOffset":8878046,"count":0}],"isBlockCoverage":false},{"functionName":"sendRequestCompletedEvent","ranges":[{"startOffset":8878049,"endOffset":8878292,"count":0}],"isBlockCoverage":false},{"functionName":"addPerformanceData","ranges":[{"startOffset":8878295,"endOffset":8878477,"count":0}],"isBlockCoverage":false},{"functionName":"addDiagnosticsPerformanceData","ranges":[{"startOffset":8878480,"endOffset":8878963,"count":0}],"isBlockCoverage":false},{"functionName":"performanceEventHandler","ranges":[{"startOffset":8878966,"endOffset":8879312,"count":0}],"isBlockCoverage":false},{"functionName":"defaultEventHandler","ranges":[{"startOffset":8879315,"endOffset":8880928,"count":0}],"isBlockCoverage":false},{"functionName":"projectsUpdatedInBackgroundEvent","ranges":[{"startOffset":8880931,"endOffset":8881531,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":8881534,"endOffset":8881593,"count":0}],"isBlockCoverage":false},{"functionName":"logErrorWorker","ranges":[{"startOffset":8881596,"endOffset":8883084,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":8883087,"endOffset":8883366,"count":0}],"isBlockCoverage":false},{"functionName":"writeMessage","ranges":[{"startOffset":8883369,"endOffset":8883512,"count":0}],"isBlockCoverage":false},{"functionName":"event","ranges":[{"startOffset":8883515,"endOffset":8883584,"count":0}],"isBlockCoverage":false},{"functionName":"doOutput","ranges":[{"startOffset":8883606,"endOffset":8884520,"count":0}],"isBlockCoverage":false},{"functionName":"semanticCheck","ranges":[{"startOffset":8884523,"endOffset":8885082,"count":0}],"isBlockCoverage":false},{"functionName":"syntacticCheck","ranges":[{"startOffset":8885085,"endOffset":8885519,"count":0}],"isBlockCoverage":false},{"functionName":"suggestionCheck","ranges":[{"startOffset":8885522,"endOffset":8885963,"count":0}],"isBlockCoverage":false},{"functionName":"regionSemanticCheck","ranges":[{"startOffset":8885966,"endOffset":8886676,"count":0}],"isBlockCoverage":false},{"functionName":"shouldDoRegionCheck","ranges":[{"startOffset":8886836,"endOffset":8887105,"count":0}],"isBlockCoverage":false},{"functionName":"sendDiagnosticsEvent","ranges":[{"startOffset":8887108,"endOffset":8887741,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorCheck","ranges":[{"startOffset":8887836,"endOffset":8890123,"count":0}],"isBlockCoverage":false},{"functionName":"cleanProjects","ranges":[{"startOffset":8890126,"endOffset":8890419,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":8890422,"endOffset":8890799,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":8890802,"endOffset":8891020,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":8891023,"endOffset":8891322,"count":0}],"isBlockCoverage":false},{"functionName":"getProject","ranges":[{"startOffset":8891325,"endOffset":8891457,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileAndProject","ranges":[{"startOffset":8891460,"endOffset":8891708,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileDiagnostics","ranges":[{"startOffset":8891711,"endOffset":8892397,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnosticsWithLinePositionFromDiagnosticFile","ranges":[{"startOffset":8892400,"endOffset":8893204,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiagnostics","ranges":[{"startOffset":8893207,"endOffset":8893536,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnosticsWithLinePosition","ranges":[{"startOffset":8893539,"endOffset":8894261,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWorker","ranges":[{"startOffset":8894264,"endOffset":8894791,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinition","ranges":[{"startOffset":8894794,"endOffset":8895231,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinitionInfoLocations","ranges":[{"startOffset":8895234,"endOffset":8895748,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAndBoundSpan","ranges":[{"startOffset":8895751,"endOffset":8896769,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceDefinition","ranges":[{"startOffset":8896772,"endOffset":8904478,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitOutput","ranges":[{"startOffset":8904481,"endOffset":8905088,"count":0}],"isBlockCoverage":false},{"functionName":"mapJSDocTagInfo","ranges":[{"startOffset":8905091,"endOffset":8905389,"count":0}],"isBlockCoverage":false},{"functionName":"mapDisplayParts","ranges":[{"startOffset":8905392,"endOffset":8905661,"count":0}],"isBlockCoverage":false},{"functionName":"mapSignatureHelpItems","ranges":[{"startOffset":8905664,"endOffset":8906039,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinitionInfo","ranges":[{"startOffset":8906042,"endOffset":8906268,"count":0}],"isBlockCoverage":false},{"functionName":"mapToOriginalLocation","ranges":[{"startOffset":8906810,"endOffset":8907295,"count":0}],"isBlockCoverage":false},{"functionName":"toFileSpan","ranges":[{"startOffset":8907298,"endOffset":8907698,"count":0}],"isBlockCoverage":false},{"functionName":"toFileSpanWithContext","ranges":[{"startOffset":8907701,"endOffset":8908024,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeDefinition","ranges":[{"startOffset":8908027,"endOffset":8908385,"count":0}],"isBlockCoverage":false},{"functionName":"mapImplementationLocations","ranges":[{"startOffset":8908388,"endOffset":8908718,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementation","ranges":[{"startOffset":8908721,"endOffset":8909260,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticDiagnosticsSync","ranges":[{"startOffset":8909263,"endOffset":8909628,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticDiagnosticsSync","ranges":[{"startOffset":8909631,"endOffset":8910095,"count":0}],"isBlockCoverage":false},{"functionName":"getSuggestionDiagnosticsSync","ranges":[{"startOffset":8910098,"endOffset":8910464,"count":0}],"isBlockCoverage":false},{"functionName":"getJsxClosingTag","ranges":[{"startOffset":8910467,"endOffset":8910804,"count":0}],"isBlockCoverage":false},{"functionName":"getLinkedEditingRange","ranges":[{"startOffset":8910807,"endOffset":8911312,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentHighlights","ranges":[{"startOffset":8911315,"endOffset":8912078,"count":0}],"isBlockCoverage":false},{"functionName":"provideInlayHints","ranges":[{"startOffset":8912081,"endOffset":8913190,"count":0}],"isBlockCoverage":false},{"functionName":"mapCode","ranges":[{"startOffset":8913193,"endOffset":8914078,"count":0}],"isBlockCoverage":false},{"functionName":"getCopilotRelatedInfo","ranges":[{"startOffset":8914081,"endOffset":8914153,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptionsForInferredProjects","ranges":[{"startOffset":8914156,"endOffset":8914304,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectInfo","ranges":[{"startOffset":8914307,"endOffset":8914538,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectInfoWorker","ranges":[{"startOffset":8914541,"endOffset":8915262,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultConfiguredProjectInfo","ranges":[{"startOffset":8915265,"endOffset":8916342,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfo","ranges":[{"startOffset":8916345,"endOffset":8916622,"count":0}],"isBlockCoverage":false},{"functionName":"getProjects","ranges":[{"startOffset":8916625,"endOffset":8917944,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultProject","ranges":[{"startOffset":8917947,"endOffset":8918300,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocations","ranges":[{"startOffset":8918303,"endOffset":8919274,"count":0}],"isBlockCoverage":false},{"functionName":"mapRenameInfo","ranges":[{"startOffset":8919277,"endOffset":8919667,"count":0}],"isBlockCoverage":false},{"functionName":"toSpanGroups","ranges":[{"startOffset":8919670,"endOffset":8920267,"count":0}],"isBlockCoverage":false},{"functionName":"getReferences","ranges":[{"startOffset":8920270,"endOffset":8921650,"count":0}],"isBlockCoverage":false},{"functionName":"getFileReferences","ranges":[{"startOffset":8921653,"endOffset":8923036,"count":0}],"isBlockCoverage":false},{"functionName":"openClientFile","ranges":[{"startOffset":8923223,"endOffset":8923474,"count":0}],"isBlockCoverage":false},{"functionName":"getPosition","ranges":[{"startOffset":8923477,"endOffset":8923623,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionInFile","ranges":[{"startOffset":8923626,"endOffset":8923789,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndProject","ranges":[{"startOffset":8923792,"endOffset":8923895,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndLanguageServiceForSyntacticOperation","ranges":[{"startOffset":8923898,"endOffset":8924152,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndProjectWorker","ranges":[{"startOffset":8924155,"endOffset":8924415,"count":0}],"isBlockCoverage":false},{"functionName":"getOutliningSpans","ranges":[{"startOffset":8924418,"endOffset":8925032,"count":0}],"isBlockCoverage":false},{"functionName":"getTodoComments","ranges":[{"startOffset":8925035,"endOffset":8925203,"count":0}],"isBlockCoverage":false},{"functionName":"getDocCommentTemplate","ranges":[{"startOffset":8925206,"endOffset":8925525,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfEnclosingComment","ranges":[{"startOffset":8925528,"endOffset":8925850,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentation","ranges":[{"startOffset":8925853,"endOffset":8926263,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakpointStatement","ranges":[{"startOffset":8926266,"endOffset":8926531,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrDottedNameSpan","ranges":[{"startOffset":8926534,"endOffset":8926801,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBraceCompletion","ranges":[{"startOffset":8926804,"endOffset":8927102,"count":0}],"isBlockCoverage":false},{"functionName":"getQuickInfoWorker","ranges":[{"startOffset":8927105,"endOffset":8928369,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForRange","ranges":[{"startOffset":8928372,"endOffset":8929012,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForRangeFull","ranges":[{"startOffset":8929015,"endOffset":8929358,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForDocumentFull","ranges":[{"startOffset":8929361,"endOffset":8929677,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsAfterKeystrokeFull","ranges":[{"startOffset":8929680,"endOffset":8930027,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsAfterKeystroke","ranges":[{"startOffset":8930030,"endOffset":8931849,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletions","ranges":[{"startOffset":8931852,"endOffset":8933565,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDetails","ranges":[{"startOffset":8933568,"endOffset":8934861,"count":0}],"isBlockCoverage":false},{"functionName":"getCompileOnSaveAffectedFileList","ranges":[{"startOffset":8934864,"endOffset":8935934,"count":0}],"isBlockCoverage":false},{"functionName":"emitFile","ranges":[{"startOffset":8935937,"endOffset":8936723,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItems","ranges":[{"startOffset":8936726,"endOffset":8937857,"count":0}],"isBlockCoverage":false},{"functionName":"toPendingErrorCheck","ranges":[{"startOffset":8937860,"endOffset":8938086,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnostics","ranges":[{"startOffset":8938089,"endOffset":8938282,"count":0}],"isBlockCoverage":false},{"functionName":"change","ranges":[{"startOffset":8938285,"endOffset":8938891,"count":0}],"isBlockCoverage":false},{"functionName":"reload","ranges":[{"startOffset":8938894,"endOffset":8939212,"count":0}],"isBlockCoverage":false},{"functionName":"saveToTmp","ranges":[{"startOffset":8939215,"endOffset":8939389,"count":0}],"isBlockCoverage":false},{"functionName":"closeClientFile","ranges":[{"startOffset":8939392,"endOffset":8939553,"count":0}],"isBlockCoverage":false},{"functionName":"mapLocationNavigationBarItems","ranges":[{"startOffset":8939556,"endOffset":8939927,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationBarItems","ranges":[{"startOffset":8939930,"endOffset":8940298,"count":0}],"isBlockCoverage":false},{"functionName":"toLocationNavigationTree","ranges":[{"startOffset":8940301,"endOffset":8940711,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationTree","ranges":[{"startOffset":8940714,"endOffset":8941065,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigateToItems","ranges":[{"startOffset":8941068,"endOffset":8942310,"count":0}],"isBlockCoverage":false},{"functionName":"getFullNavigateToItems","ranges":[{"startOffset":8942313,"endOffset":8944734,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":8944737,"endOffset":8945155,"count":0}],"isBlockCoverage":false},{"functionName":"isLocation","ranges":[{"startOffset":8945158,"endOffset":8945233,"count":0}],"isBlockCoverage":false},{"functionName":"extractPositionOrRange","ranges":[{"startOffset":8945236,"endOffset":8945680,"count":0}],"isBlockCoverage":false},{"functionName":"getRange","ranges":[{"startOffset":8945683,"endOffset":8945858,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableRefactors","ranges":[{"startOffset":8945861,"endOffset":8946579,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForRefactor","ranges":[{"startOffset":8946582,"endOffset":8947807,"count":0}],"isBlockCoverage":false},{"functionName":"getMoveToRefactoringFileSuggestions","ranges":[{"startOffset":8947810,"endOffset":8948143,"count":0}],"isBlockCoverage":false},{"functionName":"preparePasteEdits","ranges":[{"startOffset":8948146,"endOffset":8948547,"count":0}],"isBlockCoverage":false},{"functionName":"getPasteEdits","ranges":[{"startOffset":8948550,"endOffset":8949611,"count":0}],"isBlockCoverage":false},{"functionName":"organizeImports","ranges":[{"startOffset":8949614,"endOffset":8950212,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":8950215,"endOffset":8951238,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeFixes","ranges":[{"startOffset":8951241,"endOffset":8952588,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedCodeFix","ranges":[{"startOffset":8952591,"endOffset":8953091,"count":0}],"isBlockCoverage":false},{"functionName":"applyCodeActionCommand","ranges":[{"startOffset":8953094,"endOffset":8953473,"count":0}],"isBlockCoverage":false},{"functionName":"getStartAndEndPosition","ranges":[{"startOffset":8953476,"endOffset":8954051,"count":0}],"isBlockCoverage":false},{"functionName":"mapCodeAction","ranges":[{"startOffset":8954054,"endOffset":8954225,"count":0}],"isBlockCoverage":false},{"functionName":"mapCodeFixAction","ranges":[{"startOffset":8954228,"endOffset":8954510,"count":0}],"isBlockCoverage":false},{"functionName":"mapPasteEditsAction","ranges":[{"startOffset":8954513,"endOffset":8954642,"count":0}],"isBlockCoverage":false},{"functionName":"mapTextChangesToCodeEdits","ranges":[{"startOffset":8954645,"endOffset":8954769,"count":0}],"isBlockCoverage":false},{"functionName":"mapTextChangeToCodeEdit","ranges":[{"startOffset":8954772,"endOffset":8955452,"count":0}],"isBlockCoverage":false},{"functionName":"convertTextChangeToCodeEdit","ranges":[{"startOffset":8955455,"endOffset":8955729,"count":0}],"isBlockCoverage":false},{"functionName":"getBraceMatching","ranges":[{"startOffset":8955732,"endOffset":8956206,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsForProject","ranges":[{"startOffset":8956209,"endOffset":8958015,"count":0}],"isBlockCoverage":false},{"functionName":"configurePlugin","ranges":[{"startOffset":8958018,"endOffset":8958092,"count":0}],"isBlockCoverage":false},{"functionName":"getSmartSelectionRange","ranges":[{"startOffset":8958095,"endOffset":8958649,"count":0}],"isBlockCoverage":false},{"functionName":"toggleLineComment","ranges":[{"startOffset":8958652,"endOffset":8959241,"count":0}],"isBlockCoverage":false},{"functionName":"toggleMultilineComment","ranges":[{"startOffset":8959244,"endOffset":8959860,"count":0}],"isBlockCoverage":false},{"functionName":"commentSelection","ranges":[{"startOffset":8959863,"endOffset":8960467,"count":0}],"isBlockCoverage":false},{"functionName":"uncommentSelection","ranges":[{"startOffset":8960470,"endOffset":8961078,"count":0}],"isBlockCoverage":false},{"functionName":"mapSelectionRange","ranges":[{"startOffset":8961081,"endOffset":8961371,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoFromProjectService","ranges":[{"startOffset":8961374,"endOffset":8961722,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolCallHierarchyItem","ranges":[{"startOffset":8961725,"endOffset":8962134,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolCallHierarchyIncomingCall","ranges":[{"startOffset":8962137,"endOffset":8962462,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolCallHierarchyOutgoingCall","ranges":[{"startOffset":8962465,"endOffset":8962713,"count":0}],"isBlockCoverage":false},{"functionName":"prepareCallHierarchy","ranges":[{"startOffset":8962716,"endOffset":8963178,"count":0}],"isBlockCoverage":false},{"functionName":"provideCallHierarchyIncomingCalls","ranges":[{"startOffset":8963181,"endOffset":8963573,"count":0}],"isBlockCoverage":false},{"functionName":"provideCallHierarchyOutgoingCalls","ranges":[{"startOffset":8963576,"endOffset":8963980,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalFileName","ranges":[{"startOffset":8963983,"endOffset":8964148,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":8964151,"endOffset":8964163,"count":0}],"isBlockCoverage":false},{"functionName":"notRequired","ranges":[{"startOffset":8964166,"endOffset":8964438,"count":0}],"isBlockCoverage":false},{"functionName":"requiredResponse","ranges":[{"startOffset":8964441,"endOffset":8964561,"count":0}],"isBlockCoverage":false},{"functionName":"addProtocolHandler","ranges":[{"startOffset":8964564,"endOffset":8964774,"count":0}],"isBlockCoverage":false},{"functionName":"setCurrentRequest","ranges":[{"startOffset":8964777,"endOffset":8964952,"count":0}],"isBlockCoverage":false},{"functionName":"resetCurrentRequest","ranges":[{"startOffset":8964955,"endOffset":8965134,"count":0}],"isBlockCoverage":false},{"functionName":"executeWithRequestId","ranges":[{"startOffset":8965200,"endOffset":8965545,"count":0}],"isBlockCoverage":false},{"functionName":"executeCommand","ranges":[{"startOffset":8965548,"endOffset":8966293,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":8966296,"endOffset":8969617,"count":0}],"isBlockCoverage":false},{"functionName":"parseMessage","ranges":[{"startOffset":8969620,"endOffset":8969679,"count":0}],"isBlockCoverage":false},{"functionName":"toStringMessage","ranges":[{"startOffset":8969682,"endOffset":8969732,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOptions","ranges":[{"startOffset":8969735,"endOffset":8969822,"count":0}],"isBlockCoverage":false},{"functionName":"getPreferences","ranges":[{"startOffset":8969825,"endOffset":8969904,"count":0}],"isBlockCoverage":false},{"functionName":"getHostFormatOptions","ranges":[{"startOffset":8969907,"endOffset":8969994,"count":0}],"isBlockCoverage":false},{"functionName":"getHostPreferences","ranges":[{"startOffset":8969997,"endOffset":8970076,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolPerformanceData","ranges":[{"startOffset":8970080,"endOffset":8970345,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolTextSpan","ranges":[{"startOffset":8970346,"endOffset":8970539,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolTextSpanWithContext","ranges":[{"startOffset":8970540,"endOffset":8970881,"count":0}],"isBlockCoverage":false},{"functionName":"convertTextChangeToCodeEdit","ranges":[{"startOffset":8970882,"endOffset":8971105,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8971106,"endOffset":8971299,"count":0}],"isBlockCoverage":false},{"functionName":"convertLinkedEditInfoToRanges","ranges":[{"startOffset":8971300,"endOffset":8971684,"count":0}],"isBlockCoverage":false},{"functionName":"locationFromLineAndCharacter","ranges":[{"startOffset":8971685,"endOffset":8971788,"count":0}],"isBlockCoverage":false},{"functionName":"convertNewFileTextChangeToCodeEdit","ranges":[{"startOffset":8971789,"endOffset":8972174,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationInNewDocument","ranges":[{"startOffset":8972175,"endOffset":8972483,"count":0}],"isBlockCoverage":false},{"functionName":"applyEdits","ranges":[{"startOffset":8972484,"endOffset":8972892,"count":0}],"isBlockCoverage":false},{"functionName":"referenceEntryToReferencesResponseItem","ranges":[{"startOffset":8972893,"endOffset":8973441,"count":0}],"isBlockCoverage":false},{"functionName":"getLineText","ranges":[{"startOffset":8973442,"endOffset":8973655,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionEntryData","ranges":[{"startOffset":8973656,"endOffset":8974039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8974149,"endOffset":8974585,"count":1}],"isBlockCoverage":false},{"functionName":"EditWalker","ranges":[{"startOffset":8974639,"endOffset":8974962,"count":0}],"isBlockCoverage":false},{"functionName":"get done","ranges":[{"startOffset":8974965,"endOffset":8974999,"count":0}],"isBlockCoverage":false},{"functionName":"insertLines","ranges":[{"startOffset":8975002,"endOffset":8977392,"count":0}],"isBlockCoverage":false},{"functionName":"post","ranges":[{"startOffset":8977395,"endOffset":8977572,"count":0}],"isBlockCoverage":false},{"functionName":"pre","ranges":[{"startOffset":8977575,"endOffset":8979530,"count":0}],"isBlockCoverage":false},{"functionName":"leaf","ranges":[{"startOffset":8979571,"endOffset":8980001,"count":0}],"isBlockCoverage":false},{"functionName":"TextChange9","ranges":[{"startOffset":8980033,"endOffset":8980170,"count":0}],"isBlockCoverage":false},{"functionName":"getTextChangeRange","ranges":[{"startOffset":8980173,"endOffset":8980325,"count":0}],"isBlockCoverage":false},{"functionName":"_ScriptVersionCache","ranges":[{"startOffset":8980385,"endOffset":8980618,"count":0}],"isBlockCoverage":false},{"functionName":"versionToIndex","ranges":[{"startOffset":8980621,"endOffset":8980805,"count":0}],"isBlockCoverage":false},{"functionName":"currentVersionToIndex","ranges":[{"startOffset":8980808,"endOffset":8980903,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":8980959,"endOffset":8981316,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshot","ranges":[{"startOffset":8981319,"endOffset":8981370,"count":0}],"isBlockCoverage":false},{"functionName":"_getSnapshot","ranges":[{"startOffset":8981373,"endOffset":8982079,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotVersion","ranges":[{"startOffset":8982082,"endOffset":8982148,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePositionAndLineText","ranges":[{"startOffset":8982151,"endOffset":8982270,"count":0}],"isBlockCoverage":false},{"functionName":"lineOffsetToPosition","ranges":[{"startOffset":8982273,"endOffset":8982402,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8982405,"endOffset":8982510,"count":0}],"isBlockCoverage":false},{"functionName":"lineToTextSpan","ranges":[{"startOffset":8982513,"endOffset":8982833,"count":0}],"isBlockCoverage":false},{"functionName":"getTextChangesBetweenVersions","ranges":[{"startOffset":8982836,"endOffset":8983479,"count":0}],"isBlockCoverage":false},{"functionName":"getLineCount","ranges":[{"startOffset":8983482,"endOffset":8983555,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":8983565,"endOffset":8983837,"count":0}],"isBlockCoverage":false},{"functionName":"_LineIndexSnapshot","ranges":[{"startOffset":8984073,"endOffset":8984302,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":8984305,"endOffset":8984406,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":8984409,"endOffset":8984461,"count":0}],"isBlockCoverage":false},{"functionName":"getChangeRange","ranges":[{"startOffset":8984464,"endOffset":8984797,"count":0}],"isBlockCoverage":false},{"functionName":"_LineIndex","ranges":[{"startOffset":8984838,"endOffset":8984942,"count":0}],"isBlockCoverage":false},{"functionName":"absolutePositionOfStartOfLine","ranges":[{"startOffset":8984945,"endOffset":8985059,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8985062,"endOffset":8985253,"count":0}],"isBlockCoverage":false},{"functionName":"positionToColumnAndLineText","ranges":[{"startOffset":8985256,"endOffset":8985355,"count":0}],"isBlockCoverage":false},{"functionName":"getLineCount","ranges":[{"startOffset":8985358,"endOffset":8985412,"count":0}],"isBlockCoverage":false},{"functionName":"lineNumberToInfo","ranges":[{"startOffset":8985415,"endOffset":8985778,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":8985781,"endOffset":8986061,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":8986064,"endOffset":8986162,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":8986165,"endOffset":8986574,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":8986577,"endOffset":8986628,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":8986631,"endOffset":8987037,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":8987040,"endOffset":8988572,"count":0}],"isBlockCoverage":false},{"functionName":"buildTreeFromBottom","ranges":[{"startOffset":8988582,"endOffset":8989093,"count":0}],"isBlockCoverage":false},{"functionName":"linesFromText","ranges":[{"startOffset":8989103,"endOffset":8989617,"count":0}],"isBlockCoverage":false},{"functionName":"_LineNode","ranges":[{"startOffset":8989656,"endOffset":8989814,"count":0}],"isBlockCoverage":false},{"functionName":"isLeaf","ranges":[{"startOffset":8989817,"endOffset":8989849,"count":0}],"isBlockCoverage":false},{"functionName":"updateCounts","ranges":[{"startOffset":8989852,"endOffset":8990057,"count":0}],"isBlockCoverage":false},{"functionName":"execWalk","ranges":[{"startOffset":8990060,"endOffset":8990547,"count":0}],"isBlockCoverage":false},{"functionName":"skipChild","ranges":[{"startOffset":8990550,"endOffset":8990798,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":8990801,"endOffset":8992471,"count":0}],"isBlockCoverage":false},{"functionName":"charOffsetToLineInfo","ranges":[{"startOffset":8992570,"endOffset":8993582,"count":0}],"isBlockCoverage":false},{"functionName":"lineNumberToInfo","ranges":[{"startOffset":8993798,"endOffset":8994339,"count":0}],"isBlockCoverage":false},{"functionName":"splitAfter","ranges":[{"startOffset":8994342,"endOffset":8994756,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":8994759,"endOffset":8995041,"count":0}],"isBlockCoverage":false},{"functionName":"findChildIndex","ranges":[{"startOffset":8995044,"endOffset":8995184,"count":0}],"isBlockCoverage":false},{"functionName":"insertAt","ranges":[{"startOffset":8995187,"endOffset":8996862,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":8996930,"endOffset":8997053,"count":0}],"isBlockCoverage":false},{"functionName":"charCount","ranges":[{"startOffset":8997056,"endOffset":8997101,"count":0}],"isBlockCoverage":false},{"functionName":"lineCount","ranges":[{"startOffset":8997104,"endOffset":8997149,"count":0}],"isBlockCoverage":false},{"functionName":"LineLeaf","ranges":[{"startOffset":8997178,"endOffset":8997223,"count":0}],"isBlockCoverage":false},{"functionName":"isLeaf","ranges":[{"startOffset":8997226,"endOffset":8997257,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":8997260,"endOffset":8997353,"count":0}],"isBlockCoverage":false},{"functionName":"charCount","ranges":[{"startOffset":8997356,"endOffset":8997402,"count":0}],"isBlockCoverage":false},{"functionName":"lineCount","ranges":[{"startOffset":8997405,"endOffset":8997436,"count":0}],"isBlockCoverage":false},{"functionName":"_TypingsInstallerAdapter","ranges":[{"startOffset":8997547,"endOffset":8998291,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownTypesPackageName","ranges":[{"startOffset":8998294,"endOffset":8998730,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":8998733,"endOffset":8999143,"count":0}],"isBlockCoverage":false},{"functionName":"attach","ranges":[{"startOffset":8999146,"endOffset":8999268,"count":0}],"isBlockCoverage":false},{"functionName":"onProjectClosed","ranges":[{"startOffset":8999271,"endOffset":8999379,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueInstallTypingsRequest","ranges":[{"startOffset":8999382,"endOffset":9000075,"count":0}],"isBlockCoverage":false},{"functionName":"handleMessage","ranges":[{"startOffset":9000078,"endOffset":9003409,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleRequest","ranges":[{"startOffset":9003412,"endOffset":9003959,"count":0}],"isBlockCoverage":false},{"functionName":"ActionInvalidate","ranges":[{"startOffset":9004550,"endOffset":9004572,"count":0}],"isBlockCoverage":false},{"functionName":"ActionPackageInstalled","ranges":[{"startOffset":9004600,"endOffset":9004628,"count":0}],"isBlockCoverage":false},{"functionName":"ActionSet","ranges":[{"startOffset":9004643,"endOffset":9004658,"count":0}],"isBlockCoverage":false},{"functionName":"ActionWatchTypingLocations","ranges":[{"startOffset":9004690,"endOffset":9004722,"count":0}],"isBlockCoverage":false},{"functionName":"Arguments","ranges":[{"startOffset":9004737,"endOffset":9004752,"count":0}],"isBlockCoverage":false},{"functionName":"AutoImportProviderProject","ranges":[{"startOffset":9004783,"endOffset":9004814,"count":0}],"isBlockCoverage":false},{"functionName":"AuxiliaryProject","ranges":[{"startOffset":9004836,"endOffset":9004858,"count":0}],"isBlockCoverage":false},{"functionName":"CharRangeSection","ranges":[{"startOffset":9004880,"endOffset":9004902,"count":0}],"isBlockCoverage":false},{"functionName":"CloseFileWatcherEvent","ranges":[{"startOffset":9004929,"endOffset":9004956,"count":0}],"isBlockCoverage":false},{"functionName":"CommandNames","ranges":[{"startOffset":9004974,"endOffset":9004992,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigFileDiagEvent","ranges":[{"startOffset":9005017,"endOffset":9005042,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProject","ranges":[{"startOffset":9005065,"endOffset":9005089,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProjectLoadKind","ranges":[{"startOffset":9005120,"endOffset":9005151,"count":0}],"isBlockCoverage":false},{"functionName":"CreateDirectoryWatcherEvent","ranges":[{"startOffset":9005184,"endOffset":9005217,"count":0}],"isBlockCoverage":false},{"functionName":"CreateFileWatcherEvent","ranges":[{"startOffset":9005245,"endOffset":9005273,"count":0}],"isBlockCoverage":false},{"functionName":"Errors","ranges":[{"startOffset":9005285,"endOffset":9005297,"count":0}],"isBlockCoverage":false},{"functionName":"EventBeginInstallTypes","ranges":[{"startOffset":9005325,"endOffset":9005353,"count":0}],"isBlockCoverage":false},{"functionName":"EventEndInstallTypes","ranges":[{"startOffset":9005379,"endOffset":9005405,"count":0}],"isBlockCoverage":false},{"functionName":"EventInitializationFailed","ranges":[{"startOffset":9005436,"endOffset":9005467,"count":0}],"isBlockCoverage":false},{"functionName":"EventTypesRegistry","ranges":[{"startOffset":9005491,"endOffset":9005515,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalProject","ranges":[{"startOffset":9005536,"endOffset":9005557,"count":0}],"isBlockCoverage":false},{"functionName":"GcTimer","ranges":[{"startOffset":9005570,"endOffset":9005583,"count":0}],"isBlockCoverage":false},{"functionName":"InferredProject","ranges":[{"startOffset":9005604,"endOffset":9005626,"count":0}],"isBlockCoverage":false},{"functionName":"LargeFileReferencedEvent","ranges":[{"startOffset":9005656,"endOffset":9005686,"count":0}],"isBlockCoverage":false},{"functionName":"LineIndex","ranges":[{"startOffset":9005701,"endOffset":9005716,"count":0}],"isBlockCoverage":false},{"functionName":"LineLeaf","ranges":[{"startOffset":9005730,"endOffset":9005744,"count":0}],"isBlockCoverage":false},{"functionName":"LineNode","ranges":[{"startOffset":9005758,"endOffset":9005772,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":9005786,"endOffset":9005801,"count":0}],"isBlockCoverage":false},{"functionName":"Msg","ranges":[{"startOffset":9005810,"endOffset":9005819,"count":0}],"isBlockCoverage":false},{"functionName":"OpenFileInfoTelemetryEvent","ranges":[{"startOffset":9005851,"endOffset":9005883,"count":0}],"isBlockCoverage":false},{"functionName":"Project","ranges":[{"startOffset":9005896,"endOffset":9005910,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectInfoTelemetryEvent","ranges":[{"startOffset":9005941,"endOffset":9005972,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectKind","ranges":[{"startOffset":9005989,"endOffset":9006006,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLanguageServiceStateEvent","ranges":[{"startOffset":9006044,"endOffset":9006082,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingFinishEvent","ranges":[{"startOffset":9006113,"endOffset":9006144,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingStartEvent","ranges":[{"startOffset":9006174,"endOffset":9006204,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectService","ranges":[{"startOffset":9006224,"endOffset":9006245,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectsUpdatedInBackgroundEvent","ranges":[{"startOffset":9006283,"endOffset":9006321,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptInfo","ranges":[{"startOffset":9006337,"endOffset":9006353,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptVersionCache","ranges":[{"startOffset":9006377,"endOffset":9006401,"count":0}],"isBlockCoverage":false},{"functionName":"Session","ranges":[{"startOffset":9006414,"endOffset":9006428,"count":0}],"isBlockCoverage":false},{"functionName":"TextStorage","ranges":[{"startOffset":9006445,"endOffset":9006462,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledOperations","ranges":[{"startOffset":9006487,"endOffset":9006512,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstallerAdapter","ranges":[{"startOffset":9006541,"endOffset":9006570,"count":0}],"isBlockCoverage":false},{"functionName":"allFilesAreJsOrDts","ranges":[{"startOffset":9006594,"endOffset":9006618,"count":0}],"isBlockCoverage":false},{"functionName":"allRootFilesAreJsOrDts","ranges":[{"startOffset":9006646,"endOffset":9006674,"count":0}],"isBlockCoverage":false},{"functionName":"asNormalizedPath","ranges":[{"startOffset":9006696,"endOffset":9006718,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptions","ranges":[{"startOffset":9006746,"endOffset":9006774,"count":0}],"isBlockCoverage":false},{"functionName":"convertFormatOptions","ranges":[{"startOffset":9006800,"endOffset":9006826,"count":0}],"isBlockCoverage":false},{"functionName":"convertScriptKindName","ranges":[{"startOffset":9006853,"endOffset":9006880,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisition","ranges":[{"startOffset":9006908,"endOffset":9006936,"count":0}],"isBlockCoverage":false},{"functionName":"convertUserPreferences","ranges":[{"startOffset":9006964,"endOffset":9006992,"count":0}],"isBlockCoverage":false},{"functionName":"convertWatchOptions","ranges":[{"startOffset":9007017,"endOffset":9007042,"count":0}],"isBlockCoverage":false},{"functionName":"countEachFileTypes","ranges":[{"startOffset":9007066,"endOffset":9007090,"count":0}],"isBlockCoverage":false},{"functionName":"createInstallTypingsRequest","ranges":[{"startOffset":9007123,"endOffset":9007156,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierCache","ranges":[{"startOffset":9007188,"endOffset":9007220,"count":0}],"isBlockCoverage":false},{"functionName":"createNormalizedPathMap","ranges":[{"startOffset":9007249,"endOffset":9007278,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonCache","ranges":[{"startOffset":9007306,"endOffset":9007334,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":9007357,"endOffset":9007381,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":9007397,"endOffset":9007414,"count":0}],"isBlockCoverage":false},{"functionName":"findArgument","ranges":[{"startOffset":9007432,"endOffset":9007450,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticToProtocol","ranges":[{"startOffset":9007482,"endOffset":9007514,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":9007533,"endOffset":9007553,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseConfigFileName","ranges":[{"startOffset":9007580,"endOffset":9007607,"count":0}],"isBlockCoverage":false},{"functionName":"getDetailWatchInfo","ranges":[{"startOffset":9007631,"endOffset":9007655,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationInNewDocument","ranges":[{"startOffset":9007685,"endOffset":9007715,"count":0}],"isBlockCoverage":false},{"functionName":"hasArgument","ranges":[{"startOffset":9007732,"endOffset":9007749,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoTypeScriptSource","ranges":[{"startOffset":9007776,"endOffset":9007803,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":9007815,"endOffset":9007828,"count":0}],"isBlockCoverage":false},{"functionName":"isBackgroundProject","ranges":[{"startOffset":9007853,"endOffset":9007878,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigFile","ranges":[{"startOffset":9007896,"endOffset":9007914,"count":0}],"isBlockCoverage":false},{"functionName":"isConfiguredProject","ranges":[{"startOffset":9007939,"endOffset":9007964,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicFileName","ranges":[{"startOffset":9007987,"endOffset":9008010,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalProject","ranges":[{"startOffset":9008033,"endOffset":9008056,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProject","ranges":[{"startOffset":9008079,"endOffset":9008102,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProjectName","ranges":[{"startOffset":9008129,"endOffset":9008156,"count":0}],"isBlockCoverage":false},{"functionName":"isProjectDeferredClose","ranges":[{"startOffset":9008184,"endOffset":9008212,"count":0}],"isBlockCoverage":false},{"functionName":"makeAutoImportProviderProjectName","ranges":[{"startOffset":9008251,"endOffset":9008290,"count":0}],"isBlockCoverage":false},{"functionName":"makeAuxiliaryProjectName","ranges":[{"startOffset":9008320,"endOffset":9008350,"count":0}],"isBlockCoverage":false},{"functionName":"makeInferredProjectName","ranges":[{"startOffset":9008379,"endOffset":9008408,"count":0}],"isBlockCoverage":false},{"functionName":"maxFileSize","ranges":[{"startOffset":9008425,"endOffset":9008442,"count":0}],"isBlockCoverage":false},{"functionName":"maxProgramSizeForNonTsFiles","ranges":[{"startOffset":9008475,"endOffset":9008508,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedPathToPath","ranges":[{"startOffset":9008534,"endOffset":9008560,"count":0}],"isBlockCoverage":false},{"functionName":"nowString","ranges":[{"startOffset":9008575,"endOffset":9008590,"count":0}],"isBlockCoverage":false},{"functionName":"nullCancellationToken","ranges":[{"startOffset":9008617,"endOffset":9008644,"count":0}],"isBlockCoverage":false},{"functionName":"nullTypingsInstaller","ranges":[{"startOffset":9008670,"endOffset":9008696,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":9008710,"endOffset":9008742,"count":0}],"isBlockCoverage":false},{"functionName":"scriptInfoIsContainedByBackgroundProject","ranges":[{"startOffset":9008788,"endOffset":9008834,"count":0}],"isBlockCoverage":false},{"functionName":"scriptInfoIsContainedByDeferredClosedProject","ranges":[{"startOffset":9008884,"endOffset":9008934,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndented","ranges":[{"startOffset":9008957,"endOffset":9008980,"count":0}],"isBlockCoverage":false},{"functionName":"toEvent","ranges":[{"startOffset":9008993,"endOffset":9009006,"count":0}],"isBlockCoverage":false},{"functionName":"toNormalizedPath","ranges":[{"startOffset":9009028,"endOffset":9009050,"count":0}],"isBlockCoverage":false},{"functionName":"tryConvertScriptKindName","ranges":[{"startOffset":9009080,"endOffset":9009110,"count":0}],"isBlockCoverage":false},{"functionName":"typingsInstaller","ranges":[{"startOffset":9009132,"endOffset":9009172,"count":0}],"isBlockCoverage":false},{"functionName":"updateProjectIfDirty","ranges":[{"startOffset":9009198,"endOffset":9009224,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":9009328,"endOffset":9009630,"count":0}],"isBlockCoverage":false},{"functionName":"get exports","ranges":[{"startOffset":9066297,"endOffset":9066325,"count":0}],"isBlockCoverage":false},{"functionName":"set exports","ranges":[{"startOffset":9066327,"endOffset":9066430,"count":1}],"isBlockCoverage":true}]},{"scriptId":"367","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@cspotcode+source-map-support@0.8.1/node_modules/@cspotcode/source-map-support/source-map-support.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32815,"count":1},{"startOffset":280,"endOffset":343,"count":0},{"startOffset":346,"endOffset":373,"count":0},{"startOffset":21711,"endOffset":21733,"count":0}],"isBlockCoverage":true},{"functionName":"dynamicRequire","ranges":[{"startOffset":510,"endOffset":582,"count":2}],"isBlockCoverage":true},{"functionName":"initializeSharedData","ranges":[{"startOffset":907,"endOffset":1650,"count":1},{"startOffset":1315,"endOffset":1368,"count":0},{"startOffset":1421,"endOffset":1516,"count":0},{"startOffset":1545,"endOffset":1627,"count":11}],"isBlockCoverage":true},{"functionName":"isInBrowser","ranges":[{"startOffset":3602,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobalProcessEventEmitter","ranges":[{"startOffset":3908,"endOffset":4053,"count":1}],"isBlockCoverage":true},{"functionName":"tryFileURLToPath","ranges":[{"startOffset":4055,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":4237,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":4303,"endOffset":4370,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":4454,"endOffset":4526,"count":0}],"isBlockCoverage":false},{"functionName":"getCacheKey","ranges":[{"startOffset":4583,"endOffset":4943,"count":0}],"isBlockCoverage":false},{"functionName":"getFileContentsCache","ranges":[{"startOffset":4944,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"hasFileContentsCacheFromKey","ranges":[{"startOffset":5040,"endOffset":5167,"count":0}],"isBlockCoverage":false},{"functionName":"getFileContentsCacheFromKey","ranges":[{"startOffset":5168,"endOffset":5257,"count":0}],"isBlockCoverage":false},{"functionName":"setFileContentsCache","ranges":[{"startOffset":5258,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapCache","ranges":[{"startOffset":5369,"endOffset":5458,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapCache","ranges":[{"startOffset":5459,"endOffset":5563,"count":0}],"isBlockCoverage":false},{"functionName":"clearCaches","ranges":[{"startOffset":5564,"endOffset":5695,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":5718,"endOffset":6075,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5770,"endOffset":6072,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6229,"endOffset":7309,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":7484,"endOffset":9155,"count":0}],"isBlockCoverage":false},{"functionName":"matchStyleOfPathOrUrl","ranges":[{"startOffset":9247,"endOffset":9813,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":9815,"endOffset":10876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11436,"endOffset":12196,"count":0}],"isBlockCoverage":false},{"functionName":"mapSourcePosition","ranges":[{"startOffset":12200,"endOffset":14481,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":14621,"endOffset":15317,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":16089,"endOffset":18524,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCallSite","ranges":[{"startOffset":18526,"endOffset":18831,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCallSite","ranges":[{"startOffset":18833,"endOffset":21362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21632,"endOffset":21695,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorPrototypeToString","ranges":[{"startOffset":21768,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"createPrepareStackTrace","ranges":[{"startOffset":21849,"endOffset":23250,"count":1}],"isBlockCoverage":true},{"functionName":"prepareStackTrace","ranges":[{"startOffset":22040,"endOffset":23248,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSource","ranges":[{"startOffset":23317,"endOffset":24203,"count":0}],"isBlockCoverage":false},{"functionName":"printFatalErrorUponExit","ranges":[{"startOffset":24205,"endOffset":24686,"count":0}],"isBlockCoverage":false},{"functionName":"shimEmitUncaughtException","ranges":[{"startOffset":24688,"endOffset":25458,"count":1}],"isBlockCoverage":true},{"functionName":"process.emit.sharedData.processEmitHook.installedValue","ranges":[{"startOffset":25015,"endOffset":25455,"count":4},{"startOffset":25158,"endOffset":25174,"count":0},{"startOffset":25176,"endOffset":25298,"count":0},{"startOffset":25325,"endOffset":25360,"count":1},{"startOffset":25362,"endOffset":25420,"count":0}],"isBlockCoverage":true},{"functionName":"exports.install","ranges":[{"startOffset":25804,"endOffset":30803,"count":1},{"startOffset":25844,"endOffset":25849,"count":0},{"startOffset":25985,"endOffset":26106,"count":0},{"startOffset":27948,"endOffset":28005,"count":0},{"startOffset":28212,"endOffset":28389,"count":0},{"startOffset":28482,"endOffset":28499,"count":0},{"startOffset":28501,"endOffset":28884,"count":0},{"startOffset":29044,"endOffset":29087,"count":0},{"startOffset":29618,"endOffset":29658,"count":0},{"startOffset":30122,"endOffset":30163,"count":0},{"startOffset":30170,"endOffset":30181,"count":0}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue","ranges":[{"startOffset":26780,"endOffset":27640,"count":5},{"startOffset":27057,"endOffset":27106,"count":0},{"startOffset":27159,"endOffset":27216,"count":0},{"startOffset":27263,"endOffset":27538,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":28624,"endOffset":28813,"count":0}],"isBlockCoverage":false},{"functionName":"exports.uninstall","ranges":[{"startOffset":30826,"endOffset":32675,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resetRetrieveHandlers","ranges":[{"startOffset":32709,"endOffset":32814,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22396,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":488,"count":1},{"startOffset":190,"endOffset":485,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":497,"endOffset":22346,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":565,"endOffset":679,"count":1},{"startOffset":636,"endOffset":653,"count":0},{"startOffset":654,"endOffset":657,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":764,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":1305,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":1680,"endOffset":2304,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":2309,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":2535,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":2751,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":2893,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":3613,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":4108,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":4337,"endOffset":4548,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":4553,"endOffset":4693,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":4903,"endOffset":5699,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":5842,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7247,"endOffset":7421,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":7879,"endOffset":7948,"count":0}],"isBlockCoverage":false},{"functionName":"AnyMap","ranges":[{"startOffset":7969,"endOffset":8927,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":8933,"endOffset":11578,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":11583,"endOffset":11697,"count":0}],"isBlockCoverage":false},{"functionName":"fillSourcesContent","ranges":[{"startOffset":12065,"endOffset":12247,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":14719,"endOffset":16054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16066,"endOffset":21640,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encodedMappings","ranges":[{"startOffset":16108,"endOffset":16276,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMappings","ranges":[{"startOffset":16312,"endOffset":16423,"count":0}],"isBlockCoverage":false},{"functionName":"exports.traceSegment","ranges":[{"startOffset":16456,"endOffset":16902,"count":0}],"isBlockCoverage":false},{"functionName":"exports.originalPositionFor","ranges":[{"startOffset":16942,"endOffset":18105,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generatedPositionFor","ranges":[{"startOffset":18146,"endOffset":19372,"count":0}],"isBlockCoverage":false},{"functionName":"exports.eachMapping","ranges":[{"startOffset":19404,"endOffset":20613,"count":0}],"isBlockCoverage":false},{"functionName":"exports.presortedDecodedMap","ranges":[{"startOffset":20653,"endOffset":20891,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMap","ranges":[{"startOffset":20922,"endOffset":21262,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encodedMap","ranges":[{"startOffset":21293,"endOffset":21633,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":21649,"endOffset":22104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.0/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17024,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":314,"count":1},{"startOffset":114,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":323,"endOffset":16972,"count":1},{"startOffset":694,"endOffset":792,"count":64},{"startOffset":2006,"endOffset":2534,"count":0}],"isBlockCoverage":true},{"functionName":"decodeInteger","ranges":[{"startOffset":797,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":1284,"endOffset":1677,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":1682,"endOffset":1819,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2070,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2281,"endOffset":2519,"count":0}],"isBlockCoverage":false},{"functionName":"StringWriter","ranges":[{"startOffset":2569,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2709,"endOffset":2935,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":2944,"endOffset":3087,"count":0}],"isBlockCoverage":false},{"functionName":"StringReader","ranges":[{"startOffset":3127,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3227,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":3309,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":3389,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"decodeOriginalScopes","ranges":[{"startOffset":3594,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"encodeOriginalScopes","ranges":[{"startOffset":4843,"endOffset":5081,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeOriginalScopes","ranges":[{"startOffset":5086,"endOffset":6229,"count":0}],"isBlockCoverage":false},{"functionName":"decodeGeneratedRanges","ranges":[{"startOffset":6234,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"encodeGeneratedRanges","ranges":[{"startOffset":10194,"endOffset":10508,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeGeneratedRanges","ranges":[{"startOffset":10513,"endOffset":13438,"count":0}],"isBlockCoverage":false},{"functionName":"catchupLine","ranges":[{"startOffset":13443,"endOffset":13582,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":13588,"endOffset":15287,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":15292,"endOffset":15354,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":15359,"endOffset":15424,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":15429,"endOffset":16610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+resolve-uri@3.1.2/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9866,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":305,"count":1},{"startOffset":124,"endOffset":302,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":314,"endOffset":9818,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":1351,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":1433,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":1520,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":1601,"endOffset":1676,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":1681,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":1757,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":1971,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":2219,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":2486,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":3495,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":3843,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":4482,"endOffset":7090,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7175,"endOffset":9794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/mocha@11.1.0/node_modules/mocha/lib/interfaces/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4831,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":551,"endOffset":4829,"count":3}],"isBlockCoverage":true},{"functionName":"shouldBeTested","ranges":[{"startOffset":729,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"runWithSuite","ranges":[{"startOffset":1196,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":1423,"endOffset":1494,"count":1}],"isBlockCoverage":true},{"functionName":"after","ranges":[{"startOffset":1623,"endOffset":1693,"count":1}],"isBlockCoverage":true},{"functionName":"beforeEach","ranges":[{"startOffset":1829,"endOffset":1901,"count":3}],"isBlockCoverage":true},{"functionName":"afterEach","ranges":[{"startOffset":2035,"endOffset":2106,"count":2}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":2319,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":2718,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3263,"endOffset":4297,"count":8},{"startOffset":3479,"endOffset":3518,"count":0},{"startOffset":3556,"endOffset":3596,"count":0},{"startOffset":3597,"endOffset":3631,"count":0},{"startOffset":3642,"endOffset":3719,"count":0},{"startOffset":3831,"endOffset":4266,"count":0}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":4474,"endOffset":4658,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":4761,"endOffset":4816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/integration/mcp-integration.test.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21803,"count":1},{"startOffset":380,"endOffset":395,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":442,"endOffset":5992,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":618,"endOffset":1158,"count":1},{"startOffset":1032,"endOffset":1152,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1171,"endOffset":1256,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1297,"endOffset":1687,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1508,"endOffset":1519,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1730,"endOffset":2030,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2074,"endOffset":2405,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2445,"endOffset":2801,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2853,"endOffset":3045,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3095,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3322,"endOffset":3571,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3616,"endOffset":3911,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3959,"endOffset":4317,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4361,"endOffset":4789,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4829,"endOffset":5253,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5306,"endOffset":5556,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5602,"endOffset":5845,"count":1}],"isBlockCoverage":true}]},{"scriptId":"373","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15271,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1082,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2078,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3171,"endOffset":3412,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3414,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3538,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4545,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6477,"endOffset":6532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6536,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6629,"endOffset":6654,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6830,"endOffset":7961,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7996,"endOffset":8557,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8589,"endOffset":8675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8755,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8818,"endOffset":10816,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11008,"endOffset":11063,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11067,"endOffset":11124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11161,"endOffset":11186,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11337,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12132,"endOffset":12949,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":12982,"endOffset":13366,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13401,"endOffset":13963,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":13999,"endOffset":14560,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":14593,"endOffset":14975,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15157,"endOffset":15191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/client/stdio.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5600,"count":1},{"startOffset":321,"endOffset":568,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultEnvironment","ranges":[{"startOffset":812,"endOffset":1203,"count":1},{"startOffset":917,"endOffset":1185,"count":6},{"startOffset":992,"endOffset":1025,"count":0},{"startOffset":1062,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"StdioClientTransport","ranges":[{"startOffset":1444,"endOffset":1608,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":1699,"endOffset":4003,"count":1},{"startOffset":1742,"endOffset":1895,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1923,"endOffset":3995,"count":1},{"startOffset":2110,"endOffset":2114,"count":0},{"startOffset":2195,"endOffset":2199,"count":0},{"startOffset":2326,"endOffset":2330,"count":0},{"startOffset":2487,"endOffset":2502,"count":0},{"startOffset":3362,"endOffset":3370,"count":0},{"startOffset":3602,"endOffset":3610,"count":0},{"startOffset":3812,"endOffset":3820,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2558,"endOffset":2983,"count":1},{"startOffset":2772,"endOffset":2780,"count":0},{"startOffset":2843,"endOffset":2936,"count":0},{"startOffset":2937,"endOffset":2945,"count":0},{"startOffset":2946,"endOffset":2968,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3024,"endOffset":3072,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3113,"endOffset":3294,"count":1},{"startOffset":3255,"endOffset":3263,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3388,"endOffset":3533,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3627,"endOffset":3743,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3838,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":4213,"endOffset":4382,"count":0}],"isBlockCoverage":false},{"functionName":"processReadBuffer","ranges":[{"startOffset":4387,"endOffset":4884,"count":14},{"startOffset":4450,"endOffset":4878,"count":28},{"startOffset":4572,"endOffset":4682,"count":14},{"startOffset":4683,"endOffset":4691,"count":0},{"startOffset":4692,"endOffset":4716,"count":14},{"startOffset":4744,"endOffset":4868,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":4889,"endOffset":5018,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":5023,"endOffset":5508,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5066,"endOffset":5500,"count":15},{"startOffset":5166,"endOffset":5174,"count":0},{"startOffset":5188,"endOffset":5253,"count":0},{"startOffset":5397,"endOffset":5490,"count":0}],"isBlockCoverage":true},{"functionName":"isElectron","ranges":[{"startOffset":5511,"endOffset":5566,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":139547,"count":1},{"startOffset":14930,"endOffset":14949,"count":0},{"startOffset":17828,"endOffset":18162,"count":0},{"startOffset":19236,"endOffset":19243,"count":0},{"startOffset":22547,"endOffset":22565,"count":0},{"startOffset":22666,"endOffset":22691,"count":0},{"startOffset":22703,"endOffset":22751,"count":0},{"startOffset":33213,"endOffset":33222,"count":0},{"startOffset":132152,"endOffset":132184,"count":15}],"isBlockCoverage":true},{"functionName":"__name","ranges":[{"startOffset":104,"endOffset":179,"count":1191}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":198,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":211,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":354,"endOffset":465,"count":3},{"startOffset":401,"endOffset":463,"count":37}],"isBlockCoverage":true},{"functionName":"(disabled):util","ranges":[{"startOffset":521,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":651,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":695,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":730,"endOffset":745,"count":3}],"isBlockCoverage":true},{"functionName":"addProperty","ranges":[{"startOffset":762,"endOffset":779,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":795,"endOffset":820,"count":2}],"isBlockCoverage":true},{"functionName":"compareByInspect","ranges":[{"startOffset":842,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"eql","ranges":[{"startOffset":873,"endOffset":895,"count":0}],"isBlockCoverage":false},{"functionName":"expectTypes","ranges":[{"startOffset":912,"endOffset":929,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":939,"endOffset":949,"count":339}],"isBlockCoverage":true},{"functionName":"getActual","ranges":[{"startOffset":964,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":995,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1025,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":1055,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":1104,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":1173,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":1227,"endOffset":1244,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":1261,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1291,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":1316,"endOffset":1328,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeric","ranges":[{"startOffset":1343,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":1378,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":1412,"endOffset":1427,"count":0}],"isBlockCoverage":false},{"functionName":"objDisplay","ranges":[{"startOffset":1443,"endOffset":1459,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":1489,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteMethod","ranges":[{"startOffset":1540,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteProperty","ranges":[{"startOffset":1584,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":1620,"endOffset":1633,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":1643,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"transferFlags","ranges":[{"startOffset":1672,"endOffset":1691,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":1701,"endOffset":1711,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":1841,"endOffset":1868,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":1892,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":1939,"endOffset":1962,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":1986,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":2026,"endOffset":2042,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorInstance","ranges":[{"startOffset":2047,"endOffset":2171,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":2216,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":2341,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":2503,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":2951,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":3330,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":3818,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":4084,"endOffset":4294,"count":4354},{"startOffset":4143,"endOffset":4197,"count":358},{"startOffset":4229,"endOffset":4258,"count":2741},{"startOffset":4258,"endOffset":4292,"count":1613}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":4344,"endOffset":4456,"count":118},{"startOffset":4439,"endOffset":4446,"count":1},{"startOffset":4447,"endOffset":4453,"count":117}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4513,"endOffset":4836,"count":52},{"startOffset":4568,"endOffset":4597,"count":0},{"startOffset":4618,"endOffset":4642,"count":0},{"startOffset":4725,"endOffset":4752,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":5009,"endOffset":5652,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5009,"endOffset":5652,"count":0}],"isBlockCoverage":true},{"functionName":"expectTypes","ranges":[{"startOffset":5688,"endOffset":6458,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":6527,"endOffset":6607,"count":0}],"isBlockCoverage":false},{"functionName":"colorise","ranges":[{"startOffset":7620,"endOffset":7846,"count":0}],"isBlockCoverage":false},{"functionName":"normaliseOptions","ranges":[{"startOffset":7877,"endOffset":8618,"count":96},{"startOffset":8561,"endOffset":8598,"count":0}],"isBlockCoverage":true},{"functionName":"isHighSurrogate","ranges":[{"startOffset":8665,"endOffset":8746,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":8791,"endOffset":9267,"count":96},{"startOffset":8970,"endOffset":8998,"count":0},{"startOffset":9000,"endOffset":9022,"count":0},{"startOffset":9051,"endOffset":9079,"count":0},{"startOffset":9081,"endOffset":9248,"count":0}],"isBlockCoverage":true},{"functionName":"inspectList","ranges":[{"startOffset":9298,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"quoteComplexKey","ranges":[{"startOffset":10773,"endOffset":10970,"count":0}],"isBlockCoverage":false},{"functionName":"inspectProperty","ranges":[{"startOffset":11015,"endOffset":11354,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArray","ranges":[{"startOffset":11435,"endOffset":11997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12119,"endOffset":12333,"count":0}],"isBlockCoverage":false},{"functionName":"inspectTypedArray","ranges":[{"startOffset":12352,"endOffset":13280,"count":0}],"isBlockCoverage":false},{"functionName":"inspectDate","ranges":[{"startOffset":13364,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"inspectFunction","ranges":[{"startOffset":13784,"endOffset":14094,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMapEntry","ranges":[{"startOffset":14173,"endOffset":14396,"count":0}],"isBlockCoverage":false},{"functionName":"mapToEntries","ranges":[{"startOffset":14441,"endOffset":14581,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMap","ranges":[{"startOffset":14620,"endOffset":14833,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":14934,"endOffset":14948,"count":0}],"isBlockCoverage":false},{"functionName":"inspectNumber","ranges":[{"startOffset":14951,"endOffset":15417,"count":0}],"isBlockCoverage":false},{"functionName":"inspectBigInt","ranges":[{"startOffset":15495,"endOffset":15687,"count":0}],"isBlockCoverage":false},{"functionName":"inspectRegExp","ranges":[{"startOffset":15765,"endOffset":16031,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFromSet","ranges":[{"startOffset":16106,"endOffset":16233,"count":0}],"isBlockCoverage":false},{"functionName":"inspectSet","ranges":[{"startOffset":16272,"endOffset":16441,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":16869,"endOffset":17002,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":17029,"endOffset":17255,"count":96},{"startOffset":17109,"endOffset":17170,"count":0}],"isBlockCoverage":true},{"functionName":"inspectSymbol","ranges":[{"startOffset":17333,"endOffset":17516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17640,"endOffset":17663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17875,"endOffset":18137,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject","ranges":[{"startOffset":18261,"endOffset":19068,"count":0}],"isBlockCoverage":false},{"functionName":"inspectClass","ranges":[{"startOffset":19245,"endOffset":19583,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArguments","ranges":[{"startOffset":19662,"endOffset":19838,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject2","ranges":[{"startOffset":20085,"endOffset":20873,"count":0}],"isBlockCoverage":false},{"functionName":"inspectAttribute","ranges":[{"startOffset":20950,"endOffset":21200,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTMLCollection","ranges":[{"startOffset":21247,"endOffset":21364,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTML","ranges":[{"startOffset":21421,"endOffset":22321,"count":0}],"isBlockCoverage":false},{"functionName":"undefined","ranges":[{"startOffset":22861,"endOffset":22922,"count":0}],"isBlockCoverage":false},{"functionName":"null","ranges":[{"startOffset":22932,"endOffset":22983,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":22996,"endOffset":23057,"count":0}],"isBlockCoverage":false},{"functionName":"Boolean","ranges":[{"startOffset":23070,"endOffset":23131,"count":0}],"isBlockCoverage":false},{"functionName":"WeakSet","ranges":[{"startOffset":23657,"endOffset":23722,"count":0}],"isBlockCoverage":false},{"functionName":"WeakMap","ranges":[{"startOffset":23735,"endOffset":23800,"count":0}],"isBlockCoverage":false},{"functionName":"Generator","ranges":[{"startOffset":24155,"endOffset":24163,"count":0}],"isBlockCoverage":false},{"functionName":"DataView","ranges":[{"startOffset":24177,"endOffset":24185,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBuffer","ranges":[{"startOffset":24202,"endOffset":24210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24358,"endOffset":25012,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":25074,"endOffset":26217,"count":96},{"startOffset":25228,"endOffset":25236,"count":0},{"startOffset":25279,"endOffset":25331,"count":0},{"startOffset":25414,"endOffset":25443,"count":0},{"startOffset":25445,"endOffset":25684,"count":0},{"startOffset":25685,"endOffset":25692,"count":0},{"startOffset":25727,"endOffset":25744,"count":0},{"startOffset":25746,"endOffset":25842,"count":0},{"startOffset":25843,"endOffset":25874,"count":0},{"startOffset":25876,"endOffset":26216,"count":0}],"isBlockCoverage":true},{"functionName":"inspect2","ranges":[{"startOffset":30070,"endOffset":30336,"count":96},{"startOffset":30196,"endOffset":30203,"count":0},{"startOffset":30287,"endOffset":30297,"count":0}],"isBlockCoverage":true},{"functionName":"objDisplay","ranges":[{"startOffset":30399,"endOffset":31072,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage2","ranges":[{"startOffset":31140,"endOffset":31694,"count":0}],"isBlockCoverage":false},{"functionName":"transferFlags","ranges":[{"startOffset":31766,"endOffset":32256,"count":289},{"startOffset":31854,"endOffset":31914,"count":0},{"startOffset":31939,"endOffset":32002,"count":0},{"startOffset":32041,"endOffset":32053,"count":0},{"startOffset":32089,"endOffset":32254,"count":1484},{"startOffset":32110,"endOffset":32197,"count":0}],"isBlockCoverage":true},{"functionName":"type2","ranges":[{"startOffset":32332,"endOffset":32695,"count":2},{"startOffset":32388,"endOffset":32417,"count":0},{"startOffset":32438,"endOffset":32462,"count":0},{"startOffset":32545,"endOffset":32572,"count":0}],"isBlockCoverage":true},{"functionName":"FakeMap","ranges":[{"startOffset":32719,"endOffset":32803,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32884,"endOffset":32934,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":32974,"endOffset":33144,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCompare","ranges":[{"startOffset":33224,"endOffset":33616,"count":2},{"startOffset":33381,"endOffset":33403,"count":0},{"startOffset":33476,"endOffset":33599,"count":0}],"isBlockCoverage":true},{"functionName":"memoizeSet","ranges":[{"startOffset":33659,"endOffset":34108,"count":2},{"startOffset":33820,"endOffset":33837,"count":0},{"startOffset":33910,"endOffset":34106,"count":1}],"isBlockCoverage":true},{"functionName":"deepEqual","ranges":[{"startOffset":34177,"endOffset":34563,"count":5},{"startOffset":34256,"endOffset":34277,"count":2},{"startOffset":34279,"endOffset":34359,"count":0},{"startOffset":34458,"endOffset":34488,"count":4},{"startOffset":34488,"endOffset":34562,"count":1}],"isBlockCoverage":true},{"functionName":"simpleEqual","ranges":[{"startOffset":34596,"endOffset":35043,"count":5},{"startOffset":34698,"endOffset":34785,"count":4},{"startOffset":34733,"endOffset":34780,"count":0},{"startOffset":34785,"endOffset":34828,"count":1},{"startOffset":34828,"endOffset":34909,"count":0},{"startOffset":34911,"endOffset":34933,"count":0},{"startOffset":34933,"endOffset":35001,"count":1},{"startOffset":35003,"endOffset":35026,"count":0},{"startOffset":35026,"endOffset":35042,"count":1}],"isBlockCoverage":true},{"functionName":"extensiveDeepEqual","ranges":[{"startOffset":35080,"endOffset":36537,"count":1},{"startOffset":35227,"endOffset":35234,"count":0},{"startOffset":35452,"endOffset":35487,"count":0},{"startOffset":35618,"endOffset":35654,"count":0},{"startOffset":35673,"endOffset":36081,"count":0},{"startOffset":36175,"endOffset":36273,"count":0}],"isBlockCoverage":true},{"functionName":"extensiveDeepEqualByType","ranges":[{"startOffset":36588,"endOffset":38706,"count":1},{"startOffset":36712,"endOffset":36726,"count":0},{"startOffset":36731,"endOffset":36745,"count":0},{"startOffset":36750,"endOffset":36765,"count":0},{"startOffset":36770,"endOffset":36861,"count":0},{"startOffset":36866,"endOffset":36881,"count":0},{"startOffset":36886,"endOffset":36900,"count":0},{"startOffset":36905,"endOffset":36921,"count":0},{"startOffset":36926,"endOffset":36941,"count":0},{"startOffset":36946,"endOffset":37012,"count":0},{"startOffset":37017,"endOffset":37127,"count":0},{"startOffset":37132,"endOffset":37149,"count":0},{"startOffset":37154,"endOffset":37171,"count":0},{"startOffset":37176,"endOffset":37194,"count":0},{"startOffset":37199,"endOffset":37224,"count":0},{"startOffset":37229,"endOffset":37247,"count":0},{"startOffset":37252,"endOffset":37271,"count":0},{"startOffset":37276,"endOffset":37294,"count":0},{"startOffset":37299,"endOffset":37318,"count":0},{"startOffset":37323,"endOffset":37343,"count":0},{"startOffset":37348,"endOffset":37368,"count":0},{"startOffset":37373,"endOffset":37458,"count":0},{"startOffset":37463,"endOffset":37538,"count":0},{"startOffset":37543,"endOffset":37633,"count":0},{"startOffset":37638,"endOffset":37772,"count":0},{"startOffset":37777,"endOffset":37900,"count":0},{"startOffset":37905,"endOffset":37987,"count":0},{"startOffset":37992,"endOffset":38074,"count":0},{"startOffset":38079,"endOffset":38105,"count":0},{"startOffset":38110,"endOffset":38136,"count":0},{"startOffset":38141,"endOffset":38171,"count":0},{"startOffset":38176,"endOffset":38200,"count":0},{"startOffset":38205,"endOffset":38235,"count":0},{"startOffset":38240,"endOffset":38271,"count":0},{"startOffset":38276,"endOffset":38361,"count":0},{"startOffset":38366,"endOffset":38484,"count":0},{"startOffset":38489,"endOffset":38514,"count":0},{"startOffset":38519,"endOffset":38617,"count":0}],"isBlockCoverage":true},{"functionName":"regexpEqual","ranges":[{"startOffset":38769,"endOffset":38897,"count":0}],"isBlockCoverage":false},{"functionName":"entriesEqual","ranges":[{"startOffset":38934,"endOffset":39633,"count":0}],"isBlockCoverage":false},{"functionName":"iterableEqual","ranges":[{"startOffset":39672,"endOffset":40071,"count":1},{"startOffset":39822,"endOffset":39845,"count":0},{"startOffset":39866,"endOffset":39888,"count":0},{"startOffset":39934,"endOffset":40054,"count":2},{"startOffset":40023,"endOffset":40050,"count":0}],"isBlockCoverage":true},{"functionName":"generatorEqual","ranges":[{"startOffset":40112,"endOffset":40293,"count":0}],"isBlockCoverage":false},{"functionName":"hasIteratorFunction","ranges":[{"startOffset":40336,"endOffset":40537,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorEntries","ranges":[{"startOffset":40590,"endOffset":40807,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratorEntries","ranges":[{"startOffset":40858,"endOffset":41142,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableKeys","ranges":[{"startOffset":41195,"endOffset":41317,"count":2},{"startOffset":41275,"endOffset":41300,"count":4}],"isBlockCoverage":true},{"functionName":"getEnumerableSymbols","ranges":[{"startOffset":41366,"endOffset":41666,"count":2},{"startOffset":41523,"endOffset":41649,"count":0}],"isBlockCoverage":true},{"functionName":"keysEqual","ranges":[{"startOffset":41721,"endOffset":42042,"count":1},{"startOffset":41840,"endOffset":41862,"count":0},{"startOffset":41901,"endOffset":42025,"count":2},{"startOffset":41994,"endOffset":42021,"count":0}],"isBlockCoverage":true},{"functionName":"objectEqual","ranges":[{"startOffset":42075,"endOffset":43297,"count":1},{"startOffset":42676,"endOffset":42703,"count":0},{"startOffset":42787,"endOffset":42994,"count":0},{"startOffset":42996,"endOffset":43192,"count":0},{"startOffset":43193,"endOffset":43222,"count":0},{"startOffset":43223,"endOffset":43255,"count":0},{"startOffset":43257,"endOffset":43296,"count":0}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":43334,"endOffset":43419,"count":10}],"isBlockCoverage":true},{"functionName":"mapSymbols","ranges":[{"startOffset":43456,"endOffset":43664,"count":2}],"isBlockCoverage":true},{"functionName":"mapSymbol","ranges":[{"startOffset":43523,"endOffset":43646,"count":4},{"startOffset":43586,"endOffset":43624,"count":0}],"isBlockCoverage":true},{"functionName":"hasProperty","ranges":[{"startOffset":43733,"endOffset":43872,"count":14},{"startOffset":43817,"endOffset":43840,"count":0}],"isBlockCoverage":true},{"functionName":"parsePath","ranges":[{"startOffset":43909,"endOffset":44428,"count":0}],"isBlockCoverage":false},{"functionName":"internalGetPathValue","ranges":[{"startOffset":44461,"endOffset":44993,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":45048,"endOffset":45414,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion","ranges":[{"startOffset":45477,"endOffset":45744,"count":355}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":45835,"endOffset":45992,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46001,"endOffset":46164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46223,"endOffset":46368,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46377,"endOffset":46528,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.addProperty","ranges":[{"startOffset":46557,"endOffset":46620,"count":43}],"isBlockCoverage":true},{"functionName":"Assertion.addMethod","ranges":[{"startOffset":46644,"endOffset":46705,"count":49}],"isBlockCoverage":true},{"functionName":"Assertion.addChainableMethod","ranges":[{"startOffset":46738,"endOffset":46844,"count":8}],"isBlockCoverage":true},{"functionName":"Assertion.overwriteProperty","ranges":[{"startOffset":46876,"endOffset":46945,"count":43}],"isBlockCoverage":true},{"functionName":"Assertion.overwriteMethod","ranges":[{"startOffset":46975,"endOffset":47042,"count":50}],"isBlockCoverage":true},{"functionName":"Assertion.overwriteChainableMethod","ranges":[{"startOffset":47081,"endOffset":47193,"count":8}],"isBlockCoverage":true},{"functionName":"Assertion.assert","ranges":[{"startOffset":47224,"endOffset":47970,"count":118},{"startOffset":47393,"endOffset":47414,"count":67},{"startOffset":47420,"endOffset":47437,"count":67},{"startOffset":47474,"endOffset":47491,"count":0},{"startOffset":47503,"endOffset":47968,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":48032,"endOffset":48081,"count":34}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":48090,"endOffset":48140,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":48182,"endOffset":48303,"count":1079}],"isBlockCoverage":true},{"functionName":"addProperty","ranges":[{"startOffset":48380,"endOffset":48943,"count":46},{"startOffset":48451,"endOffset":48469,"count":17},{"startOffset":48470,"endOffset":48478,"count":29}],"isBlockCoverage":true},{"functionName":"getter","ranges":[{"startOffset":48453,"endOffset":48469,"count":168}],"isBlockCoverage":true},{"functionName":"propertyGetter","ranges":[{"startOffset":48549,"endOffset":48892,"count":191},{"startOffset":48605,"endOffset":48631,"count":0},{"startOffset":48633,"endOffset":48686,"count":0},{"startOffset":48762,"endOffset":48776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49068,"endOffset":49082,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":49095,"endOffset":49698,"count":151},{"startOffset":49191,"endOffset":49201,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":49251,"endOffset":49677,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":49777,"endOffset":50215,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":50345,"endOffset":51952,"count":697},{"startOffset":50422,"endOffset":50433,"count":0}],"isBlockCoverage":true},{"functionName":"proxyGetter","ranges":[{"startOffset":50492,"endOffset":51928,"count":2919},{"startOffset":50660,"endOffset":51751,"count":0},{"startOffset":51796,"endOffset":51824,"count":338},{"startOffset":51826,"endOffset":51878,"count":337}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51000,"endOffset":51492,"count":0}],"isBlockCoverage":false},{"functionName":"stringDistanceCapped","ranges":[{"startOffset":51981,"endOffset":52726,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":52813,"endOffset":53307,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52898,"endOffset":53196,"count":49},{"startOffset":52944,"endOffset":52992,"count":0},{"startOffset":53074,"endOffset":53088,"count":0}],"isBlockCoverage":true},{"functionName":"overwriteProperty","ranges":[{"startOffset":53380,"endOffset":54258,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53517,"endOffset":53533,"count":0}],"isBlockCoverage":false},{"functionName":"overwritingPropertyGetter","ranges":[{"startOffset":53684,"endOffset":54196,"count":191},{"startOffset":53751,"endOffset":53777,"count":0},{"startOffset":53779,"endOffset":53843,"count":0},{"startOffset":54080,"endOffset":54195,"count":0}],"isBlockCoverage":true},{"functionName":"overwriteMethod","ranges":[{"startOffset":54345,"endOffset":55247,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54450,"endOffset":54516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54655,"endOffset":55103,"count":49},{"startOffset":54701,"endOffset":54760,"count":48},{"startOffset":54995,"endOffset":55102,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55436,"endOffset":55450,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55524,"endOffset":55692,"count":3},{"startOffset":55645,"endOffset":55657,"count":0}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":55769,"endOffset":57567,"count":8},{"startOffset":55882,"endOffset":55974,"count":2},{"startOffset":56063,"endOffset":56092,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55930,"endOffset":55948,"count":15}],"isBlockCoverage":true},{"functionName":"chainableMethodGetter","ranges":[{"startOffset":56205,"endOffset":57509,"count":49},{"startOffset":57026,"endOffset":57406,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56351,"endOffset":56728,"count":49},{"startOffset":56604,"endOffset":56727,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57125,"endOffset":57396,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":57665,"endOffset":58624,"count":8}],"isBlockCoverage":true},{"functionName":"overwritingChainableMethodGetter","ranges":[{"startOffset":57909,"endOffset":58183,"count":49},{"startOffset":58075,"endOffset":58182,"count":0}],"isBlockCoverage":true},{"functionName":"overwritingChainableMethodWrapper","ranges":[{"startOffset":58316,"endOffset":58583,"count":49},{"startOffset":58475,"endOffset":58582,"count":0}],"isBlockCoverage":true},{"functionName":"compareByInspect","ranges":[{"startOffset":58726,"endOffset":58806,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":58907,"endOffset":59166,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":59292,"endOffset":59408,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectType","ranges":[{"startOffset":59564,"endOffset":59726,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":59765,"endOffset":60336,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":60401,"endOffset":60443,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp2","ranges":[{"startOffset":60472,"endOffset":60567,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeric","ranges":[{"startOffset":60599,"endOffset":60677,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60949,"endOffset":61000,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61032,"endOffset":61077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61110,"endOffset":61153,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61188,"endOffset":61233,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61265,"endOffset":61307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61343,"endOffset":61389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61421,"endOffset":61492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61524,"endOffset":61595,"count":0}],"isBlockCoverage":false},{"functionName":"an","ranges":[{"startOffset":61918,"endOffset":62586,"count":15},{"startOffset":61959,"endOffset":61987,"count":0},{"startOffset":62116,"endOffset":62123,"count":13},{"startOffset":62124,"endOffset":62130,"count":2},{"startOffset":62229,"endOffset":62414,"count":0}],"isBlockCoverage":true},{"functionName":"SameValueZero","ranges":[{"startOffset":62684,"endOffset":62760,"count":0}],"isBlockCoverage":false},{"functionName":"includeChainingBehavior","ranges":[{"startOffset":62801,"endOffset":62872,"count":34}],"isBlockCoverage":true},{"functionName":"include","ranges":[{"startOffset":62933,"endOffset":65590,"count":34},{"startOffset":62977,"endOffset":63005,"count":0},{"startOffset":63220,"endOffset":63229,"count":0},{"startOffset":63251,"endOffset":63271,"count":0},{"startOffset":63309,"endOffset":63325,"count":0},{"startOffset":63381,"endOffset":63450,"count":31},{"startOffset":63455,"endOffset":63684,"count":0},{"startOffset":63689,"endOffset":63807,"count":0},{"startOffset":63812,"endOffset":64012,"count":0},{"startOffset":64017,"endOffset":64222,"count":3},{"startOffset":64049,"endOffset":64150,"count":0},{"startOffset":64227,"endOffset":65407,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63719,"endOffset":63792,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63864,"endOffset":63941,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64079,"endOffset":64140,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64694,"endOffset":65285,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65949,"endOffset":66082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66115,"endOffset":66297,"count":17},{"startOffset":66276,"endOffset":66283,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66333,"endOffset":66577,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66614,"endOffset":67252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67286,"endOffset":67469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67502,"endOffset":67645,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67683,"endOffset":67838,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67870,"endOffset":68010,"count":0}],"isBlockCoverage":false},{"functionName":"assertExist","ranges":[{"startOffset":68013,"endOffset":68199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68358,"endOffset":69412,"count":3},{"startOffset":68500,"endOffset":68516,"count":0},{"startOffset":68645,"endOffset":68656,"count":0},{"startOffset":68661,"endOffset":68714,"count":0},{"startOffset":68719,"endOffset":68734,"count":0},{"startOffset":68739,"endOffset":68881,"count":0},{"startOffset":68886,"endOffset":69034,"count":0},{"startOffset":69039,"endOffset":69289,"count":0}],"isBlockCoverage":true},{"functionName":"checkArguments","ranges":[{"startOffset":69415,"endOffset":69645,"count":0}],"isBlockCoverage":false},{"functionName":"assertEqual","ranges":[{"startOffset":69792,"endOffset":70264,"count":34},{"startOffset":69840,"endOffset":69868,"count":0},{"startOffset":69931,"endOffset":70081,"count":1},{"startOffset":70081,"endOffset":70262,"count":33}],"isBlockCoverage":true},{"functionName":"assertEql","ranges":[{"startOffset":70428,"endOffset":70724,"count":1},{"startOffset":70474,"endOffset":70502,"count":0}],"isBlockCoverage":true},{"functionName":"assertAbove","ranges":[{"startOffset":70836,"endOffset":72523,"count":0}],"isBlockCoverage":false},{"functionName":"assertLeast","ranges":[{"startOffset":72692,"endOffset":74387,"count":0}],"isBlockCoverage":false},{"functionName":"assertBelow","ranges":[{"startOffset":74564,"endOffset":76258,"count":0}],"isBlockCoverage":false},{"functionName":"assertMost","ranges":[{"startOffset":76424,"endOffset":78114,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":78312,"endOffset":80260,"count":0}],"isBlockCoverage":false},{"functionName":"assertInstanceOf","ranges":[{"startOffset":80263,"endOffset":81076,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":81229,"endOffset":83515,"count":14},{"startOffset":81286,"endOffset":81314,"count":0},{"startOffset":81518,"endOffset":81534,"count":0},{"startOffset":81557,"endOffset":81759,"count":0},{"startOffset":81797,"endOffset":81821,"count":0},{"startOffset":81822,"endOffset":81846,"count":0},{"startOffset":81848,"endOffset":82007,"count":0},{"startOffset":82027,"endOffset":82035,"count":0},{"startOffset":82037,"endOffset":82172,"count":0},{"startOffset":82211,"endOffset":82333,"count":0},{"startOffset":82422,"endOffset":82446,"count":0},{"startOffset":82472,"endOffset":82488,"count":0},{"startOffset":82517,"endOffset":82537,"count":0},{"startOffset":82612,"endOffset":82634,"count":0},{"startOffset":82652,"endOffset":82673,"count":0},{"startOffset":82694,"endOffset":82718,"count":0},{"startOffset":82785,"endOffset":82848,"count":0},{"startOffset":82874,"endOffset":82905,"count":0},{"startOffset":82970,"endOffset":82995,"count":0},{"startOffset":83208,"endOffset":83481,"count":0}],"isBlockCoverage":true},{"functionName":"isEql","ranges":[{"startOffset":82540,"endOffset":82569,"count":0}],"isBlockCoverage":false},{"functionName":"assertOwnProperty","ranges":[{"startOffset":83607,"endOffset":83727,"count":0}],"isBlockCoverage":false},{"functionName":"assertOwnPropertyDescriptor","ranges":[{"startOffset":83890,"endOffset":84941,"count":0}],"isBlockCoverage":false},{"functionName":"assertLengthChain","ranges":[{"startOffset":85164,"endOffset":85229,"count":0}],"isBlockCoverage":false},{"functionName":"assertLength","ranges":[{"startOffset":85278,"endOffset":85974,"count":0}],"isBlockCoverage":false},{"functionName":"assertMatch","ranges":[{"startOffset":86161,"endOffset":86392,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":86547,"endOffset":86918,"count":0}],"isBlockCoverage":false},{"functionName":"assertKeys","ranges":[{"startOffset":86921,"endOffset":89570,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrows","ranges":[{"startOffset":89686,"endOffset":93986,"count":0}],"isBlockCoverage":false},{"functionName":"respondTo","ranges":[{"startOffset":94158,"endOffset":94564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94720,"endOffset":94765,"count":0}],"isBlockCoverage":false},{"functionName":"satisfy","ranges":[{"startOffset":94768,"endOffset":95114,"count":0}],"isBlockCoverage":false},{"functionName":"closeTo","ranges":[{"startOffset":95227,"endOffset":96357,"count":0}],"isBlockCoverage":false},{"functionName":"isSubsetOf","ranges":[{"startOffset":96474,"endOffset":97259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97325,"endOffset":98385,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98422,"endOffset":98677,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":98680,"endOffset":99807,"count":0}],"isBlockCoverage":false},{"functionName":"assertChanges","ranges":[{"startOffset":99869,"endOffset":100848,"count":0}],"isBlockCoverage":false},{"functionName":"assertIncreases","ranges":[{"startOffset":100982,"endOffset":102031,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecreases","ranges":[{"startOffset":102177,"endOffset":103226,"count":0}],"isBlockCoverage":false},{"functionName":"assertDelta","ranges":[{"startOffset":103372,"endOffset":104023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104136,"endOffset":104378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104413,"endOffset":104641,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104676,"endOffset":104904,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104939,"endOffset":105153,"count":0}],"isBlockCoverage":false},{"functionName":"compareSubset","ranges":[{"startOffset":105156,"endOffset":106278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106356,"endOffset":106649,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":106685,"endOffset":106756,"count":115}],"isBlockCoverage":true},{"functionName":"expect.fail","ranges":[{"startOffset":106797,"endOffset":107083,"count":0}],"isBlockCoverage":false},{"functionName":"Should","ranges":[{"startOffset":107180,"endOffset":107192,"count":1}],"isBlockCoverage":true},{"functionName":"should","ranges":[{"startOffset":107204,"endOffset":107216,"count":1}],"isBlockCoverage":true},{"functionName":"loadShould","ranges":[{"startOffset":107221,"endOffset":109085,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":109203,"endOffset":109363,"count":0}],"isBlockCoverage":false},{"functionName":"assert.fail","ranges":[{"startOffset":109404,"endOffset":109690,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isOk","ranges":[{"startOffset":109706,"endOffset":109780,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotOk","ranges":[{"startOffset":109799,"endOffset":109880,"count":0}],"isBlockCoverage":false},{"functionName":"assert.equal","ranges":[{"startOffset":109897,"endOffset":110149,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notEqual","ranges":[{"startOffset":110169,"endOffset":110424,"count":0}],"isBlockCoverage":false},{"functionName":"assert.strictEqual","ranges":[{"startOffset":110447,"endOffset":110541,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notStrictEqual","ranges":[{"startOffset":110567,"endOffset":110668,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepEqual.assert.deepStrictEqual","ranges":[{"startOffset":110714,"endOffset":110804,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepEqual","ranges":[{"startOffset":110828,"endOffset":110925,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAbove","ranges":[{"startOffset":110944,"endOffset":111037,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtLeast","ranges":[{"startOffset":111058,"endOffset":111157,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBelow","ranges":[{"startOffset":111176,"endOffset":111269,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtMost","ranges":[{"startOffset":111289,"endOffset":111386,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isTrue","ranges":[{"startOffset":111404,"endOffset":111485,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotTrue","ranges":[{"startOffset":111506,"endOffset":111598,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFalse","ranges":[{"startOffset":111617,"endOffset":111700,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFalse","ranges":[{"startOffset":111722,"endOffset":111816,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNull","ranges":[{"startOffset":111834,"endOffset":111919,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNull","ranges":[{"startOffset":111940,"endOffset":112032,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNaN","ranges":[{"startOffset":112049,"endOffset":112128,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNaN","ranges":[{"startOffset":112148,"endOffset":112246,"count":0}],"isBlockCoverage":false},{"functionName":"assert.exists","ranges":[{"startOffset":112264,"endOffset":112343,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notExists","ranges":[{"startOffset":112364,"endOffset":112450,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isUndefined","ranges":[{"startOffset":112473,"endOffset":112565,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isDefined","ranges":[{"startOffset":112586,"endOffset":112680,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isCallable","ranges":[{"startOffset":112702,"endOffset":112800,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotCallable","ranges":[{"startOffset":112825,"endOffset":112930,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isObject","ranges":[{"startOffset":112950,"endOffset":113040,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotObject","ranges":[{"startOffset":113063,"endOffset":113160,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isArray","ranges":[{"startOffset":113179,"endOffset":113268,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotArray","ranges":[{"startOffset":113290,"endOffset":113386,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isString","ranges":[{"startOffset":113406,"endOffset":113496,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotString","ranges":[{"startOffset":113519,"endOffset":113616,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumber","ranges":[{"startOffset":113636,"endOffset":113726,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumber","ranges":[{"startOffset":113749,"endOffset":113846,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumeric","ranges":[{"startOffset":113867,"endOffset":113951,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumeric","ranges":[{"startOffset":113975,"endOffset":114066,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFinite","ranges":[{"startOffset":114086,"endOffset":114171,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBoolean","ranges":[{"startOffset":114192,"endOffset":114284,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotBoolean","ranges":[{"startOffset":114308,"endOffset":114407,"count":0}],"isBlockCoverage":false},{"functionName":"assert.typeOf","ranges":[{"startOffset":114425,"endOffset":114517,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notTypeOf","ranges":[{"startOffset":114538,"endOffset":114649,"count":0}],"isBlockCoverage":false},{"functionName":"assert.instanceOf","ranges":[{"startOffset":114671,"endOffset":114776,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInstanceOf","ranges":[{"startOffset":114801,"endOffset":114921,"count":0}],"isBlockCoverage":false},{"functionName":"assert.include","ranges":[{"startOffset":114940,"endOffset":115029,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInclude","ranges":[{"startOffset":115051,"endOffset":115147,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepInclude","ranges":[{"startOffset":115170,"endOffset":115268,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepInclude","ranges":[{"startOffset":115294,"endOffset":115399,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedInclude","ranges":[{"startOffset":115424,"endOffset":115526,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedInclude","ranges":[{"startOffset":115554,"endOffset":115671,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedInclude","ranges":[{"startOffset":115700,"endOffset":115819,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedInclude","ranges":[{"startOffset":115851,"endOffset":115989,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownInclude","ranges":[{"startOffset":116011,"endOffset":116107,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnInclude","ranges":[{"startOffset":116132,"endOffset":116235,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnInclude","ranges":[{"startOffset":116261,"endOffset":116366,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnInclude","ranges":[{"startOffset":116395,"endOffset":116515,"count":0}],"isBlockCoverage":false},{"functionName":"assert.match","ranges":[{"startOffset":116532,"endOffset":116618,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notMatch","ranges":[{"startOffset":116638,"endOffset":116731,"count":0}],"isBlockCoverage":false},{"functionName":"assert.property","ranges":[{"startOffset":116751,"endOffset":116852,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notProperty","ranges":[{"startOffset":116875,"endOffset":116983,"count":0}],"isBlockCoverage":false},{"functionName":"assert.propertyVal","ranges":[{"startOffset":117006,"endOffset":117120,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notPropertyVal","ranges":[{"startOffset":117146,"endOffset":117279,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepPropertyVal","ranges":[{"startOffset":117306,"endOffset":117441,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepPropertyVal","ranges":[{"startOffset":117471,"endOffset":117621,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownProperty","ranges":[{"startOffset":117644,"endOffset":117752,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnProperty","ranges":[{"startOffset":117778,"endOffset":117901,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownPropertyVal","ranges":[{"startOffset":117927,"endOffset":118064,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnPropertyVal","ranges":[{"startOffset":118093,"endOffset":118245,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnPropertyVal","ranges":[{"startOffset":118275,"endOffset":118429,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnPropertyVal","ranges":[{"startOffset":118462,"endOffset":118623,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedProperty","ranges":[{"startOffset":118649,"endOffset":118771,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedProperty","ranges":[{"startOffset":118800,"endOffset":118941,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedPropertyVal","ranges":[{"startOffset":118970,"endOffset":119117,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedPropertyVal","ranges":[{"startOffset":119149,"endOffset":119303,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedPropertyVal","ranges":[{"startOffset":119336,"endOffset":119492,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedPropertyVal","ranges":[{"startOffset":119528,"endOffset":119691,"count":0}],"isBlockCoverage":false},{"functionName":"assert.lengthOf","ranges":[{"startOffset":119711,"endOffset":119810,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyKeys","ranges":[{"startOffset":119832,"endOffset":119935,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllKeys","ranges":[{"startOffset":119957,"endOffset":120060,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllKeys","ranges":[{"startOffset":120087,"endOffset":120206,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyKeys","ranges":[{"startOffset":120236,"endOffset":120359,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllKeys","ranges":[{"startOffset":120389,"endOffset":120512,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyDeepKeys","ranges":[{"startOffset":120538,"endOffset":120658,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllDeepKeys","ranges":[{"startOffset":120684,"endOffset":120804,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllDeepKeys","ranges":[{"startOffset":120835,"endOffset":120975,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyDeepKeys","ranges":[{"startOffset":121009,"endOffset":121153,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllDeepKeys","ranges":[{"startOffset":121187,"endOffset":121331,"count":0}],"isBlockCoverage":false},{"functionName":"assert.throws","ranges":[{"startOffset":121349,"endOffset":121669,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotThrow","ranges":[{"startOffset":121693,"endOffset":121979,"count":0}],"isBlockCoverage":false},{"functionName":"assert.operator","ranges":[{"startOffset":121999,"endOffset":122951,"count":0}],"isBlockCoverage":false},{"functionName":"assert.closeTo","ranges":[{"startOffset":122970,"endOffset":123079,"count":0}],"isBlockCoverage":false},{"functionName":"assert.approximately","ranges":[{"startOffset":123104,"endOffset":123237,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameMembers","ranges":[{"startOffset":123260,"endOffset":123370,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameMembers","ranges":[{"startOffset":123396,"endOffset":123533,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepMembers","ranges":[{"startOffset":123560,"endOffset":123699,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepMembers","ranges":[{"startOffset":123729,"endOffset":123875,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameOrderedMembers","ranges":[{"startOffset":123905,"endOffset":124050,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameOrderedMembers","ranges":[{"startOffset":124083,"endOffset":124235,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepOrderedMembers","ranges":[{"startOffset":124269,"endOffset":124423,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepOrderedMembers","ranges":[{"startOffset":124460,"endOffset":124621,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeMembers","ranges":[{"startOffset":124647,"endOffset":124778,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeMembers","ranges":[{"startOffset":124807,"endOffset":124957,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepMembers","ranges":[{"startOffset":124987,"endOffset":125139,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepMembers","ranges":[{"startOffset":125172,"endOffset":125331,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeOrderedMembers","ranges":[{"startOffset":125364,"endOffset":125522,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeOrderedMembers","ranges":[{"startOffset":125558,"endOffset":125723,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepOrderedMembers","ranges":[{"startOffset":125760,"endOffset":125927,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepOrderedMembers","ranges":[{"startOffset":125967,"endOffset":126141,"count":0}],"isBlockCoverage":false},{"functionName":"assert.oneOf","ranges":[{"startOffset":126158,"endOffset":126257,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isIterable","ranges":[{"startOffset":126279,"endOffset":126533,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changes","ranges":[{"startOffset":126552,"endOffset":126751,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesBy","ranges":[{"startOffset":126772,"endOffset":127091,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotChange","ranges":[{"startOffset":127116,"endOffset":127344,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesButNotBy","ranges":[{"startOffset":127371,"endOffset":127704,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increases","ranges":[{"startOffset":127725,"endOffset":127935,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesBy","ranges":[{"startOffset":127958,"endOffset":128281,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotIncrease","ranges":[{"startOffset":128308,"endOffset":128540,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesButNotBy","ranges":[{"startOffset":128569,"endOffset":128906,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreases","ranges":[{"startOffset":128927,"endOffset":129137,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesBy","ranges":[{"startOffset":129160,"endOffset":129483,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecrease","ranges":[{"startOffset":129510,"endOffset":129742,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecreaseBy","ranges":[{"startOffset":129771,"endOffset":130111,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesButNotBy","ranges":[{"startOffset":130140,"endOffset":130477,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ifError","ranges":[{"startOffset":130496,"endOffset":130545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isExtensible","ranges":[{"startOffset":130569,"endOffset":130662,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotExtensible","ranges":[{"startOffset":130689,"endOffset":130789,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isSealed","ranges":[{"startOffset":130809,"endOffset":130894,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotSealed","ranges":[{"startOffset":130917,"endOffset":131009,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFrozen","ranges":[{"startOffset":131029,"endOffset":131114,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFrozen","ranges":[{"startOffset":131137,"endOffset":131229,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isEmpty","ranges":[{"startOffset":131248,"endOffset":131331,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotEmpty","ranges":[{"startOffset":131353,"endOffset":131443,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsSubset","ranges":[{"startOffset":131469,"endOffset":131545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotContainSubset","ranges":[{"startOffset":131577,"endOffset":131657,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":132216,"endOffset":132489,"count":1}],"isBlockCoverage":true}]},{"scriptId":"376","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/client/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9040,"count":1}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":1406,"endOffset":1562,"count":1}],"isBlockCoverage":true},{"functionName":"assertCapability","ranges":[{"startOffset":1567,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":1839,"endOffset":2973,"count":1},{"startOffset":2295,"endOffset":2395,"count":0},{"startOffset":2475,"endOffset":2596,"count":0},{"startOffset":2835,"endOffset":2967,"count":0}],"isBlockCoverage":true},{"functionName":"getServerCapabilities","ranges":[{"startOffset":3101,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"getServerVersion","ranges":[{"startOffset":3314,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"assertCapabilityForMethod","ranges":[{"startOffset":3381,"endOffset":5594,"count":0}],"isBlockCoverage":false},{"functionName":"assertNotificationCapability","ranges":[{"startOffset":5599,"endOffset":6416,"count":1},{"startOffset":5692,"endOffset":6005,"count":0},{"startOffset":6154,"endOffset":6273,"count":0},{"startOffset":6286,"endOffset":6400,"count":0}],"isBlockCoverage":true},{"functionName":"assertRequestHandlerCapability","ranges":[{"startOffset":6421,"endOffset":7083,"count":1},{"startOffset":6500,"endOffset":6732,"count":0},{"startOffset":6745,"endOffset":6959,"count":0}],"isBlockCoverage":true},{"functionName":"ping","ranges":[{"startOffset":7088,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"complete","ranges":[{"startOffset":7197,"endOffset":7339,"count":0}],"isBlockCoverage":false},{"functionName":"setLoggingLevel","ranges":[{"startOffset":7344,"endOffset":7497,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":7502,"endOffset":7638,"count":0}],"isBlockCoverage":false},{"functionName":"listPrompts","ranges":[{"startOffset":7643,"endOffset":7784,"count":1}],"isBlockCoverage":true},{"functionName":"listResources","ranges":[{"startOffset":7789,"endOffset":7936,"count":1}],"isBlockCoverage":true},{"functionName":"listResourceTemplates","ranges":[{"startOffset":7941,"endOffset":8114,"count":0}],"isBlockCoverage":false},{"functionName":"readResource","ranges":[{"startOffset":8119,"endOffset":8264,"count":0}],"isBlockCoverage":false},{"functionName":"subscribeResource","ranges":[{"startOffset":8269,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribeResource","ranges":[{"startOffset":8422,"endOffset":8574,"count":0}],"isBlockCoverage":false},{"functionName":"callTool","ranges":[{"startOffset":8579,"endOffset":8741,"count":10}],"isBlockCoverage":true},{"functionName":"listTools","ranges":[{"startOffset":8746,"endOffset":8881,"count":1}],"isBlockCoverage":true},{"functionName":"sendRootsListChanged","ranges":[{"startOffset":8886,"endOffset":9004,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27183,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1936,"endOffset":1965,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":3411,"endOffset":5086,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5088,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5579,"endOffset":6093,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6630,"endOffset":6877,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6913,"endOffset":7277,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6934,"endOffset":7274,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7414,"endOffset":8312,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":8925,"endOffset":13643,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":13787,"endOffset":13987,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":13989,"endOffset":19301,"count":1},{"startOffset":14150,"endOffset":14215,"count":0},{"startOffset":14286,"endOffset":14477,"count":0},{"startOffset":14557,"endOffset":14580,"count":0},{"startOffset":14754,"endOffset":14807,"count":0},{"startOffset":14877,"endOffset":14941,"count":0},{"startOffset":15004,"endOffset":15028,"count":0},{"startOffset":15030,"endOffset":15108,"count":0},{"startOffset":15171,"endOffset":15195,"count":0},{"startOffset":15197,"endOffset":15275,"count":0},{"startOffset":15386,"endOffset":15428,"count":0},{"startOffset":15430,"endOffset":15561,"count":0},{"startOffset":15625,"endOffset":15745,"count":0},{"startOffset":16031,"endOffset":16139,"count":0},{"startOffset":16162,"endOffset":17024,"count":0},{"startOffset":17067,"endOffset":17120,"count":0},{"startOffset":17198,"endOffset":17212,"count":0},{"startOffset":17465,"endOffset":18069,"count":0},{"startOffset":18166,"endOffset":18209,"count":7},{"startOffset":18247,"endOffset":18712,"count":0},{"startOffset":18743,"endOffset":18996,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18491,"endOffset":18700,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19303,"endOffset":19559,"count":1},{"startOffset":19377,"endOffset":19384,"count":0},{"startOffset":19510,"endOffset":19557,"count":0}],"isBlockCoverage":true},{"functionName":"spawn","ranges":[{"startOffset":20114,"endOffset":21338,"count":1},{"startOffset":20480,"endOffset":20854,"count":0},{"startOffset":20939,"endOffset":20987,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20513,"endOffset":20701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20745,"endOffset":20848,"count":0}],"isBlockCoverage":false},{"functionName":"onAbortListener","ranges":[{"startOffset":21214,"endOffset":21315,"count":1}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":22098,"endOffset":23587,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":23590,"endOffset":23976,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":24489,"endOffset":24953,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":25451,"endOffset":25827,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":25830,"endOffset":26053,"count":16},{"startOffset":25955,"endOffset":26051,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26056,"endOffset":26218,"count":1}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":26221,"endOffset":26409,"count":1},{"startOffset":26279,"endOffset":26325,"count":0},{"startOffset":26327,"endOffset":26407,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":26412,"endOffset":26685,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":26688,"endOffset":27051,"count":1},{"startOffset":26802,"endOffset":26852,"count":0},{"startOffset":26882,"endOffset":27049,"count":0}],"isBlockCoverage":true}]},{"scriptId":"378","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31757,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2498,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2564,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2680,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2754,"endOffset":2895,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2925,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4486,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5239,"endOffset":5696,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5761,"endOffset":5820,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5827,"endOffset":5881,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5946,"endOffset":6066,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6073,"endOffset":6232,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6243,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6660,"endOffset":8153,"count":1},{"startOffset":8083,"endOffset":8151,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":7001,"endOffset":8039,"count":1},{"startOffset":7092,"endOffset":7137,"count":0},{"startOffset":7270,"endOffset":7566,"count":0}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":8276,"endOffset":8754,"count":1},{"startOffset":8366,"endOffset":8373,"count":0},{"startOffset":8416,"endOffset":8752,"count":3},{"startOffset":8657,"endOffset":8676,"count":2},{"startOffset":8677,"endOffset":8702,"count":0},{"startOffset":8727,"endOffset":8752,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":8757,"endOffset":8847,"count":2}],"isBlockCoverage":true},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8850,"endOffset":9079,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9081,"endOffset":9194,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9228,"endOffset":12799,"count":1},{"startOffset":9379,"endOffset":9388,"count":0},{"startOffset":9723,"endOffset":10108,"count":0},{"startOffset":10226,"endOffset":10256,"count":0},{"startOffset":10597,"endOffset":10854,"count":0},{"startOffset":10869,"endOffset":11160,"count":0},{"startOffset":11281,"endOffset":12195,"count":3},{"startOffset":11346,"endOffset":11355,"count":0},{"startOffset":11377,"endOffset":11428,"count":0},{"startOffset":11649,"endOffset":11911,"count":0},{"startOffset":11936,"endOffset":12191,"count":2},{"startOffset":12012,"endOffset":12018,"count":0},{"startOffset":12045,"endOffset":12062,"count":1},{"startOffset":12064,"endOffset":12185,"count":1},{"startOffset":12285,"endOffset":12291,"count":0},{"startOffset":12382,"endOffset":12388,"count":0},{"startOffset":12457,"endOffset":12478,"count":0},{"startOffset":12549,"endOffset":12659,"count":3},{"startOffset":12633,"endOffset":12639,"count":1},{"startOffset":12640,"endOffset":12657,"count":2},{"startOffset":12743,"endOffset":12782,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12130,"endOffset":12175,"count":1}],"isBlockCoverage":true},{"functionName":"onErrorNT","ranges":[{"startOffset":12803,"endOffset":12864,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":12867,"endOffset":12917,"count":1}],"isBlockCoverage":true},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12950,"endOffset":13623,"count":1},{"startOffset":12994,"endOffset":12999,"count":0},{"startOffset":13057,"endOffset":13062,"count":0},{"startOffset":13223,"endOffset":13571,"count":0},{"startOffset":13575,"endOffset":13622,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":13666,"endOffset":13723,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13756,"endOffset":13810,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13845,"endOffset":13901,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13939,"endOffset":14901,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15049,"endOffset":27161,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":27196,"endOffset":27506,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":27540,"endOffset":30465,"count":1},{"startOffset":27672,"endOffset":27716,"count":0},{"startOffset":27748,"endOffset":27806,"count":0},{"startOffset":28050,"endOffset":28087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28200,"endOffset":30424,"count":3},{"startOffset":28458,"endOffset":28506,"count":0},{"startOffset":28536,"endOffset":28594,"count":0},{"startOffset":28621,"endOffset":28646,"count":1},{"startOffset":28647,"endOffset":28705,"count":1},{"startOffset":28692,"endOffset":28704,"count":0},{"startOffset":28707,"endOffset":28961,"count":2},{"startOffset":28764,"endOffset":28778,"count":0},{"startOffset":28961,"endOffset":30403,"count":1},{"startOffset":28988,"endOffset":29382,"count":0},{"startOffset":29502,"endOffset":30403,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":28225,"endOffset":28417,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":30468,"endOffset":30784,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":30787,"endOffset":30988,"count":2},{"startOffset":30907,"endOffset":30986,"count":1}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":30990,"endOffset":31631,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28392,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2942,"endOffset":3039,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3041,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4547,"endOffset":4625,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4628,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5073,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5640,"endOffset":5932,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6000,"endOffset":6496,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6522,"endOffset":9977,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":10007,"endOffset":10803,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":10807,"endOffset":11153,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11156,"endOffset":11802,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":11835,"endOffset":12146,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12251,"endOffset":12692,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12696,"endOffset":13456,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13459,"endOffset":13843,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":13846,"endOffset":14273,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14276,"endOffset":14414,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14417,"endOffset":14541,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14544,"endOffset":14741,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15312,"endOffset":18205,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18208,"endOffset":19351,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19353,"endOffset":19534,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19561,"endOffset":20129,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20171,"endOffset":20304,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20308,"endOffset":20362,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20392,"endOffset":20586,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20622,"endOffset":20936,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":20972,"endOffset":21124,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21154,"endOffset":21332,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21371,"endOffset":21567,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21611,"endOffset":21815,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":21860,"endOffset":22126,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22162,"endOffset":22540,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22578,"endOffset":22959,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23009,"endOffset":23620,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23672,"endOffset":24289,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":24293,"endOffset":24456,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24459,"endOffset":24623,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24626,"endOffset":24884,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24887,"endOffset":25002,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25028,"endOffset":25135,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25164,"endOffset":25273,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":25314,"endOffset":25371,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25412,"endOffset":25469,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25510,"endOffset":25567,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25608,"endOffset":25665,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":25704,"endOffset":25773,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":25813,"endOffset":25883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26002,"endOffset":26056,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26129,"endOffset":26185,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26338,"endOffset":26395,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26471,"endOffset":26530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26686,"endOffset":26743,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26819,"endOffset":26878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27030,"endOffset":27083,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27155,"endOffset":27210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27362,"endOffset":27419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27495,"endOffset":27554,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27661,"endOffset":27696,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27805,"endOffset":27842,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28127,"endOffset":28163,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28167,"endOffset":28208,"count":0}],"isBlockCoverage":false}]},{"scriptId":"380","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1837,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":464,"endOffset":565,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":568,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":665,"endOffset":1309,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1312,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2709,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1194,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1544,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2408,"endOffset":2649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"382","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/shared/stdio.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":160,"endOffset":265,"count":14},{"startOffset":212,"endOffset":250,"count":13},{"startOffset":251,"endOffset":258,"count":1}],"isBlockCoverage":true},{"functionName":"readMessage","ranges":[{"startOffset":270,"endOffset":628,"count":28},{"startOffset":313,"endOffset":349,"count":0},{"startOffset":426,"endOffset":627,"count":14}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":633,"endOffset":682,"count":1}],"isBlockCoverage":true},{"functionName":"deserializeMessage","ranges":[{"startOffset":692,"endOffset":786,"count":14}],"isBlockCoverage":true},{"functionName":"serializeMessage","ranges":[{"startOffset":794,"endOffset":875,"count":15}],"isBlockCoverage":true}]},{"scriptId":"383","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":false}]},{"scriptId":"384","url":"node:internal/process/finalization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3376,"count":1}],"isBlockCoverage":false},{"functionName":"createFinalization","ranges":[{"startOffset":405,"endOffset":3330,"count":1}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":688,"endOffset":813,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":817,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":1056,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"onBeforeExit","ranges":[{"startOffset":1111,"endOffset":1174,"count":0}],"isBlockCoverage":false},{"functionName":"callRefsToFree","ranges":[{"startOffset":1178,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1535,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"_register","ranges":[{"startOffset":1764,"endOffset":2011,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":2179,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"registerBeforeExit","ranges":[{"startOffset":2538,"endOffset":2753,"count":0}],"isBlockCoverage":false},{"functionName":"unregister","ranges":[{"startOffset":2866,"endOffset":3257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2814,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":355,"endOffset":774,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":778,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":947,"endOffset":998,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1002,"endOffset":1090,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1094,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1147,"endOffset":1235,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1239,"endOffset":1286,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1290,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"get excludeNetwork","ranges":[{"startOffset":1371,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"set excludeNetwork","ranges":[{"startOffset":1436,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1538,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1587,"endOffset":1724,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1728,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1804,"endOffset":1922,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1926,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1994,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2159,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2249,"endOffset":2381,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2387,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2560,"endOffset":2684,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2686,"endOffset":2760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/shared/protocol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12462,"count":1}],"isBlockCoverage":true},{"functionName":"Protocol","ranges":[{"startOffset":421,"endOffset":1330,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":817,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1131,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1304,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":1637,"endOffset":2256,"count":1}],"isBlockCoverage":true},{"functionName":"_transport.onclose","ranges":[{"startOffset":1735,"endOffset":1781,"count":2}],"isBlockCoverage":true},{"functionName":"_transport.onerror","ranges":[{"startOffset":1817,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"_transport.onmessage","ranges":[{"startOffset":1911,"endOffset":2210,"count":14},{"startOffset":2024,"endOffset":2200,"count":0}],"isBlockCoverage":true},{"functionName":"_onclose","ranges":[{"startOffset":2261,"endOffset":2735,"count":2},{"startOffset":2531,"endOffset":2546,"count":0},{"startOffset":2690,"endOffset":2729,"count":0}],"isBlockCoverage":true},{"functionName":"_onerror","ranges":[{"startOffset":2740,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"_onnotification","ranges":[{"startOffset":2871,"endOffset":3475,"count":0}],"isBlockCoverage":false},{"functionName":"_onrequest","ranges":[{"startOffset":3480,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"_onprogress","ranges":[{"startOffset":5613,"endOffset":6026,"count":0}],"isBlockCoverage":false},{"functionName":"_onresponse","ranges":[{"startOffset":6031,"endOffset":6705,"count":14},{"startOffset":6200,"endOffset":6347,"count":0},{"startOffset":6540,"endOffset":6699,"count":0}],"isBlockCoverage":true},{"functionName":"get transport","ranges":[{"startOffset":6710,"endOffset":6765,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":6816,"endOffset":6941,"count":1},{"startOffset":6912,"endOffset":6920,"count":0}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":7098,"endOffset":10670,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7167,"endOffset":10662,"count":14},{"startOffset":7256,"endOffset":7347,"count":0},{"startOffset":7412,"endOffset":7420,"count":0},{"startOffset":7463,"endOffset":7542,"count":0},{"startOffset":7609,"endOffset":7625,"count":0},{"startOffset":7662,"endOffset":7683,"count":0},{"startOffset":7948,"endOffset":7968,"count":0},{"startOffset":7970,"endOffset":8217,"count":0},{"startOffset":9716,"endOffset":9732,"count":0},{"startOffset":9769,"endOffset":10100,"count":0},{"startOffset":10184,"endOffset":10201,"count":0},{"startOffset":10229,"endOffset":10233,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8307,"endOffset":9005,"count":14},{"startOffset":8531,"endOffset":8547,"count":0},{"startOffset":8584,"endOffset":8596,"count":0},{"startOffset":8598,"endOffset":8645,"count":0},{"startOffset":8693,"endOffset":8757,"count":0},{"startOffset":8923,"endOffset":8991,"count":0}],"isBlockCoverage":true},{"functionName":"cancel","ranges":[{"startOffset":9035,"endOffset":9648,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9800,"endOffset":10099,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10301,"endOffset":10416,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10483,"endOffset":10650,"count":0}],"isBlockCoverage":false},{"functionName":"notification","ranges":[{"startOffset":10780,"endOffset":11135,"count":1},{"startOffset":10845,"endOffset":10902,"count":0}],"isBlockCoverage":true},{"functionName":"setRequestHandler","ranges":[{"startOffset":11353,"endOffset":11638,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11549,"endOffset":11630,"count":0}],"isBlockCoverage":false},{"functionName":"removeRequestHandler","ranges":[{"startOffset":11716,"endOffset":11798,"count":0}],"isBlockCoverage":false},{"functionName":"setNotificationHandler","ranges":[{"startOffset":12026,"endOffset":12248,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12158,"endOffset":12240,"count":0}],"isBlockCoverage":false},{"functionName":"removeNotificationHandler","ranges":[{"startOffset":12331,"endOffset":12423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32407,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2714,"endOffset":3286,"count":1}],"isBlockCoverage":true},{"functionName":"McpError","ranges":[{"startOffset":32231,"endOffset":32371,"count":2}],"isBlockCoverage":true}]},{"scriptId":"388","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/zod@3.24.3/node_modules/zod/lib/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156987,"count":1},{"startOffset":19487,"endOffset":19504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11,"endOffset":2023,"count":1},{"startOffset":986,"endOffset":1246,"count":0},{"startOffset":1561,"endOffset":1639,"count":0}],"isBlockCoverage":true},{"functionName":"util.assertEqual","ranges":[{"startOffset":52,"endOffset":64,"count":0}],"isBlockCoverage":false},{"functionName":"assertIs","ranges":[{"startOffset":70,"endOffset":97,"count":0}],"isBlockCoverage":false},{"functionName":"assertNever","ranges":[{"startOffset":132,"endOffset":191,"count":0}],"isBlockCoverage":false},{"functionName":"util.arrayToEnum","ranges":[{"startOffset":251,"endOffset":389,"count":2},{"startOffset":322,"endOffset":363,"count":36}],"isBlockCoverage":true},{"functionName":"util.getValidEnumValues","ranges":[{"startOffset":421,"endOffset":686,"count":0}],"isBlockCoverage":false},{"functionName":"util.objectValues","ranges":[{"startOffset":712,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"util.objectKeys.Object.keys.keys","ranges":[{"startOffset":921,"endOffset":946,"count":18}],"isBlockCoverage":true},{"functionName":"util.objectKeys","ranges":[{"startOffset":988,"endOffset":1246,"count":0}],"isBlockCoverage":false},{"functionName":"util.find","ranges":[{"startOffset":1264,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1491,"endOffset":1521,"count":28}],"isBlockCoverage":true},{"functionName":"util.isInteger","ranges":[{"startOffset":1563,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"joinValues","ranges":[{"startOffset":1645,"endOffset":1821,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1731,"endOffset":1784,"count":42},{"startOffset":1778,"endOffset":1783,"count":0}],"isBlockCoverage":true},{"functionName":"util.jsonStringifyReplacer","ranges":[{"startOffset":1889,"endOffset":2020,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2064,"endOffset":2246,"count":1}],"isBlockCoverage":true},{"functionName":"objectUtil.mergeShapes","ranges":[{"startOffset":2117,"endOffset":2243,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedType","ranges":[{"startOffset":2620,"endOffset":4087,"count":614},{"startOffset":2684,"endOffset":2745,"count":121},{"startOffset":2754,"endOffset":2809,"count":43},{"startOffset":2818,"endOffset":2907,"count":112},{"startOffset":2864,"endOffset":2883,"count":0},{"startOffset":2916,"endOffset":2973,"count":30},{"startOffset":2982,"endOffset":3041,"count":0},{"startOffset":3050,"endOffset":3105,"count":0},{"startOffset":3114,"endOffset":3169,"count":0},{"startOffset":3178,"endOffset":4020,"count":308},{"startOffset":3230,"endOffset":3289,"count":13},{"startOffset":3289,"endOffset":3321,"count":295},{"startOffset":3321,"endOffset":3379,"count":0},{"startOffset":3379,"endOffset":3406,"count":295},{"startOffset":3406,"endOffset":3456,"count":0},{"startOffset":3457,"endOffset":3486,"count":0},{"startOffset":3487,"endOffset":3538,"count":0},{"startOffset":3540,"endOffset":3601,"count":0},{"startOffset":3601,"endOffset":3667,"count":295},{"startOffset":3669,"endOffset":3726,"count":0},{"startOffset":3726,"endOffset":3792,"count":295},{"startOffset":3794,"endOffset":3851,"count":0},{"startOffset":3851,"endOffset":3919,"count":295},{"startOffset":3921,"endOffset":3979,"count":0},{"startOffset":3979,"endOffset":4020,"count":295},{"startOffset":4029,"endOffset":4079,"count":0}],"isBlockCoverage":true},{"functionName":"quotelessJson","ranges":[{"startOffset":4521,"endOffset":4627,"count":0}],"isBlockCoverage":false},{"functionName":"get errors","ranges":[{"startOffset":4664,"endOffset":4712,"count":0}],"isBlockCoverage":false},{"functionName":"ZodError","ranges":[{"startOffset":4717,"endOffset":5316,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":5321,"endOffset":7343,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":7355,"endOffset":7487,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":7492,"endOffset":7539,"count":0}],"isBlockCoverage":false},{"functionName":"get message","ranges":[{"startOffset":7544,"endOffset":7640,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":7645,"endOffset":7707,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":7712,"endOffset":8187,"count":0}],"isBlockCoverage":false},{"functionName":"get formErrors","ranges":[{"startOffset":8192,"endOffset":8247,"count":0}],"isBlockCoverage":false},{"functionName":"ZodError.create","ranges":[{"startOffset":8268,"endOffset":8341,"count":0}],"isBlockCoverage":false},{"functionName":"errorMap","ranges":[{"startOffset":8361,"endOffset":14045,"count":84},{"startOffset":8431,"endOffset":8712,"count":56},{"startOffset":8523,"endOffset":8693,"count":28},{"startOffset":8721,"endOffset":8893,"count":0},{"startOffset":8902,"endOffset":9050,"count":28},{"startOffset":9059,"endOffset":9149,"count":0},{"startOffset":9158,"endOffset":9320,"count":0},{"startOffset":9329,"endOffset":9503,"count":0},{"startOffset":9512,"endOffset":9619,"count":0},{"startOffset":9628,"endOffset":9739,"count":0},{"startOffset":9748,"endOffset":9836,"count":0},{"startOffset":9845,"endOffset":10990,"count":0},{"startOffset":10999,"endOffset":12094,"count":0},{"startOffset":12103,"endOffset":13447,"count":0},{"startOffset":13456,"endOffset":13539,"count":0},{"startOffset":13548,"endOffset":13678,"count":0},{"startOffset":13687,"endOffset":13814,"count":0},{"startOffset":13823,"endOffset":13918,"count":0},{"startOffset":13927,"endOffset":14013,"count":0}],"isBlockCoverage":true},{"functionName":"setErrorMap","ranges":[{"startOffset":14081,"endOffset":14138,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMap","ranges":[{"startOffset":14139,"endOffset":14194,"count":84}],"isBlockCoverage":true},{"functionName":"makeIssue","ranges":[{"startOffset":14214,"endOffset":14930,"count":84},{"startOffset":14462,"endOffset":14591,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14662,"endOffset":14672,"count":84}],"isBlockCoverage":true},{"functionName":"addIssueToContext","ranges":[{"startOffset":14955,"endOffset":15538,"count":84},{"startOffset":15425,"endOffset":15435,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15481,"endOffset":15491,"count":336}],"isBlockCoverage":true},{"functionName":"ParseStatus","ranges":[{"startOffset":15563,"endOffset":15614,"count":251}],"isBlockCoverage":true},{"functionName":"dirty","ranges":[{"startOffset":15619,"endOffset":15704,"count":28}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":15709,"endOffset":15798,"count":0}],"isBlockCoverage":false},{"functionName":"mergeArray","ranges":[{"startOffset":15810,"endOffset":16161,"count":13},{"startOffset":15904,"endOffset":16095,"count":20},{"startOffset":15962,"endOffset":15977,"count":0},{"startOffset":16032,"endOffset":16047,"count":0}],"isBlockCoverage":true},{"functionName":"mergeObjectAsync","ranges":[{"startOffset":16173,"endOffset":16530,"count":0}],"isBlockCoverage":false},{"functionName":"mergeObjectSync","ranges":[{"startOffset":16542,"endOffset":17243,"count":115},{"startOffset":16641,"endOffset":17176,"count":324},{"startOffset":16742,"endOffset":16757,"count":0},{"startOffset":16818,"endOffset":16833,"count":28},{"startOffset":16833,"endOffset":16890,"count":296},{"startOffset":16890,"endOffset":16905,"count":0},{"startOffset":16905,"endOffset":16964,"count":296},{"startOffset":16964,"endOffset":16979,"count":0},{"startOffset":16979,"endOffset":17095,"count":296},{"startOffset":17077,"endOffset":17094,"count":37},{"startOffset":17097,"endOffset":17166,"count":259},{"startOffset":17176,"endOffset":17242,"count":87}],"isBlockCoverage":true},{"functionName":"DIRTY","ranges":[{"startOffset":17319,"endOffset":17358,"count":0}],"isBlockCoverage":false},{"functionName":"OK","ranges":[{"startOffset":17371,"endOffset":17410,"count":75}],"isBlockCoverage":true},{"functionName":"isAborted","ranges":[{"startOffset":17430,"endOffset":17459,"count":0}],"isBlockCoverage":false},{"functionName":"isDirty","ranges":[{"startOffset":17477,"endOffset":17504,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":17522,"endOffset":17549,"count":28}],"isBlockCoverage":true},{"functionName":"isAsync","ranges":[{"startOffset":17567,"endOffset":17628,"count":156}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":18453,"endOffset":18899,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":18903,"endOffset":19445,"count":0}],"isBlockCoverage":false},{"functionName":"errorUtil.errToObj.message.message.message","ranges":[{"startOffset":19507,"endOffset":19669,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19688,"endOffset":19954,"count":1}],"isBlockCoverage":true},{"functionName":"errorUtil.errToObj","ranges":[{"startOffset":19736,"endOffset":19806,"count":3},{"startOffset":19777,"endOffset":19790,"count":0}],"isBlockCoverage":true},{"functionName":"errorUtil.toString","ranges":[{"startOffset":19833,"endOffset":19951,"count":18},{"startOffset":19874,"endOffset":19883,"count":0},{"startOffset":19934,"endOffset":19951,"count":0}],"isBlockCoverage":true},{"functionName":"ParseInputLazyPath","ranges":[{"startOffset":20062,"endOffset":20247,"count":298}],"isBlockCoverage":true},{"functionName":"get path","ranges":[{"startOffset":20252,"endOffset":20579,"count":138},{"startOffset":20349,"endOffset":20432,"count":0}],"isBlockCoverage":true},{"functionName":"handleResult","ranges":[{"startOffset":20603,"endOffset":21158,"count":28},{"startOffset":20708,"endOffset":21156,"count":0}],"isBlockCoverage":true},{"functionName":"get error","ranges":[{"startOffset":20902,"endOffset":21138,"count":0}],"isBlockCoverage":false},{"functionName":"processCreateParams","ranges":[{"startOffset":21160,"endOffset":22343,"count":300},{"startOffset":21224,"endOffset":21234,"count":293},{"startOffset":21234,"endOffset":21334,"count":7},{"startOffset":21334,"endOffset":21375,"count":1},{"startOffset":21377,"endOffset":21501,"count":0},{"startOffset":21501,"endOffset":21528,"count":7},{"startOffset":21528,"endOffset":21571,"count":1},{"startOffset":21571,"endOffset":22342,"count":6}],"isBlockCoverage":true},{"functionName":"customMap","ranges":[{"startOffset":21594,"endOffset":22291,"count":0}],"isBlockCoverage":false},{"functionName":"get description","ranges":[{"startOffset":22364,"endOffset":22427,"count":0}],"isBlockCoverage":false},{"functionName":"_getType","ranges":[{"startOffset":22432,"endOffset":22497,"count":340}],"isBlockCoverage":true},{"functionName":"_getOrReturnCtx","ranges":[{"startOffset":22502,"endOffset":22808,"count":56}],"isBlockCoverage":true},{"functionName":"_processInputParams","ranges":[{"startOffset":22813,"endOffset":23206,"count":190}],"isBlockCoverage":true},{"functionName":"_parseSync","ranges":[{"startOffset":23211,"endOffset":23414,"count":156},{"startOffset":23303,"endOffset":23385,"count":0}],"isBlockCoverage":true},{"functionName":"_parseAsync","ranges":[{"startOffset":23419,"endOffset":23528,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":23533,"endOffset":23701,"count":28},{"startOffset":23667,"endOffset":23700,"count":0}],"isBlockCoverage":true},{"functionName":"safeParse","ranges":[{"startOffset":23706,"endOffset":24428,"count":28},{"startOffset":23895,"endOffset":23909,"count":0},{"startOffset":23937,"endOffset":23941,"count":0},{"startOffset":24033,"endOffset":24050,"count":0},{"startOffset":24132,"endOffset":24145,"count":0}],"isBlockCoverage":true},{"functionName":"~validate","ranges":[{"startOffset":24433,"endOffset":25850,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsync","ranges":[{"startOffset":25855,"endOffset":26045,"count":0}],"isBlockCoverage":false},{"functionName":"safeParseAsync","ranges":[{"startOffset":26050,"endOffset":26808,"count":0}],"isBlockCoverage":false},{"functionName":"refine","ranges":[{"startOffset":26813,"endOffset":27989,"count":0}],"isBlockCoverage":false},{"functionName":"refinement","ranges":[{"startOffset":27994,"endOffset":28384,"count":0}],"isBlockCoverage":false},{"functionName":"_refinement","ranges":[{"startOffset":28389,"endOffset":28602,"count":0}],"isBlockCoverage":false},{"functionName":"superRefine","ranges":[{"startOffset":28607,"endOffset":28683,"count":0}],"isBlockCoverage":false},{"functionName":"ZodType","ranges":[{"startOffset":28688,"endOffset":30129,"count":416}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":30078,"endOffset":30111,"count":0}],"isBlockCoverage":false},{"functionName":"optional","ranges":[{"startOffset":30134,"endOffset":30204,"count":4}],"isBlockCoverage":true},{"functionName":"nullable","ranges":[{"startOffset":30209,"endOffset":30279,"count":0}],"isBlockCoverage":false},{"functionName":"nullish","ranges":[{"startOffset":30284,"endOffset":30344,"count":0}],"isBlockCoverage":false},{"functionName":"array","ranges":[{"startOffset":30349,"endOffset":30402,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":30407,"endOffset":30475,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":30480,"endOffset":30557,"count":2}],"isBlockCoverage":true},{"functionName":"and","ranges":[{"startOffset":30562,"endOffset":30649,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":30654,"endOffset":30909,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":30914,"endOffset":31232,"count":1},{"startOffset":30988,"endOffset":30993,"count":0}],"isBlockCoverage":true},{"functionName":"defaultValueFunc","ranges":[{"startOffset":30996,"endOffset":31005,"count":0}],"isBlockCoverage":false},{"functionName":"brand","ranges":[{"startOffset":31237,"endOffset":31423,"count":0}],"isBlockCoverage":false},{"functionName":"catch","ranges":[{"startOffset":31428,"endOffset":31734,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":31739,"endOffset":31896,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":31901,"endOffset":31970,"count":0}],"isBlockCoverage":false},{"functionName":"readonly","ranges":[{"startOffset":31975,"endOffset":32034,"count":0}],"isBlockCoverage":false},{"functionName":"isOptional","ranges":[{"startOffset":32039,"endOffset":32109,"count":0}],"isBlockCoverage":false},{"functionName":"isNullable","ranges":[{"startOffset":32114,"endOffset":32179,"count":0}],"isBlockCoverage":false},{"functionName":"timeRegexSource","ranges":[{"startOffset":38850,"endOffset":39167,"count":0}],"isBlockCoverage":false},{"functionName":"timeRegex","ranges":[{"startOffset":39168,"endOffset":39249,"count":0}],"isBlockCoverage":false},{"functionName":"datetimeRegex","ranges":[{"startOffset":39302,"endOffset":39602,"count":0}],"isBlockCoverage":false},{"functionName":"isValidIP","ranges":[{"startOffset":39603,"endOffset":39838,"count":0}],"isBlockCoverage":false},{"functionName":"isValidJWT","ranges":[{"startOffset":39839,"endOffset":40525,"count":0}],"isBlockCoverage":false},{"functionName":"isValidCidr","ranges":[{"startOffset":40526,"endOffset":40771,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":40810,"endOffset":54191,"count":89},{"startOffset":40856,"endOffset":40912,"count":0},{"startOffset":41011,"endOffset":41295,"count":56},{"startOffset":41295,"endOffset":41413,"count":33},{"startOffset":41413,"endOffset":54125,"count":0},{"startOffset":54125,"endOffset":54190,"count":33}],"isBlockCoverage":true},{"functionName":"_regex","ranges":[{"startOffset":54196,"endOffset":54426,"count":0}],"isBlockCoverage":false},{"functionName":"_addCheck","ranges":[{"startOffset":54431,"endOffset":54574,"count":3}],"isBlockCoverage":true},{"functionName":"email","ranges":[{"startOffset":54579,"endOffset":54683,"count":0}],"isBlockCoverage":false},{"functionName":"url","ranges":[{"startOffset":54688,"endOffset":54788,"count":0}],"isBlockCoverage":false},{"functionName":"emoji","ranges":[{"startOffset":54793,"endOffset":54897,"count":0}],"isBlockCoverage":false},{"functionName":"uuid","ranges":[{"startOffset":54902,"endOffset":55004,"count":0}],"isBlockCoverage":false},{"functionName":"nanoid","ranges":[{"startOffset":55009,"endOffset":55115,"count":0}],"isBlockCoverage":false},{"functionName":"cuid","ranges":[{"startOffset":55120,"endOffset":55222,"count":0}],"isBlockCoverage":false},{"functionName":"cuid2","ranges":[{"startOffset":55227,"endOffset":55331,"count":0}],"isBlockCoverage":false},{"functionName":"ulid","ranges":[{"startOffset":55336,"endOffset":55438,"count":0}],"isBlockCoverage":false},{"functionName":"base64","ranges":[{"startOffset":55443,"endOffset":55549,"count":2}],"isBlockCoverage":true},{"functionName":"base64url","ranges":[{"startOffset":55554,"endOffset":55803,"count":0}],"isBlockCoverage":false},{"functionName":"jwt","ranges":[{"startOffset":55808,"endOffset":55908,"count":0}],"isBlockCoverage":false},{"functionName":"ip","ranges":[{"startOffset":55913,"endOffset":56011,"count":0}],"isBlockCoverage":false},{"functionName":"cidr","ranges":[{"startOffset":56016,"endOffset":56118,"count":0}],"isBlockCoverage":false},{"functionName":"datetime","ranges":[{"startOffset":56123,"endOffset":57067,"count":0}],"isBlockCoverage":false},{"functionName":"date","ranges":[{"startOffset":57072,"endOffset":57151,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":57156,"endOffset":57745,"count":0}],"isBlockCoverage":false},{"functionName":"duration","ranges":[{"startOffset":57750,"endOffset":57860,"count":0}],"isBlockCoverage":false},{"functionName":"regex","ranges":[{"startOffset":57865,"endOffset":58035,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":58040,"endOffset":58364,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":58369,"endOffset":58549,"count":1}],"isBlockCoverage":true},{"functionName":"endsWith","ranges":[{"startOffset":58554,"endOffset":58730,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":58735,"endOffset":58909,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":58914,"endOffset":59088,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":59093,"endOffset":59261,"count":0}],"isBlockCoverage":false},{"functionName":"nonempty","ranges":[{"startOffset":59313,"endOffset":59395,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":59400,"endOffset":59544,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":59549,"endOffset":59707,"count":0}],"isBlockCoverage":false},{"functionName":"toUpperCase","ranges":[{"startOffset":59712,"endOffset":59870,"count":0}],"isBlockCoverage":false},{"functionName":"get isDatetime","ranges":[{"startOffset":59875,"endOffset":59971,"count":0}],"isBlockCoverage":false},{"functionName":"get isDate","ranges":[{"startOffset":59976,"endOffset":60064,"count":0}],"isBlockCoverage":false},{"functionName":"get isTime","ranges":[{"startOffset":60069,"endOffset":60157,"count":0}],"isBlockCoverage":false},{"functionName":"get isDuration","ranges":[{"startOffset":60162,"endOffset":60258,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmail","ranges":[{"startOffset":60263,"endOffset":60353,"count":0}],"isBlockCoverage":false},{"functionName":"get isURL","ranges":[{"startOffset":60358,"endOffset":60444,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmoji","ranges":[{"startOffset":60449,"endOffset":60539,"count":0}],"isBlockCoverage":false},{"functionName":"get isUUID","ranges":[{"startOffset":60544,"endOffset":60632,"count":0}],"isBlockCoverage":false},{"functionName":"get isNANOID","ranges":[{"startOffset":60637,"endOffset":60729,"count":0}],"isBlockCoverage":false},{"functionName":"get isCUID","ranges":[{"startOffset":60734,"endOffset":60822,"count":0}],"isBlockCoverage":false},{"functionName":"get isCUID2","ranges":[{"startOffset":60827,"endOffset":60917,"count":0}],"isBlockCoverage":false},{"functionName":"get isULID","ranges":[{"startOffset":60922,"endOffset":61010,"count":0}],"isBlockCoverage":false},{"functionName":"get isIP","ranges":[{"startOffset":61015,"endOffset":61099,"count":0}],"isBlockCoverage":false},{"functionName":"get isCIDR","ranges":[{"startOffset":61104,"endOffset":61192,"count":0}],"isBlockCoverage":false},{"functionName":"get isBase64","ranges":[{"startOffset":61197,"endOffset":61289,"count":0}],"isBlockCoverage":false},{"functionName":"get isBase64url","ranges":[{"startOffset":61294,"endOffset":61496,"count":0}],"isBlockCoverage":false},{"functionName":"get minLength","ranges":[{"startOffset":61501,"endOffset":61762,"count":0}],"isBlockCoverage":false},{"functionName":"get maxLength","ranges":[{"startOffset":61767,"endOffset":62028,"count":0}],"isBlockCoverage":false},{"functionName":"ZodString.create","ranges":[{"startOffset":62050,"endOffset":62348,"count":55},{"startOffset":62242,"endOffset":62257,"count":0},{"startOffset":62285,"endOffset":62289,"count":0}],"isBlockCoverage":true},{"functionName":"floatSafeRemainder","ranges":[{"startOffset":62480,"endOffset":62936,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNumber","ranges":[{"startOffset":62975,"endOffset":63120,"count":22}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":63125,"endOffset":66627,"count":28},{"startOffset":63171,"endOffset":63227,"count":0},{"startOffset":63326,"endOffset":63610,"count":0},{"startOffset":63819,"endOffset":64196,"count":0},{"startOffset":64210,"endOffset":66551,"count":0}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":66632,"endOffset":66738,"count":3}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":66743,"endOffset":66849,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":66854,"endOffset":66960,"count":3}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":66965,"endOffset":67071,"count":0}],"isBlockCoverage":false},{"functionName":"setLimit","ranges":[{"startOffset":67076,"endOffset":67447,"count":6}],"isBlockCoverage":true},{"functionName":"_addCheck","ranges":[{"startOffset":67452,"endOffset":67595,"count":5}],"isBlockCoverage":true},{"functionName":"int","ranges":[{"startOffset":67600,"endOffset":67739,"count":5}],"isBlockCoverage":true},{"functionName":"positive","ranges":[{"startOffset":67744,"endOffset":67940,"count":0}],"isBlockCoverage":false},{"functionName":"negative","ranges":[{"startOffset":67945,"endOffset":68141,"count":0}],"isBlockCoverage":false},{"functionName":"nonpositive","ranges":[{"startOffset":68146,"endOffset":68344,"count":0}],"isBlockCoverage":false},{"functionName":"nonnegative","ranges":[{"startOffset":68349,"endOffset":68547,"count":0}],"isBlockCoverage":false},{"functionName":"multipleOf","ranges":[{"startOffset":68552,"endOffset":68738,"count":0}],"isBlockCoverage":false},{"functionName":"finite","ranges":[{"startOffset":68743,"endOffset":68888,"count":0}],"isBlockCoverage":false},{"functionName":"safe","ranges":[{"startOffset":68893,"endOffset":69277,"count":0}],"isBlockCoverage":false},{"functionName":"get minValue","ranges":[{"startOffset":69282,"endOffset":69542,"count":0}],"isBlockCoverage":false},{"functionName":"get maxValue","ranges":[{"startOffset":69547,"endOffset":69807,"count":0}],"isBlockCoverage":false},{"functionName":"get isInt","ranges":[{"startOffset":69812,"endOffset":69968,"count":0}],"isBlockCoverage":false},{"functionName":"get isFinite","ranges":[{"startOffset":69973,"endOffset":70599,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNumber.create","ranges":[{"startOffset":70621,"endOffset":70872,"count":11},{"startOffset":70796,"endOffset":70811,"count":0}],"isBlockCoverage":true},{"functionName":"ZodBigInt","ranges":[{"startOffset":70912,"endOffset":71020,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":71025,"endOffset":73458,"count":0}],"isBlockCoverage":false},{"functionName":"_getInvalidInput","ranges":[{"startOffset":73463,"endOffset":73739,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":73744,"endOffset":73850,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":73855,"endOffset":73961,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":73966,"endOffset":74072,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":74077,"endOffset":74183,"count":0}],"isBlockCoverage":false},{"functionName":"setLimit","ranges":[{"startOffset":74188,"endOffset":74559,"count":0}],"isBlockCoverage":false},{"functionName":"_addCheck","ranges":[{"startOffset":74564,"endOffset":74707,"count":0}],"isBlockCoverage":false},{"functionName":"positive","ranges":[{"startOffset":74712,"endOffset":74916,"count":0}],"isBlockCoverage":false},{"functionName":"negative","ranges":[{"startOffset":74921,"endOffset":75125,"count":0}],"isBlockCoverage":false},{"functionName":"nonpositive","ranges":[{"startOffset":75130,"endOffset":75336,"count":0}],"isBlockCoverage":false},{"functionName":"nonnegative","ranges":[{"startOffset":75341,"endOffset":75547,"count":0}],"isBlockCoverage":false},{"functionName":"multipleOf","ranges":[{"startOffset":75552,"endOffset":75731,"count":0}],"isBlockCoverage":false},{"functionName":"get minValue","ranges":[{"startOffset":75736,"endOffset":75996,"count":0}],"isBlockCoverage":false},{"functionName":"get maxValue","ranges":[{"startOffset":76001,"endOffset":76261,"count":0}],"isBlockCoverage":false},{"functionName":"ZodBigInt.create","ranges":[{"startOffset":76283,"endOffset":76581,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":76622,"endOffset":77147,"count":10},{"startOffset":76668,"endOffset":76725,"count":0},{"startOffset":76825,"endOffset":77110,"count":0}],"isBlockCoverage":true},{"functionName":"ZodBoolean.create","ranges":[{"startOffset":77170,"endOffset":77403,"count":8},{"startOffset":77327,"endOffset":77342,"count":0}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":77441,"endOffset":79605,"count":0}],"isBlockCoverage":false},{"functionName":"_addCheck","ranges":[{"startOffset":79610,"endOffset":79751,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":79756,"endOffset":79942,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":79947,"endOffset":80133,"count":0}],"isBlockCoverage":false},{"functionName":"get minDate","ranges":[{"startOffset":80138,"endOffset":80428,"count":0}],"isBlockCoverage":false},{"functionName":"get maxDate","ranges":[{"startOffset":80433,"endOffset":80723,"count":0}],"isBlockCoverage":false},{"functionName":"ZodDate.create","ranges":[{"startOffset":80743,"endOffset":80990,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":81030,"endOffset":81465,"count":0}],"isBlockCoverage":false},{"functionName":"ZodSymbol.create","ranges":[{"startOffset":81487,"endOffset":81628,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":81671,"endOffset":82112,"count":0}],"isBlockCoverage":false},{"functionName":"ZodUndefined.create","ranges":[{"startOffset":82137,"endOffset":82284,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":82322,"endOffset":82753,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNull.create","ranges":[{"startOffset":82773,"endOffset":82910,"count":0}],"isBlockCoverage":false},{"functionName":"ZodAny","ranges":[{"startOffset":82947,"endOffset":83142,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":83147,"endOffset":83199,"count":0}],"isBlockCoverage":false},{"functionName":"ZodAny.create","ranges":[{"startOffset":83218,"endOffset":83353,"count":0}],"isBlockCoverage":false},{"functionName":"ZodUnknown","ranges":[{"startOffset":83394,"endOffset":83494,"count":4}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":83499,"endOffset":83551,"count":0}],"isBlockCoverage":false},{"functionName":"ZodUnknown.create","ranges":[{"startOffset":83574,"endOffset":83717,"count":4}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":83756,"endOffset":84021,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNever.create","ranges":[{"startOffset":84042,"endOffset":84181,"count":46}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":84219,"endOffset":84655,"count":0}],"isBlockCoverage":false},{"functionName":"ZodVoid.create","ranges":[{"startOffset":84675,"endOffset":84812,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":84851,"endOffset":87439,"count":13},{"startOffset":85015,"endOffset":85245,"count":0},{"startOffset":85284,"endOffset":85971,"count":0},{"startOffset":86008,"endOffset":86441,"count":0},{"startOffset":86478,"endOffset":86909,"count":0},{"startOffset":86940,"endOffset":87222,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":86991,"endOffset":87112,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87120,"endOffset":87210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87264,"endOffset":87376,"count":20}],"isBlockCoverage":true},{"functionName":"get element","ranges":[{"startOffset":87444,"endOffset":87496,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":87501,"endOffset":87683,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":87688,"endOffset":87870,"count":1}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":87875,"endOffset":88050,"count":0}],"isBlockCoverage":false},{"functionName":"nonempty","ranges":[{"startOffset":88055,"endOffset":88117,"count":0}],"isBlockCoverage":false},{"functionName":"ZodArray.create","ranges":[{"startOffset":88138,"endOffset":88384,"count":13}],"isBlockCoverage":true},{"functionName":"deepPartialify","ranges":[{"startOffset":88386,"endOffset":89361,"count":0}],"isBlockCoverage":false},{"functionName":"ZodObject","ranges":[{"startOffset":89400,"endOffset":90955,"count":147}],"isBlockCoverage":true},{"functionName":"_getCached","ranges":[{"startOffset":90960,"endOffset":91183,"count":115},{"startOffset":91022,"endOffset":91042,"count":97},{"startOffset":91042,"endOffset":91182,"count":18}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":91188,"endOffset":94650,"count":115},{"startOffset":91302,"endOffset":91586,"count":0},{"startOffset":91890,"endOffset":92012,"count":301},{"startOffset":91938,"endOffset":91998,"count":116},{"startOffset":92086,"endOffset":92417,"count":278},{"startOffset":92574,"endOffset":92847,"count":73},{"startOffset":92621,"endOffset":92833,"count":74},{"startOffset":92847,"endOffset":93350,"count":42},{"startOffset":92939,"endOffset":93166,"count":28},{"startOffset":93180,"endOffset":93350,"count":0},{"startOffset":93360,"endOffset":93894,"count":0},{"startOffset":93925,"endOffset":94556,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93986,"endOffset":94419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94443,"endOffset":94544,"count":0}],"isBlockCoverage":false},{"functionName":"get shape","ranges":[{"startOffset":94655,"endOffset":94708,"count":5}],"isBlockCoverage":true},{"functionName":"strict","ranges":[{"startOffset":94713,"endOffset":95661,"count":5},{"startOffset":94905,"endOffset":95620,"count":0}],"isBlockCoverage":true},{"functionName":"errorMap","ranges":[{"startOffset":94939,"endOffset":95601,"count":0}],"isBlockCoverage":false},{"functionName":"strip","ranges":[{"startOffset":95666,"endOffset":95784,"count":0}],"isBlockCoverage":false},{"functionName":"passthrough","ranges":[{"startOffset":95789,"endOffset":95919,"count":39}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":96445,"endOffset":96657,"count":54}],"isBlockCoverage":true},{"functionName":"shape","ranges":[{"startOffset":96544,"endOffset":96638,"count":11}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":96822,"endOffset":97192,"count":3}],"isBlockCoverage":true},{"functionName":"shape","ranges":[{"startOffset":96993,"endOffset":97095,"count":2}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":98394,"endOffset":98469,"count":0}],"isBlockCoverage":false},{"functionName":"catchall","ranges":[{"startOffset":99292,"endOffset":99413,"count":0}],"isBlockCoverage":false},{"functionName":"pick","ranges":[{"startOffset":99418,"endOffset":99732,"count":0}],"isBlockCoverage":false},{"functionName":"omit","ranges":[{"startOffset":99737,"endOffset":100039,"count":0}],"isBlockCoverage":false},{"functionName":"deepPartial","ranges":[{"startOffset":100079,"endOffset":100137,"count":0}],"isBlockCoverage":false},{"functionName":"partial","ranges":[{"startOffset":100142,"endOffset":100598,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":100603,"endOffset":101230,"count":0}],"isBlockCoverage":false},{"functionName":"keyof","ranges":[{"startOffset":101235,"endOffset":101309,"count":0}],"isBlockCoverage":false},{"functionName":"ZodObject.create","ranges":[{"startOffset":101331,"endOffset":101574,"count":46}],"isBlockCoverage":true},{"functionName":"shape","ranges":[{"startOffset":101394,"endOffset":101405,"count":25}],"isBlockCoverage":true},{"functionName":"ZodObject.strictCreate","ranges":[{"startOffset":101601,"endOffset":101845,"count":0}],"isBlockCoverage":false},{"functionName":"ZodObject.lazycreate","ranges":[{"startOffset":101870,"endOffset":102100,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":102139,"endOffset":105124,"count":52},{"startOffset":103160,"endOffset":103795,"count":0},{"startOffset":103919,"endOffset":104726,"count":108},{"startOffset":104393,"endOffset":104447,"count":52},{"startOffset":104447,"endOffset":104584,"count":56},{"startOffset":104499,"endOffset":104508,"count":0},{"startOffset":104510,"endOffset":104584,"count":0},{"startOffset":104584,"endOffset":104712,"count":56},{"startOffset":104726,"endOffset":105118,"count":0}],"isBlockCoverage":true},{"functionName":"handleResults","ranges":[{"startOffset":102263,"endOffset":103129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103205,"endOffset":103762,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104914,"endOffset":104946,"count":0}],"isBlockCoverage":false},{"functionName":"get options","ranges":[{"startOffset":105129,"endOffset":105184,"count":0}],"isBlockCoverage":false},{"functionName":"ZodUnion.create","ranges":[{"startOffset":105205,"endOffset":105375,"count":17}],"isBlockCoverage":true},{"functionName":"getDiscriminator","ranges":[{"startOffset":105780,"endOffset":107080,"count":2},{"startOffset":105825,"endOffset":105878,"count":0},{"startOffset":105920,"endOffset":105978,"count":0},{"startOffset":106056,"endOffset":107078,"count":0}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":107132,"endOffset":108311,"count":0}],"isBlockCoverage":false},{"functionName":"get discriminator","ranges":[{"startOffset":108316,"endOffset":108383,"count":0}],"isBlockCoverage":false},{"functionName":"get options","ranges":[{"startOffset":108388,"endOffset":108443,"count":0}],"isBlockCoverage":false},{"functionName":"get optionsMap","ranges":[{"startOffset":108448,"endOffset":108509,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":108988,"endOffset":110007,"count":1},{"startOffset":109170,"endOffset":109763,"count":2},{"startOffset":109302,"endOffset":109451,"count":0},{"startOffset":109550,"endOffset":109694,"count":0}],"isBlockCoverage":true},{"functionName":"mergeValues","ranges":[{"startOffset":110010,"endOffset":111541,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":111586,"endOffset":113130,"count":0}],"isBlockCoverage":false},{"functionName":"ZodIntersection.create","ranges":[{"startOffset":113158,"endOffset":113366,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":113405,"endOffset":115106,"count":0}],"isBlockCoverage":false},{"functionName":"get items","ranges":[{"startOffset":115111,"endOffset":115162,"count":0}],"isBlockCoverage":false},{"functionName":"rest","ranges":[{"startOffset":115167,"endOffset":115271,"count":0}],"isBlockCoverage":false},{"functionName":"ZodTuple.create","ranges":[{"startOffset":115292,"endOffset":115607,"count":0}],"isBlockCoverage":false},{"functionName":"get keySchema","ranges":[{"startOffset":115647,"endOffset":115704,"count":0}],"isBlockCoverage":false},{"functionName":"get valueSchema","ranges":[{"startOffset":115709,"endOffset":115770,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":115775,"endOffset":116775,"count":0}],"isBlockCoverage":false},{"functionName":"get element","ranges":[{"startOffset":116780,"endOffset":116837,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":116849,"endOffset":117373,"count":2},{"startOffset":116919,"endOffset":117154,"count":0}],"isBlockCoverage":true},{"functionName":"get keySchema","ranges":[{"startOffset":117411,"endOffset":117468,"count":0}],"isBlockCoverage":false},{"functionName":"get valueSchema","ranges":[{"startOffset":117473,"endOffset":117534,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":117539,"endOffset":119620,"count":0}],"isBlockCoverage":false},{"functionName":"ZodMap.create","ranges":[{"startOffset":119639,"endOffset":119830,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":119867,"endOffset":121980,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":121985,"endOffset":122159,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":122164,"endOffset":122338,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":122343,"endOffset":122429,"count":0}],"isBlockCoverage":false},{"functionName":"nonempty","ranges":[{"startOffset":122434,"endOffset":122496,"count":0}],"isBlockCoverage":false},{"functionName":"ZodSet.create","ranges":[{"startOffset":122515,"endOffset":122726,"count":0}],"isBlockCoverage":false},{"functionName":"ZodFunction","ranges":[{"startOffset":122768,"endOffset":122858,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":122863,"endOffset":126365,"count":0}],"isBlockCoverage":false},{"functionName":"parameters","ranges":[{"startOffset":126370,"endOffset":126421,"count":0}],"isBlockCoverage":false},{"functionName":"returnType","ranges":[{"startOffset":126426,"endOffset":126480,"count":0}],"isBlockCoverage":false},{"functionName":"args","ranges":[{"startOffset":126485,"endOffset":126646,"count":0}],"isBlockCoverage":false},{"functionName":"returns","ranges":[{"startOffset":126651,"endOffset":126782,"count":0}],"isBlockCoverage":false},{"functionName":"implement","ranges":[{"startOffset":126787,"endOffset":126888,"count":0}],"isBlockCoverage":false},{"functionName":"strictImplement","ranges":[{"startOffset":126893,"endOffset":127000,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":127012,"endOffset":127361,"count":0}],"isBlockCoverage":false},{"functionName":"get schema","ranges":[{"startOffset":127400,"endOffset":127455,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":127460,"endOffset":127668,"count":0}],"isBlockCoverage":false},{"functionName":"ZodLazy.create","ranges":[{"startOffset":127688,"endOffset":127857,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":127898,"endOffset":128295,"count":62},{"startOffset":127958,"endOffset":128234,"count":0}],"isBlockCoverage":true},{"functionName":"get value","ranges":[{"startOffset":128300,"endOffset":128351,"count":5}],"isBlockCoverage":true},{"functionName":"ZodLiteral.create","ranges":[{"startOffset":128374,"endOffset":128546,"count":34}],"isBlockCoverage":true},{"functionName":"createZodEnum","ranges":[{"startOffset":128548,"endOffset":128728,"count":6}],"isBlockCoverage":true},{"functionName":"ZodEnum","ranges":[{"startOffset":128765,"endOffset":128857,"count":6}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":128862,"endOffset":129884,"count":0}],"isBlockCoverage":false},{"functionName":"get options","ranges":[{"startOffset":129889,"endOffset":129943,"count":0}],"isBlockCoverage":false},{"functionName":"get enum","ranges":[{"startOffset":129948,"endOffset":130115,"count":0}],"isBlockCoverage":false},{"functionName":"get Values","ranges":[{"startOffset":130120,"endOffset":130289,"count":0}],"isBlockCoverage":false},{"functionName":"get Enum","ranges":[{"startOffset":130294,"endOffset":130461,"count":0}],"isBlockCoverage":false},{"functionName":"extract","ranges":[{"startOffset":130466,"endOffset":130610,"count":0}],"isBlockCoverage":false},{"functionName":"exclude","ranges":[{"startOffset":130615,"endOffset":130804,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNativeEnum","ranges":[{"startOffset":130913,"endOffset":131011,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":131016,"endOffset":132202,"count":0}],"isBlockCoverage":false},{"functionName":"get enum","ranges":[{"startOffset":132207,"endOffset":132258,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNativeEnum.create","ranges":[{"startOffset":132322,"endOffset":132503,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":132544,"endOffset":132591,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":132596,"endOffset":133354,"count":0}],"isBlockCoverage":false},{"functionName":"ZodPromise.create","ranges":[{"startOffset":133377,"endOffset":133550,"count":0}],"isBlockCoverage":false},{"functionName":"innerType","ranges":[{"startOffset":133591,"endOffset":133643,"count":0}],"isBlockCoverage":false},{"functionName":"sourceType","ranges":[{"startOffset":133648,"endOffset":133827,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":133832,"endOffset":138744,"count":0}],"isBlockCoverage":false},{"functionName":"ZodEffects.create","ranges":[{"startOffset":138767,"endOffset":138958,"count":0}],"isBlockCoverage":false},{"functionName":"ZodEffects.createWithPreprocess","ranges":[{"startOffset":138994,"endOffset":139236,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":139278,"endOffset":139496,"count":98},{"startOffset":139395,"endOffset":139440,"count":65},{"startOffset":139440,"endOffset":139495,"count":33}],"isBlockCoverage":true},{"functionName":"unwrap","ranges":[{"startOffset":139501,"endOffset":139553,"count":0}],"isBlockCoverage":false},{"functionName":"ZodOptional.create","ranges":[{"startOffset":139577,"endOffset":139753,"count":56}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":139795,"endOffset":140003,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":140008,"endOffset":140060,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNullable.create","ranges":[{"startOffset":140084,"endOffset":140260,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":140301,"endOffset":140648,"count":10},{"startOffset":140459,"endOffset":140515,"count":0}],"isBlockCoverage":true},{"functionName":"removeDefault","ranges":[{"startOffset":140653,"endOffset":140712,"count":0}],"isBlockCoverage":false},{"functionName":"ZodDefault.create","ranges":[{"startOffset":140735,"endOffset":141033,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":141072,"endOffset":142539,"count":0}],"isBlockCoverage":false},{"functionName":"removeCatch","ranges":[{"startOffset":142544,"endOffset":142601,"count":0}],"isBlockCoverage":false},{"functionName":"ZodCatch.create","ranges":[{"startOffset":142622,"endOffset":142884,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":142921,"endOffset":143374,"count":0}],"isBlockCoverage":false},{"functionName":"ZodNaN.create","ranges":[{"startOffset":143393,"endOffset":143528,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":143604,"endOffset":143835,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":143840,"endOffset":143887,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":143930,"endOffset":145528,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":145540,"endOffset":145701,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":145744,"endOffset":146108,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":146113,"endOffset":146165,"count":0}],"isBlockCoverage":false},{"functionName":"ZodReadonly.create","ranges":[{"startOffset":146189,"endOffset":146365,"count":0}],"isBlockCoverage":false},{"functionName":"cleanParams","ranges":[{"startOffset":146654,"endOffset":146925,"count":0}],"isBlockCoverage":false},{"functionName":"custom","ranges":[{"startOffset":146926,"endOffset":148127,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148208,"endOffset":150218,"count":1}],"isBlockCoverage":true},{"functionName":"instanceOfType","ranges":[{"startOffset":150299,"endOffset":150485,"count":0}],"isBlockCoverage":false},{"functionName":"ostring","ranges":[{"startOffset":151816,"endOffset":151845,"count":0}],"isBlockCoverage":false},{"functionName":"onumber","ranges":[{"startOffset":151863,"endOffset":151892,"count":0}],"isBlockCoverage":false},{"functionName":"oboolean","ranges":[{"startOffset":151911,"endOffset":151941,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":151973,"endOffset":152024,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":152040,"endOffset":152091,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":152108,"endOffset":152181,"count":0}],"isBlockCoverage":false},{"functionName":"bigint","ranges":[{"startOffset":152197,"endOffset":152248,"count":0}],"isBlockCoverage":false},{"functionName":"date","ranges":[{"startOffset":152262,"endOffset":152311,"count":0}],"isBlockCoverage":false},{"functionName":"get util","ranges":[{"startOffset":152764,"endOffset":152792,"count":0}],"isBlockCoverage":false},{"functionName":"get objectUtil","ranges":[{"startOffset":152798,"endOffset":152838,"count":0}],"isBlockCoverage":false},{"functionName":"get ZodFirstPartyTypeKind","ranges":[{"startOffset":154065,"endOffset":154127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"node:internal/legacy/processbinding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":205,"endOffset":812,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":321,"endOffset":804,"count":42}],"isBlockCoverage":true},{"functionName":"natives","ranges":[{"startOffset":816,"endOffset":1119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/api-client.test.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55160,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":363,"endOffset":15857,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":421,"endOffset":644,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":737,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":768,"endOffset":1253,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":828,"endOffset":1005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1066,"endOffset":1245,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1282,"endOffset":2693,"count":1},{"startOffset":1641,"endOffset":1675,"count":0},{"startOffset":1725,"endOffset":1729,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1786,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2086,"endOffset":2276,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2338,"endOffset":2685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2724,"endOffset":4222,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2784,"endOffset":3370,"count":1}],"isBlockCoverage":true},{"functionName":"process.stderr.write","ranges":[{"startOffset":2967,"endOffset":3051,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3440,"endOffset":3719,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3765,"endOffset":3966,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4029,"endOffset":4214,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4264,"endOffset":6758,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4321,"endOffset":4924,"count":1}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":4458,"endOffset":4517,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4970,"endOffset":5447,"count":1},{"startOffset":5221,"endOffset":5308,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5489,"endOffset":6115,"count":1},{"startOffset":5926,"endOffset":6013,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":5655,"endOffset":5720,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6164,"endOffset":6750,"count":1},{"startOffset":6535,"endOffset":6622,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":6303,"endOffset":6329,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6789,"endOffset":15853,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6816,"endOffset":7075,"count":17}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":6959,"endOffset":7004,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7138,"endOffset":7628,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7690,"endOffset":7941,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7999,"endOffset":8419,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8481,"endOffset":8916,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8986,"endOffset":9263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9328,"endOffset":10137,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10204,"endOffset":11225,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11287,"endOffset":12310,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12373,"endOffset":12777,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12827,"endOffset":13084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13151,"endOffset":13407,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13471,"endOffset":13760,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13809,"endOffset":14064,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14107,"endOffset":14355,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14398,"endOffset":14647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14702,"endOffset":15243,"count":1},{"startOffset":15056,"endOffset":15143,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":14868,"endOffset":14931,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15298,"endOffset":15845,"count":1},{"startOffset":15655,"endOffset":15742,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":15464,"endOffset":15530,"count":1}],"isBlockCoverage":true}]},{"scriptId":"391","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chai-as-promised@8.0.1_chai@5.2.0/node_modules/chai-as-promised/lib/chai-as-promised.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14396,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":103,"endOffset":13523,"count":1},{"startOffset":3320,"endOffset":3429,"count":104}],"isBlockCoverage":true},{"functionName":"isLegacyJQueryPromise","ranges":[{"startOffset":468,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsAboutPromise","ranges":[{"startOffset":995,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyIfSupported","ranges":[{"startOffset":1506,"endOffset":1617,"count":191},{"startOffset":1580,"endOffset":1591,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":1621,"endOffset":1807,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1702,"endOffset":1801,"count":0}],"isBlockCoverage":false},{"functionName":"property","ranges":[{"startOffset":1811,"endOffset":2021,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1896,"endOffset":2015,"count":0}],"isBlockCoverage":false},{"functionName":"doNotify","ranges":[{"startOffset":2025,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfNegated","ranges":[{"startOffset":2216,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfNotNegated","ranges":[{"startOffset":2350,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"getBasePromise","ranges":[{"startOffset":2488,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"getReasonName","ranges":[{"startOffset":2972,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3455,"endOffset":4035,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4062,"endOffset":4815,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4844,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8498,"endOffset":8574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8597,"endOffset":8677,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8700,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8957,"endOffset":9053,"count":104},{"startOffset":8998,"endOffset":9048,"count":103}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9079,"endOffset":9291,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9152,"endOffset":9280,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9180,"endOffset":9280,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9338,"endOffset":9430,"count":104},{"startOffset":9377,"endOffset":9425,"count":103}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9456,"endOffset":10419,"count":51},{"startOffset":9804,"endOffset":10158,"count":8},{"startOffset":10158,"endOffset":10415,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9876,"endOffset":10010,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9906,"endOffset":10010,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10020,"endOffset":10143,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10050,"endOffset":10143,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10229,"endOffset":10400,"count":191}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10259,"endOffset":10400,"count":191}],"isBlockCoverage":true},{"functionName":"doAsserterAsyncAndAddThen","ranges":[{"startOffset":10425,"endOffset":11830,"count":338},{"startOffset":10785,"endOffset":11829,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10852,"endOffset":11317,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11331,"endOffset":11749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11986,"endOffset":12060,"count":153}],"isBlockCoverage":true},{"functionName":"assert.isFulfilled","ranges":[{"startOffset":12090,"endOffset":12163,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isRejected","ranges":[{"startOffset":12188,"endOffset":12372,"count":0}],"isBlockCoverage":false},{"functionName":"assert.becomes","ranges":[{"startOffset":12394,"endOffset":12479,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotBecome","ranges":[{"startOffset":12507,"endOffset":12595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12656,"endOffset":13519,"count":150}],"isBlockCoverage":true},{"functionName":"assert.eventually.<computed>","ranges":[{"startOffset":12722,"endOffset":13514,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransferPromiseness","ranges":[{"startOffset":13525,"endOffset":13631,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransformAsserterArgs","ranges":[{"startOffset":13633,"endOffset":13699,"count":0}],"isBlockCoverage":false},{"functionName":"setTransferPromiseness","ranges":[{"startOffset":13773,"endOffset":13876,"count":0}],"isBlockCoverage":false},{"functionName":"setTransformAsserterArgs","ranges":[{"startOffset":13885,"endOffset":13994,"count":0}],"isBlockCoverage":false},{"functionName":"transferPromiseness","ranges":[{"startOffset":14003,"endOffset":14208,"count":0}],"isBlockCoverage":false},{"functionName":"transformAsserterArgs","ranges":[{"startOffset":14217,"endOffset":14395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/api-client.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49796,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":552,"endOffset":15774,"count":32}],"isBlockCoverage":true},{"functionName":"TradingSimulatorClient","ranges":[{"startOffset":955,"endOffset":1661,"count":32},{"startOffset":1141,"endOffset":1170,"count":2},{"startOffset":1206,"endOffset":1226,"count":30},{"startOffset":1227,"endOffset":1231,"count":2},{"startOffset":1385,"endOffset":1486,"count":2},{"startOffset":1594,"endOffset":1616,"count":1},{"startOffset":1617,"endOffset":1626,"count":31}],"isBlockCoverage":true},{"functionName":"generateHeaders","ranges":[{"startOffset":1885,"endOffset":2370,"count":21},{"startOffset":2113,"endOffset":2340,"count":0}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":2791,"endOffset":4533,"count":21},{"startOffset":2912,"endOffset":2934,"count":2},{"startOffset":2935,"endOffset":2946,"count":19},{"startOffset":3150,"endOffset":3417,"count":0},{"startOffset":3503,"endOffset":3522,"count":20},{"startOffset":3522,"endOffset":3718,"count":1},{"startOffset":3718,"endOffset":3797,"count":20},{"startOffset":3797,"endOffset":4305,"count":3},{"startOffset":4092,"endOffset":4112,"count":0},{"startOffset":4113,"endOffset":4128,"count":0},{"startOffset":4164,"endOffset":4238,"count":0},{"startOffset":4305,"endOffset":4414,"count":17},{"startOffset":4414,"endOffset":4527,"count":1}],"isBlockCoverage":true},{"functionName":"detectChain","ranges":[{"startOffset":4804,"endOffset":5118,"count":4},{"startOffset":4948,"endOffset":4998,"count":3},{"startOffset":4998,"endOffset":5117,"count":1}],"isBlockCoverage":true},{"functionName":"getBalances","ranges":[{"startOffset":5428,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"getPortfolio","ranges":[{"startOffset":5791,"endOffset":5881,"count":0}],"isBlockCoverage":false},{"functionName":"getTrades","ranges":[{"startOffset":6210,"endOffset":6830,"count":1}],"isBlockCoverage":true},{"functionName":"getPrice","ranges":[{"startOffset":7332,"endOffset":7788,"count":2},{"startOffset":7510,"endOffset":7561,"count":1},{"startOffset":7657,"endOffset":7724,"count":1}],"isBlockCoverage":true},{"functionName":"getTokenInfo","ranges":[{"startOffset":8253,"endOffset":8707,"count":1}],"isBlockCoverage":true},{"functionName":"getPriceHistory","ranges":[{"startOffset":9086,"endOffset":9783,"count":2},{"startOffset":9258,"endOffset":9306,"count":1},{"startOffset":9347,"endOffset":9391,"count":1},{"startOffset":9433,"endOffset":9479,"count":1},{"startOffset":9518,"endOffset":9558,"count":1},{"startOffset":9605,"endOffset":9661,"count":1}],"isBlockCoverage":true},{"functionName":"findTokenChainInfo","ranges":[{"startOffset":10135,"endOffset":11219,"count":0}],"isBlockCoverage":false},{"functionName":"executeTrade","ranges":[{"startOffset":11613,"endOffset":12728,"count":2},{"startOffset":11929,"endOffset":11982,"count":1},{"startOffset":12025,"endOffset":12062,"count":1},{"startOffset":12103,"endOffset":12136,"count":1},{"startOffset":12187,"endOffset":12240,"count":1},{"startOffset":12289,"endOffset":12338,"count":1},{"startOffset":12438,"endOffset":12517,"count":1},{"startOffset":12547,"endOffset":12622,"count":1}],"isBlockCoverage":true},{"functionName":"getQuote","ranges":[{"startOffset":13167,"endOffset":13426,"count":1}],"isBlockCoverage":true},{"functionName":"getCompetitionStatus","ranges":[{"startOffset":13698,"endOffset":13797,"count":1}],"isBlockCoverage":true},{"functionName":"getLeaderboard","ranges":[{"startOffset":14170,"endOffset":14412,"count":2},{"startOffset":14255,"endOffset":14318,"count":1},{"startOffset":14331,"endOffset":14363,"count":1}],"isBlockCoverage":true},{"functionName":"getCompetitionRules","ranges":[{"startOffset":14686,"endOffset":14783,"count":1}],"isBlockCoverage":true},{"functionName":"findCoinLists","ranges":[{"startOffset":15061,"endOffset":15298,"count":2},{"startOffset":15182,"endOffset":15292,"count":0}],"isBlockCoverage":true},{"functionName":"getTokenRates","ranges":[{"startOffset":15534,"endOffset":15772,"count":2},{"startOffset":15656,"endOffset":15766,"count":0}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/types.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12170,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":282,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":545,"endOffset":1140,"count":1}],"isBlockCoverage":true}]},{"scriptId":"394","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/sinon@20.0.0/node_modules/sinon/pkg/sinon-esm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420957,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":515,"count":1}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":71,"endOffset":506,"count":1},{"startOffset":460,"endOffset":469,"count":0}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":89,"endOffset":424,"count":262},{"startOffset":114,"endOffset":404,"count":97},{"startOffset":124,"endOffset":291,"count":2},{"startOffset":157,"endOffset":166,"count":0},{"startOffset":176,"endOffset":191,"count":0},{"startOffset":196,"endOffset":211,"count":0},{"startOffset":291,"endOffset":404,"count":95},{"startOffset":404,"endOffset":423,"count":260}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":382,"count":261},{"startOffset":377,"endOffset":380,"count":2}],"isBlockCoverage":true},{"functionName":"1../sinon/behavior","ranges":[{"startOffset":523,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"createApi","ranges":[{"startOffset":977,"endOffset":1536,"count":1}],"isBlockCoverage":true},{"functionName":"addBehavior","ranges":[{"startOffset":1318,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"2../sinon","ranges":[{"startOffset":1794,"endOffset":1909,"count":1}],"isBlockCoverage":true},{"functionName":"3../create-sinon-api","ranges":[{"startOffset":1928,"endOffset":2059,"count":1}],"isBlockCoverage":true},{"functionName":"4../util/core/times-in-words","ranges":[{"startOffset":2089,"endOffset":12637,"count":1}],"isBlockCoverage":true},{"functionName":"applyDefaults","ranges":[{"startOffset":2822,"endOffset":3052,"count":2},{"startOffset":2907,"endOffset":3050,"count":4}],"isBlockCoverage":true},{"functionName":"createAssertObject","ranges":[{"startOffset":3435,"endOffset":12538,"count":2},{"startOffset":3509,"endOffset":3514,"count":1}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":3714,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":4155,"endOffset":4202,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallOrder","ranges":[{"startOffset":4224,"endOffset":5213,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallCount","ranges":[{"startOffset":5235,"endOffset":5898,"count":0}],"isBlockCoverage":false},{"functionName":"expose","ranges":[{"startOffset":5917,"endOffset":6704,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":6722,"endOffset":7218,"count":0}],"isBlockCoverage":false},{"functionName":"verifyIsStub","ranges":[{"startOffset":7232,"endOffset":7868,"count":0}],"isBlockCoverage":false},{"functionName":"verifyIsValidAssertion","ranges":[{"startOffset":7874,"endOffset":8509,"count":0}],"isBlockCoverage":false},{"functionName":"failAssertion","ranges":[{"startOffset":8515,"endOffset":8689,"count":0}],"isBlockCoverage":false},{"functionName":"mirrorPropAsAssertion","ranges":[{"startOffset":8695,"endOffset":9753,"count":42},{"startOffset":8841,"endOffset":8903,"count":40}],"isBlockCoverage":true},{"functionName":"assert.<computed>","ranges":[{"startOffset":8928,"endOffset":9746,"count":0}],"isBlockCoverage":false},{"functionName":"exposedName","ranges":[{"startOffset":9759,"endOffset":9986,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10174,"endOffset":10232,"count":0}],"isBlockCoverage":false},{"functionName":"5../util/core/export-async-behaviors","ranges":[{"startOffset":12729,"endOffset":21122,"count":1}],"isBlockCoverage":true},{"functionName":"getCallback","ranges":[{"startOffset":13344,"endOffset":14145,"count":0}],"isBlockCoverage":false},{"functionName":"getCallbackError","ranges":[{"startOffset":14147,"endOffset":14872,"count":0}],"isBlockCoverage":false},{"functionName":"ensureArgs","ranges":[{"startOffset":14874,"endOffset":15290,"count":0}],"isBlockCoverage":false},{"functionName":"callCallback","ranges":[{"startOffset":15292,"endOffset":16026,"count":21},{"startOffset":15380,"endOffset":16001,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15666,"endOffset":15834,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":16056,"endOffset":16455,"count":21},{"startOffset":16297,"endOffset":16335,"count":0},{"startOffset":16337,"endOffset":16423,"count":0}],"isBlockCoverage":true},{"functionName":"isPresent","ranges":[{"startOffset":16473,"endOffset":16928,"count":0}],"isBlockCoverage":false},{"functionName":"invoke","ranges":[{"startOffset":16984,"endOffset":19428,"count":21},{"startOffset":17303,"endOffset":17348,"count":0},{"startOffset":17381,"endOffset":17527,"count":0},{"startOffset":17575,"endOffset":17679,"count":0},{"startOffset":17706,"endOffset":17745,"count":0},{"startOffset":17792,"endOffset":17893,"count":0},{"startOffset":17916,"endOffset":17980,"count":0},{"startOffset":18029,"endOffset":18208,"count":0},{"startOffset":18236,"endOffset":18317,"count":0},{"startOffset":18341,"endOffset":18431,"count":20},{"startOffset":18431,"endOffset":19388,"count":1},{"startOffset":18543,"endOffset":19388,"count":0},{"startOffset":19388,"endOffset":19427,"count":0}],"isBlockCoverage":true},{"functionName":"effectiveWrappedMethod","ranges":[{"startOffset":19459,"endOffset":19732,"count":0}],"isBlockCoverage":false},{"functionName":"onCall","ranges":[{"startOffset":19747,"endOffset":19817,"count":0}],"isBlockCoverage":false},{"functionName":"onFirstCall","ranges":[{"startOffset":19837,"endOffset":19907,"count":0}],"isBlockCoverage":false},{"functionName":"onSecondCall","ranges":[{"startOffset":19928,"endOffset":20000,"count":0}],"isBlockCoverage":false},{"functionName":"onThirdCall","ranges":[{"startOffset":20020,"endOffset":20090,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":20107,"endOffset":20422,"count":0}],"isBlockCoverage":false},{"functionName":"createBehavior","ranges":[{"startOffset":20428,"endOffset":20719,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20481,"endOffset":20716,"count":23},{"startOffset":20547,"endOffset":20568,"count":21}],"isBlockCoverage":true},{"functionName":"addBehavior","ranges":[{"startOffset":20721,"endOffset":20932,"count":34}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":20778,"endOffset":20889,"count":23},{"startOffset":20875,"endOffset":20882,"count":0}],"isBlockCoverage":true},{"functionName":"6../util/core/get-property-descriptor","ranges":[{"startOffset":21242,"endOffset":22065,"count":1}],"isBlockCoverage":true},{"functionName":"collectMethod","ranges":[{"startOffset":21565,"endOffset":21800,"count":0}],"isBlockCoverage":false},{"functionName":"collectOwnMethods","ranges":[{"startOffset":21880,"endOffset":22025,"count":0}],"isBlockCoverage":false},{"functionName":"7.supports-color","ranges":[{"startOffset":22157,"endOffset":22960,"count":1}],"isBlockCoverage":true},{"functionName":"Colorizer","ranges":[{"startOffset":22245,"endOffset":22351,"count":1}],"isBlockCoverage":true},{"functionName":"colorize","ranges":[{"startOffset":22484,"endOffset":22644,"count":0}],"isBlockCoverage":false},{"functionName":"red","ranges":[{"startOffset":22650,"endOffset":22705,"count":0}],"isBlockCoverage":false},{"functionName":"green","ranges":[{"startOffset":22711,"endOffset":22768,"count":0}],"isBlockCoverage":false},{"functionName":"cyan","ranges":[{"startOffset":22774,"endOffset":22830,"count":0}],"isBlockCoverage":false},{"functionName":"white","ranges":[{"startOffset":22836,"endOffset":22893,"count":0}],"isBlockCoverage":false},{"functionName":"bold","ranges":[{"startOffset":22899,"endOffset":22954,"count":0}],"isBlockCoverage":false},{"functionName":"8../sandbox","ranges":[{"startOffset":22987,"endOffset":25950,"count":1}],"isBlockCoverage":true},{"functionName":"prepareSandboxFromConfig","ranges":[{"startOffset":23207,"endOffset":23563,"count":0}],"isBlockCoverage":false},{"functionName":"exposeValue","ranges":[{"startOffset":23565,"endOffset":23854,"count":0}],"isBlockCoverage":false},{"functionName":"createSandbox","ranges":[{"startOffset":25185,"endOffset":25914,"count":0}],"isBlockCoverage":false},{"functionName":"9../stub","ranges":[{"startOffset":25994,"endOffset":27153,"count":1}],"isBlockCoverage":true},{"functionName":"isStub","ranges":[{"startOffset":26199,"endOffset":26269,"count":0}],"isBlockCoverage":false},{"functionName":"createStubInstance","ranges":[{"startOffset":26288,"endOffset":27149,"count":0}],"isBlockCoverage":false},{"functionName":"10../util/core/export-async-behaviors","ranges":[{"startOffset":27223,"endOffset":36266,"count":1}],"isBlockCoverage":true},{"functionName":"throwsException","ranges":[{"startOffset":27639,"endOffset":28225,"count":0}],"isBlockCoverage":false},{"functionName":"callsFake","ranges":[{"startOffset":28269,"endOffset":28445,"count":0}],"isBlockCoverage":false},{"functionName":"callsArg","ranges":[{"startOffset":28462,"endOffset":28837,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgOn","ranges":[{"startOffset":28856,"endOffset":29240,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgWith","ranges":[{"startOffset":29261,"endOffset":29657,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgWith","ranges":[{"startOffset":29680,"endOffset":30083,"count":0}],"isBlockCoverage":false},{"functionName":"yields","ranges":[{"startOffset":30098,"endOffset":30405,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsRight","ranges":[{"startOffset":30425,"endOffset":30733,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsOn","ranges":[{"startOffset":30750,"endOffset":31064,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsTo","ranges":[{"startOffset":31081,"endOffset":31389,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsToOn","ranges":[{"startOffset":31408,"endOffset":31688,"count":0}],"isBlockCoverage":false},{"functionName":"returns","ranges":[{"startOffset":31772,"endOffset":32089,"count":0}],"isBlockCoverage":false},{"functionName":"returnsArg","ranges":[{"startOffset":32108,"endOffset":32334,"count":0}],"isBlockCoverage":false},{"functionName":"throwsArg","ranges":[{"startOffset":32352,"endOffset":32576,"count":0}],"isBlockCoverage":false},{"functionName":"returnsThis","ranges":[{"startOffset":32596,"endOffset":32697,"count":0}],"isBlockCoverage":false},{"functionName":"resolves","ranges":[{"startOffset":32714,"endOffset":33065,"count":22}],"isBlockCoverage":true},{"functionName":"resolvesArg","ranges":[{"startOffset":33085,"endOffset":33595,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":33611,"endOffset":34259,"count":1},{"startOffset":33711,"endOffset":33802,"count":0},{"startOffset":33820,"endOffset":33872,"count":0}],"isBlockCoverage":true},{"functionName":"resolvesThis","ranges":[{"startOffset":34280,"endOffset":34633,"count":0}],"isBlockCoverage":false},{"functionName":"callThrough","ranges":[{"startOffset":34653,"endOffset":34721,"count":0}],"isBlockCoverage":false},{"functionName":"callThroughWithNew","ranges":[{"startOffset":34748,"endOffset":34830,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34842,"endOffset":35199,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35211,"endOffset":35694,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":35708,"endOffset":36131,"count":0}],"isBlockCoverage":false},{"functionName":"11../proxy","ranges":[{"startOffset":36402,"endOffset":42202,"count":1}],"isBlockCoverage":true},{"functionName":"fake","ranges":[{"startOffset":37247,"endOffset":37426,"count":0}],"isBlockCoverage":false},{"functionName":"returns","ranges":[{"startOffset":37706,"endOffset":37857,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":38341,"endOffset":38500,"count":0}],"isBlockCoverage":false},{"functionName":"resolves","ranges":[{"startOffset":38780,"endOffset":38949,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":39368,"endOffset":39545,"count":0}],"isBlockCoverage":false},{"functionName":"yields","ranges":[{"startOffset":39860,"endOffset":40250,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsAsync","ranges":[{"startOffset":40626,"endOffset":41067,"count":0}],"isBlockCoverage":false},{"functionName":"wrapFunc","ranges":[{"startOffset":41215,"endOffset":41907,"count":0}],"isBlockCoverage":false},{"functionName":"getError","ranges":[{"startOffset":42109,"endOffset":42199,"count":0}],"isBlockCoverage":false},{"functionName":"12../assert","ranges":[{"startOffset":42272,"endOffset":50817,"count":1}],"isBlockCoverage":true},{"functionName":"callCountInWords","ranges":[{"startOffset":43017,"endOffset":43170,"count":0}],"isBlockCoverage":false},{"functionName":"expectedCallCountInWords","ranges":[{"startOffset":43172,"endOffset":43667,"count":0}],"isBlockCoverage":false},{"functionName":"receivedMinCalls","ranges":[{"startOffset":43669,"endOffset":43851,"count":0}],"isBlockCoverage":false},{"functionName":"receivedMaxCalls","ranges":[{"startOffset":43853,"endOffset":44035,"count":0}],"isBlockCoverage":false},{"functionName":"verifyMatcher","ranges":[{"startOffset":44037,"endOffset":44203,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":44278,"endOffset":44487,"count":0}],"isBlockCoverage":false},{"functionName":"invoke","ranges":[{"startOffset":44502,"endOffset":44649,"count":0}],"isBlockCoverage":false},{"functionName":"atLeast","ranges":[{"startOffset":44665,"endOffset":44980,"count":0}],"isBlockCoverage":false},{"functionName":"atMost","ranges":[{"startOffset":44995,"endOffset":45309,"count":0}],"isBlockCoverage":false},{"functionName":"never","ranges":[{"startOffset":45323,"endOffset":45379,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":45392,"endOffset":45447,"count":0}],"isBlockCoverage":false},{"functionName":"twice","ranges":[{"startOffset":45461,"endOffset":45517,"count":0}],"isBlockCoverage":false},{"functionName":"thrice","ranges":[{"startOffset":45532,"endOffset":45589,"count":0}],"isBlockCoverage":false},{"functionName":"exactly","ranges":[{"startOffset":45605,"endOffset":45820,"count":0}],"isBlockCoverage":false},{"functionName":"met","ranges":[{"startOffset":45832,"endOffset":45909,"count":0}],"isBlockCoverage":false},{"functionName":"verifyCallAllowed","ranges":[{"startOffset":45935,"endOffset":48256,"count":0}],"isBlockCoverage":false},{"functionName":"allowsCall","ranges":[{"startOffset":48275,"endOffset":49320,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":49337,"endOffset":49436,"count":0}],"isBlockCoverage":false},{"functionName":"withExactArgs","ranges":[{"startOffset":49458,"endOffset":49599,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":49610,"endOffset":49700,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":49717,"endOffset":50330,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":50345,"endOffset":50542,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":50555,"endOffset":50615,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":50628,"endOffset":50775,"count":0}],"isBlockCoverage":false},{"functionName":"13../mock-expectation","ranges":[{"startOffset":50997,"endOffset":56899,"count":1}],"isBlockCoverage":true},{"functionName":"mock","ranges":[{"startOffset":51649,"endOffset":51837,"count":0}],"isBlockCoverage":false},{"functionName":"each","ranges":[{"startOffset":51839,"endOffset":51941,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEquals","ranges":[{"startOffset":51943,"endOffset":52178,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":52207,"endOffset":52458,"count":0}],"isBlockCoverage":false},{"functionName":"expects","ranges":[{"startOffset":52474,"endOffset":53273,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":53289,"endOffset":53528,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":53543,"endOffset":54314,"count":0}],"isBlockCoverage":false},{"functionName":"invokeMethod","ranges":[{"startOffset":54335,"endOffset":56867,"count":0}],"isBlockCoverage":false},{"functionName":"14../fake","ranges":[{"startOffset":57045,"endOffset":59653,"count":1}],"isBlockCoverage":true},{"functionName":"getFakeExecutor","ranges":[{"startOffset":57617,"endOffset":57796,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":58097,"endOffset":59623,"count":0}],"isBlockCoverage":false},{"functionName":"15.@sinonjs/commons","ranges":[{"startOffset":59704,"endOffset":61507,"count":1}],"isBlockCoverage":true},{"functionName":"incrementCallCount","ranges":[{"startOffset":59847,"endOffset":60106,"count":21}],"isBlockCoverage":true},{"functionName":"createCallProperties","ranges":[{"startOffset":60140,"endOffset":60358,"count":42}],"isBlockCoverage":true},{"functionName":"delegateToCalls","ranges":[{"startOffset":60387,"endOffset":61503,"count":26}],"isBlockCoverage":true},{"functionName":"proxy.<computed>","ranges":[{"startOffset":60540,"endOffset":61500,"count":0}],"isBlockCoverage":false},{"functionName":"16.@sinonjs/commons","ranges":[{"startOffset":61537,"endOffset":69707,"count":1}],"isBlockCoverage":true},{"functionName":"throwYieldError","ranges":[{"startOffset":62180,"endOffset":62381,"count":0}],"isBlockCoverage":false},{"functionName":"calledOn","ranges":[{"startOffset":62417,"endOffset":62601,"count":0}],"isBlockCoverage":false},{"functionName":"calledWith","ranges":[{"startOffset":62620,"endOffset":63013,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithMatch","ranges":[{"startOffset":63037,"endOffset":63507,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithExactly","ranges":[{"startOffset":63533,"endOffset":63701,"count":0}],"isBlockCoverage":false},{"functionName":"notCalledWith","ranges":[{"startOffset":63723,"endOffset":63811,"count":0}],"isBlockCoverage":false},{"functionName":"notCalledWithMatch","ranges":[{"startOffset":63838,"endOffset":63936,"count":0}],"isBlockCoverage":false},{"functionName":"returned","ranges":[{"startOffset":63953,"endOffset":64036,"count":0}],"isBlockCoverage":false},{"functionName":"threw","ranges":[{"startOffset":64050,"endOffset":64271,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithNew","ranges":[{"startOffset":64293,"endOffset":64402,"count":21}],"isBlockCoverage":true},{"functionName":"calledBefore","ranges":[{"startOffset":64423,"endOffset":64490,"count":0}],"isBlockCoverage":false},{"functionName":"calledAfter","ranges":[{"startOffset":64510,"endOffset":64577,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyBefore","ranges":[{"startOffset":64609,"endOffset":64682,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyAfter","ranges":[{"startOffset":64713,"endOffset":64786,"count":0}],"isBlockCoverage":false},{"functionName":"callArg","ranges":[{"startOffset":64802,"endOffset":64897,"count":0}],"isBlockCoverage":false},{"functionName":"callArgOn","ranges":[{"startOffset":64915,"endOffset":65036,"count":0}],"isBlockCoverage":false},{"functionName":"callArgWith","ranges":[{"startOffset":65056,"endOffset":65202,"count":0}],"isBlockCoverage":false},{"functionName":"callArgOnWith","ranges":[{"startOffset":65224,"endOffset":65393,"count":0}],"isBlockCoverage":false},{"functionName":"throwArg","ranges":[{"startOffset":65410,"endOffset":65653,"count":0}],"isBlockCoverage":false},{"functionName":"yield","ranges":[{"startOffset":65667,"endOffset":65764,"count":0}],"isBlockCoverage":false},{"functionName":"yieldOn","ranges":[{"startOffset":65780,"endOffset":66217,"count":0}],"isBlockCoverage":false},{"functionName":"yieldTo","ranges":[{"startOffset":66233,"endOffset":66377,"count":0}],"isBlockCoverage":false},{"functionName":"yieldToOn","ranges":[{"startOffset":66395,"endOffset":66971,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":66988,"endOffset":68003,"count":0}],"isBlockCoverage":false},{"functionName":"ensureArgIsAFunction","ranges":[{"startOffset":68032,"endOffset":68292,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":68396,"endOffset":68496,"count":0}],"isBlockCoverage":false},{"functionName":"createProxyCall","ranges":[{"startOffset":68725,"endOffset":69605,"count":105},{"startOffset":68887,"endOffset":68950,"count":0},{"startOffset":69201,"endOffset":69210,"count":0}],"isBlockCoverage":true},{"functionName":"17../proxy-call-util","ranges":[{"startOffset":69768,"endOffset":72615,"count":1}],"isBlockCoverage":true},{"functionName":"invoke","ranges":[{"startOffset":70162,"endOffset":72611,"count":21},{"startOffset":71018,"endOffset":71397,"count":0},{"startOffset":71491,"endOffset":71531,"count":0},{"startOffset":72552,"endOffset":72584,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":70491,"endOffset":70698,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":71682,"endOffset":71805,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":72269,"endOffset":72345,"count":0}],"isBlockCoverage":false},{"functionName":"18../proxy-call","ranges":[{"startOffset":72668,"endOffset":82778,"count":1}],"isBlockCoverage":true},{"functionName":"named","ranges":[{"startOffset":73295,"endOffset":73743,"count":0}],"isBlockCoverage":false},{"functionName":"matchingFakes","ranges":[{"startOffset":73907,"endOffset":73969,"count":0}],"isBlockCoverage":false},{"functionName":"getCall","ranges":[{"startOffset":73985,"endOffset":74508,"count":189},{"startOffset":74053,"endOffset":74173,"count":0},{"startOffset":74216,"endOffset":74252,"count":84},{"startOffset":74252,"endOffset":74507,"count":105}],"isBlockCoverage":true},{"functionName":"getCalls","ranges":[{"startOffset":74525,"endOffset":74708,"count":0}],"isBlockCoverage":false},{"functionName":"calledBefore","ranges":[{"startOffset":74729,"endOffset":74969,"count":0}],"isBlockCoverage":false},{"functionName":"calledAfter","ranges":[{"startOffset":74989,"endOffset":75174,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyBefore","ranges":[{"startOffset":75206,"endOffset":75463,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyAfter","ranges":[{"startOffset":75494,"endOffset":75750,"count":0}],"isBlockCoverage":false},{"functionName":"printf","ranges":[{"startOffset":75810,"endOffset":76355,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":76376,"endOffset":77420,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":78466,"endOffset":78506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":78622,"endOffset":78662,"count":0}],"isBlockCoverage":false},{"functionName":"createProxy","ranges":[{"startOffset":79001,"endOffset":79255,"count":27}],"isBlockCoverage":true},{"functionName":"wrapFunction","ranges":[{"startOffset":79257,"endOffset":82744,"count":27},{"startOffset":79582,"endOffset":79721,"count":0},{"startOffset":79879,"endOffset":80022,"count":0},{"startOffset":80031,"endOffset":80177,"count":0},{"startOffset":80186,"endOffset":80335,"count":0},{"startOffset":80344,"endOffset":80496,"count":0},{"startOffset":80505,"endOffset":80660,"count":0},{"startOffset":80669,"endOffset":80827,"count":0},{"startOffset":80836,"endOffset":80997,"count":0},{"startOffset":81006,"endOffset":81170,"count":0},{"startOffset":81179,"endOffset":81347,"count":0},{"startOffset":81356,"endOffset":81527,"count":0},{"startOffset":81536,"endOffset":81710,"count":0},{"startOffset":81719,"endOffset":81859,"count":0}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":79606,"endOffset":79701,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":79754,"endOffset":79850,"count":21}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":79903,"endOffset":80002,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":80055,"endOffset":80157,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":80210,"endOffset":80315,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":80368,"endOffset":80476,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":80529,"endOffset":80640,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":80693,"endOffset":80807,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":80860,"endOffset":80977,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81030,"endOffset":81150,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81204,"endOffset":81327,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81381,"endOffset":81507,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81561,"endOffset":81690,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81744,"endOffset":81839,"count":0}],"isBlockCoverage":false},{"functionName":"19../util/core/walk-object","ranges":[{"startOffset":82961,"endOffset":83366,"count":1}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":83066,"endOffset":83174,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":83176,"endOffset":83246,"count":0}],"isBlockCoverage":false},{"functionName":"restoreObject","ranges":[{"startOffset":83248,"endOffset":83330,"count":0}],"isBlockCoverage":false},{"functionName":"20../assert","ranges":[{"startOffset":83403,"endOffset":97482,"count":1}],"isBlockCoverage":true},{"functionName":"applyOnEach","ranges":[{"startOffset":84392,"endOffset":84626,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnAccessors","ranges":[{"startOffset":84628,"endOffset":84930,"count":0}],"isBlockCoverage":false},{"functionName":"verifySameType","ranges":[{"startOffset":84932,"endOffset":85208,"count":0}],"isBlockCoverage":false},{"functionName":"checkForValidArguments","ranges":[{"startOffset":85210,"endOffset":85647,"count":0}],"isBlockCoverage":false},{"functionName":"Sandbox","ranges":[{"startOffset":85784,"endOffset":97418,"count":1}],"isBlockCoverage":true},{"functionName":"addToCollection","ranges":[{"startOffset":86038,"endOffset":86525,"count":27},{"startOffset":86147,"endOffset":86180,"count":0},{"startOffset":86191,"endOffset":86519,"count":0}],"isBlockCoverage":true},{"functionName":"getFakes","ranges":[{"startOffset":86651,"endOffset":86705,"count":0}],"isBlockCoverage":false},{"functionName":"createStubInstance","ranges":[{"startOffset":86741,"endOffset":87029,"count":0}],"isBlockCoverage":false},{"functionName":"inject","ranges":[{"startOffset":87053,"endOffset":88192,"count":0}],"isBlockCoverage":false},{"functionName":"mock","ranges":[{"startOffset":88214,"endOffset":88337,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":88360,"endOffset":88475,"count":0}],"isBlockCoverage":false},{"functionName":"resetBehavior","ranges":[{"startOffset":88506,"endOffset":88588,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":88618,"endOffset":88878,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":88903,"endOffset":89367,"count":0}],"isBlockCoverage":false},{"functionName":"restoreContext","ranges":[{"startOffset":89399,"endOffset":89669,"count":0}],"isBlockCoverage":false},{"functionName":"getFakeRestorer","ranges":[{"startOffset":89907,"endOffset":90514,"count":0}],"isBlockCoverage":false},{"functionName":"verifyNotReplaced","ranges":[{"startOffset":90520,"endOffset":90927,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":91168,"endOffset":91696,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUsingAccessor","ranges":[{"startOffset":91735,"endOffset":92275,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":92299,"endOffset":93028,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGetter","ranges":[{"startOffset":93059,"endOffset":94117,"count":0}],"isBlockCoverage":false},{"functionName":"replaceSetter","ranges":[{"startOffset":94148,"endOffset":95257,"count":0}],"isBlockCoverage":false},{"functionName":"commonPostInitSetup","ranges":[{"startOffset":95264,"endOffset":95917,"count":27},{"startOffset":95438,"endOffset":95467,"count":0},{"startOffset":95506,"endOffset":95682,"count":0},{"startOffset":95714,"endOffset":95839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":95596,"endOffset":95670,"count":0}],"isBlockCoverage":false},{"functionName":"spy","ranges":[{"startOffset":95937,"endOffset":96082,"count":0}],"isBlockCoverage":false},{"functionName":"stub","ranges":[{"startOffset":96104,"endOffset":96254,"count":27}],"isBlockCoverage":true},{"functionName":"fake","ranges":[{"startOffset":96323,"endOffset":96452,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96491,"endOffset":96814,"count":6}],"isBlockCoverage":true},{"functionName":"sandbox.fake.<computed>","ranges":[{"startOffset":96635,"endOffset":96797,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeTimers","ranges":[{"startOffset":96846,"endOffset":97034,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":97058,"endOffset":97126,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAndRestore","ranges":[{"startOffset":97160,"endOffset":97415,"count":0}],"isBlockCoverage":false},{"functionName":"21../colorizer","ranges":[{"startOffset":97753,"endOffset":102414,"count":1}],"isBlockCoverage":true},{"functionName":"colorSinonMatchText","ranges":[{"startOffset":98374,"endOffset":98819,"count":0}],"isBlockCoverage":false},{"functionName":"colorDiffText","ranges":[{"startOffset":98885,"endOffset":99303,"count":0}],"isBlockCoverage":false},{"functionName":"quoteStringValue","ranges":[{"startOffset":99369,"endOffset":99504,"count":0}],"isBlockCoverage":false},{"functionName":"c","ranges":[{"startOffset":99532,"endOffset":99614,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":99624,"endOffset":99780,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":99790,"endOffset":101439,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":101449,"endOffset":101973,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":101983,"endOffset":102217,"count":0}],"isBlockCoverage":false},{"functionName":"*","ranges":[{"startOffset":102229,"endOffset":102407,"count":0}],"isBlockCoverage":false},{"functionName":"22../proxy","ranges":[{"startOffset":102533,"endOffset":108142,"count":1}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":103487,"endOffset":103760,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":103807,"endOffset":104816,"count":0}],"isBlockCoverage":false},{"functionName":"matchingFakes","ranges":[{"startOffset":104883,"endOffset":105031,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":104948,"endOffset":105023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105227,"endOffset":105346,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105453,"endOffset":105572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105678,"endOffset":105798,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105856,"endOffset":105972,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106157,"endOffset":106273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106335,"endOffset":106514,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106605,"endOffset":106808,"count":0}],"isBlockCoverage":false},{"functionName":"createSpy","ranges":[{"startOffset":106814,"endOffset":107308,"count":0}],"isBlockCoverage":false},{"functionName":"spy","ranges":[{"startOffset":107310,"endOffset":108095,"count":0}],"isBlockCoverage":false},{"functionName":"23../behavior","ranges":[{"startOffset":108382,"endOffset":115978,"count":1}],"isBlockCoverage":true},{"functionName":"createStub","ranges":[{"startOffset":109501,"endOffset":110580,"count":27},{"startOffset":110112,"endOffset":110127,"count":0},{"startOffset":110304,"endOffset":110310,"count":0},{"startOffset":110422,"endOffset":110431,"count":0}],"isBlockCoverage":true},{"functionName":"functionStub","ranges":[{"startOffset":109602,"endOffset":110059,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":109793,"endOffset":109960,"count":0}],"isBlockCoverage":false},{"functionName":"stub","ranges":[{"startOffset":110582,"endOffset":112520,"count":27},{"startOffset":110646,"endOffset":110766,"count":0},{"startOffset":110796,"endOffset":110864,"count":0},{"startOffset":110963,"endOffset":111086,"count":0},{"startOffset":111289,"endOffset":111320,"count":0},{"startOffset":111397,"endOffset":111418,"count":0},{"startOffset":111458,"endOffset":111492,"count":0},{"startOffset":111749,"endOffset":111797,"count":0},{"startOffset":111826,"endOffset":111862,"count":0},{"startOffset":111983,"endOffset":111989,"count":0},{"startOffset":112480,"endOffset":112483,"count":0}],"isBlockCoverage":true},{"functionName":"restore","ranges":[{"startOffset":112175,"endOffset":112432,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPropertyDescriptor","ranges":[{"startOffset":112522,"endOffset":113240,"count":27},{"startOffset":112619,"endOffset":112642,"count":0},{"startOffset":112696,"endOffset":112719,"count":0},{"startOffset":112721,"endOffset":112856,"count":0},{"startOffset":112900,"endOffset":112927,"count":0},{"startOffset":112929,"endOffset":113056,"count":0},{"startOffset":113094,"endOffset":113117,"count":0},{"startOffset":113119,"endOffset":113238,"count":0}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":113242,"endOffset":113415,"count":27},{"startOffset":113321,"endOffset":113352,"count":0},{"startOffset":113353,"endOffset":113379,"count":0},{"startOffset":113380,"endOffset":113406,"count":0}],"isBlockCoverage":true},{"functionName":"getParentBehaviour","ranges":[{"startOffset":113457,"endOffset":113577,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultBehavior","ranges":[{"startOffset":113579,"endOffset":113766,"count":21},{"startOffset":113673,"endOffset":113716,"count":0},{"startOffset":113717,"endOffset":113757,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentBehavior","ranges":[{"startOffset":113768,"endOffset":114021,"count":21},{"startOffset":113919,"endOffset":113949,"count":0},{"startOffset":113958,"endOffset":113975,"count":0}],"isBlockCoverage":true},{"functionName":"resetBehavior","ranges":[{"startOffset":114097,"endOffset":114503,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":114517,"endOffset":114595,"count":0}],"isBlockCoverage":false},{"functionName":"onCall","ranges":[{"startOffset":114610,"endOffset":114786,"count":0}],"isBlockCoverage":false},{"functionName":"onFirstCall","ranges":[{"startOffset":114806,"endOffset":114867,"count":0}],"isBlockCoverage":false},{"functionName":"onSecondCall","ranges":[{"startOffset":114888,"endOffset":114950,"count":0}],"isBlockCoverage":false},{"functionName":"onThirdCall","ranges":[{"startOffset":114970,"endOffset":115031,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":115048,"endOffset":115440,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":115477,"endOffset":115723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":115759,"endOffset":115928,"count":34}],"isBlockCoverage":true},{"functionName":"24.@sinonjs/commons","ranges":[{"startOffset":116324,"endOffset":116741,"count":1}],"isBlockCoverage":true},{"functionName":"throwOnFalsyObject","ranges":[{"startOffset":116438,"endOffset":116700,"count":27},{"startOffset":116515,"endOffset":116698,"count":0}],"isBlockCoverage":true},{"functionName":"25.@sinonjs/commons","ranges":[{"startOffset":116771,"endOffset":117632,"count":1}],"isBlockCoverage":true},{"functionName":"exportAsyncBehaviors","ranges":[{"startOffset":116937,"endOffset":117628,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":117051,"endOffset":117606,"count":36},{"startOffset":117221,"endOffset":117246,"count":9},{"startOffset":117248,"endOffset":117572,"count":9}],"isBlockCoverage":true},{"functionName":"acc.<computed>","ranges":[{"startOffset":117290,"endOffset":117557,"count":0}],"isBlockCoverage":false},{"functionName":"26.@sinonjs/commons","ranges":[{"startOffset":117662,"endOffset":122717,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":118056,"endOffset":118990,"count":1},{"startOffset":118845,"endOffset":118942,"count":10}],"isBlockCoverage":true},{"functionName":"constructor","ranges":[{"startOffset":118109,"endOffset":118156,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":118176,"endOffset":118223,"count":1}],"isBlockCoverage":true},{"functionName":"valueOf","ranges":[{"startOffset":118242,"endOffset":118289,"count":1}],"isBlockCoverage":true},{"functionName":"toLocaleString","ranges":[{"startOffset":118315,"endOffset":118362,"count":1}],"isBlockCoverage":true},{"functionName":"prototype","ranges":[{"startOffset":118383,"endOffset":118430,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototypeOf","ranges":[{"startOffset":118455,"endOffset":118502,"count":1}],"isBlockCoverage":true},{"functionName":"propertyIsEnumerable","ranges":[{"startOffset":118534,"endOffset":118581,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwnProperty","ranges":[{"startOffset":118607,"endOffset":118654,"count":1}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":118672,"endOffset":118719,"count":1}],"isBlockCoverage":true},{"functionName":"unique","ranges":[{"startOffset":118737,"endOffset":118784,"count":1}],"isBlockCoverage":true},{"functionName":"extendCommon","ranges":[{"startOffset":119082,"endOffset":119811,"count":243},{"startOffset":119198,"endOffset":119789,"count":245},{"startOffset":119259,"endOffset":119378,"count":4207},{"startOffset":119614,"endOffset":119663,"count":0},{"startOffset":119664,"endOffset":119714,"count":0},{"startOffset":119725,"endOffset":119783,"count":0}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":120196,"endOffset":121943,"count":53}],"isBlockCoverage":true},{"functionName":"copyValue","ranges":[{"startOffset":120300,"endOffset":121933,"count":1010},{"startOffset":120654,"endOffset":120692,"count":0},{"startOffset":120694,"endOffset":120733,"count":0},{"startOffset":121484,"endOffset":121863,"count":0}],"isBlockCoverage":true},{"functionName":"extendNonEnum","ranges":[{"startOffset":122335,"endOffset":122713,"count":190}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":122446,"endOffset":122703,"count":3197}],"isBlockCoverage":true},{"functionName":"27","ranges":[{"startOffset":122747,"endOffset":123447,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":122813,"endOffset":123443,"count":0}],"isBlockCoverage":false},{"functionName":"28","ranges":[{"startOffset":123456,"endOffset":123922,"count":1}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":123568,"endOffset":123628,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTick","ranges":[{"startOffset":123647,"endOffset":123918,"count":1},{"startOffset":123812,"endOffset":123917,"count":0}],"isBlockCoverage":true},{"functionName":"29","ranges":[{"startOffset":123931,"endOffset":125745,"count":1}],"isBlockCoverage":true},{"functionName":"getPropertyDescriptor","ranges":[{"startOffset":125252,"endOffset":125701,"count":135},{"startOffset":125559,"endOffset":125612,"count":0}],"isBlockCoverage":true},{"functionName":"30","ranges":[{"startOffset":125754,"endOffset":126344,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":126157,"endOffset":126340,"count":27},{"startOffset":126297,"endOffset":126331,"count":0}],"isBlockCoverage":true},{"functionName":"31","ranges":[{"startOffset":126353,"endOffset":126725,"count":1}],"isBlockCoverage":true},{"functionName":"isNonExistentProperty","ranges":[{"startOffset":126526,"endOffset":126681,"count":27}],"isBlockCoverage":true},{"functionName":"32../get-property-descriptor","ranges":[{"startOffset":126734,"endOffset":127089,"count":1}],"isBlockCoverage":true},{"functionName":"isPropertyConfigurable","ranges":[{"startOffset":126852,"endOffset":127044,"count":0}],"isBlockCoverage":false},{"functionName":"33","ranges":[{"startOffset":127128,"endOffset":127370,"count":1}],"isBlockCoverage":true},{"functionName":"isRestorable","ranges":[{"startOffset":127177,"endOffset":127335,"count":0}],"isBlockCoverage":false},{"functionName":"34../get-next-tick","ranges":[{"startOffset":127379,"endOffset":127615,"count":1}],"isBlockCoverage":true},{"functionName":"35","ranges":[{"startOffset":127666,"endOffset":128327,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":128046,"endOffset":128237,"count":27}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":128243,"endOffset":128320,"count":27}],"isBlockCoverage":true},{"functionName":"36","ranges":[{"startOffset":128336,"endOffset":128538,"count":1}],"isBlockCoverage":true},{"functionName":"timesInWords","ranges":[{"startOffset":128452,"endOffset":128534,"count":0}],"isBlockCoverage":false},{"functionName":"37../get-property-descriptor","ranges":[{"startOffset":128547,"endOffset":130236,"count":1}],"isBlockCoverage":true},{"functionName":"walkObject","ranges":[{"startOffset":129138,"endOffset":130203,"count":0}],"isBlockCoverage":false},{"functionName":"38.@sinonjs/commons","ranges":[{"startOffset":130309,"endOffset":132175,"count":1}],"isBlockCoverage":true},{"functionName":"walkInternal","ranges":[{"startOffset":130429,"endOffset":131421,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":132072,"endOffset":132171,"count":0}],"isBlockCoverage":false},{"functionName":"39../extend","ranges":[{"startOffset":132205,"endOffset":140979,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":132313,"endOffset":132321,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":132689,"endOffset":132839,"count":27},{"startOffset":132763,"endOffset":132830,"count":0}],"isBlockCoverage":true},{"functionName":"mirrorProperties","ranges":[{"startOffset":132841,"endOffset":133021,"count":54},{"startOffset":132916,"endOffset":133019,"count":135},{"startOffset":132961,"endOffset":133013,"count":108}],"isBlockCoverage":true},{"functionName":"getAccessor","ranges":[{"startOffset":133023,"endOffset":133414,"count":54},{"startOffset":133222,"endOffset":133395,"count":108},{"startOffset":133274,"endOffset":133334,"count":0},{"startOffset":133345,"endOffset":133389,"count":0}],"isBlockCoverage":true},{"functionName":"wrapMethod","ranges":[{"startOffset":133521,"endOffset":140975,"count":27},{"startOffset":133586,"endOffset":133656,"count":0},{"startOffset":133695,"endOffset":133724,"count":0},{"startOffset":133726,"endOffset":133849,"count":0},{"startOffset":135515,"endOffset":135549,"count":0},{"startOffset":135665,"endOffset":135673,"count":0},{"startOffset":135777,"endOffset":135932,"count":0},{"startOffset":135981,"endOffset":136027,"count":0},{"startOffset":136038,"endOffset":136173,"count":0},{"startOffset":136193,"endOffset":136412,"count":0},{"startOffset":137012,"endOffset":137067,"count":0},{"startOffset":137305,"endOffset":137546,"count":0},{"startOffset":137552,"endOffset":137601,"count":0}],"isBlockCoverage":true},{"functionName":"checkWrappedMethod","ranges":[{"startOffset":133855,"endOffset":134956,"count":27},{"startOffset":133960,"endOffset":134169,"count":0},{"startOffset":134201,"endOffset":134231,"count":0},{"startOffset":134233,"endOffset":134422,"count":0},{"startOffset":134460,"endOffset":134722,"count":0},{"startOffset":134743,"endOffset":134950,"count":0}],"isBlockCoverage":true},{"functionName":"simplePropertyAssignment","ranges":[{"startOffset":135065,"endOffset":135267,"count":0}],"isBlockCoverage":false},{"functionName":"extendObjectWithWrappedMethods","ranges":[{"startOffset":137646,"endOffset":138453,"count":27},{"startOffset":137847,"endOffset":137865,"count":0},{"startOffset":138365,"endOffset":138437,"count":0}],"isBlockCoverage":true},{"functionName":"restore","ranges":[{"startOffset":138459,"endOffset":140953,"count":27},{"startOffset":138776,"endOffset":139984,"count":0},{"startOffset":140016,"endOffset":140161,"count":0},{"startOffset":140445,"endOffset":140523,"count":0},{"startOffset":140537,"endOffset":140686,"count":0},{"startOffset":140752,"endOffset":140947,"count":0}],"isBlockCoverage":true},{"functionName":"40../core/extend","ranges":[{"startOffset":141072,"endOffset":143419,"count":1}],"isBlockCoverage":true},{"functionName":"createClock","ranges":[{"startOffset":141407,"endOffset":141717,"count":0}],"isBlockCoverage":false},{"functionName":"addIfDefined","ranges":[{"startOffset":141769,"endOffset":141961,"count":2}],"isBlockCoverage":true},{"functionName":"exports.useFakeTimers","ranges":[{"startOffset":142140,"endOffset":143048,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":143081,"endOffset":143147,"count":0}],"isBlockCoverage":false},{"functionName":"41../prototypes/array","ranges":[{"startOffset":143494,"endOffset":144969,"count":1}],"isBlockCoverage":true},{"functionName":"hasCallsLeft","ranges":[{"startOffset":143613,"endOffset":143773,"count":0}],"isBlockCoverage":false},{"functionName":"checkAdjacentCalls","ranges":[{"startOffset":143795,"endOffset":144130,"count":0}],"isBlockCoverage":false},{"functionName":"calledInOrder","ranges":[{"startOffset":144699,"endOffset":144933,"count":0}],"isBlockCoverage":false},{"functionName":"42","ranges":[{"startOffset":145001,"endOffset":145353,"count":1}],"isBlockCoverage":true},{"functionName":"className","ranges":[{"startOffset":145205,"endOffset":145321,"count":0}],"isBlockCoverage":false},{"functionName":"43","ranges":[{"startOffset":145362,"endOffset":146752,"count":1}],"isBlockCoverage":true},{"functionName":"exports.wrap","ranges":[{"startOffset":145675,"endOffset":145913,"count":0}],"isBlockCoverage":false},{"functionName":"exports.defaultMsg","ranges":[{"startOffset":146164,"endOffset":146334,"count":0}],"isBlockCoverage":false},{"functionName":"exports.printWarning","ranges":[{"startOffset":146467,"endOffset":146748,"count":0}],"isBlockCoverage":false},{"functionName":"44","ranges":[{"startOffset":146761,"endOffset":147460,"count":1}],"isBlockCoverage":true},{"functionName":"every","ranges":[{"startOffset":147033,"endOffset":147456,"count":0}],"isBlockCoverage":false},{"functionName":"45","ranges":[{"startOffset":147469,"endOffset":148320,"count":1}],"isBlockCoverage":true},{"functionName":"functionName","ranges":[{"startOffset":147632,"endOffset":148316,"count":27},{"startOffset":147677,"endOffset":147703,"count":0},{"startOffset":147786,"endOffset":148139,"count":0},{"startOffset":148157,"endOffset":148314,"count":0}],"isBlockCoverage":true},{"functionName":"46","ranges":[{"startOffset":148329,"endOffset":148748,"count":1},{"startOffset":148576,"endOffset":148713,"count":0}],"isBlockCoverage":true},{"functionName":"47../called-in-order","ranges":[{"startOffset":148757,"endOffset":149250,"count":1}],"isBlockCoverage":true},{"functionName":"48../prototypes/array","ranges":[{"startOffset":149448,"endOffset":150295,"count":1}],"isBlockCoverage":true},{"functionName":"comparator","ranges":[{"startOffset":149614,"endOffset":149858,"count":0}],"isBlockCoverage":false},{"functionName":"orderByFirstCall","ranges":[{"startOffset":150177,"endOffset":150256,"count":0}],"isBlockCoverage":false},{"functionName":"49../copy-prototype-methods","ranges":[{"startOffset":150327,"endOffset":150485,"count":1}],"isBlockCoverage":true},{"functionName":"50../throws-on-proto","ranges":[{"startOffset":150523,"endOffset":151569,"count":1},{"startOffset":150980,"endOffset":151027,"count":0}],"isBlockCoverage":true},{"functionName":"copyPrototypeMethods","ranges":[{"startOffset":151046,"endOffset":151565,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":151228,"endOffset":151536,"count":141},{"startOffset":151325,"endOffset":151363,"count":4},{"startOffset":151363,"endOffset":151416,"count":137},{"startOffset":151416,"endOffset":151454,"count":5},{"startOffset":151454,"endOffset":151535,"count":132}],"isBlockCoverage":true},{"functionName":"51../copy-prototype-methods","ranges":[{"startOffset":151600,"endOffset":151761,"count":1}],"isBlockCoverage":true},{"functionName":"52../array","ranges":[{"startOffset":151799,"endOffset":152060,"count":1}],"isBlockCoverage":true},{"functionName":"53../copy-prototype-methods","ranges":[{"startOffset":152147,"endOffset":152303,"count":1}],"isBlockCoverage":true},{"functionName":"54../copy-prototype-methods","ranges":[{"startOffset":152341,"endOffset":152500,"count":1}],"isBlockCoverage":true},{"functionName":"55../copy-prototype-methods","ranges":[{"startOffset":152538,"endOffset":152694,"count":1}],"isBlockCoverage":true},{"functionName":"56../copy-prototype-methods","ranges":[{"startOffset":152732,"endOffset":152891,"count":1}],"isBlockCoverage":true},{"functionName":"57","ranges":[{"startOffset":152929,"endOffset":153708,"count":1},{"startOffset":153445,"endOffset":153672,"count":0}],"isBlockCoverage":true},{"functionName":"58.type-detect","ranges":[{"startOffset":153717,"endOffset":154016,"count":1}],"isBlockCoverage":true},{"functionName":"typeOf","ranges":[{"startOffset":153948,"endOffset":154012,"count":26}],"isBlockCoverage":true},{"functionName":"59","ranges":[{"startOffset":154041,"endOffset":154444,"count":1}],"isBlockCoverage":true},{"functionName":"valueToString","ranges":[{"startOffset":154188,"endOffset":154408,"count":0}],"isBlockCoverage":false},{"functionName":"60.@sinonjs/commons","ranges":[{"startOffset":154453,"endOffset":228951,"count":1}],"isBlockCoverage":true},{"functionName":"withGlobal","ranges":[{"startOffset":159932,"endOffset":228468,"count":1},{"startOffset":161705,"endOffset":161767,"count":0},{"startOffset":161843,"endOffset":161904,"count":0},{"startOffset":161978,"endOffset":162038,"count":0},{"startOffset":162117,"endOffset":162176,"count":0},{"startOffset":162699,"endOffset":162898,"count":0},{"startOffset":189848,"endOffset":189925,"count":0},{"startOffset":190066,"endOffset":190141,"count":0},{"startOffset":190182,"endOffset":190255,"count":0},{"startOffset":190295,"endOffset":190366,"count":0},{"startOffset":190489,"endOffset":190510,"count":0}],"isBlockCoverage":true},{"functionName":"NOOP","ranges":[{"startOffset":160194,"endOffset":160239,"count":0}],"isBlockCoverage":false},{"functionName":"NOOP_ARRAY","ranges":[{"startOffset":160264,"endOffset":160302,"count":0}],"isBlockCoverage":false},{"functionName":"FakePerformanceEntry","ranges":[{"startOffset":163225,"endOffset":163434,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":163444,"endOffset":163512,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberFinite","ranges":[{"startOffset":163593,"endOffset":163742,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsNearInfiniteLimit","ranges":[{"startOffset":163855,"endOffset":164016,"count":0}],"isBlockCoverage":false},{"functionName":"resetIsNearInfiniteLimit","ranges":[{"startOffset":164045,"endOffset":164125,"count":0}],"isBlockCoverage":false},{"functionName":"parseTime","ranges":[{"startOffset":164396,"endOffset":165086,"count":0}],"isBlockCoverage":false},{"functionName":"nanoRemainder","ranges":[{"startOffset":165378,"endOffset":165638,"count":0}],"isBlockCoverage":false},{"functionName":"getEpoch","ranges":[{"startOffset":165798,"endOffset":166134,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":166264,"endOffset":166373,"count":0}],"isBlockCoverage":false},{"functionName":"getInfiniteLoopError","ranges":[{"startOffset":166449,"endOffset":168741,"count":0}],"isBlockCoverage":false},{"functionName":"createDate","ranges":[{"startOffset":168798,"endOffset":171580,"count":0}],"isBlockCoverage":false},{"functionName":"createIntl","ranges":[{"startOffset":171890,"endOffset":173173,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueJob","ranges":[{"startOffset":173230,"endOffset":173437,"count":0}],"isBlockCoverage":false},{"functionName":"runJobs","ranges":[{"startOffset":173494,"endOffset":174035,"count":0}],"isBlockCoverage":false},{"functionName":"addTimer","ranges":[{"startOffset":174162,"endOffset":177010,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimers","ranges":[{"startOffset":177178,"endOffset":178082,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimerInRange","ranges":[{"startOffset":178210,"endOffset":178736,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimer","ranges":[{"startOffset":178810,"endOffset":179175,"count":0}],"isBlockCoverage":false},{"functionName":"lastTimer","ranges":[{"startOffset":179249,"endOffset":179614,"count":0}],"isBlockCoverage":false},{"functionName":"callTimer","ranges":[{"startOffset":179692,"endOffset":180189,"count":0}],"isBlockCoverage":false},{"functionName":"getClearHandler","ranges":[{"startOffset":180301,"endOffset":180489,"count":0}],"isBlockCoverage":false},{"functionName":"getScheduleHandler","ranges":[{"startOffset":180604,"endOffset":180794,"count":0}],"isBlockCoverage":false},{"functionName":"createWarnOnce","ranges":[{"startOffset":180871,"endOffset":181053,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180937,"endOffset":181046,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimer","ranges":[{"startOffset":181202,"endOffset":183105,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":183211,"endOffset":186261,"count":0}],"isBlockCoverage":false},{"functionName":"hijackMethod","ranges":[{"startOffset":186455,"endOffset":188088,"count":0}],"isBlockCoverage":false},{"functionName":"doIntervalTick","ranges":[{"startOffset":188178,"endOffset":188272,"count":0}],"isBlockCoverage":false},{"functionName":"createClock","ranges":[{"startOffset":190741,"endOffset":211995,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":212127,"endOffset":228293,"count":0}],"isBlockCoverage":false},{"functionName":"61","ranges":[{"startOffset":229038,"endOffset":229310,"count":1}],"isBlockCoverage":true},{"functionName":"62../create-matcher/assert-matcher","ranges":[{"startOffset":229319,"endOffset":242233,"count":1}],"isBlockCoverage":true},{"functionName":"createMatcher","ranges":[{"startOffset":230808,"endOffset":231760,"count":15},{"startOffset":230999,"endOffset":231065,"count":0},{"startOffset":231097,"endOffset":231215,"count":0},{"startOffset":231299,"endOffset":231411,"count":0},{"startOffset":231433,"endOffset":231500,"count":0}],"isBlockCoverage":true},{"functionName":"m.test","ranges":[{"startOffset":231324,"endOffset":231404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":231834,"endOffset":231866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":231915,"endOffset":231988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":232040,"endOffset":232089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":232139,"endOffset":232180,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.same","ranges":[{"startOffset":232214,"endOffset":232402,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.in","ranges":[{"startOffset":232424,"endOffset":232821,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.typeOf","ranges":[{"startOffset":232847,"endOffset":233020,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":232930,"endOffset":232995,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.instanceOf","ranges":[{"startOffset":233050,"endOffset":233600,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyMatcher","ranges":[{"startOffset":233856,"endOffset":234581,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":233929,"endOffset":234578,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":234625,"endOffset":234778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":234834,"endOffset":234910,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.hasNested","ranges":[{"startOffset":234950,"endOffset":235529,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.json","ranges":[{"startOffset":235691,"endOffset":236138,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.every","ranges":[{"startOffset":236163,"endOffset":236659,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.some","ranges":[{"startOffset":236683,"endOffset":237182,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.deepEquals","ranges":[{"startOffset":237272,"endOffset":238096,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.startsWith","ranges":[{"startOffset":238132,"endOffset":238522,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.endsWith","ranges":[{"startOffset":238556,"endOffset":239089,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.contains","ranges":[{"startOffset":239123,"endOffset":239515,"count":0}],"isBlockCoverage":false},{"functionName":"mapDeepEquals","ranges":[{"startOffset":239599,"endOffset":240261,"count":0}],"isBlockCoverage":false},{"functionName":"mapContains","ranges":[{"startOffset":240293,"endOffset":240696,"count":0}],"isBlockCoverage":false},{"functionName":"setDeepEquals","ranges":[{"startOffset":240780,"endOffset":241357,"count":0}],"isBlockCoverage":false},{"functionName":"setContains","ranges":[{"startOffset":241389,"endOffset":241760,"count":0}],"isBlockCoverage":false},{"functionName":"63../is-matcher","ranges":[{"startOffset":242575,"endOffset":242935,"count":1}],"isBlockCoverage":true},{"functionName":"assertMatcher","ranges":[{"startOffset":242782,"endOffset":242899,"count":0}],"isBlockCoverage":false},{"functionName":"64","ranges":[{"startOffset":242961,"endOffset":243634,"count":1}],"isBlockCoverage":true},{"functionName":"assertMethodExists","ranges":[{"startOffset":243380,"endOffset":243593,"count":0}],"isBlockCoverage":false},{"functionName":"65.@sinonjs/commons","ranges":[{"startOffset":243643,"endOffset":244323,"count":1}],"isBlockCoverage":true},{"functionName":"assertType","ranges":[{"startOffset":244070,"endOffset":244290,"count":11},{"startOffset":244168,"endOffset":244288,"count":0}],"isBlockCoverage":true},{"functionName":"66.@sinonjs/commons","ranges":[{"startOffset":244353,"endOffset":244749,"count":1}],"isBlockCoverage":true},{"functionName":"isIterable","ranges":[{"startOffset":244619,"endOffset":244716,"count":0}],"isBlockCoverage":false},{"functionName":"67../matcher-prototype","ranges":[{"startOffset":244779,"endOffset":245252,"count":1}],"isBlockCoverage":true},{"functionName":"isMatcher","ranges":[{"startOffset":245138,"endOffset":245220,"count":0}],"isBlockCoverage":false},{"functionName":"68.../deep-equal","ranges":[{"startOffset":245307,"endOffset":247128,"count":1}],"isBlockCoverage":true},{"functionName":"matchObject","ranges":[{"startOffset":246075,"endOffset":247094,"count":0}],"isBlockCoverage":false},{"functionName":"69.../create-matcher","ranges":[{"startOffset":247213,"endOffset":248534,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":247301,"endOffset":247349,"count":0}],"isBlockCoverage":false},{"functionName":"matcherPrototype.or","ranges":[{"startOffset":247377,"endOffset":247920,"count":0}],"isBlockCoverage":false},{"functionName":"matcherPrototype.and","ranges":[{"startOffset":247946,"endOffset":248494,"count":0}],"isBlockCoverage":false},{"functionName":"70../match-object","ranges":[{"startOffset":248565,"endOffset":250726,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeMap","ranges":[{"startOffset":249002,"endOffset":250689,"count":1}],"isBlockCoverage":true},{"functionName":"function","ranges":[{"startOffset":249052,"endOffset":249206,"count":15},{"startOffset":249155,"endOffset":249195,"count":0}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":249224,"endOffset":249439,"count":0}],"isBlockCoverage":false},{"functionName":"object","ranges":[{"startOffset":249457,"endOffset":250171,"count":0}],"isBlockCoverage":false},{"functionName":"regexp","ranges":[{"startOffset":250189,"endOffset":250361,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":250379,"endOffset":250679,"count":0}],"isBlockCoverage":false},{"functionName":"71../get-class","ranges":[{"startOffset":250776,"endOffset":261984,"count":1}],"isBlockCoverage":true},{"functionName":"deepEqualCyclic","ranges":[{"startOffset":252677,"endOffset":261811,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqualCyclic.use","ranges":[{"startOffset":261835,"endOffset":261945,"count":3}],"isBlockCoverage":true},{"functionName":"deepEqual","ranges":[{"startOffset":261865,"endOffset":261942,"count":0}],"isBlockCoverage":false},{"functionName":"72.@sinonjs/commons","ranges":[{"startOffset":262217,"endOffset":262752,"count":1}],"isBlockCoverage":true},{"functionName":"getClass","ranges":[{"startOffset":262647,"endOffset":262721,"count":0}],"isBlockCoverage":false},{"functionName":"73../is-nan","ranges":[{"startOffset":262782,"endOffset":263818,"count":1}],"isBlockCoverage":true},{"functionName":"identical","ranges":[{"startOffset":263604,"endOffset":263786,"count":0}],"isBlockCoverage":false},{"functionName":"74../get-class","ranges":[{"startOffset":263859,"endOffset":264297,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":264186,"endOffset":264263,"count":0}],"isBlockCoverage":false},{"functionName":"75../array-types","ranges":[{"startOffset":264322,"endOffset":264977,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayType","ranges":[{"startOffset":264838,"endOffset":264943,"count":0}],"isBlockCoverage":false},{"functionName":"76","ranges":[{"startOffset":265043,"endOffset":265373,"count":1}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":265284,"endOffset":265344,"count":0}],"isBlockCoverage":false},{"functionName":"77","ranges":[{"startOffset":265382,"endOffset":266187,"count":1},{"startOffset":265473,"endOffset":265505,"count":0}],"isBlockCoverage":true},{"functionName":"isElement","ranges":[{"startOffset":265906,"endOffset":266155,"count":0}],"isBlockCoverage":false},{"functionName":"78","ranges":[{"startOffset":266196,"endOffset":266707,"count":1}],"isBlockCoverage":true},{"functionName":"isIterable","ranges":[{"startOffset":266491,"endOffset":266674,"count":0}],"isBlockCoverage":false},{"functionName":"79","ranges":[{"startOffset":266716,"endOffset":267068,"count":1}],"isBlockCoverage":true},{"functionName":"isMap","ranges":[{"startOffset":266952,"endOffset":267040,"count":0}],"isBlockCoverage":false},{"functionName":"80","ranges":[{"startOffset":267077,"endOffset":267579,"count":1}],"isBlockCoverage":true},{"functionName":"isNaN","ranges":[{"startOffset":267278,"endOffset":267551,"count":0}],"isBlockCoverage":false},{"functionName":"81","ranges":[{"startOffset":267588,"endOffset":267930,"count":1}],"isBlockCoverage":true},{"functionName":"isNegZero","ranges":[{"startOffset":267818,"endOffset":267898,"count":0}],"isBlockCoverage":false},{"functionName":"82","ranges":[{"startOffset":267939,"endOffset":268940,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":268503,"endOffset":268909,"count":0}],"isBlockCoverage":false},{"functionName":"83","ranges":[{"startOffset":268949,"endOffset":269376,"count":1}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":269253,"endOffset":269348,"count":0}],"isBlockCoverage":false},{"functionName":"84.@sinonjs/commons","ranges":[{"startOffset":269385,"endOffset":270292,"count":1}],"isBlockCoverage":true},{"functionName":"isSubset","ranges":[{"startOffset":269919,"endOffset":270261,"count":0}],"isBlockCoverage":false},{"functionName":"85.@sinonjs/commons","ranges":[{"startOffset":270322,"endOffset":272234,"count":1}],"isBlockCoverage":true},{"functionName":"iterableToString","ranges":[{"startOffset":270735,"endOffset":270883,"count":0}],"isBlockCoverage":false},{"functionName":"mapToString","ranges":[{"startOffset":271047,"endOffset":271386,"count":0}],"isBlockCoverage":false},{"functionName":"genericIterableToString","ranges":[{"startOffset":271570,"endOffset":271906,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":272094,"endOffset":272195,"count":0}],"isBlockCoverage":false},{"functionName":"86../create-matcher","ranges":[{"startOffset":272264,"endOffset":277820,"count":1}],"isBlockCoverage":true},{"functionName":"arrayContains","ranges":[{"startOffset":273172,"endOffset":273717,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":274031,"endOffset":277666,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":277735,"endOffset":277790,"count":26}],"isBlockCoverage":true},{"functionName":"87../create-matcher","ranges":[{"startOffset":277945,"endOffset":278646,"count":1}],"isBlockCoverage":true},{"functionName":"88","ranges":[{"startOffset":278809,"endOffset":284573,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":278844,"endOffset":279148,"count":1},{"startOffset":278967,"endOffset":279145,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279157,"endOffset":284567,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279265,"endOffset":279670,"count":1},{"startOffset":279368,"endOffset":279669,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":279449,"endOffset":279508,"count":0}],"isBlockCoverage":false},{"functionName":"typeDetect","ranges":[{"startOffset":281059,"endOffset":284540,"count":0}],"isBlockCoverage":false},{"functionName":"89","ranges":[{"startOffset":284582,"endOffset":285290,"count":1},{"startOffset":284999,"endOffset":285287,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":284734,"endOffset":284996,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":285064,"endOffset":285285,"count":0}],"isBlockCoverage":false},{"functionName":"90","ranges":[{"startOffset":285299,"endOffset":285538,"count":1}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":285350,"endOffset":285536,"count":0}],"isBlockCoverage":false},{"functionName":"91../support/isBuffer","ranges":[{"startOffset":285547,"endOffset":301146,"count":1}],"isBlockCoverage":true},{"functionName":"exports.format","ranges":[{"startOffset":286763,"endOffset":287598,"count":0}],"isBlockCoverage":false},{"functionName":"exports.deprecate","ranges":[{"startOffset":287775,"endOffset":288408,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debuglog","ranges":[{"startOffset":288466,"endOffset":288943,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":289236,"endOffset":289969,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":290638,"endOffset":290888,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":290891,"endOffset":290948,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToHash","ranges":[{"startOffset":290951,"endOffset":291081,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":291084,"endOffset":294200,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":294203,"endOffset":294869,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":294872,"endOffset":294962,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":294965,"endOffset":295480,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":295483,"endOffset":297100,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":297103,"endOffset":297630,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":297782,"endOffset":297834,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":297863,"endOffset":297925,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":297958,"endOffset":298005,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":298032,"endOffset":298089,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":298138,"endOffset":298198,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":298229,"endOffset":298289,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":298320,"endOffset":298380,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":298411,"endOffset":298465,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":298502,"endOffset":298594,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":298625,"endOffset":298701,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":298732,"endOffset":298817,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":298844,"endOffset":298961,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":298990,"endOffset":299054,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":299089,"endOffset":299340,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":299428,"endOffset":299502,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":299505,"endOffset":299581,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":299717,"endOffset":299939,"count":0}],"isBlockCoverage":false},{"functionName":"exports.log","ranges":[{"startOffset":300027,"endOffset":300122,"count":0}],"isBlockCoverage":false},{"functionName":"exports._extend","ranges":[{"startOffset":300800,"endOffset":301044,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":301047,"endOffset":301143,"count":0}],"isBlockCoverage":false},{"functionName":"92","ranges":[{"startOffset":301192,"endOffset":379800,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":302805,"endOffset":303102,"count":1},{"startOffset":302916,"endOffset":303099,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":303111,"endOffset":379794,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":303149,"endOffset":303167,"count":8}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":303199,"endOffset":309575,"count":0}],"isBlockCoverage":false},{"functionName":"addToPath","ranges":[{"startOffset":309592,"endOffset":310299,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommon","ranges":[{"startOffset":310320,"endOffset":311297,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":311311,"endOffset":311558,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmpty","ranges":[{"startOffset":311577,"endOffset":311769,"count":0}],"isBlockCoverage":false},{"functionName":"castInput","ranges":[{"startOffset":311786,"endOffset":311839,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":311855,"endOffset":311919,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":311931,"endOffset":311988,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":312007,"endOffset":312078,"count":0}],"isBlockCoverage":false},{"functionName":"buildValues","ranges":[{"startOffset":312086,"endOffset":313590,"count":0}],"isBlockCoverage":false},{"functionName":"diffChars","ranges":[{"startOffset":313628,"endOffset":313733,"count":0}],"isBlockCoverage":false},{"functionName":"longestCommonPrefix","ranges":[{"startOffset":313737,"endOffset":313961,"count":0}],"isBlockCoverage":false},{"functionName":"longestCommonSuffix","ranges":[{"startOffset":313964,"endOffset":314505,"count":0}],"isBlockCoverage":false},{"functionName":"replacePrefix","ranges":[{"startOffset":314508,"endOffset":314830,"count":0}],"isBlockCoverage":false},{"functionName":"replaceSuffix","ranges":[{"startOffset":314833,"endOffset":315216,"count":0}],"isBlockCoverage":false},{"functionName":"removePrefix","ranges":[{"startOffset":315219,"endOffset":315314,"count":0}],"isBlockCoverage":false},{"functionName":"removeSuffix","ranges":[{"startOffset":315317,"endOffset":315412,"count":0}],"isBlockCoverage":false},{"functionName":"maximumOverlap","ranges":[{"startOffset":315415,"endOffset":315523,"count":0}],"isBlockCoverage":false},{"functionName":"overlapCount","ranges":[{"startOffset":315589,"endOffset":316652,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyWinLineEndings","ranges":[{"startOffset":316740,"endOffset":316876,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyUnixLineEndings","ranges":[{"startOffset":316961,"endOffset":317068,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.equals","ranges":[{"startOffset":319413,"endOffset":319595,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":319619,"endOffset":320699,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.join","ranges":[{"startOffset":320719,"endOffset":321309,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.postProcess","ranges":[{"startOffset":321336,"endOffset":322233,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":322237,"endOffset":322812,"count":0}],"isBlockCoverage":false},{"functionName":"dedupeWhitespaceInChangeObjects","ranges":[{"startOffset":322815,"endOffset":328885,"count":0}],"isBlockCoverage":false},{"functionName":"wordWithSpaceDiff.tokenize","ranges":[{"startOffset":328955,"endOffset":329498,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":329502,"endOffset":329620,"count":0}],"isBlockCoverage":false},{"functionName":"generateOptions","ranges":[{"startOffset":329624,"endOffset":329975,"count":0}],"isBlockCoverage":false},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":330028,"endOffset":330809,"count":0}],"isBlockCoverage":false},{"functionName":"lineDiff.equals","ranges":[{"startOffset":330831,"endOffset":331932,"count":0}],"isBlockCoverage":false},{"functionName":"diffLines","ranges":[{"startOffset":331936,"endOffset":332038,"count":0}],"isBlockCoverage":false},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":332484,"endOffset":332675,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":332736,"endOffset":332807,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":332811,"endOffset":332921,"count":0}],"isBlockCoverage":false},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":332972,"endOffset":333035,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":333039,"endOffset":333138,"count":0}],"isBlockCoverage":false},{"functionName":"ownKeys","ranges":[{"startOffset":333142,"endOffset":333441,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread2","ranges":[{"startOffset":333444,"endOffset":333938,"count":0}],"isBlockCoverage":false},{"functionName":"_toPrimitive","ranges":[{"startOffset":333941,"endOffset":334293,"count":0}],"isBlockCoverage":false},{"functionName":"_toPropertyKey","ranges":[{"startOffset":334296,"endOffset":334413,"count":0}],"isBlockCoverage":false},{"functionName":"_typeof","ranges":[{"startOffset":334416,"endOffset":334765,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":334768,"endOffset":335076,"count":0}],"isBlockCoverage":false},{"functionName":"_toConsumableArray","ranges":[{"startOffset":335079,"endOffset":335238,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":335241,"endOffset":335338,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":335341,"endOffset":335505,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":335508,"endOffset":335950,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":335953,"endOffset":336146,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":336149,"endOffset":336345,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":336678,"endOffset":337147,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":337169,"endOffset":337333,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":337337,"endOffset":337436,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":337637,"endOffset":339185,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":339240,"endOffset":339288,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":339333,"endOffset":339373,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":339377,"endOffset":339481,"count":0}],"isBlockCoverage":false},{"functionName":"unixToWin","ranges":[{"startOffset":339485,"endOffset":340071,"count":0}],"isBlockCoverage":false},{"functionName":"winToUnix","ranges":[{"startOffset":340074,"endOffset":340522,"count":0}],"isBlockCoverage":false},{"functionName":"isUnix","ranges":[{"startOffset":340663,"endOffset":340986,"count":0}],"isBlockCoverage":false},{"functionName":"isWin","ranges":[{"startOffset":341090,"endOffset":341758,"count":0}],"isBlockCoverage":false},{"functionName":"parsePatch","ranges":[{"startOffset":341762,"endOffset":346139,"count":0}],"isBlockCoverage":false},{"functionName":"distanceIterator","ranges":[{"startOffset":346327,"endOffset":347516,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatch","ranges":[{"startOffset":347520,"endOffset":356247,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":356315,"endOffset":357002,"count":0}],"isBlockCoverage":false},{"functionName":"structuredPatch","ranges":[{"startOffset":357006,"endOffset":361760,"count":0}],"isBlockCoverage":false},{"functionName":"formatPatch","ranges":[{"startOffset":361763,"endOffset":362909,"count":0}],"isBlockCoverage":false},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":362912,"endOffset":363850,"count":0}],"isBlockCoverage":false},{"functionName":"createPatch","ranges":[{"startOffset":363853,"endOffset":364035,"count":0}],"isBlockCoverage":false},{"functionName":"splitLines","ranges":[{"startOffset":364150,"endOffset":364445,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEqual","ranges":[{"startOffset":364449,"endOffset":364573,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":364576,"endOffset":364818,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":364822,"endOffset":365242,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":365245,"endOffset":368259,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":368262,"endOffset":368632,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":368635,"endOffset":368745,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":368748,"endOffset":368956,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":368959,"endOffset":369090,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":369093,"endOffset":369308,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":369311,"endOffset":371480,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":371483,"endOffset":372541,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":372544,"endOffset":372950,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":372953,"endOffset":373111,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":373114,"endOffset":373349,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":373352,"endOffset":373526,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":373529,"endOffset":374056,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":374059,"endOffset":375406,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":375409,"endOffset":375549,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":375552,"endOffset":375882,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":375885,"endOffset":376905,"count":0}],"isBlockCoverage":false},{"functionName":"reversePatch","ranges":[{"startOffset":376909,"endOffset":377828,"count":0}],"isBlockCoverage":false},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":377900,"endOffset":378285,"count":0}],"isBlockCoverage":false},{"functionName":"convertChangesToXML","ranges":[{"startOffset":378289,"endOffset":378749,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":378752,"endOffset":378944,"count":0}],"isBlockCoverage":false},{"functionName":"93","ranges":[{"startOffset":379809,"endOffset":403243,"count":1},{"startOffset":381551,"endOffset":381558,"count":0},{"startOffset":381559,"endOffset":381584,"count":0},{"startOffset":381585,"endOffset":381592,"count":0},{"startOffset":381666,"endOffset":381677,"count":0},{"startOffset":381678,"endOffset":381706,"count":0},{"startOffset":383958,"endOffset":383969,"count":0},{"startOffset":384027,"endOffset":384038,"count":0}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":381920,"endOffset":382005,"count":2},{"startOffset":381977,"endOffset":381988,"count":0}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":382199,"endOffset":382526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":382847,"endOffset":382999,"count":1},{"startOffset":382897,"endOffset":382915,"count":0},{"startOffset":382916,"endOffset":382943,"count":0},{"startOffset":382965,"endOffset":382991,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":384164,"endOffset":384369,"count":2},{"startOffset":384230,"endOffset":384246,"count":0},{"startOffset":384296,"endOffset":384367,"count":0}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":384475,"endOffset":384557,"count":2},{"startOffset":384550,"endOffset":384554,"count":0}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":384838,"endOffset":384919,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":385102,"endOffset":385333,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":385568,"endOffset":385703,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":385932,"endOffset":386085,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":386407,"endOffset":386617,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":386734,"endOffset":386785,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":387033,"endOffset":387317,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":387511,"endOffset":387658,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":387904,"endOffset":387982,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":388228,"endOffset":388439,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":388839,"endOffset":389048,"count":1},{"startOffset":388909,"endOffset":388925,"count":0},{"startOffset":388975,"endOffset":389046,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":389157,"endOffset":389290,"count":1},{"startOffset":389246,"endOffset":389258,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":389530,"endOffset":389609,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":389795,"endOffset":389865,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":390103,"endOffset":390173,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":390410,"endOffset":390502,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":390997,"endOffset":391165,"count":0}],"isBlockCoverage":false},{"functionName":"baseGet","ranges":[{"startOffset":391418,"endOffset":391705,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":391926,"endOffset":392153,"count":2},{"startOffset":392000,"endOffset":392023,"count":0},{"startOffset":392059,"endOffset":392081,"count":0},{"startOffset":392096,"endOffset":392110,"count":0}],"isBlockCoverage":true},{"functionName":"baseToString","ranges":[{"startOffset":392362,"endOffset":392716,"count":0}],"isBlockCoverage":false},{"functionName":"castPath","ranges":[{"startOffset":392891,"endOffset":392974,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":393148,"endOffset":393303,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":393549,"endOffset":393671,"count":2},{"startOffset":393657,"endOffset":393668,"count":0}],"isBlockCoverage":true},{"functionName":"isKey","ranges":[{"startOffset":393940,"endOffset":394292,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":394495,"endOffset":394694,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":394883,"endOffset":394957,"count":2},{"startOffset":394931,"endOffset":394954,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":395158,"endOffset":395461,"count":0}],"isBlockCoverage":false},{"functionName":"toKey","ranges":[{"startOffset":395643,"endOffset":395842,"count":0}],"isBlockCoverage":false},{"functionName":"toSource","ranges":[{"startOffset":396003,"endOffset":396191,"count":2},{"startOffset":396105,"endOffset":396172,"count":0},{"startOffset":396176,"endOffset":396190,"count":0}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":397638,"endOffset":398196,"count":1},{"startOffset":397718,"endOffset":397750,"count":0},{"startOffset":397753,"endOffset":397800,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":397818,"endOffset":398122,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":398938,"endOffset":399033,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":399835,"endOffset":400127,"count":2},{"startOffset":400078,"endOffset":400082,"count":0},{"startOffset":400108,"endOffset":400124,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":400710,"endOffset":400827,"count":4}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":401326,"endOffset":401404,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":401763,"endOffset":401898,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":402314,"endOffset":402393,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":403051,"endOffset":403217,"count":0}],"isBlockCoverage":false},{"functionName":"94","ranges":[{"startOffset":403252,"endOffset":403355,"count":1}],"isBlockCoverage":true},{"functionName":"95","ranges":[{"startOffset":403364,"endOffset":418884,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403399,"endOffset":403620,"count":1},{"startOffset":403519,"endOffset":403617,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403628,"endOffset":418877,"count":1},{"startOffset":403881,"endOffset":403887,"count":0}],"isBlockCoverage":true},{"functionName":"typeDetect","ranges":[{"startOffset":405471,"endOffset":418854,"count":26},{"startOffset":406353,"endOffset":407632,"count":0},{"startOffset":407637,"endOffset":407868,"count":0},{"startOffset":407870,"endOffset":413937,"count":0},{"startOffset":413977,"endOffset":415215,"count":0},{"startOffset":415217,"endOffset":415485,"count":0},{"startOffset":415487,"endOffset":415751,"count":0},{"startOffset":415753,"endOffset":416025,"count":0},{"startOffset":416027,"endOffset":416303,"count":0},{"startOffset":416305,"endOffset":416721,"count":0},{"startOffset":416723,"endOffset":417137,"count":0},{"startOffset":417139,"endOffset":417557,"count":0},{"startOffset":417559,"endOffset":417997,"count":0},{"startOffset":417999,"endOffset":418444,"count":0},{"startOffset":418446,"endOffset":418853,"count":0}],"isBlockCoverage":true}]},{"scriptId":"395","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/env.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8522,"count":1},{"startOffset":1197,"endOffset":1274,"count":0},{"startOffset":2020,"endOffset":2073,"count":0}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":455,"endOffset":535,"count":6}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":547,"endOffset":629,"count":3}],"isBlockCoverage":true},{"functionName":"info","ranges":[{"startOffset":641,"endOffset":721,"count":1}],"isBlockCoverage":true},{"functionName":"validateEnv","ranges":[{"startOffset":1500,"endOffset":1976,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1630,"endOffset":1652,"count":6}],"isBlockCoverage":true}]},{"scriptId":"396","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/check-error@2.1.1/node_modules/check-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4293,"count":1}],"isBlockCoverage":true},{"functionName":"isErrorInstance","ranges":[{"startOffset":0,"endOffset":169,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":171,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":732,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":1324,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":2305,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":2913,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":3981,"endOffset":4186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5900,"count":1},{"startOffset":1472,"endOffset":1706,"count":45},{"startOffset":2476,"endOffset":3149,"count":3},{"startOffset":5468,"endOffset":5471,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":571,"endOffset":950,"count":2},{"startOffset":618,"endOffset":699,"count":1},{"startOffset":701,"endOffset":779,"count":0},{"startOffset":870,"endOffset":873,"count":0},{"startOffset":919,"endOffset":931,"count":1},{"startOffset":932,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"Chalk","ranges":[{"startOffset":975,"endOffset":1084,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":1109,"endOffset":1275,"count":2}],"isBlockCoverage":true},{"functionName":"chalk","ranges":[{"startOffset":1137,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"createChalk","ranges":[{"startOffset":1278,"endOffset":1342,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1499,"endOffset":1699,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1728,"endOffset":1875,"count":0}],"isBlockCoverage":false},{"functionName":"getModelAnsi","ranges":[{"startOffset":1902,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2499,"endOffset":2771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2866,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":3189,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3245,"endOffset":3289,"count":10}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3293,"endOffset":3343,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":3375,"endOffset":3650,"count":3},{"startOffset":3500,"endOffset":3583,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3675,"endOffset":4243,"count":3}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3848,"endOffset":3959,"count":10},{"startOffset":3936,"endOffset":3958,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4265,"endOffset":5300,"count":10},{"startOffset":4318,"endOffset":4361,"count":0},{"startOffset":4419,"endOffset":4440,"count":0},{"startOffset":4511,"endOffset":4840,"count":0},{"startOffset":5177,"endOffset":5260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/vendor/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5256,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":55,"endOffset":105,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":128,"endOffset":186,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144,"endOffset":186,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":209,"endOffset":297,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":225,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1834,"endOffset":5189,"count":1},{"startOffset":1947,"endOffset":2281,"count":3},{"startOffset":2007,"endOffset":2187,"count":45}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2906,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3450,"endOffset":3975,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4032,"endOffset":4083,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4134,"endOffset":4895,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4949,"endOffset":5030,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5084,"endOffset":5137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/vendor/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3865,"count":1},{"startOffset":738,"endOffset":762,"count":0},{"startOffset":869,"endOffset":893,"count":0}],"isBlockCoverage":true},{"functionName":"hasFlag","ranges":[{"startOffset":235,"endOffset":585,"count":16},{"startOffset":281,"endOffset":303,"count":0},{"startOffset":359,"endOffset":363,"count":0},{"startOffset":385,"endOffset":390,"count":0},{"startOffset":519,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":895,"endOffset":1159,"count":2},{"startOffset":949,"endOffset":1157,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":1161,"endOffset":1320,"count":2},{"startOffset":1212,"endOffset":1232,"count":0}],"isBlockCoverage":true},{"functionName":"_supportsColor","ranges":[{"startOffset":1322,"endOffset":3504,"count":2},{"startOffset":1479,"endOffset":1520,"count":0},{"startOffset":1570,"endOffset":1588,"count":0},{"startOffset":1614,"endOffset":1630,"count":0},{"startOffset":1740,"endOffset":1758,"count":0},{"startOffset":1788,"endOffset":1806,"count":0},{"startOffset":1918,"endOffset":1940,"count":0},{"startOffset":1942,"endOffset":1958,"count":0},{"startOffset":1992,"endOffset":2019,"count":0},{"startOffset":2021,"endOffset":2037,"count":0},{"startOffset":2096,"endOffset":2114,"count":0},{"startOffset":2151,"endOffset":2508,"count":0},{"startOffset":2528,"endOffset":2786,"count":0},{"startOffset":2820,"endOffset":2901,"count":0},{"startOffset":2955,"endOffset":3503,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2589,"endOffset":2606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2698,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"createSupportsColor","ranges":[{"startOffset":3513,"endOffset":3697,"count":2}],"isBlockCoverage":true}]},{"scriptId":"400","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/utilities.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":997,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":78,"endOffset":552,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":561,"endOffset":996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/env.test.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10992,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":133,"endOffset":3085,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":335,"endOffset":556,"count":6}],"isBlockCoverage":true},{"functionName":"process.stderr.write","ranges":[{"startOffset":476,"endOffset":548,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":573,"endOffset":738,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":779,"endOffset":967,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1003,"endOffset":1115,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1170,"endOffset":1702,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1763,"endOffset":2188,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2238,"endOffset":2603,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2660,"endOffset":3081,"count":1}],"isBlockCoverage":true}]}],"timestamp":21278.370501,"source-map-cache":{"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/get-caller-file@2.0.5/node_modules/get-caller-file/index.js":{"lineLengths":[13,69,69,2,58,51,46,44,208,5,55,68,34,51,54,35,56,54,75,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/get-caller-file@2.0.5/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/index.js":{"lineLengths":[25,13,0,46,13,3,40,19,23,28,3,3,45,19,23,32,3,3,45,19,23,27,3,3,54,19,23,36,3,3,45,19,23,27,3,3,52,19,23,34,3,3,49,19,23,35,3,3,43,19,23,24,3,3,44,19,23,26,3,3,48,19,23,30,3,3,46,19,23,29,3,3,46,19,23,29,3,3,48,19,23,31,3,3,46,19,23,29,3,3,41,19,23,24,3,3,48,19,23,33,3,3,51,19,23,35,3,3,55,19,23,39,3,3,47,19,23,31,3,3,47,19,23,31,3,3,55,19,23,36,3,3,55,19,23,36,3,3,0,23,3,25,54,23,1,0,3,25,40,23,1,0,3,25,30,23,1,0,3,25,30,23,1,0,3,25,38,23,1,0,3,25,28,23,1,0,3,25,30,23,1,0,3,25,32,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,37,23,1,0,3,25,35,23,1,0,3,25,31,23,1,0,3,25,31,23,1,0,123,0,23,3176,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {reversePatch} from './patch/reverse';\nimport {structuredPatch, createTwoFilesPatch, createPatch, formatPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  formatPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  reversePatch,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/base.js":{"lineLengths":[25,13,0,46,13,3,26,0,23,18,0,18,27,0,25,45,29,25,0,7,27,85,36,0,40,25,19,5,0,27,20,0,26,21,32,37,14,20,14,21,7,63,0,0,42,42,59,59,34,34,23,40,0,32,69,5,0,26,29,23,27,91,60,21,17,30,76,0,74,0,67,48,20,36,31,10,80,77,79,63,77,50,63,76,22,79,78,74,79,78,71,77,59,0,0,42,127,0,31,157,22,33,14,31,9,52,49,0,25,72,49,9,0,27,0,22,58,60,75,9,0,69,0,36,50,45,19,81,80,57,77,64,0,0,77,65,16,68,9,0,82,0,68,69,109,16,44,0,46,86,11,0,37,86,11,9,7,0,19,89,86,86,46,0,0,19,24,32,79,30,11,0,34,19,11,14,11,12,80,35,0,18,21,9,7,5,4,0,27,0,25,66,34,0,67,14,40,24,32,23,27,51,9,8,12,14,40,24,19,23,27,33,9,8,5,4,0,27,0,25,87,34,34,33,39,24,0,117,15,15,20,5,0,22,32,27,49,8,5,0,29,18,4,0,27,0,25,40,34,50,12,101,5,4,0,27,0,25,44,17,0,44,21,27,7,5,0,15,4,0,27,0,25,40,17,4,0,27,0,25,38,27,4,0,27,0,25,30,26,3,2,0,82,74,30,22,20,0,25,35,52,43,34,3,0,23,23,39,17,17,0,55,45,0,29,48,70,47,47,67,11,43,14,87,7,0,47,0,29,34,7,12,85,113,89,63,0,63,47,64,39,7,5,78,83,44,0,0,52,0,162,63,21,3,0,20,1,27108,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/base.js"],"names":["Diff","prototype","diff","oldString","newString","options","callback","self","done","value","setTimeout","undefined","castInput","removeEmpty","tokenize","newLen","length","oldLen","editLength","maxEditLength","Math","min","maxExecutionTime","timeout","Infinity","abortAfterTimestamp","Date","now","bestPath","oldPos","lastComponent","newPos","extractCommon","join","count","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","max","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","addToPath","buildValues","useLongestToken","exec","ret","path","added","removed","oldPosInc","last","previousComponent","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","i","push","split","chars","components","nextComponent","reverse","componentPos","componentLen","component","slice","map","oldValue","tmp","finalComponent","pop"],"mappings":"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","sourcesContent":["export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    if(options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n    const maxExecutionTime = options.timeout ?? Infinity;\n    const abortAfterTimestamp = Date.now() + maxExecutionTime;\n\n    let bestPath = [{ oldPos: -1, lastComponent: undefined }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n    let minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (\n        let diagonalPath = Math.max(minDiagonalToConsider, -editLength);\n        diagonalPath <= Math.min(maxDiagonalToConsider, editLength);\n        diagonalPath += 2\n      ) {\n        let basePath;\n        let removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = false;\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          const addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        let canRemove = removePath && removePath.oldPos + 1 < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n        if (!canRemove || (canAdd && removePath.oldPos + 1 < addPath.oldPos)) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  addToPath(path, added, removed, oldPosInc) {\n    let last = path.lastComponent;\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: last.count + 1, added: added, removed: removed, previousComponent: last.previousComponent }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: 1, added: added, removed: removed, previousComponent: last }\n      };\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {count: commonCount, previousComponent: basePath.lastComponent};\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  const components = [];\n  let nextComponent;\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n  components.reverse();\n\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let finalComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof finalComponent.value === 'string'\n      && (finalComponent.added || finalComponent.removed)\n      && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/character.js":{"lineLengths":[25,13,0,46,13,3,30,31,0,23,3,25,49,23,1,0,123,0,23,23,25,5,23,1,25,9,23,4,0,25,38,0,23,45,53,1,880,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/character.js"],"names":["characterDiff","Diff","diffChars","oldStr","newStr","options","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,aAAa,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAtB;;;;;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAAE,SAAOL,aAAa,CAACM,IAAd,CAAmBH,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/word.js":{"lineLengths":[25,13,0,46,13,3,30,48,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,65,2,25,32,35,29,30,30,28,38,29,29,33,34,30,35,43,39,88,24,18,25,5,23,1,25,9,23,4,0,25,28,0,23,42,32,30,32,3,0,114,2,0,38,97,184,0,47,103,120,33,30,10,5,3,0,16,2,0,45,11,27,5,25,0,27,9,25,3,27,18,25,13,26,5,48,1,0,54,48,1,5824,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/word.js"],"names":["extendedWordChars","reWhitespace","wordDiff","Diff","equals","left","right","options","ignoreCase","toLowerCase","ignoreWhitespace","test","tokenize","value","tokens","split","i","length","splice","diffWords","oldStr","newStr","generateOptions","diff","diffWordsWithSpace"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAG,+DAA1B;AAEA,IAAMC,YAAY,GAAG,IAArB;AAEO,IAAMC,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,MAAT,GAAkB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,MAAI,KAAKC,OAAL,CAAaC,UAAjB,EAA6B;AAC3BH,IAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AACD;;AACD,SAAOJ,IAAI,KAAKC,KAAT,IAAmB,KAAKC,OAAL,CAAaG,gBAAb,IAAiC,CAACT,YAAY,CAACU,IAAb,CAAkBN,IAAlB,CAAlC,IAA6D,CAACJ,YAAY,CAACU,IAAb,CAAkBL,KAAlB,CAAxF;AACD,CAND;;AAOAJ,QAAQ,CAACU,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,iCAAZ,CAAb,CAFkC,CAIlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAAP,GAAgB,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACA,QAAI,CAACF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAP,IAAkBF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAxB,IACKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAD,CAA7B,CADL,IAEKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAC,GAAG,CAAL,CAA7B,CAFT,EAEgD;AAC9CF,MAAAA,MAAM,CAACE,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAnB;AACAF,MAAAA,MAAM,CAACI,MAAP,CAAcF,CAAC,GAAG,CAAlB,EAAqB,CAArB;AACAA,MAAAA,CAAC;AACF;AACF;;AAED,SAAOF,MAAP;AACD,CAjBD;;AAmBO,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCd,OAAnC,EAA4C;AACjDA,EAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAe;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBf,OAAhB,EAAyB;AAACG,IAAAA,gBAAgB,EAAE;AAAnB,GAAzB,CAAV;AACA,SAAOR,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD;;AAEM,SAASiB,kBAAT,CAA4BJ,MAA5B,EAAoCC,MAApC,EAA4Cd,OAA5C,EAAqD;AAC1D,SAAOL,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/util/params.js":{"lineLengths":[25,13,0,46,13,3,42,0,23,45,38,32,23,31,32,41,39,7,5,3,0,18,1,1248,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/util/params.js"],"names":["generateOptions","options","defaults","callback","name","hasOwnProperty"],"mappings":";;;;;;;;;AAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACjD,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,CAACC,QAAT,GAAoBF,OAApB;AACD,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAClB,SAAK,IAAIG,IAAT,IAAiBH,OAAjB,EAA0B;AACxB;AACA,UAAIA,OAAO,CAACI,cAAR,CAAuBD,IAAvB,CAAJ,EAAkC;AAChCF,QAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBH,OAAO,CAACG,IAAD,CAAxB;AACD;AACF;AACF;;AACD,SAAOF,QAAP;AACD","sourcesContent":["export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/line.js":{"lineLengths":[25,13,0,46,13,3,30,44,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,18,25,5,23,1,25,9,23,4,0,25,28,0,23,38,37,79,41,3,0,20,129,0,55,27,63,0,0,53,35,0,48,44,12,42,27,7,0,26,5,3,0,18,2,0,46,49,1,0,53,15,27,5,25,0,27,9,25,3,27,18,25,14,26,5,48,1,4160,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/line.js"],"names":["lineDiff","Diff","tokenize","value","options","stripTrailingCr","replace","retLines","linesAndNewlines","split","length","pop","i","line","newlineIsToken","ignoreWhitespace","trim","push","diffLines","oldStr","newStr","callback","diff","diffTrimmedLines","generateOptions"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC,MAAG,KAAKC,OAAL,CAAaC,eAAhB,EAAiC;AAC/B;AACAF,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,OAAd,EAAuB,IAAvB,CAAR;AACD;;AAED,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACIC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAY,WAAZ,CADvB,CANkC,CASlC;;AACA,MAAI,CAACD,gBAAgB,CAACA,gBAAgB,CAACE,MAAjB,GAA0B,CAA3B,CAArB,EAAoD;AAClDF,IAAAA,gBAAgB,CAACG,GAAjB;AACD,GAZiC,CAclC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gBAAgB,CAACE,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAChD,QAAIC,IAAI,GAAGL,gBAAgB,CAACI,CAAD,CAA3B;;AAEA,QAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAKR,OAAL,CAAaU,cAA3B,EAA2C;AACzCP,MAAAA,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,IAAiCG,IAAjC;AACD,KAFD,MAEO;AACL,UAAI,KAAKT,OAAL,CAAaW,gBAAjB,EAAmC;AACjCF,QAAAA,IAAI,GAAGA,IAAI,CAACG,IAAL,EAAP;AACD;;AACDT,MAAAA,QAAQ,CAACU,IAAT,CAAcJ,IAAd;AACD;AACF;;AAED,SAAON,QAAP;AACD,CA7BD;;AA+BO,SAASW,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAAE,SAAOrB,QAAQ,CAACsB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,CAAP;AAAiD;;AAChG,SAASE,gBAAT,CAA0BJ,MAA1B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AACzD,MAAIjB,OAAO;AAAG;AAAA;AAAA;;AAAAoB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBH,QAAhB,EAA0B;AAACN,IAAAA,gBAAgB,EAAE;AAAnB,GAA1B,CAAd;AACA,SAAOf,QAAQ,CAACsB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BhB,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  if(this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/sentence.js":{"lineLengths":[25,13,0,46,13,3,38,30,0,23,3,25,49,23,1,0,123,0,23,22,25,5,23,1,25,9,23,4,0,25,36,0,23,42,46,2,0,50,53,1,1196,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/sentence.js"],"names":["sentenceDiff","Diff","tokenize","value","split","diffSentences","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAGO,IAAMA,YAAY,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAArB;;;;;;AACPD,YAAY,CAACE,QAAb,GAAwB,UAASC,KAAT,EAAgB;AACtC,SAAOA,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAAE,SAAOR,YAAY,CAACS,IAAb,CAAkBH,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/css.js":{"lineLengths":[25,13,0,46,13,3,26,25,0,23,3,25,49,23,1,0,123,0,23,17,25,5,23,1,25,9,23,4,0,25,26,0,23,37,38,2,0,44,48,1,1128,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/css.js"],"names":["cssDiff","Diff","tokenize","value","split","diffCss","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,OAAO,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAhB;;;;;;AACPD,OAAO,CAACE,QAAR,GAAmB,UAASC,KAAT,EAAgB;AACjC,SAAOA,KAAK,CAACC,KAAN,CAAY,eAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAAE,SAAOR,OAAO,CAACS,IAAR,CAAaH,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,CAAP;AAAgD","sourcesContent":["import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/json.js":{"lineLengths":[25,13,0,46,13,3,28,36,26,0,23,3,25,49,23,1,0,3,25,25,23,1,0,123,0,378,0,23,56,18,25,5,23,1,25,9,23,97,105,0,25,28,0,23,32,19,25,5,23,1,25,8,23,10,0,39,27,21,25,15,64,62,76,27,3,12,29,57,6,28,137,2,0,42,10,29,9,27,5,29,13,27,106,4,2,0,44,48,98,95,0,0,68,22,44,0,17,29,3,0,8,0,41,27,33,5,3,0,23,0,63,20,45,44,0,41,89,5,0,16,27,28,3,0,26,23,3,0,6,27,10,25,38,20,26,44,0,24,13,0,23,32,37,30,7,5,0,22,0,48,27,96,5,0,16,27,10,27,3,0,26,1,8576,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/json.js"],"names":["objectPrototypeToString","Object","prototype","toString","jsonDiff","Diff","useLongestToken","tokenize","lineDiff","castInput","value","options","undefinedReplacement","stringifyReplacer","k","v","JSON","stringify","canonicalize","equals","left","right","call","replace","diffJson","oldObj","newObj","diff","obj","stack","replacementStack","replacer","key","i","length","canonicalizedObj","push","Array","pop","toJSON","sortedKeys","hasOwnProperty","sort"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA,IAAMA,uBAAuB,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjD;AAGO,IAAMC,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB,C,CACP;AACA;;;;;;AACAD,QAAQ,CAACE,eAAT,GAA2B,IAA3B;AAEAF,QAAQ,CAACG,QAAT;AAAoBC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,CAASD,QAA7B;;AACAH,QAAQ,CAACK,SAAT,GAAqB,UAASC,KAAT,EAAgB;AAAA;AAAA;AAAA;AAC+E,OAAKC,OADpF;AAAA,MAC5BC,oBAD4B,iBAC5BA,oBAD4B;AAAA,4CACNC,iBADM;AAAA,MACNA,iBADM,sCACc,UAACC,CAAD,EAAIC,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAU,aAAOA,CAAP,KAAa,WAAb,GAA2BH,oBAA3B,GAAkDG;AAA5D;AAAA,GADd;AAGnC,SAAO,OAAOL,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCM,IAAI,CAACC,SAAL,CAAeC,YAAY,CAACR,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoBG,iBAApB,CAA3B,EAAmEA,iBAAnE,EAAsF,IAAtF,CAA3C;AACD,CAJD;;AAKAT,QAAQ,CAACe,MAAT,GAAkB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,SAAOhB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAAKH,SAAL,CAAeiB,MAAf,CAAsBG,IAAtB,CAA2BlB,QAA3B,EAAqCgB,IAAI,CAACG,OAAL,CAAa,YAAb,EAA2B,IAA3B,CAArC,EAAuEF,KAAK,CAACE,OAAN,CAAc,YAAd,EAA4B,IAA5B,CAAvE;AAAP;AACD,CAFD;;AAIO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCf,OAAlC,EAA2C;AAAE,SAAOP,QAAQ,CAACuB,IAAT,CAAcF,MAAd,EAAsBC,MAAtB,EAA8Bf,OAA9B,CAAP;AAAgD,C,CAEpG;AACA;;;AACO,SAASO,YAAT,CAAsBU,GAAtB,EAA2BC,KAA3B,EAAkCC,gBAAlC,EAAoDC,QAApD,EAA8DC,GAA9D,EAAmE;AACxEH,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACAC,EAAAA,gBAAgB,GAAGA,gBAAgB,IAAI,EAAvC;;AAEA,MAAIC,QAAJ,EAAc;AACZH,IAAAA,GAAG,GAAGG,QAAQ,CAACC,GAAD,EAAMJ,GAAN,CAAd;AACD;;AAED,MAAIK,CAAJ;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,KAAK,CAACK,MAAtB,EAA8BD,CAAC,IAAI,CAAnC,EAAsC;AACpC,QAAIJ,KAAK,CAACI,CAAD,CAAL,KAAaL,GAAjB,EAAsB;AACpB,aAAOE,gBAAgB,CAACG,CAAD,CAAvB;AACD;AACF;;AAED,MAAIE,gBAAJ;;AAEA,MAAI,qBAAqBnC,uBAAuB,CAACsB,IAAxB,CAA6BM,GAA7B,CAAzB,EAA4D;AAC1DC,IAAAA,KAAK,CAACO,IAAN,CAAWR,GAAX;AACAO,IAAAA,gBAAgB,GAAG,IAAIE,KAAJ,CAAUT,GAAG,CAACM,MAAd,CAAnB;AACAJ,IAAAA,gBAAgB,CAACM,IAAjB,CAAsBD,gBAAtB;;AACA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,GAAG,CAACM,MAApB,EAA4BD,CAAC,IAAI,CAAjC,EAAoC;AAClCE,MAAAA,gBAAgB,CAACF,CAAD,CAAhB,GAAsBf,YAAY,CAACU,GAAG,CAACK,CAAD,CAAJ,EAASJ,KAAT,EAAgBC,gBAAhB,EAAkCC,QAAlC,EAA4CC,GAA5C,CAAlC;AACD;;AACDH,IAAAA,KAAK,CAACS,GAAN;AACAR,IAAAA,gBAAgB,CAACQ,GAAjB;AACA,WAAOH,gBAAP;AACD;;AAED,MAAIP,GAAG,IAAIA,GAAG,CAACW,MAAf,EAAuB;AACrBX,IAAAA,GAAG,GAAGA,GAAG,CAACW,MAAJ,EAAN;AACD;;AAED;AAAI;AAAA;AAAA;AAAOX,EAAAA,GAAP,MAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AAC3CC,IAAAA,KAAK,CAACO,IAAN,CAAWR,GAAX;AACAO,IAAAA,gBAAgB,GAAG,EAAnB;AACAL,IAAAA,gBAAgB,CAACM,IAAjB,CAAsBD,gBAAtB;;AACA,QAAIK,UAAU,GAAG,EAAjB;AAAA,QACIR,IADJ;;AAEA,SAAKA,IAAL,IAAYJ,GAAZ,EAAiB;AACf;AACA,UAAIA,GAAG,CAACa,cAAJ,CAAmBT,IAAnB,CAAJ,EAA6B;AAC3BQ,QAAAA,UAAU,CAACJ,IAAX,CAAgBJ,IAAhB;AACD;AACF;;AACDQ,IAAAA,UAAU,CAACE,IAAX;;AACA,SAAKT,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGO,UAAU,CAACN,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzCD,MAAAA,IAAG,GAAGQ,UAAU,CAACP,CAAD,CAAhB;AACAE,MAAAA,gBAAgB,CAACH,IAAD,CAAhB,GAAwBd,YAAY,CAACU,GAAG,CAACI,IAAD,CAAJ,EAAWH,KAAX,EAAkBC,gBAAlB,EAAoCC,QAApC,EAA8CC,IAA9C,CAApC;AACD;;AACDH,IAAAA,KAAK,CAACS,GAAN;AACAR,IAAAA,gBAAgB,CAACQ,GAAjB;AACD,GAnBD,MAmBO;AACLH,IAAAA,gBAAgB,GAAGP,GAAnB;AACD;;AACD,SAAOO,gBAAP;AACD","sourcesContent":["import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/diff/array.js":{"lineLengths":[25,13,0,46,13,3,32,27,0,23,3,25,49,23,1,0,123,0,23,19,25,5,23,1,25,9,23,4,0,25,30,0,23,39,23,2,0,59,15,2,0,47,50,1,1376,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/diff/array.js"],"names":["arrayDiff","Diff","tokenize","value","slice","join","removeEmpty","diffArrays","oldArr","newArr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,SAAS,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAlB;;;;;;AACPD,SAAS,CAACE,QAAV,GAAqB,UAASC,KAAT,EAAgB;AACnC,SAAOA,KAAK,CAACC,KAAN,EAAP;AACD,CAFD;;AAGAJ,SAAS,CAACK,IAAV,GAAiBL,SAAS,CAACM,WAAV,GAAwB,UAASH,KAAT,EAAgB;AACvD,SAAOA,KAAP;AACD,CAFD;;AAIO,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAAE,SAAOV,SAAS,CAACW,IAAV,CAAeH,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,CAAP;AAAkD","sourcesContent":["import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/apply.js":{"lineLengths":[25,13,0,46,13,3,32,36,0,23,3,25,27,23,1,0,3,25,80,23,1,0,123,0,23,38,27,5,25,83,0,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,31,29,68,5,0,25,34,0,0,50,62,28,95,27,3,12,29,27,6,4,21,43,18,17,18,15,5,61,5,0,0,34,49,31,54,60,0,51,31,72,23,0,40,25,11,9,0,16,7,5,0,16,71,0,0,42,24,47,24,43,18,29,7,27,0,29,21,27,5,29,13,27,32,0,65,48,44,14,7,5,0,36,19,80,39,0,0,58,24,0,0,21,0,45,26,64,0,50,0,50,32,54,60,78,0,30,17,37,32,37,34,37,41,48,17,38,82,0,40,29,47,26,9,7,5,37,0,0,20,38,18,23,5,24,19,26,3,0,49,43,3,0,24,63,0,0,41,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,23,0,27,40,0,17,32,5,0,50,16,37,7,0,60,61,18,39,9,0,23,9,7,3,0,17,1,14288,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/patch/apply.js"],"names":["applyPatch","source","uniDiff","options","parsePatch","Array","isArray","length","Error","lines","split","delimiters","match","hunks","compareLine","lineNumber","line","operation","patchContent","errorCount","fuzzFactor","minLine","offset","removeEOFNL","addEOFNL","hunkFits","hunk","toPos","j","content","substr","i","maxLine","oldLines","localOffset","oldStart","iterator","distanceIterator","undefined","diffOffset","newLines","delimiter","linedelimiters","splice","previousOperation","pop","push","_k","join","applyPatches","currentIndex","processIndex","index","complete","loadFile","err","data","updatedContent","patched"],"mappings":"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","sourcesContent":["import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters && hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/parse.js":{"lineLengths":[25,13,0,46,13,3,32,0,23,30,27,5,25,83,53,63,16,12,0,25,19,44,0,32,76,0,47,14,21,0,0,73,0,19,32,7,0,10,80,79,0,0,27,42,0,21,0,32,29,0,57,14,37,38,43,58,81,14,12,7,5,66,18,0,0,35,62,0,21,62,46,52,0,36,59,7,0,47,59,10,5,20,53,0,0,24,29,39,90,16,32,76,32,76,16,24,60,59,64,0,30,25,5,0,30,25,5,0,21,24,0,37,84,88,149,14,7,0,94,0,94,36,56,0,32,21,39,24,39,21,24,9,14,14,7,42,0,0,43,24,5,0,46,24,41,0,0,25,39,101,7,0,42,103,7,5,0,16,3,0,30,17,3,0,14,1,13176,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/patch/parse.js"],"names":["parsePatch","uniDiff","options","diffstr","split","delimiters","match","list","i","parseIndex","index","push","length","line","test","header","exec","parseFileHeader","hunks","parseHunk","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation"],"mappings":"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","sourcesContent":["export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/util/distance-iterator.js":{"lineLengths":[25,13,0,46,13,3,30,0,23,63,65,47,8,25,8,23,27,25,32,31,22,30,43,30,22,14,28,79,71,0,0,43,27,7,0,30,5,0,29,30,27,82,31,0,0,43,30,7,0,31,24,80,51,0,4,1,3156,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/util/distance-iterator.js"],"names":["start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","iterator"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACe;AAAA;AAAA;AAAA;AAAA,CAASA,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,iBAAiB,GAAG,KADxB;AAAA,MAEIC,gBAAgB,GAAG,KAFvB;AAAA,MAGIC,WAAW,GAAG,CAHlB;AAKA,SAAO,SAASC,QAAT,GAAoB;AACzB,QAAIJ,WAAW,IAAI,CAACE,gBAApB,EAAsC;AACpC,UAAID,iBAAJ,EAAuB;AACrBE,QAAAA,WAAW;AACZ,OAFD,MAEO;AACLH,QAAAA,WAAW,GAAG,KAAd;AACD,OALmC,CAOpC;AACA;;;AACA,UAAIH,KAAK,GAAGM,WAAR,IAAuBJ,OAA3B,EAAoC;AAClC,eAAOI,WAAP;AACD;;AAEDD,MAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,QAAI,CAACD,iBAAL,EAAwB;AACtB,UAAI,CAACC,gBAAL,EAAuB;AACrBF,QAAAA,WAAW,GAAG,IAAd;AACD,OAHqB,CAKtB;AACA;;;AACA,UAAIF,OAAO,IAAID,KAAK,GAAGM,WAAvB,EAAoC;AAClC,eAAO,CAACA,WAAW,EAAnB;AACD;;AAEDF,MAAAA,iBAAiB,GAAG,IAApB;AACA,aAAOG,QAAQ,EAAf;AACD,KA9BwB,CAgCzB;AACA;;AACD,GAlCD;AAmCD","sourcesContent":["// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/merge.js":{"lineLengths":[25,13,0,46,13,3,38,22,0,23,3,25,29,23,1,0,3,25,27,23,1,0,3,25,33,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,30,27,28,25,34,47,47,0,31,29,10,25,3,0,31,29,10,25,3,1,0,36,31,35,98,83,34,0,35,43,3,0,47,33,87,63,63,57,57,42,51,41,41,37,37,12,38,79,79,73,73,5,3,0,17,20,22,21,23,0,78,48,24,6,54,24,6,0,49,65,57,18,66,56,65,61,20,68,12,38,24,73,20,101,20,17,8,115,20,18,33,5,3,0,13,1,0,33,34,55,14,33,11,31,0,33,14,31,9,33,19,31,18,8,5,0,16,74,5,0,12,31,9,29,0,31,13,29,7,31,22,29,41,6,3,0,15,1,0,33,70,1,0,43,24,16,10,26,12,17,20,6,3,1,0,34,90,1,0,34,10,28,28,37,28,21,4,1,0,75,91,74,14,23,21,12,4,15,24,22,12,34,0,35,118,0,78,45,48,0,117,26,38,67,31,22,0,29,22,0,31,0,29,0,31,20,29,29,31,17,29,7,31,25,29,28,67,31,23,0,29,24,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,29,67,31,33,67,32,39,46,25,35,19,20,12,25,64,5,46,0,0,29,30,22,1,0,42,38,42,0,58,72,8,29,7,27,0,29,10,27,5,29,20,27,112,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,18,0,13,15,29,7,27,0,29,10,27,5,29,20,27,114,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,21,0,13,5,13,27,5,25,0,27,8,25,3,27,13,25,30,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,16,0,11,3,0,42,1,0,43,38,54,0,28,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,26,10,85,3,1,0,38,23,19,19,15,17,5,1,0,45,78,44,26,20,3,1,0,39,46,44,26,3,1,0,31,15,46,0,44,145,0,47,22,5,0,32,21,20,12,12,5,3,0,13,1,0,46,19,18,21,29,25,0,80,42,85,0,27,12,5,0,57,23,86,50,0,28,24,0,33,29,44,7,5,0,47,27,20,12,24,5,3,0,70,22,3,0,19,19,3,0,44,44,3,0,10,19,20,4,1,0,30,49,37,11,1,0,58,35,82,0,63,19,5,3,0,23,14,1,0,37,19,19,33,35,51,56,0,35,55,39,16,31,9,7,0,35,55,39,16,31,9,7,12,75,19,7,0,75,19,7,5,5,10,23,22,4,1,34588,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/patch/merge.js"],"names":["calcLineCount","hunk","calcOldNewLineCount","lines","oldLines","newLines","undefined","merge","mine","theirs","base","loadPatch","ret","index","newFileName","fileNameChanged","oldFileName","oldHeader","newHeader","selectField","hunks","mineIndex","theirsIndex","mineOffset","theirsOffset","length","mineCurrent","oldStart","Infinity","theirsCurrent","hunkBefore","push","cloneHunk","mergedHunk","Math","min","newStart","mergeLines","param","test","parsePatch","Error","structuredPatch","patch","conflict","check","offset","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","collectChange","removal","insertTrailing","myChanges","theirChanges","allRemoves","arrayStartsWith","skipRemoveSuperset","arrayEqual","swap","collectContext","merged","insert","line","state","operation","matchChanges","changes","matchIndex","contextChanges","conflicted","change","match","substr","reduce","prev","removeChanges","delta","i","changeContent","forEach","myCount","theirCount"],"mappings":"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","sourcesContent":["import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/create.js":{"lineLengths":[25,13,0,46,13,3,42,34,50,34,0,23,3,25,31,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,99,17,17,3,0,47,24,3,0,12,27,5,25,0,27,7,25,3,27,12,25,28,0,14,11,3,0,13,14,13,53,0,32,39,25,7,3,0,17,24,24,20,18,18,0,27,29,25,6,26,78,26,0,43,31,20,0,29,53,27,31,32,32,0,19,97,43,43,9,29,0,0,31,0,29,0,31,18,29,27,31,15,29,7,31,25,29,34,51,46,0,0,26,32,14,32,7,12,52,26,76,73,35,25,0,33,24,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,32,16,35,25,0,33,37,68,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,54,0,22,36,60,36,60,27,12,0,72,38,51,51,86,0,72,99,80,80,13,0,70,60,13,11,0,27,28,28,24,9,7,0,30,30,5,4,0,41,29,10,27,7,3,0,10,29,29,25,25,16,4,1,0,28,28,44,3,0,15,0,45,43,3,0,82,109,109,0,47,83,59,64,0,30,25,5,0,30,25,5,0,112,36,3,0,31,1,0,103,111,1,0,79,96,1,15624,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/patch/create.js"],"names":["structuredPatch","oldFileName","newFileName","oldStr","newStr","oldHeader","newHeader","options","context","diff","diffLines","push","value","lines","contextLines","map","entry","hunks","oldRangeStart","newRangeStart","curRange","oldLine","newLine","i","current","replace","split","added","removed","prev","slice","length","contextSize","Math","min","hunk","oldStart","oldLines","newStart","newLines","oldEOFNewline","test","newEOFNewline","noNlBeforeAdds","splice","formatPatch","Array","isArray","join","ret","apply","createTwoFilesPatch","createPatch","fileName"],"mappings":"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","sourcesContent":["import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  if(!diff) {\n    return;\n  }\n\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/util/array.js":{"lineLengths":[25,13,0,46,13,3,32,42,0,23,27,30,17,3,0,31,1,0,40,36,17,3,0,42,32,19,5,3,0,14,1,1476,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/util/array.js"],"names":["arrayEqual","a","b","length","arrayStartsWith","array","start","i"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,SAAOC,eAAe,CAACH,CAAD,EAAIC,CAAJ,CAAtB;AACD;;AAEM,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AAC5C,MAAIA,KAAK,CAACH,MAAN,GAAeE,KAAK,CAACF,MAAzB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,QAAID,KAAK,CAACC,CAAD,CAAL,KAAaF,KAAK,CAACE,CAAD,CAAtB,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/patch/reverse.js":{"lineLengths":[25,13,0,46,13,3,36,0,341,0,534,0,209,0,23,40,39,55,3,0,10,29,35,27,27,47,43,47,43,56,16,34,34,34,34,46,46,36,22,41,27,39,27,16,13,0,36,22,41,27,39,27,16,13,0,21,12,10,8,6,4,1,3000,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/patch/reverse.js"],"names":["reversePatch","structuredPatch","Array","isArray","map","reverse","oldFileName","newFileName","oldHeader","newHeader","hunks","hunk","oldLines","newLines","oldStart","newStart","linedelimiters","lines","l","startsWith","slice"],"mappings":";;;;;;;;;;;;;;;AAAO,SAASA,YAAT,CAAsBC,eAAtB,EAAuC;AAC5C,MAAIC,KAAK,CAACC,OAAN,CAAcF,eAAd,CAAJ,EAAoC;AAClC,WAAOA,eAAe,CAACG,GAAhB,CAAoBJ,YAApB,EAAkCK,OAAlC,EAAP;AACD;;AAED;AAAA;AAAA;AAAA;AACKJ,IAAAA,eADL;AAEEK,MAAAA,WAAW,EAAEL,eAAe,CAACM,WAF/B;AAGEC,MAAAA,SAAS,EAAEP,eAAe,CAACQ,SAH7B;AAIEF,MAAAA,WAAW,EAAEN,eAAe,CAACK,WAJ/B;AAKEG,MAAAA,SAAS,EAAER,eAAe,CAACO,SAL7B;AAMEE,MAAAA,KAAK,EAAET,eAAe,CAACS,KAAhB,CAAsBN,GAAtB,CAA0B,UAAAO,IAAI,EAAI;AACvC,eAAO;AACLC,UAAAA,QAAQ,EAAED,IAAI,CAACE,QADV;AAELC,UAAAA,QAAQ,EAAEH,IAAI,CAACI,QAFV;AAGLF,UAAAA,QAAQ,EAAEF,IAAI,CAACC,QAHV;AAILG,UAAAA,QAAQ,EAAEJ,IAAI,CAACG,QAJV;AAKLE,UAAAA,cAAc,EAAEL,IAAI,CAACK,cALhB;AAMLC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,CAAWb,GAAX,CAAe,UAAAc,CAAC,EAAI;AACzB,gBAAIA,CAAC,CAACC,UAAF,CAAa,GAAb,CAAJ,EAAuB;AAAE;AAAA;AAAA;AAAA;AAAWD,gBAAAA,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAX;AAAA;AAA0B;;AACnD,gBAAIF,CAAC,CAACC,UAAF,CAAa,GAAb,CAAJ,EAAuB;AAAE;AAAA;AAAA;AAAA;AAAWD,gBAAAA,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAX;AAAA;AAA0B;;AACnD,mBAAOF,CAAP;AACD,WAJM;AANF,SAAP;AAYD,OAbM;AANT;AAAA;AAqBD","sourcesContent":["export function reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return {\n    ...structuredPatch,\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(hunk => {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(l => {\n          if (l.startsWith('-')) { return `+${l.slice(1)}`; }\n          if (l.startsWith('+')) { return `-${l.slice(1)}`; }\n          return l;\n        })\n      };\n    })\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/convert/dmp.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,65,39,15,13,16,0,44,24,0,23,20,32,21,12,20,5,0,40,3,0,13,1,1644,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/convert/dmp.js"],"names":["convertChangesToDMP","changes","ret","change","operation","i","length","added","removed","push","value"],"mappings":";;;;;;;;;AAAA;AACO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,MADJ;AAAA,MAEIC,SAFJ;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,IAAAA,MAAM,GAAGF,OAAO,CAACI,CAAD,CAAhB;;AACA,QAAIF,MAAM,CAACI,KAAX,EAAkB;AAChBH,MAAAA,SAAS,GAAG,CAAZ;AACD,KAFD,MAEO,IAAID,MAAM,CAACK,OAAX,EAAoB;AACzBJ,MAAAA,SAAS,GAAG,CAAC,CAAb;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAEDF,IAAAA,GAAG,CAACO,IAAJ,CAAS,CAACL,SAAD,EAAYD,MAAM,CAACO,KAAnB,CAAT;AACD;;AACD,SAAOR,GAAP;AACD","sourcesContent":["// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/convert/xml.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,39,15,0,44,28,0,23,24,32,24,5,0,39,0,23,25,32,25,5,3,0,22,1,0,24,12,31,30,30,32,11,1,2564,0],"data":{"version":3,"sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/diff@5.2.0/node_modules/diff/src/convert/xml.js"],"names":["convertChangesToXML","changes","ret","i","length","change","added","push","removed","escapeHTML","value","join","s","n","replace"],"mappings":";;;;;;;;;AAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,MAAM,GAAGJ,OAAO,CAACE,CAAD,CAApB;;AACA,QAAIE,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD;;AAEDL,IAAAA,GAAG,CAACK,IAAJ,CAASE,UAAU,CAACJ,MAAM,CAACK,KAAR,CAAnB;;AAEA,QAAIL,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD;AACF;;AACD,SAAOL,GAAG,CAACS,IAAJ,CAAS,EAAT,CAAP;AACD;;AAED,SAASF,UAAT,CAAoBG,CAApB,EAAuB;AACrB,MAAIC,CAAC,GAAGD,CAAR;AACAC,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,QAAhB,CAAJ;AAEA,SAAOD,CAAP;AACD","sourcesContent":["export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/index.js":{"lineLengths":[13,62,202,40,32,28,42,34,41,39,49,39,112,116,37,106,47,119,41,112,48,61,1,44,57,1,42,59,1,45,55,1,49,62,1,45,58,1,65,36,69,38,46,26,3,40,27,29,3,37,16,13,23,15,27,19,35,16,29,20,37,25,38,31,35,3,33,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/index.ts"],"names":[],"mappings":";;;AAqDA,wCAKC;AAsBD,gCAKC;AAqBD,4BAKC;AAkDD,0CAKC;AAqBD,kCAKC;AAhMD,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAEzC,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AAQzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AACjB,yCAAoC;AAA3B,mGAAA,MAAM,OAAA;AAyBf,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/index.js":{"lineLengths":[13,72,62,2,62,221,70,71,37,43,47,49,63,40,58,21,5,52,2,30,56,45,77,58,39,28,70,2,42,28,48,2,35,69,77,28,72,23,61,69,42,46,40,13,21,28,60,2,49,43,13,21,28,60,2,43,43,61,2,40,40,61,2,35,26,57,2,38,26,62,2,21,63,41,22,54,24,15,14,25,24,2,20,76,36,41,46,32,49,21,32,26,60,63,45,61,34,45,47,93,24,42,51,27,70,33,5,35,80,29,59,48,50,13,38,66,13,10,41,33,53,55,13,32,52,69,13,10,75,71,83,64,83,93,93,22,35,7,2,28,46,19,21,19,30,35,43,2,33,21,17,48,63,60,60,63,39,25,5,51,2,34,52,41,50,68,68,61,66,2,74,72,69,62,83,24,42,48,47,41,44,27,5,16,2,22,40,31,44,74,17,12,8,12,25,13,11,12,10,28,12,12,14,11,14,13,23,11,40,67,32,31,31,60,51,35,83,40,60,9,73,27,28,43,29,27,41,44,33,52,44,52,26,28,22,39,20,5,16,64,24,9,41,41,45,32,13,9,21,5,19,12,37,37,53,62,32,19,9,23,30,19,9,44,27,32,56,28,61,9,47,71,42,70,60,48,10,75,76,74,71,55,49,27,52,60,53,44,34,62,42,54,28,87,17,35,75,17,13,47,11,38,62,60,51,29,55,38,34,34,51,47,45,31,17,13,9,43,5,61,62,61,64,43,27,65,38,56,63,51,46,21,17,13,9,55,37,68,61,62,9,42,63,57,9,14,58,66,9,25,5,44,42,39,24,63,27,47,24,17,31,45,17,13,25,11,5,54,33,39,49,49,53,31,17,36,81,34,35,21,17,31,27,19,53,11,5,33,36,43,9,33,12,33,47,48,60,39,53,63,33,48,44,43,28,21,17,39,41,60,40,32,17,13,50,23,63,40,65,40,44,28,17,13,31,49,5,45,34,35,53,21,6,68,68,70,57,6,86,39,42,32,6,73,67,37,33,12,33,94,42,28,67,33,53,64,30,21,75,55,35,55,21,45,44,45,38,33,29,36,37,30,37,38,33,21,40,64,40,49,37,42,25,17,51,52,64,43,57,67,37,52,48,47,32,25,21,43,45,64,44,36,21,17,54,27,67,44,69,44,75,59,58,47,43,32,21,17,13,31,25,5,42,58,50,56,6,63,55,38,56,60,107,30,38,43,26,17,13,9,49,5,44,19,19,24,23,48,34,59,21,21,13,77,35,21,13,77,35,21,13,37,24,63,33,34,33,28,35,21,21,13,37,24,63,33,34,33,28,35,21,21,13,18,29,13,9,70,41,47,5,19,26,19,37,27,29,79,29,27,9,25,55,29,5,51,45,59,55,23,46,37,68,75,30,29,87,41,33,33,34,42,96,47,36,36,37,49,45,64,70,69,59,60,38,36,53,21,41,47,21,17,13,9,68,76,55,37,51,9,56,60,105,40,32,29,38,36,52,33,30,29,13,32,41,56,23,57,30,30,30,24,65,72,41,70,45,18,51,32,31,50,36,35,53,51,49,50,28,32,32,48,66,45,63,42,74,43,43,47,48,73,41,21,32,17,67,33,45,85,73,84,79,41,36,21,26,58,73,48,49,76,79,34,25,63,79,29,21,17,38,83,37,30,38,82,36,36,21,17,36,29,13,38,60,65,20,40,30,54,13,18,32,55,13,21,29,9,60,60,51,58,60,63,60,65,37,49,72,37,64,28,24,9,29,59,61,35,27,9,29,56,64,61,36,52,33,9,14,37,36,9,28,5,19,68,5,20,67,37,20,29,36,27,22,63,66,14,28,42,60,9,53,38,29,45,42,29,39,44,9,49,38,29,41,38,29,35,37,9,54,74,9,50,35,9,78,49,55,68,9,18,5,14,49,31,59,36,10,64,65,51,29,26,32,31,9,37,42,18,25,28,31,59,42,58,78,57,70,43,20,29,41,42,54,37,17,44,37,44,42,33,15,34,39,39,74,27,17,41,74,73,21,26,40,21,17,46,66,17,53,78,49,17,15,68,10,23,71,75,71,36,56,43,56,24,38,13,62,33,9,20,35,32,9,28,27,5,19,59,69,54,50,43,32,9,59,50,43,9,14,34,9,5,38,45,54,25,27,25,9,25,28,9,35,24,9,37,40,29,40,9,53,38,46,66,67,43,47,29,45,82,41,24,67,33,13,9,46,35,26,60,34,13,62,22,41,32,17,36,13,9,67,38,33,25,9,27,5,26,57,5,1,30,21,35,103,41,112,45,118,20,37,40,46,52,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      // just collapse multiple ** portions into one\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (matched) {\n          globParts[i] = []\n          globParts[j] = matched\n          break\n        }\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice(pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    if (fastTest && typeof re === 'object') {\n      // Avoids overriding in frozen environments\n      Reflect.defineProperty(re, 'test', { value: fastTest })\n    }\n    return re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js":{"lineLengths":[13,62,36,37,41,38,47,5,46,51,5,2,48,48],"data":{"version":3,"file":"assert-valid-pattern.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/assert-valid-pattern.ts"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAA;AAC7B,MAAM,kBAAkB,GAA2B,CACxD,OAAY,EACe,EAAE;IAC7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;KACvC;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;QACvC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAA;KAC3C;AACH,CAAC,CAAA;AAVY,QAAA,kBAAkB,sBAU9B","sourcesContent":["const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/ast.js":{"lineLengths":[13,30,62,21,65,47,49,42,65,64,42,71,53,29,71,69,69,44,58,38,46,74,32,21,32,26,74,38,33,73,59,11,9,10,14,19,16,12,17,10,24,13,14,54,43,22,45,25,42,17,34,30,62,76,65,52,34,74,5,20,29,41,34,28,38,38,25,37,47,9,80,30,5,31,16,41,34,25,79,9,14,36,83,9,5,17,29,32,56,29,24,28,48,24,32,14,40,31,25,81,22,31,24,89,50,45,55,76,25,44,50,21,17,23,31,13,9,20,5,20,32,25,25,33,85,54,13,32,32,9,5,14,38,84,63,41,28,27,35,74,25,9,19,5,15,32,24,58,37,25,36,24,81,31,53,35,58,29,13,9,20,5,13,32,24,39,24,35,25,23,41,50,29,65,28,44,5,18,37,28,12,40,5,19,45,38,24,9,17,5,42,29,28,28,29,32,65,24,25,36,42,75,42,45,41,29,29,17,30,47,53,44,25,21,80,40,21,29,29,17,37,35,35,37,29,29,17,78,34,29,48,56,34,29,17,25,13,26,21,9,48,31,24,38,25,21,32,38,71,38,41,37,25,25,13,26,43,49,40,21,17,76,36,17,25,25,13,33,31,31,33,25,25,13,60,31,25,45,31,52,25,13,28,31,25,33,42,25,13,28,60,41,17,31,25,41,25,13,21,9,29,74,41,24,34,46,17,5,44,54,48,19,5,72,21,19,40,29,32,44,28,37,66,71,75,46,36,29,36,49,59,24,24,9,77,60,21,24,11,5,19,29,5,73,73,77,74,73,76,72,62,6,43,32,60,43,50,14,32,16,6,71,28,53,34,66,43,50,14,52,21,6,78,79,79,19,6,76,64,69,32,66,49,56,6,75,68,6,74,41,6,78,79,6,22,51,48,75,6,81,78,74,42,6,77,72,46,6,31,74,73,75,30,52,32,29,25,59,35,27,70,64,49,60,51,26,14,26,27,33,57,83,67,84,67,100,42,52,78,44,43,79,58,74,80,76,81,83,68,86,92,21,17,13,73,25,31,41,45,34,13,44,20,22,49,52,28,14,9,73,73,44,64,31,62,44,75,79,39,38,30,29,39,83,9,43,72,16,40,38,32,9,29,56,9,62,23,50,77,9,14,43,67,26,81,30,27,35,25,39,30,61,33,65,38,50,41,9,16,18,46,48,24,10,5,25,26,23,59,33,40,64,13,32,77,68,47,22,10,66,23,5,56,29,20,26,47,37,27,33,58,25,13,29,44,33,17,22,36,17,25,13,28,106,31,30,47,38,49,29,17,13,28,44,38,20,31,32,25,13,28,28,32,25,13,34,9,74,5,1,18,31],"data":{"version":3,"file":"ast.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/ast.ts"],"names":[],"mappings":"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","sourcesContent":["// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  get options() {\n    return this.#options\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/brace-expressions.js":{"lineLengths":[13,72,40,62,28,62,22,48,41,50,38,35,35,46,35,34,34,49,35,54,39,2,63,19,58,37,74,60,51,63,66,67,41,65,29,40,25,25,35,53,5,24,22,20,20,25,22,25,23,21,24,36,33,56,26,16,21,9,49,27,18,9,24,25,28,32,20,25,13,70,9,37,72,79,46,67,37,70,21,36,28,40,24,42,39,35,17,13,9,56,25,25,66,31,33,76,13,40,44,13,28,16,21,9,45,70,43,46,19,21,9,42,27,19,21,9,60,36,12,5,21,62,55,37,5,68,70,41,54,5,77,74,77,74,28,30,35,18,75,61,5,77,73,45,43,23,21,20,45,2,32,45],"data":{"version":3,"file":"brace-expressions.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/brace-expressions.ts"],"names":[],"mappings":"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","sourcesContent":["// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/unescape.js":{"lineLengths":[13,62,26,3,64,2,72,77,72,66,2,70,33,2,77,16,3,65,31,43,85,2,28,36],"data":{"version":3,"file":"unescape.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/unescape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;;;;;;GAaG;AACI,MAAM,QAAQ,GAAG,CACtB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAChF,CAAC,CAAA;AATY,QAAA,QAAQ,YASpB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/escape.js":{"lineLengths":[13,62,24,3,49,2,73,75,74,75,73,3,63,60,64,58,31,41,44,2,24,34],"data":{"version":3,"file":"escape.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/escape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;GAQG;AACI,MAAM,MAAM,GAAG,CACpB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,wDAAwD;IACxD,4DAA4D;IAC5D,sDAAsD;IACtD,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC,CAAA;AAZY,QAAA,MAAM,UAYlB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/glob.js":{"lineLengths":[13,62,22,41,39,45,45,43,44,48,55,14,43,20,14,3,54,3,12,13,8,9,8,16,11,11,18,9,14,13,12,11,10,10,15,12,13,13,11,9,11,25,18,24,7,47,7,9,7,60,7,13,7,65,6,61,6,62,71,37,6,71,13,7,32,29,18,57,28,50,34,36,30,46,34,32,24,26,9,77,63,9,34,30,50,38,34,40,38,70,44,42,23,73,32,34,64,74,9,42,32,9,35,42,43,26,40,62,9,29,34,71,13,76,9,31,57,57,26,38,44,53,84,13,9,14,84,77,67,51,48,36,28,15,9,41,70,66,69,42,88,21,47,20,26,38,34,32,28,28,30,27,33,36,60,37,10,77,62,34,40,23,21,50,35,33,19,58,32,70,11,5,18,74,73,79,46,16,82,29,54,59,31,40,36,62,23,10,5,16,16,75,29,54,59,31,40,36,62,26,10,5,14,75,25,50,55,27,36,32,58,20,5,18,75,25,50,55,27,36,32,58,24,5,7,64,33,7,19,52,5,25,34,5,7,71,33,7,15,53,5,30,30,5,1,20,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/path-scurry@1.11.1/node_modules/path-scurry/dist/commonjs/index.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,62,253,41,41,39,27,50,46,57,46,47,39,19,30,26,34,36,17,15,32,36,38,38,6,2,58,97,13,7,21,20,19,34,41,10,6,39,48,95,47,27,57,21,21,21,21,21,21,22,20,27,27,64,40,33,38,66,33,57,64,32,74,29,37,38,37,48,34,43,29,36,43,43,43,44,38,31,33,26,36,10,17,34,29,13,2,39,32,42,10,17,41,35,13,2,3,65,12,3,49,19,28,5,1,36,72,79,73,79,78,77,75,76,2,78,70,3,41,12,3,50,38,15,20,32,47,11,5,1,38,47,3,48,78,2,78,74,75,19,2,75,75,16,3,16,7,32,6,73,74,80,74,45,7,9,7,53,6,16,7,9,7,59,6,16,7,10,7,79,6,16,7,11,7,71,16,7,11,7,73,53,7,18,36,8,19,9,15,25,5,10,16,26,5,11,17,27,5,9,15,25,5,9,15,25,5,10,16,26,5,13,19,29,5,9,15,25,5,10,16,26,5,12,18,28,5,13,19,29,5,13,19,29,5,13,19,29,5,17,23,33,5,11,17,27,5,11,17,27,5,11,17,27,5,15,21,31,5,15,11,14,19,14,19,10,14,16,14,7,69,69,76,27,7,22,48,5,7,77,77,7,16,31,5,7,79,67,6,16,7,76,25,75,37,29,27,33,34,39,39,49,34,26,39,9,14,45,9,5,7,58,6,65,7,13,38,31,25,37,55,5,7,16,7,21,30,5,7,81,7,19,20,24,9,50,52,50,33,58,43,22,5,29,21,38,30,9,17,5,7,77,80,79,14,6,16,7,16,48,21,26,9,63,43,38,24,5,7,69,6,78,14,6,75,61,6,36,6,16,7,27,50,24,9,32,39,9,25,41,83,35,40,25,13,9,71,67,34,46,84,57,20,25,21,11,33,35,9,78,79,30,22,5,7,76,68,7,16,23,22,43,34,9,31,30,17,48,9,32,62,5,7,69,44,73,57,7,21,29,35,23,22,46,39,31,30,17,64,9,37,57,5,7,57,7,16,43,34,9,31,30,17,48,9,32,59,37,5,7,70,6,77,21,7,21,46,39,29,59,27,58,39,58,13,18,49,13,9,30,39,71,43,5,7,38,6,80,76,45,7,17,47,5,18,35,5,15,44,46,40,60,48,74,70,86,53,28,5,7,34,7,14,45,5,7,31,7,19,45,5,7,38,7,25,45,5,7,34,7,21,45,5,7,31,7,14,45,5,7,28,7,16,46,5,7,35,7,22,46,5,7,72,27,6,74,47,7,19,60,5,7,75,51,6,80,74,48,7,22,32,5,7,75,56,6,80,74,48,7,22,30,5,7,76,58,6,75,74,67,7,21,41,55,5,7,77,57,6,76,55,7,19,29,24,25,25,49,39,56,39,33,5,7,77,61,7,21,47,5,7,80,74,71,7,16,39,5,7,80,50,6,75,77,56,6,73,16,7,16,29,44,53,5,7,77,6,80,39,6,79,7,22,40,21,26,9,34,29,9,29,72,27,29,9,28,13,75,77,29,55,13,9,20,40,29,9,5,7,44,7,20,40,21,26,9,34,29,9,29,72,27,29,9,28,13,64,73,29,55,13,9,20,40,29,9,5,31,45,37,60,70,34,18,32,9,5,19,37,32,19,58,35,5,27,56,41,33,35,28,9,5,24,34,28,5,63,20,65,66,66,46,29,33,19,28,27,62,54,33,30,33,35,5,29,60,53,32,9,37,31,9,14,44,9,5,27,70,29,33,57,34,29,9,37,32,31,9,5,30,29,27,30,26,69,54,77,29,32,9,25,72,62,29,48,39,9,28,5,28,55,44,5,31,61,34,68,40,67,35,9,25,24,21,5,37,56,32,83,45,25,13,62,9,5,42,25,59,58,63,25,28,69,71,38,39,24,16,35,25,9,24,17,5,7,78,18,6,78,71,74,6,79,81,16,6,75,15,7,19,42,17,80,28,13,24,41,13,9,5,7,41,7,17,42,17,69,28,13,24,41,13,9,5,20,157,28,32,36,40,32,30,28,32,24,24,24,26,28,32,28,26,26,24,35,51,71,67,34,9,5,22,31,32,40,46,37,46,5,7,79,6,79,19,6,75,15,6,76,76,63,81,76,74,7,39,33,27,29,16,51,19,9,41,35,62,27,28,16,50,19,9,57,35,38,19,9,39,52,54,41,78,21,43,41,13,18,68,28,42,55,17,47,13,75,19,11,5,26,7,46,6,79,19,6,75,15,7,21,33,22,9,41,35,59,9,52,54,41,41,45,9,14,33,36,32,77,17,75,40,21,55,17,47,13,24,43,41,13,51,22,9,55,5,7,43,7,19,33,22,9,41,35,59,9,52,54,41,13,60,36,17,51,13,43,9,20,39,37,9,55,5,18,34,25,39,75,29,70,25,9,28,20,5,34,49,39,30,47,5,7,63,22,6,74,6,79,41,7,22,27,34,62,29,13,73,55,9,19,36,9,5,7,35,7,20,27,34,62,29,13,62,55,9,19,36,9,5,7,66,41,6,16,7,24,28,19,29,26,36,20,21,31,27,44,44,25,26,9,44,19,50,36,41,25,9,5,1,28,3,35,2,79,43,3,34,7,45,7,15,7,42,7,25,7,79,67,6,16,7,76,63,5,7,16,7,47,105,5,7,16,7,25,50,5,7,16,7,23,54,42,29,9,70,67,51,53,13,9,47,81,5,7,16,7,50,67,77,33,27,26,33,45,36,5,1,30,3,40,2,36,3,34,7,41,7,19,7,44,7,14,7,79,67,6,16,7,76,63,5,7,16,7,25,47,5,7,16,7,24,25,5,7,16,7,47,105,5,1,30,3,78,40,2,78,77,36,3,22,7,75,7,9,7,78,7,13,7,68,7,10,7,83,7,8,18,23,14,7,51,6,68,7,11,8,7,54,6,76,6,16,7,118,36,62,53,9,61,55,46,41,52,48,53,62,73,70,46,24,9,29,35,86,9,28,29,43,46,29,35,37,32,29,35,28,37,64,65,68,15,28,9,24,5,7,59,7,28,39,42,9,28,5,7,75,53,6,16,7,21,30,5,7,60,6,49,6,78,71,17,7,23,71,72,19,53,31,32,25,36,37,22,13,9,49,35,26,9,54,42,22,5,7,71,72,62,6,49,6,78,71,17,7,28,71,72,19,53,31,32,25,36,37,22,13,9,54,35,26,9,59,47,22,5,7,79,7,32,40,44,9,32,5,7,73,61,7,37,40,44,9,37,5,7,65,7,32,40,44,9,26,5,7,64,7,31,40,44,9,50,5,44,28,8,40,44,9,48,25,29,9,39,34,22,9,14,44,58,9,5,42,28,8,40,44,9,48,25,29,9,46,34,22,9,33,39,9,14,56,9,5,7,70,42,6,78,71,74,6,79,81,16,6,75,15,7,35,40,44,9,29,5,7,47,7,33,40,44,9,33,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,45,40,44,9,48,25,29,9,83,27,39,67,9,31,35,26,44,37,25,34,17,36,41,25,32,36,38,29,21,18,42,47,71,21,55,36,72,97,21,26,61,42,25,30,35,25,21,17,36,10,28,42,31,37,23,35,36,29,15,11,5,43,40,44,9,48,25,29,9,83,27,39,67,9,38,33,46,38,43,67,17,26,41,60,33,38,38,17,53,32,17,13,9,23,5,7,30,6,47,6,75,80,76,7,30,30,5,45,76,81,81,40,44,9,48,28,29,9,67,5,7,63,6,51,7,25,34,5,47,40,44,9,48,25,29,9,83,39,59,9,38,33,46,38,43,59,17,26,41,60,33,38,38,17,53,32,17,13,9,5,41,40,44,9,48,25,29,9,83,70,39,68,9,31,30,27,31,31,29,42,27,41,38,27,17,29,30,74,41,27,57,40,50,44,50,53,47,47,82,29,25,46,93,35,25,21,46,58,83,46,29,25,21,33,46,58,61,42,25,21,53,55,21,37,34,21,18,36,32,47,29,13,10,18,23,5,45,40,44,9,48,25,29,9,83,70,31,39,68,9,30,27,31,31,29,42,27,41,38,27,17,29,30,50,42,47,79,42,25,21,17,29,42,30,45,64,37,42,42,21,57,38,21,17,13,43,47,10,18,23,5,28,32,76,35,5,1,40,3,51,2,75,38,3,46,7,44,7,15,49,39,65,29,49,35,9,5,7,16,7,24,80,73,58,63,5,7,16,7,17,117,5,7,66,7,19,86,5,1,42,3,81,2,76,2,43,3,46,7,44,7,14,49,40,64,29,5,7,16,7,25,19,5,7,16,7,17,117,5,7,66,7,19,33,5,1,42,3,68,2,72,11,2,43,3,48,49,39,40,5,1,44,3,68,2,73,3,68,3,74,2,74,65,3,67,54,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/path-scurry@1.11.1/node_modules/path-scurry/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'node:path'\n\nimport { fileURLToPath } from 'node:url'\n\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nimport * as actualFS from 'node:fs'\n\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\n\nimport { lstat, readdir, readlink, realpath } from 'node:fs/promises'\n\nimport { Minipass } from 'minipass'\nimport type { Dirent, Stats } from 'node:fs'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true },\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n  : {\n      ...defaultFS,\n      ...fsOption,\n      promises: {\n        ...defaultFS.promises,\n        ...(fsOption.promises || {}),\n      },\n    }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile() ? IFREG\n  : s.isDirectory() ? IFDIR\n  : s.isSymbolicLink() ? IFLNK\n  : s.isCharacterDevice() ? IFCHR\n  : s.isBlockDevice() ? IFBLK\n  : s.isSocket() ? IFSOCK\n  : s.isFIFO() ? IFIFO\n  : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * boolean indicating that this path is the current working directory\n   * of the PathScurry collection that contains it.\n   */\n  isCWD: boolean = false\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['parentPath'] refers to the path of the\n   * directory that was passed to readdir. For root entries, it's the path\n   * to the entry itself.\n   */\n  get parentPath(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n   * this property refers to the *parent* path, not the path object itself.\n   */\n  get path(): string {\n    return this.parentPath\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase =\n      rootPath ?\n        this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name =\n      this.nocase ? normalizeNocase(pathPart) : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath =\n      this.#fullpath ? this.#fullpath + s + pathPart : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.isCWD) return ''\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.isCWD) return ''\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return (\n      this.isUnknown() ? 'Unknown'\n      : this.isDirectory() ? 'Directory'\n      : this.isFile() ? 'File'\n      : this.isSymbolicLink() ? 'SymbolicLink'\n      : this.isFIFO() ? 'FIFO'\n      : this.isCharacterDevice() ? 'CharacterDevice'\n      : this.isBlockDevice() ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket() ? 'Socket'\n      : 'Unknown'\n    )\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase ?\n        this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = (await this.parent.realpath())?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.realpathSync()?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      const c = children[p]\n      if (c) c.#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name =\n        this.nocase ? normalizeNocase(e.name) : normalize(e.name)\n      if (name !== pchild!.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild!, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children,\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[],\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false,\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res),\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean,\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n    oldCwd.isCWD = false\n    this.isCWD = true\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this,\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {},\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor',\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd,\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void,\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next(),\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {},\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false,\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r,\n                    ),\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true),\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32' ? PathScurryWin32\n  : process.platform === 'darwin' ? PathScurryDarwin\n  : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/dist/commonjs/index.js":{"lineLengths":[13,3,19,3,62,26,47,18,41,17,11,25,21,74,21,46,45,50,53,2,36,32,21,32,16,28,16,22,15,24,33,35,9,6,16,32,23,29,9,26,23,36,23,24,40,24,39,24,52,27,13,42,9,6,82,34,36,19,39,78,67,71,75,81,81,133,6,1,20,47,28,73,21,40,70,71,71,72,55,27,56,44,10,27,20,32,25,36,29,48,31,27,20,31,23,20,21,5,1,13,9,11,26,33,24,42,21,22,35,42,36,17,5,31,29,35,75,9,28,37,24,5,13,37,5,11,40,5,1,3,61,2,74,72,38,2,57,2,71,76,78,2,77,3,16,54,9,13,13,18,17,16,7,39,7,8,7,49,7,18,7,48,7,17,7,50,7,19,7,50,7,19,7,46,7,15,7,50,7,19,7,47,7,16,7,48,7,17,7,51,7,20,7,60,7,29,7,54,7,23,7,58,7,27,7,62,7,31,7,52,7,21,26,10,20,12,13,13,10,10,10,10,10,14,11,12,10,16,20,21,7,61,65,65,6,45,6,16,7,37,16,25,30,26,28,30,32,32,26,26,24,31,14,24,31,14,26,22,62,108,56,54,56,50,10,5,34,7,51,7,15,25,5,7,55,7,19,29,5,7,64,7,26,36,5,7,58,7,16,26,5,7,59,7,23,33,5,22,32,5,7,55,7,19,29,5,7,60,7,24,34,5,26,360,42,76,9,58,25,57,9,24,32,58,47,35,55,106,13,61,75,13,9,39,47,76,9,38,40,48,79,9,40,45,33,55,55,40,40,23,23,39,23,33,44,36,9,49,46,32,9,14,43,39,9,43,53,47,41,67,71,63,51,57,38,38,47,91,17,13,47,92,13,43,9,39,55,47,47,28,58,31,20,43,28,23,38,83,13,42,9,51,71,84,9,65,47,35,33,86,62,74,13,9,5,7,79,81,7,26,52,5,30,46,48,26,30,64,50,30,49,44,47,69,21,28,57,37,30,30,17,36,13,10,40,63,10,46,30,40,44,36,35,27,33,37,51,47,48,13,10,66,39,26,30,33,41,30,80,49,37,30,30,17,36,13,21,10,39,48,38,25,13,36,40,33,32,13,56,29,10,34,36,34,65,10,5,55,31,27,28,24,27,31,47,33,28,41,49,29,10,62,55,66,45,25,13,34,38,64,82,21,49,42,104,21,17,22,91,82,48,17,13,24,10,54,32,32,61,56,38,17,13,49,25,40,66,13,10,5,32,40,55,38,100,9,17,6,54,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,55,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,26,38,62,5,7,56,63,7,16,42,49,49,61,59,13,9,5,7,56,6,56,63,7,17,43,49,49,61,59,13,9,5,7,57,63,7,13,42,39,34,61,24,13,9,5,7,53,6,57,63,7,14,43,39,34,61,24,13,9,5,7,59,63,7,15,42,39,34,61,39,13,9,5,7,55,6,59,63,7,16,43,39,34,61,39,13,9,5,7,65,31,7,25,30,5,7,72,62,35,7,38,7,76,74,7,31,42,39,52,40,20,36,25,52,62,13,9,5,7,79,44,6,49,6,79,74,6,75,7,31,42,39,52,40,20,36,25,58,9,5,7,74,78,7,32,43,39,52,40,20,36,25,58,9,5,7,70,23,7,18,28,63,35,57,31,13,9,23,5,7,77,78,6,81,80,74,6,78,80,19,7,15,40,28,29,35,48,36,16,32,29,32,41,38,42,31,58,35,41,13,9,26,40,9,21,5,7,75,40,6,76,59,6,63,56,6,77,28,7,12,23,62,41,39,52,40,20,57,25,36,45,42,73,76,57,59,13,30,44,13,38,9,19,5,7,76,6,80,31,6,77,72,7,15,21,41,30,75,77,77,31,18,76,53,47,13,46,9,5,7,32,6,73,30,6,76,74,40,6,69,70,72,27,6,65,72,69,63,18,6,71,70,26,6,44,6,61,69,7,32,30,27,24,9,140,60,84,53,53,60,25,36,51,13,66,35,24,9,71,34,23,37,28,41,38,46,44,38,37,37,39,43,43,31,25,51,23,35,32,9,14,21,36,48,31,78,74,63,61,47,57,25,52,64,25,21,17,43,43,58,21,48,65,21,17,44,55,41,29,43,78,53,33,47,51,17,13,30,38,13,9,39,42,9,25,31,52,13,23,47,9,73,38,21,42,46,13,9,20,5,7,65,37,7,11,13,32,54,34,51,51,56,21,17,45,31,17,13,9,17,58,42,25,46,50,17,13,9,5,18,32,38,38,65,60,9,61,35,47,13,40,54,13,9,35,67,19,44,44,34,9,31,40,34,9,14,42,9,31,21,20,5,7,75,76,20,6,70,80,58,6,81,77,57,6,38,58,7,29,76,42,34,43,45,55,29,13,40,37,47,17,29,39,51,17,28,13,30,37,47,13,9,26,32,9,21,5,7,75,13,6,55,54,7,31,61,42,34,52,19,9,39,76,71,5,50,73,41,21,9,28,35,65,74,30,11,27,30,20,20,10,48,42,76,33,46,55,65,36,64,17,22,56,17,13,58,51,13,81,25,45,38,50,71,21,26,49,21,17,22,39,59,54,17,13,21,10,28,33,52,47,13,33,10,35,42,80,87,76,25,45,85,86,79,26,45,17,46,72,72,71,73,67,17,13,29,78,56,17,47,13,44,25,13,10,37,61,48,73,13,58,58,43,55,48,53,35,69,57,47,21,17,15,10,27,50,50,37,34,36,34,11,34,45,73,40,9,14,38,9,18,5,27,34,25,20,22,35,55,47,5,39,16,22,122,22,144,34,288,36,23,37,32,27,31,35,23,15,9,25,23,27,31,16,27,17,28,24,37,39,35,29,19,19,10,40,34,23,38,72,38,9,14,47,43,45,81,29,46,30,52,17,75,13,79,76,49,44,27,41,40,37,47,17,27,51,25,13,77,33,72,66,52,25,61,40,48,13,74,9,5,44,52,28,58,17,5,31,44,26,69,9,66,39,45,21,37,20,20,11,33,18,5,7,74,19,6,62,7,29,153,42,34,47,60,23,47,39,27,41,67,32,46,50,21,45,52,58,17,22,33,37,67,52,21,79,17,13,18,27,39,80,81,82,84,53,31,54,17,40,37,47,17,29,13,9,26,32,9,5,20,26,26,5,24,41,44,15,69,50,29,29,23,35,39,47,13,18,68,13,45,31,9,5,7,38,6,60,7,15,41,5,24,28,31,46,38,31,39,40,17,22,48,51,53,72,21,73,47,58,25,52,65,25,21,43,53,53,47,55,21,52,55,21,26,53,59,53,59,21,33,43,17,13,9,62,38,21,42,46,13,9,23,5,7,58,7,13,37,5,20,67,43,45,64,13,18,47,39,50,17,44,57,17,13,9,29,38,38,41,31,33,9,26,32,9,23,23,30,33,23,54,38,21,42,46,13,9,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   *\n   * - `evict`: The item was evicted because it is the least recently used,\n   *   and the cache is full.\n   * - `set`: A new value was set, overwriting the old value being disposed.\n   * - `delete`: The item was explicitly deleted, either by calling\n   *   {@link LRUCache#delete}, {@link LRUCache#clear}, or\n   *   {@link LRUCache#set} with an undefined value.\n   * - `expire`: The item was removed due to exceeding its TTL.\n   * - `fetch`: A {@link OptionsBase#fetchMethod} operation returned\n   *   `undefined` or was aborted, causing the item to be deleted.\n   */\n  export type DisposeReason =\n    | 'evict'\n    | 'set'\n    | 'delete'\n    | 'expire'\n    | 'fetch'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Occasionally, it may be useful to track the internal behavior of the\n   * cache, particularly for logging, debugging, or for behavior within the\n   * `fetchMethod`. To do this, you can pass a `status` object to the\n   * {@link LRUCache#fetch}, {@link LRUCache#get}, {@link LRUCache#set},\n   * {@link LRUCache#memo}, and {@link LRUCache#has} methods.\n   *\n   * The `status` option should be a plain JavaScript object. The following\n   * fields will be set on it appropriately, depending on the situation.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no {@link OptionsBase.fetchMethod}, so\n     *   {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  export interface MemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.memoMethod} as\n     * the {@link MemoizerOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface MemoOptionsWithContext<K, V, FC>\n    extends MemoOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface MemoOptionsNoContext<K, V>\n    extends MemoOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.memoMethod} function.\n   */\n  export interface MemoizerOptions<K, V, FC = unknown> {\n    options: MemoizerMemoOptions<K, V, FC>\n    /**\n     * Object provided in the {@link MemoOptions.context} option to\n     * {@link LRUCache#memo}\n     */\n    context: FC\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#memo}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link MemoOptions.forceRefresh}, and\n   * {@link MemoerOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.memoMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the memoMethod is called.\n   */\n  export interface MemoizerMemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n    > {\n    status?: Status<V>\n    size?: Size\n    start?: Milliseconds\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * the type signature for the {@link OptionsBase.memoMethod} option.\n   */\n  export type Memoizer<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: MemoizerOptions<K, V, FC>\n  ) => V\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   *\n   * All options are also available on the {@link LRUCache} instance, making\n   * it safe to pass an LRUCache instance as the options argumemnt to\n   * make another empty cache of the same type.\n   *\n   * Some options are marked as read-only, because changing them after\n   * instantiation is not safe. Changing any of the other options will of\n   * course only have an effect on subsequent method calls.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     *\n     * **It is strongly recommended to set a `max` to prevent unbounded growth\n     * of the cache.**\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed by\n     * default, and MAY live in the cache, contributing to its LRU max, long\n     * after they have expired, unless {@link OptionsBase.ttlAutopurge} is\n     * set.\n     *\n     * If set to `0` (the default value), then that means \"do not track\n     * TTL\", not \"expire immediately\".\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * This is not primarily a TTL cache, and does not make strong TTL\n     * guarantees. There is no pre-emptive pruning of expired items, but you\n     * _may_ set a TTL on the cache, and it will treat expired items as missing\n     * when they are fetched, and delete them.\n     *\n     * Optional, but must be a non-negative integer in ms if specified.\n     *\n     * This may be overridden by passing an options object to `cache.set()`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if ttl tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * If ttl tracking is enabled, and `max` and `maxSize` are not set,\n     * and `ttlAutopurge` is not set, then a warning will be emitted\n     * cautioning about the potential for unbounded memory consumption.\n     * (The TypeScript definitions will also discourage this.)\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     *\n     * Note that this may *significantly* degrade performance, especially if\n     * the cache is storing a large number of items. It is almost always best\n     * to just leave the stale items in the cache, and let them fall out as new\n     * items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * Use with caution!\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever it is retrieved from cache with\n     * {@link LRUCache#get}, causing it to not expire. (It can still fall out\n     * of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever its presence in the cache is\n     * checked with {@link LRUCache#has}, causing it to not expire. (It can\n     * still fall out of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     *\n     * By default, if you set `ttl`, stale items will only be deleted from the\n     * cache when you `get(key)`. That is, it's not preemptively pruning items,\n     * unless {@link OptionsBase.ttlAutopurge} is set.\n     *\n     * If you set `allowStale:true`, it'll return the stale value *as well as*\n     * deleting it. If you don't set this, then it'll return `undefined` when\n     * you try to get a stale entry.\n     *\n     * Note that when a stale entry is fetched, _even if it is returned due to\n     * `allowStale` being set_, it is removed from the cache immediately. You\n     * can suppress this behavior by setting\n     * {@link OptionsBase.noDeleteOnStaleGet}, either in the constructor, or in\n     * the options provided to {@link LRUCache#get}.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     * The `cache.has()` method will always return `false` for stale items.\n     *\n     * Only relevant if a ttl is set.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the\n     * cache, as `dispose(value, key, reason)`.\n     *\n     * This can be handy if you want to close file descriptors or do\n     * other cleanup tasks when items are no longer stored in the cache.\n     *\n     * **NOTE**: It is called _before_ the item has been fully removed\n     * from the cache, so if you want to put it right back in, you need\n     * to wait until the next tick. If you try to add it back in during\n     * the `dispose()` function call, it will break things in subtle and\n     * weird ways.\n     *\n     * Unlike several other options, this may _not_ be overridden by\n     * passing an option to `set()`, for performance reasons.\n     *\n     * The `reason` will be one of the following strings, corresponding\n     * to the reason for the item's deletion:\n     *\n     * - `evict` Item was evicted to make space for a new addition\n     * - `set` Item was overwritten by a new value\n     * - `expire` Item expired its TTL\n     * - `fetch` Item was deleted due to a failed or aborted fetch, or a\n     *   fetchMethod returning `undefined.\n     * - `delete` Item was removed by explicit `cache.delete(key)`,\n     *   `cache.clear()`, or `cache.set(key, undefined)`.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     *\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     *\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     *\n     * Only relevant if `dispose` or `disposeAfter` are set.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when setting a new\n     * value for an existing key (ie, when updating a value rather than\n     * inserting a new value).  Note that the TTL value is _always_ set (if\n     * provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     *\n     * May be passed as an option to {@link LRUCache#set}.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * Set to a positive integer to track the sizes of items added to the\n     * cache, and automatically evict items in order to stay below this size.\n     * Note that this may result in fewer than `max` items being stored.\n     *\n     * Attempting to add an item to the cache whose calculated size is greater\n     * that this amount will be a no-op. The item will not be cached, and no\n     * other items will be evicted.\n     *\n     * Optional, must be a positive integer if provided.\n     *\n     * Sets `maxEntrySize` to the same value, unless a different value is\n     * provided for `maxEntrySize`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if size tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod} or {@link OptionsBase.memoMethod}, then\n     * it will not be stored in the cache.\n     *\n     * Attempting to add an item whose calculated size is greater than\n     * this amount will not cache the item or evict any old items, but\n     * WILL delete an existing value if one is already present.\n     *\n     * Optional, must be a positive integer if provided. Defaults to\n     * the value of `maxSize` if provided.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * Requires {@link OptionsBase.maxSize} to be set.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     *\n     * ```ts\n     * fetchMethod(key, staleValue, { signal, options, context })\n     * ```\n     *\n     * If `fetchMethod` is not provided, then `cache.fetch(key)` is equivalent\n     * to `Promise.resolve(cache.get(key))`.\n     *\n     * If at any time, `signal.aborted` is set to `true`, or if the\n     * `signal.onabort` method is called, or if it emits an `'abort'` event\n     * which you can listen to with `addEventListener`, then that means that\n     * the fetch should be abandoned. This may be passed along to async\n     * functions aware of AbortController/AbortSignal behavior.\n     *\n     * The `fetchMethod` should **only** return `undefined` or a Promise\n     * resolving to `undefined` if the AbortController signaled an `abort`\n     * event. In all other cases, it should return or resolve to a value\n     * suitable for adding to the cache.\n     *\n     * The `options` object is a union of the options that may be provided to\n     * `set()` and `get()`. If they are modified, then that will result in\n     * modifying the settings to `cache.set()` when the value is resolved, and\n     * in the case of\n     * {@link OptionsBase.noDeleteOnFetchRejection} and\n     * {@link OptionsBase.allowStaleOnFetchRejection}, the handling of\n     * `fetchMethod` failures.\n     *\n     * For example, a DNS cache may update the TTL based on the value returned\n     * from a remote DNS server by changing `options.ttl` in the `fetchMethod`.\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#memo}\n     */\n    memoMethod?: Memoizer<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     *\n     * When using time-expiring entries with `ttl`, by default stale\n     * items will be removed from the cache when the key is accessed\n     * with `cache.get()`.\n     *\n     * Setting this option will cause stale items to remain in the cache, until\n     * they are explicitly deleted with `cache.delete(key)`, or retrieved with\n     * `noDeleteOnStaleGet` set to `false`.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     *\n     * Only relevant if a ttl is used.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the {@link LRUCache#fetch}\n     * fails, not any other times.\n     *\n     * If a `fetchMethod` fails, and there is no stale value available, the\n     * `fetch()` will resolve to `undefined`. Ie, all `fetchMethod` errors are\n     * suppressed.\n     *\n     * Implies `noDeleteOnFetchRejection`.\n     *\n     * This may be set in calls to `fetch()`, or defaulted on the constructor,\n     * or overridden by modifying the options object in the `fetchMethod`.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches\n     * an `'abort'` event, whether user-triggered, or due to internal cache\n     * behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls\n     * are not immediately resolved or rejected when they are aborted, and\n     * instead take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * For example:\n     *\n     * ```ts\n     * const c = new LRUCache({\n     *   ttl: 100,\n     *   ignoreFetchAbort: true,\n     *   allowStaleOnFetchAbort: true,\n     *   fetchMethod: async (key, oldValue, { signal }) => {\n     *     // note: do NOT pass the signal to fetch()!\n     *     // let's say this fetch can take a long time.\n     *     const res = await fetch(`https://slow-backend-server/${key}`)\n     *     return await res.json()\n     *   },\n     * })\n     *\n     * // this will return the stale value after 100ms, while still\n     * // updating in the background for next time.\n     * const val = await c.fetch('key', { signal: AbortSignal.timeout(100) })\n     * ```\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown>\n  implements Map<K, V>\n{\n  // options that cannot be changed without disaster\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n  readonly #memoMethod?: LRUCache.Memoizer<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  get memoMethod(): LRUCache.Memoizer<K, V, FC> | undefined {\n    return this.#memoMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      memoMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      memoMethod !== undefined &&\n      typeof memoMethod !== 'function'\n    ) {\n      throw new TypeError('memoMethod must be a function if defined')\n    }\n    this.#memoMethod = memoMethod\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the number of ms left in the item's TTL. If item is not in cache,\n   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.#delete(this.#keyList[index] as K, 'expire')\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string\n   * description of an object. Called by the built-in method\n   * `Object.prototype.toString`.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from most\n   * recently used to least recently used.\n   *\n   * `fn` is called as `fn(value, key, cache)`.\n   *\n   * If `thisp` is provided, function will be called in the `this`-context of\n   * the provided object, or the cache if no `thisp` object is provided.\n   *\n   * Does not update age or recenty of use, or iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.#delete(this.#keyList[i] as K, 'expire')\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Returns `undefined` if the key is not present.\n   *\n   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n   * serialization, the `start` value is always the current timestamp, and the\n   * `ttl` is a calculated remaining time to live (negative if expired).\n   *\n   * Always returns stale values, if their info is found in the cache, so be\n   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n   * if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to {@link LRLUCache#load}.\n   *\n   * The `start` fields are calculated relative to a portable `Date.now()`\n   * timestamp, even if `performance.now()` is available.\n   *\n   * Stale entries are always included in the `dump`, even if\n   * {@link LRUCache.OptionsBase.allowStale} is false.\n   *\n   * Note: this returns an actual array, not a generator, so it can be more\n   * easily passed around.\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   *\n   * The shape of the resulting cache may be different if the same options are\n   * not used in both caches.\n   *\n   * The `start` fields are assumed to be calculated relative to a portable\n   * `Date.now()` timestamp, even if `performance.now()` is available.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   *\n   * Fields on the {@link LRUCache.SetOptions} options param will override\n   * their corresponding values in the constructor options for the scope\n   * of this single `set()` operation.\n   *\n   * If `start` is provided, then that will set the effective start\n   * time for the TTL calculation. Note that this must be a previous\n   * value of `performance.now()` if supported, or a previous value of\n   * `Date.now()` if not.\n   *\n   * Options object may also include `size`, which will prevent\n   * calling the `sizeCalculation` function and just use the specified\n   * number if it is a positive integer, and `noDisposeOnSet` which\n   * will prevent calling a `dispose` function in the case of\n   * overwrites.\n   *\n   * If the `size` (or return value of `sizeCalculation`) for a given\n   * entry is greater than `maxEntrySize`, then the item will not be\n   * added to the cache.\n   *\n   * Will update the recency of the entry.\n   *\n   * If the value is `undefined`, then this is an alias for\n   * `cache.delete(key)`. `undefined` is never stored in the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.#delete(k, 'set')\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Check if a key is in the cache, without updating the recency of\n   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n   * to `true` in either the options or the constructor.\n   *\n   * Will return `false` if the item is stale, even though it is technically in\n   * the cache. The difference can be determined (if it matters) by using a\n   * `status` argument, and inspecting the `has` field.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.#delete(k, 'fetch')\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.#delete(k, 'fetch')\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If the value is in the cache and not stale, then the returned\n   * Promise resolves to the value.\n   *\n   * If not in the cache, or beyond its TTL staleness, then\n   * `fetchMethod(key, staleValue, { options, signal, context })` is\n   * called, and the value returned will be added to the cache once\n   * resolved.\n   *\n   * If called with `allowStale`, and an asynchronous fetch is\n   * currently in progress to reload a stale value, then the former\n   * stale value will be returned.\n   *\n   * If called with `forceRefresh`, then the cached item will be\n   * re-fetched, even if it is not stale. However, if `allowStale` is also\n   * set, then the old value will still be returned. This is useful\n   * in cases where you want to force a reload of a cached value. If\n   * a background fetch is already in progress, then `forceRefresh`\n   * has no effect.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   *\n   * If {@link LRUCache.OptionsBase.fetchMethod} is not specified, then this is\n   * effectively an alias for `Promise.resolve(cache.get(key))`.\n   *\n   * When the fetch method resolves to a value, if the fetch has not\n   * been aborted due to deletion, eviction, or being overwritten,\n   * then it is added to the cache using the options provided.\n   *\n   * If the key is evicted or deleted before the `fetchMethod`\n   * resolves, then the AbortSignal passed to the `fetchMethod` will\n   * receive an `abort` event, and the promise returned by `fetch()`\n   * will reject with the reason for the abort.\n   *\n   * If a `signal` is passed to the `fetch()` call, then aborting the\n   * signal will abort the fetch and cause the `fetch()` promise to\n   * reject with the reason provided.\n   *\n   * **Setting `context`**\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the {@link LRUCache} constructor, then all\n   * calls to `cache.fetch()` _must_ provide a `context` option. If\n   * set to `undefined` or `void`, then calls to fetch _must not_\n   * provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that\n   * might be relevant in the course of fetching the data. It is only\n   * relevant for the course of a single `fetch()` operation, and\n   * discarded afterwards.\n   *\n   * **Note: `fetch()` calls are inflight-unique**\n   *\n   * If you call `fetch()` multiple times with the same key value,\n   * then every call after the first will resolve on the same\n   * promise<sup>1</sup>,\n   * _even if they have different settings that would otherwise change\n   * the behavior of the fetch_, such as `noDeleteOnFetchRejection`\n   * or `ignoreFetchAbort`.\n   *\n   * In most cases, this is not a problem (in fact, only fetching\n   * something once is what you probably want, if you're caching in\n   * the first place). If you are changing the fetch() options\n   * dramatically between runs, there's a good chance that you might\n   * be trying to fit divergent semantics into a single object, and\n   * would be better off with multiple cache instances.\n   *\n   * **1**: Ie, they're not the \"same Promise\", but they resolve at\n   * the same time, because they're both waiting on the same\n   * underlying fetchMethod response.\n   */\n\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * In some cases, `cache.fetch()` may resolve to `undefined`, either because\n   * a {@link LRUCache.OptionsBase#fetchMethod} was not provided (turning\n   * `cache.fetch(k)` into just an async wrapper around `cache.get(k)`) or\n   * because `ignoreFetchAbort` was specified (either to the constructor or\n   * in the {@link LRUCache.FetchOptions}). Also, the\n   * {@link OptionsBase.fetchMethod} may return `undefined` or `void`, making\n   * the test even more complicated.\n   *\n   * Because inferring the cases where `undefined` might be returned are so\n   * cumbersome, but testing for `undefined` can also be annoying, this method\n   * can be used, which will reject if `this.fetch()` resolves to undefined.\n   */\n  forceFetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<V>\n  // this overload not allowed if context is required\n  forceFetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<V>\n  async forceFetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<V> {\n    const v = await this.fetch(\n      k,\n      fetchOptions as unknown extends FC\n        ? LRUCache.FetchOptions<K, V, FC>\n        : FC extends undefined | void\n        ? LRUCache.FetchOptionsNoContext<K, V>\n        : LRUCache.FetchOptionsWithContext<K, V, FC>\n    )\n    if (v === undefined) throw new Error('fetch() returned undefined')\n    return v\n  }\n\n  /**\n   * If the key is found in the cache, then this is equivalent to\n   * {@link LRUCache#get}. If not, in the cache, then calculate the value using\n   * the {@link LRUCache.OptionsBase.memoMethod}, and add it to the cache.\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the LRUCache constructor, then all calls to `cache.memo()`\n   * _must_ provide a `context` option. If set to `undefined` or `void`, then\n   * calls to memo _must not_ provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that might be\n   * relevant in the course of fetching the data. It is only relevant for the\n   * course of a single `memo()` operation, and discarded afterwards.\n   */\n  memo(\n    k: K,\n    memoOptions: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : LRUCache.MemoOptionsWithContext<K, V, FC>\n  ): V\n  // this overload not allowed if context is required\n  memo(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    memoOptions?: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : never\n  ): V\n  memo(k: K, memoOptions: LRUCache.MemoOptions<K, V, FC> = {}) {\n    const memoMethod = this.#memoMethod\n    if (!memoMethod) {\n      throw new Error('no memoMethod provided to constructor')\n    }\n    const { context, forceRefresh, ...options } = memoOptions\n    const v = this.get(k, options)\n    if (!forceRefresh && v !== undefined) return v\n    const vv = memoMethod(k, v, {\n      options,\n      context,\n    } as LRUCache.MemoizerOptions<K, V, FC>)\n    this.set(k, vv, options)\n    return vv\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.#delete(k, 'expire')\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   *\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    return this.#delete(k, 'delete')\n  }\n\n  #delete(k: K, reason: LRUCache.DisposeReason) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.#clear(reason)\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, reason)\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, reason])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    return this.#clear('delete')\n  }\n  #clear(reason: LRUCache.DisposeReason) {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, reason)\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, reason])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minipass@7.1.2/node_modules/minipass/dist/commonjs/index.js":{"lineLengths":[13,72,62,2,62,87,51,13,7,21,21,6,45,62,61,3,78,40,3,30,28,29,45,37,36,28,3,67,3,32,28,46,35,69,61,32,3,67,3,32,28,46,36,32,32,26,46,41,43,45,32,28,30,40,36,34,34,32,32,32,30,44,40,42,40,42,38,42,30,36,34,36,30,30,34,32,46,38,49,29,79,60,11,32,24,47,27,78,3,62,2,12,3,12,8,9,9,12,34,23,25,25,43,44,5,14,56,5,34,25,24,24,11,22,26,28,5,1,3,67,22,2,12,3,36,14,59,23,5,34,31,56,42,5,1,50,90,3,34,2,58,2,75,55,2,67,41,3,51,22,21,17,18,17,15,12,14,18,26,27,21,27,23,24,13,22,24,24,7,40,7,20,7,37,7,20,7,69,70,51,63,7,26,35,16,16,73,84,9,43,36,34,9,46,46,37,9,14,37,34,9,38,38,69,19,63,60,79,9,63,59,77,9,35,21,34,33,30,13,18,70,13,9,5,7,66,6,62,77,55,73,15,7,24,34,5,7,55,7,20,30,5,7,49,7,24,70,5,7,67,7,23,70,5,7,43,7,22,32,5,7,49,7,25,72,5,7,38,7,21,27,5,7,45,6,78,74,34,7,22,41,5,57,15,29,49,43,5,7,43,7,19,29,5,7,78,34,7,22,32,26,25,22,47,30,141,24,9,45,26,30,9,22,30,49,67,71,42,63,59,43,58,86,13,48,58,43,13,49,88,13,9,58,62,31,32,33,58,34,32,30,41,16,40,41,38,19,23,33,9,56,55,28,41,38,19,23,33,9,70,61,40,64,73,52,49,9,55,52,47,9,73,54,30,26,37,12,36,37,34,15,19,29,5,7,38,6,74,17,6,70,77,66,6,72,31,7,13,28,24,32,39,22,44,35,24,9,29,21,59,79,40,28,31,43,71,14,9,59,31,19,5,22,29,32,14,28,45,36,45,45,38,40,13,18,48,41,40,13,9,33,47,31,21,5,30,42,23,30,9,45,26,30,9,32,40,15,33,25,30,66,37,65,63,43,35,20,5,51,16,28,19,58,35,9,29,29,28,32,26,27,35,12,31,5,7,61,6,79,77,78,76,41,7,14,30,5,7,23,7,13,30,28,32,5,7,53,7,21,31,5,7,71,46,7,19,29,5,7,56,7,18,28,5,25,29,36,12,47,33,5,21,29,36,12,57,36,5,30,62,33,59,31,5,25,33,29,5,7,74,6,33,7,22,28,24,32,40,26,57,29,12,42,46,50,20,25,27,9,14,78,76,46,44,57,28,44,16,31,9,20,5,7,47,6,74,73,73,52,7,18,57,16,43,65,42,17,33,13,16,62,23,9,5,7,36,7,30,36,5,7,64,71,6,68,6,80,57,6,75,78,26,6,77,79,16,7,21,42,28,36,34,56,31,13,9,65,35,9,53,27,40,9,57,30,28,63,16,50,9,19,5,7,37,7,33,37,5,7,45,6,73,76,73,52,7,22,43,73,74,64,28,64,44,35,38,38,13,9,19,5,7,60,6,80,76,79,14,7,28,49,48,36,58,38,13,9,19,5,7,47,7,22,33,5,24,34,33,31,40,24,38,29,35,32,29,35,39,9,5,7,66,71,6,73,72,18,6,74,74,75,71,19,6,72,63,6,79,74,71,6,74,66,7,23,29,74,29,29,31,30,25,9,33,45,23,29,63,43,9,32,35,9,34,32,57,55,29,44,45,23,9,34,39,36,71,43,24,35,23,9,35,45,35,23,9,57,39,40,23,9,35,44,31,19,5,22,38,45,29,9,71,31,19,5,17,30,25,33,30,26,51,31,5,18,28,45,23,46,39,17,37,45,13,9,38,20,9,38,39,19,5,7,74,23,7,21,39,26,11,30,31,60,39,33,30,24,34,43,11,16,19,5,7,78,28,6,41,7,20,31,59,9,41,30,26,50,5,7,64,7,21,49,76,47,44,11,5,7,45,6,74,7,30,70,22,32,28,34,25,27,52,10,28,24,30,36,29,68,26,30,24,23,35,41,39,47,23,27,14,39,41,39,47,29,54,14,33,41,41,47,23,58,14,73,46,29,30,48,42,40,42,15,10,16,17,24,25,38,28,14,10,5,7,38,6,75,44,7,25,70,22,32,28,28,25,34,38,34,27,52,10,28,24,30,38,68,10,31,31,35,16,17,24,25,33,28,14,10,5,7,79,6,70,19,6,76,30,6,70,21,7,17,30,19,39,16,37,24,9,31,31,62,32,31,24,60,23,15,35,61,12,33,20,5,7,33,6,70,6,18,7,27,32,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/minipass@7.1.2/node_modules/minipass/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'node:events'\nimport Stream from 'node:stream'\nimport { StringDecoder } from 'node:string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> =\n    | ObjectModeOptions\n    | (T extends string\n        ? EncodingOptions\n        : T extends Buffer\n        ? BufferOptions\n        : SharedOptions)\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args:\n      | [Minipass.ObjectModeOptions]\n      | (RType extends Buffer\n          ? [] | [Minipass.Options<RType>]\n          : [Minipass.Options<RType>])\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): this {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data as RType) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/pattern.js":{"lineLengths":[13,73,62,25,41,45,42,3,67,10,3,15,17,14,11,11,14,10,16,13,11,16,27,57,42,54,9,36,51,9,53,81,9,41,48,54,9,40,34,28,34,75,32,28,29,35,48,49,55,35,25,31,45,69,66,38,32,34,34,17,57,57,50,47,55,13,59,57,54,38,32,34,34,17,35,35,50,47,55,13,9,5,7,53,7,15,46,5,7,44,7,16,66,5,7,44,7,18,71,5,7,41,7,16,64,5,7,63,7,18,34,31,36,39,77,50,68,5,7,58,7,15,45,5,7,74,7,12,37,30,28,39,101,50,40,44,26,5,7,62,7,13,37,42,23,28,45,40,35,35,48,30,48,29,5,26,26,71,74,49,7,64,7,15,37,44,25,30,45,40,38,48,45,5,42,54,56,7,56,7,18,37,47,28,33,50,37,34,5,7,53,7,12,39,82,13,17,5,7,72,23,7,27,37,33,35,5,7,74,7,26,77,25,37,20,5,1,26,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/walker.js":{"lineLengths":[13,62,68,3,74,11,2,10,3,39,43,49,104,66,17,3,61,3,16,9,13,9,21,19,20,19,12,9,11,13,24,39,33,25,25,74,70,55,63,44,57,84,35,13,9,69,27,29,50,28,26,38,57,42,15,9,5,20,70,5,28,55,5,29,13,27,5,14,29,33,19,28,28,27,63,17,9,5,18,33,19,29,27,17,9,14,32,36,9,5,67,44,32,37,29,16,33,61,21,33,20,9,57,49,73,46,33,67,37,13,32,9,45,5,30,20,73,41,53,32,36,38,54,32,13,24,5,30,37,29,16,33,57,21,33,20,9,57,47,73,44,68,35,13,9,45,5,30,29,19,69,61,50,34,9,85,25,72,36,38,30,9,23,75,39,9,14,75,84,31,21,65,9,5,37,50,14,42,5,35,48,14,42,5,34,29,33,17,28,84,5,46,42,24,33,17,26,79,19,9,52,77,68,65,22,28,30,21,10,73,33,25,20,62,9,53,75,25,13,20,53,34,65,18,93,13,9,15,5,45,61,22,28,30,21,10,73,33,25,20,62,9,72,20,68,9,15,5,38,29,33,17,28,88,5,50,42,24,33,17,26,83,19,9,52,77,68,65,22,28,30,21,10,73,33,25,47,9,53,75,25,13,20,45,59,9,15,5,49,61,22,28,30,21,10,73,33,25,47,9,72,20,72,9,15,5,1,28,35,24,39,36,5,18,28,5,18,33,37,36,36,9,41,57,43,44,17,22,38,17,15,11,28,5,16,33,37,36,34,9,68,57,37,41,11,28,5,1,32,35,12,39,36,48,32,29,11,54,55,5,18,30,34,25,5,14,33,33,39,77,15,9,14,73,9,28,5,18,36,34,9,76,28,5,1,32,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/ignore.js":{"lineLengths":[13,54,34,66,45,62,24,41,45,55,14,43,20,14,3,41,3,14,13,21,13,21,13,11,95,27,27,35,35,33,23,22,20,19,18,23,33,21,28,27,10,34,26,5,14,75,72,75,47,75,77,31,79,76,29,78,48,63,49,37,46,33,40,58,13,44,61,63,31,34,13,32,84,77,70,44,25,38,16,38,27,29,50,20,50,13,9,5,16,38,41,45,41,40,56,28,9,40,56,28,9,21,5,24,44,53,48,34,28,9,48,34,28,9,21,5,1,24,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/processor.js":{"lineLengths":[13,69,62,93,41,3,65,3,22,10,36,27,5,12,55,5,32,76,5,34,43,48,19,45,12,70,5,1,40,3,66,72,66,3,19,22,34,55,47,72,5,29,15,61,17,22,22,11,5,1,34,3,71,20,3,16,22,26,35,19,9,44,19,75,35,13,9,12,46,5,17,44,29,20,63,9,28,20,5,15,60,5,12,66,5,1,28,3,54,2,66,35,3,17,19,32,30,13,11,8,9,39,25,36,30,29,74,5,39,33,61,72,47,49,56,40,82,46,23,76,34,28,44,28,53,29,17,22,35,17,13,29,25,18,21,32,65,42,39,22,31,31,13,34,34,26,62,29,60,13,67,49,62,40,67,43,66,64,25,13,50,56,60,72,76,80,42,34,52,50,17,43,43,69,69,65,75,17,22,38,80,80,45,49,44,35,65,77,57,25,21,17,13,43,46,13,9,20,5,22,36,5,13,61,5,62,45,49,31,36,51,65,37,34,45,54,44,44,49,69,17,47,61,17,22,61,17,13,9,23,5,46,50,37,53,13,33,75,80,79,81,71,57,50,17,46,64,51,21,60,54,21,17,13,9,62,20,19,38,41,54,30,28,29,62,13,35,37,41,36,44,13,44,62,13,9,5,38,28,19,20,49,9,14,39,9,5,38,31,26,19,20,49,9,14,39,9,5,1,30,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/commonjs/has-magic.js":{"lineLengths":[13,62,26,41,3,74,30,2,78,77,74,78,78,77,3,45,34,28,5,30,61,24,5,17,2,28,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;QACxB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;IACvD,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/index.js":{"lineLengths":[13,11,62,263,31,35,29,29,43,33,51,69,61,59,79,55,63,31,115,3,63,73,3,95,3,78,71,2,71,3,61,90,13,18,6,3,45,3,68,16,26,3,12,3,58,3,23,3,62,16,27,80,22,27,20,18,23,44,25,10,5,20,3,30,3,53,3,71,13,12,3,20,97,51,53,44,53,55,43,77,58,41,66,64,69,81,70,62,68,60,137,39,2,3,32,3,46,68,68,47,30,55,31,27,34,11,52,31,27,31,11,5,7,16,7,32,35,5,1,26,62,34,46,32,112,36,100,5,56,43,49,31,110,77,49,61,19,1,28,3,39,2,18,3,34,81,56,1,24,16,55,23,123,106,59,74,78,71,100,5,42,79,74,109,5,70,31,26,36,117,57,44,46,119,9,33,124,9,5,57,63,88,85,35,31,39,29,40,56,5,27,61,49,5,59,31,9,36,34,33,21,22,22,58,23,138,21,26,53,26,10,6,85,34,90,203,111,34,82,21,71,12,86,28,41,39,79,62,22,37,6,70,90,5,57,44,15,25,31,101,95,133,73,81,44,92,61,24,36,76,112,30,32,33,38,53,26,50,22,55,39,41,19,13,9,5,7,75,67,7,38,51,37,5,61,30,40,74,34,32,37,23,37,60,71,87,74,25,62,21,31,43,21,17,58,108,14,45,95,253,14,11,5,104,52,73,31,41,78,63,73,5,50,58,31,63,54,9,14,47,24,9,5,39,36,44,71,7,47,44,7,37,51,32,49,26,27,27,33,28,28,60,28,28,34,28,28,34,13,9,21,5,7,82,12,7,18,20,97,91,101,38,7,89,67,25,39,56,87,43,36,35,101,49,57,57,71,17,36,14,58,33,64,68,49,63,61,18,45,89,62,66,49,60,51,35,54,61,41,21,66,18,41,52,107,88,110,41,84,32,49,82,47,61,86,61,39,14,235,34,37,19,20,23,42,24,27,15,64,77,68,56,47,94,76,63,101,88,51,57,59,48,83,37,17,72,68,69,52,68,57,71,37,17,14,44,45,50,59,56,112,17,63,97,43,53,71,58,194,47,89,42,50,41,56,17,63,54,108,92,99,71,17,87,14,57,82,60,90,84,88,41,14,9,14,25,26,34,41,69,52,45,62,33,61,36,18,52,107,88,110,98,41,84,32,14,57,71,19,27,67,64,51,35,88,22,109,169,83,18,41,182,21,20,23,19,37,42,24,27,15,57,81,78,60,47,57,44,25,64,64,18,169,50,73,59,31,57,63,68,70,38,57,17,85,49,51,57,59,48,48,17,52,62,193,17,14,45,33,32,50,74,32,76,60,82,89,42,50,100,48,38,21,26,39,21,37,70,61,41,56,17,79,37,78,132,21,108,92,99,71,17,48,14,57,82,60,84,32,76,74,77,65,28,53,77,36,53,48,18,24,43,88,53,108,18,14,62,61,42,58,64,19,13,9,5,10,29,89,10,5,91,54,45,56,153,77,70,32,40,43,14,24,36,23,35,59,29,19,13,41,50,29,77,13,18,51,29,36,44,47,19,13,98,38,46,68,10,5,85,69,100,39,97,83,83,56,7,25,39,7,104,34,62,96,111,106,39,137,74,49,54,74,108,23,27,31,24,77,82,9,87,50,70,82,9,55,65,77,9,31,75,113,32,44,74,50,73,50,78,54,77,83,9,92,65,22,5,22,87,35,20,24,50,48,65,9,20,6,42,32,22,100,11,5,126,19,43,87,8,195,125,19,43,46,8,12,38,11,31,15,16,20,16,16,16,23,29,24,28,32,43,22,34,27,28,25,19,6,1,62,3,43,3,46,26,70,59,48,6,1,3,59,3,83,37,110,75,75,63,96,79,28,35,9,5,31,29,59,5,23,45,20,47,11,51,48,81,43,64,9,5,1,3,35,3,59,59,54,38,36,55,36,48,60,59,57,10,32,6,1,3,46,3,74,99,108,131,104,43,39,64,59,57,86,90,6,87,62,50,125,7,83,17,77,30,5,161,98,80,17,74,30,5,48,1,3,54,3,51,48,30,35,32,37,1,3,22,3,50,59,15,39,114,56,8,1,3,30,2,135,3,55,29,25,62,47,33,22,39,34,32,31,13,9,23,5,1,3,55,2,28,78,31,2,77,61,2,23,3,89,40,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { relative, basename, extname, dirname, join } from 'path';\nimport { Module } from 'module';\nimport * as util from 'util';\nimport { fileURLToPath } from 'url';\n\nimport type * as _sourceMapSupport from '@cspotcode/source-map-support';\nimport { BaseError } from 'make-error';\nimport type * as _ts from 'typescript';\n\nimport type { Transpiler, TranspilerFactory } from './transpilers/types';\nimport {\n  cachedLookup,\n  createProjectLocalResolveHelper,\n  hasOwnProperty,\n  normalizeSlashes,\n  once,\n  parse,\n  ProjectLocalResolveHelper,\n  split,\n  versionGteLt,\n  yn,\n} from './util';\nimport { findAndReadConfig, loadCompiler } from './configuration';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport {\n  createModuleTypeClassifier,\n  ModuleTypeClassifier,\n} from './module-type-classifier';\nimport { createResolverFunctions } from './resolver-functions';\nimport type { createEsmHooks as createEsmHooksFn } from './esm';\nimport {\n  installCommonjsResolveHooksIfNecessary,\n  ModuleConstructorWithInternals,\n} from './cjs-resolve-hooks';\nimport { classifyModule } from './node-module-type-classifier';\nimport type * as _nodeInternalModulesEsmResolve from '../dist-raw/node-internal-modules-esm-resolve';\nimport type * as _nodeInternalModulesEsmGetFormat from '../dist-raw/node-internal-modules-esm-get_format';\nimport type * as _nodeInternalModulesCjsLoader from '../dist-raw/node-internal-modules-cjs-loader';\nimport { Extensions, getExtensions } from './file-extensions';\nimport { createTsTranspileModule } from './ts-transpile-module';\n\nexport { TSCommon };\nexport {\n  createRepl,\n  CreateReplOptions,\n  ReplService,\n  EvalAwarePartialHost,\n} from './repl';\nexport type {\n  TranspilerModule,\n  TranspilerFactory,\n  CreateTranspilerOptions,\n  TranspileOutput,\n  TranspileOptions,\n  Transpiler,\n} from './transpilers/types';\nexport type {\n  NodeLoaderHooksAPI1,\n  NodeLoaderHooksAPI2,\n  NodeLoaderHooksFormat,\n} from './esm';\n\n/**\n * Does this version of node obey the package.json \"type\" field\n * and throw ERR_REQUIRE_ESM when attempting to require() an ESM modules.\n */\nconst engineSupportsPackageTypeField =\n  parseInt(process.versions.node.split('.')[0], 10) >= 12;\n\n/**\n * Assert that script can be loaded as CommonJS when we attempt to require it.\n * If it should be loaded as ESM, throw ERR_REQUIRE_ESM like node does.\n *\n * Loaded conditionally so we don't need to support older node versions\n */\nlet assertScriptCanLoadAsCJS: (\n  service: Service,\n  module: NodeJS.Module,\n  filename: string\n) => void = engineSupportsPackageTypeField\n  ? (\n      require('../dist-raw/node-internal-modules-cjs-loader') as typeof _nodeInternalModulesCjsLoader\n    ).assertScriptCanLoadAsCJSImpl\n  : () => {\n      /* noop */\n    };\n\n/**\n * Registered `ts-node` instance information.\n */\nexport const REGISTER_INSTANCE = Symbol.for('ts-node.register.instance');\n\n/**\n * Expose `REGISTER_INSTANCE` information on node.js `process`.\n */\ndeclare global {\n  namespace NodeJS {\n    interface Process {\n      [REGISTER_INSTANCE]?: Service;\n    }\n  }\n}\n\n/** @internal */\nexport const env = process.env as ProcessEnv;\n/**\n * Declare all env vars, to aid discoverability.\n * If an env var affects ts-node's behavior, it should not be buried somewhere in our codebase.\n * @internal\n */\nexport interface ProcessEnv {\n  TS_NODE_DEBUG?: string;\n  TS_NODE_CWD?: string;\n  /** @deprecated */\n  TS_NODE_DIR?: string;\n  TS_NODE_EMIT?: string;\n  TS_NODE_SCOPE?: string;\n  TS_NODE_SCOPE_DIR?: string;\n  TS_NODE_FILES?: string;\n  TS_NODE_PRETTY?: string;\n  TS_NODE_COMPILER?: string;\n  TS_NODE_COMPILER_OPTIONS?: string;\n  TS_NODE_IGNORE?: string;\n  TS_NODE_PROJECT?: string;\n  TS_NODE_SKIP_PROJECT?: string;\n  TS_NODE_SKIP_IGNORE?: string;\n  TS_NODE_PREFER_TS_EXTS?: string;\n  TS_NODE_IGNORE_DIAGNOSTICS?: string;\n  TS_NODE_TRANSPILE_ONLY?: string;\n  TS_NODE_TYPE_CHECK?: string;\n  TS_NODE_COMPILER_HOST?: string;\n  TS_NODE_LOG_ERROR?: string;\n  TS_NODE_HISTORY?: string;\n  TS_NODE_EXPERIMENTAL_REPL_AWAIT?: string;\n\n  NODE_NO_READLINE?: string;\n}\n\n/**\n * @internal\n */\nexport const INSPECT_CUSTOM = util.inspect.custom || 'inspect';\n\n/**\n * Debugging `ts-node`.\n */\nconst shouldDebug = yn(env.TS_NODE_DEBUG);\n/** @internal */\nexport const debug = shouldDebug\n  ? (...args: any) =>\n      console.log(`[ts-node ${new Date().toISOString()}]`, ...args)\n  : () => undefined;\nconst debugFn = shouldDebug\n  ? <T, U>(key: string, fn: (arg: T) => U) => {\n      let i = 0;\n      return (x: T) => {\n        debug(key, x, ++i);\n        return fn(x);\n      };\n    }\n  : <T, U>(_: string, fn: (arg: T) => U) => fn;\n\n/**\n * Export the current version.\n */\nexport const VERSION = require('../package.json').version;\n\n/**\n * Options for creating a new TypeScript compiler instance.\n\n * @category Basic\n */\nexport interface CreateOptions {\n  /**\n   * Behave as if invoked within this working directory.  Roughly equivalent to `cd $dir && ts-node ...`\n   *\n   * @default process.cwd()\n   */\n  cwd?: string;\n  /**\n   * Legacy alias for `cwd`\n   *\n   * @deprecated use `projectSearchDir` or `cwd`\n   */\n  dir?: string;\n  /**\n   * Emit output files into `.ts-node` directory.\n   *\n   * @default false\n   */\n  emit?: boolean;\n  /**\n   * Scope compiler to files within `scopeDir`.\n   *\n   * @default false\n   */\n  scope?: boolean;\n  /**\n   * @default First of: `tsconfig.json` \"rootDir\" if specified, directory containing `tsconfig.json`, or cwd if no `tsconfig.json` is loaded.\n   */\n  scopeDir?: string;\n  /**\n   * Use pretty diagnostic formatter.\n   *\n   * @default false\n   */\n  pretty?: boolean;\n  /**\n   * Use TypeScript's faster `transpileModule`.\n   *\n   * @default false\n   */\n  transpileOnly?: boolean;\n  /**\n   * **DEPRECATED** Specify type-check is enabled (e.g. `transpileOnly == false`).\n   *\n   * @default true\n   */\n  typeCheck?: boolean;\n  /**\n   * Use TypeScript's compiler host API instead of the language service API.\n   *\n   * @default false\n   */\n  compilerHost?: boolean;\n  /**\n   * Logs TypeScript errors to stderr instead of throwing exceptions.\n   *\n   * @default false\n   */\n  logError?: boolean;\n  /**\n   * Load \"files\" and \"include\" from `tsconfig.json` on startup.\n   *\n   * Default is to override `tsconfig.json` \"files\" and \"include\" to only include the entrypoint script.\n   *\n   * @default false\n   */\n  files?: boolean;\n  /**\n   * Specify a custom TypeScript compiler.\n   *\n   * @default \"typescript\"\n   */\n  compiler?: string;\n  /**\n   * Specify a custom transpiler for use with transpileOnly\n   */\n  transpiler?: string | [string, object];\n  /**\n   * Transpile with swc instead of the TypeScript compiler, and skip typechecking.\n   *\n   * Equivalent to setting both `transpileOnly: true` and `transpiler: 'ts-node/transpilers/swc'`\n   *\n   * For complete instructions: https://typestrong.org/ts-node/docs/transpilers\n   */\n  swc?: boolean;\n  /**\n   * Paths which should not be compiled.\n   *\n   * Each string in the array is converted to a regular expression via `new RegExp()` and tested against source paths prior to compilation.\n   *\n   * Source paths are normalized to posix-style separators, relative to the directory containing `tsconfig.json` or to cwd if no `tsconfig.json` is loaded.\n   *\n   * Default is to ignore all node_modules subdirectories.\n   *\n   * @default [\"(?:^|/)node_modules/\"]\n   */\n  ignore?: string[];\n  /**\n   * Path to TypeScript config file or directory containing a `tsconfig.json`.\n   * Similar to the `tsc --project` flag: https://www.typescriptlang.org/docs/handbook/compiler-options.html\n   */\n  project?: string;\n  /**\n   * Search for TypeScript config file (`tsconfig.json`) in this or parent directories.\n   */\n  projectSearchDir?: string;\n  /**\n   * Skip project config resolution and loading.\n   *\n   * @default false\n   */\n  skipProject?: boolean;\n  /**\n   * Skip ignore check, so that compilation will be attempted for all files with matching extensions.\n   *\n   * @default false\n   */\n  skipIgnore?: boolean;\n  /**\n   * JSON object to merge with TypeScript `compilerOptions`.\n   *\n   * @allOf [{\"$ref\": \"https://schemastore.azurewebsites.net/schemas/json/tsconfig.json#definitions/compilerOptionsDefinition/properties/compilerOptions\"}]\n   */\n  compilerOptions?: object;\n  /**\n   * Ignore TypeScript warnings by diagnostic code.\n   */\n  ignoreDiagnostics?: Array<number | string>;\n  /**\n   * Modules to require, like node's `--require` flag.\n   *\n   * If specified in `tsconfig.json`, the modules will be resolved relative to the `tsconfig.json` file.\n   *\n   * If specified programmatically, each input string should be pre-resolved to an absolute path for\n   * best results.\n   */\n  require?: Array<string>;\n  readFile?: (path: string) => string | undefined;\n  fileExists?: (path: string) => boolean;\n  transformers?:\n    | _ts.CustomTransformers\n    | ((p: _ts.Program) => _ts.CustomTransformers);\n  /**\n   * Allows the usage of top level await in REPL.\n   *\n   * Uses node's implementation which accomplishes this with an AST syntax transformation.\n   *\n   * Enabled by default when tsconfig target is es2018 or above. Set to false to disable.\n   *\n   * **Note**: setting to `true` when tsconfig target is too low will throw an Error.  Leave as `undefined`\n   * to get default, automatic behavior.\n   */\n  experimentalReplAwait?: boolean;\n  /**\n   * Override certain paths to be compiled and executed as CommonJS or ECMAScript modules.\n   * When overridden, the tsconfig \"module\" and package.json \"type\" fields are overridden, and\n   * the file extension is ignored.\n   * This is useful if you cannot use .mts, .cts, .mjs, or .cjs file extensions;\n   * it achieves the same effect.\n   *\n   * Each key is a glob pattern following the same rules as tsconfig's \"include\" array.\n   * When multiple patterns match the same file, the last pattern takes precedence.\n   *\n   * `cjs` overrides matches files to compile and execute as CommonJS.\n   * `esm` overrides matches files to compile and execute as native ECMAScript modules.\n   * `package` overrides either of the above to default behavior, which obeys package.json \"type\" and\n   * tsconfig.json \"module\" options.\n   */\n  moduleTypes?: ModuleTypes;\n  /**\n   * @internal\n   * Set by our configuration loader whenever a config file contains options that\n   * are relative to the config file they came from, *and* when other logic needs\n   * to know this.  Some options can be eagerly resolved to absolute paths by\n   * the configuration loader, so it is *not* necessary for their source to be set here.\n   */\n  optionBasePaths?: OptionBasePaths;\n  /**\n   * A function to collect trace messages from the TypeScript compiler, for example when `traceResolution` is enabled.\n   *\n   * @default console.log\n   */\n  tsTrace?: (str: string) => void;\n  /**\n   * Enable native ESM support.\n   *\n   * For details, see https://typestrong.org/ts-node/docs/imports#native-ecmascript-modules\n   */\n  esm?: boolean;\n  /**\n   * Re-order file extensions so that TypeScript imports are preferred.\n   *\n   * For example, when both `index.js` and `index.ts` exist, enabling this option causes `require('./index')` to resolve to `index.ts` instead of `index.js`\n   *\n   * @default false\n   */\n  preferTsExts?: boolean;\n  /**\n   * Like node's `--experimental-specifier-resolution`, , but can also be set in your `tsconfig.json` for convenience.\n   *\n   * For details, see https://nodejs.org/dist/latest-v18.x/docs/api/esm.html#customizing-esm-specifier-resolution-algorithm\n   */\n  experimentalSpecifierResolution?: 'node' | 'explicit';\n  /**\n   * Allow using voluntary `.ts` file extension in import specifiers.\n   *\n   * Typically, in ESM projects, import specifiers must have an emit extension, `.js`, `.cjs`, or `.mjs`,\n   * and we automatically map to the corresponding `.ts`, `.cts`, or `.mts` source file.  This is the\n   * recommended approach.\n   *\n   * However, if you really want to use `.ts` in import specifiers, and are aware that this may\n   * break tooling, you can enable this flag.\n   */\n  experimentalTsImportSpecifiers?: boolean;\n}\n\nexport type ModuleTypes = Record<string, ModuleTypeOverride>;\nexport type ModuleTypeOverride = 'cjs' | 'esm' | 'package';\n\n/** @internal */\nexport interface OptionBasePaths {\n  moduleTypes?: string;\n  transpiler?: string;\n  compiler?: string;\n  swc?: string;\n}\n\n/**\n * Options for registering a TypeScript compiler instance globally.\n\n * @category Basic\n */\nexport interface RegisterOptions extends CreateOptions {\n  /**\n   * Enable experimental features that re-map imports and require calls to support:\n   * `baseUrl`, `paths`, `rootDirs`, `.js` to `.ts` file extension mappings,\n   * `outDir` to `rootDir` mappings for composite projects and monorepos.\n   *\n   * For details, see https://github.com/TypeStrong/ts-node/issues/1514\n   */\n  experimentalResolver?: boolean;\n}\n\nexport type ExperimentalSpecifierResolution = 'node' | 'explicit';\n\n/**\n * Must be an interface to support `typescript-json-schema`.\n */\nexport interface TsConfigOptions\n  extends Omit<\n    RegisterOptions,\n    | 'transformers'\n    | 'readFile'\n    | 'fileExists'\n    | 'skipProject'\n    | 'project'\n    | 'dir'\n    | 'cwd'\n    | 'projectSearchDir'\n    | 'optionBasePaths'\n    | 'tsTrace'\n  > {}\n\n/**\n * Information retrieved from type info check.\n */\nexport interface TypeInfo {\n  name: string;\n  comment: string;\n}\n\n/**\n * Default register options, including values specified via environment\n * variables.\n * @internal\n */\nexport const DEFAULTS: RegisterOptions = {\n  cwd: env.TS_NODE_CWD ?? env.TS_NODE_DIR,\n  emit: yn(env.TS_NODE_EMIT),\n  scope: yn(env.TS_NODE_SCOPE),\n  scopeDir: env.TS_NODE_SCOPE_DIR,\n  files: yn(env.TS_NODE_FILES),\n  pretty: yn(env.TS_NODE_PRETTY),\n  compiler: env.TS_NODE_COMPILER,\n  compilerOptions: parse(env.TS_NODE_COMPILER_OPTIONS),\n  ignore: split(env.TS_NODE_IGNORE),\n  project: env.TS_NODE_PROJECT,\n  skipProject: yn(env.TS_NODE_SKIP_PROJECT),\n  skipIgnore: yn(env.TS_NODE_SKIP_IGNORE),\n  preferTsExts: yn(env.TS_NODE_PREFER_TS_EXTS),\n  ignoreDiagnostics: split(env.TS_NODE_IGNORE_DIAGNOSTICS),\n  transpileOnly: yn(env.TS_NODE_TRANSPILE_ONLY),\n  typeCheck: yn(env.TS_NODE_TYPE_CHECK),\n  compilerHost: yn(env.TS_NODE_COMPILER_HOST),\n  logError: yn(env.TS_NODE_LOG_ERROR),\n  experimentalReplAwait: yn(env.TS_NODE_EXPERIMENTAL_REPL_AWAIT) ?? undefined,\n  tsTrace: console.log.bind(console),\n};\n\n/**\n * TypeScript diagnostics error.\n */\nexport class TSError extends BaseError {\n  name = 'TSError';\n  diagnosticText!: string;\n  diagnostics!: ReadonlyArray<_ts.Diagnostic>;\n\n  constructor(\n    diagnosticText: string,\n    public diagnosticCodes: number[],\n    diagnostics: ReadonlyArray<_ts.Diagnostic> = []\n  ) {\n    super(`⨯ Unable to compile TypeScript:\\n${diagnosticText}`);\n    Object.defineProperty(this, 'diagnosticText', {\n      configurable: true,\n      writable: true,\n      value: diagnosticText,\n    });\n    Object.defineProperty(this, 'diagnostics', {\n      configurable: true,\n      writable: true,\n      value: diagnostics,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  [INSPECT_CUSTOM]() {\n    return this.diagnosticText;\n  }\n}\n\nconst TS_NODE_SERVICE_BRAND = Symbol('TS_NODE_SERVICE_BRAND');\n\n/**\n * Primary ts-node service, which wraps the TypeScript API and can compile TypeScript to JavaScript\n */\nexport interface Service {\n  /** @internal */\n  [TS_NODE_SERVICE_BRAND]: true;\n  ts: TSCommon;\n  /** @internal */\n  compilerPath: string;\n  config: _ts.ParsedCommandLine;\n  options: RegisterOptions;\n  enabled(enabled?: boolean): boolean;\n  ignored(fileName: string): boolean;\n  compile(code: string, fileName: string, lineOffset?: number): string;\n  getTypeInfo(code: string, fileName: string, position: number): TypeInfo;\n  /** @internal */\n  configFilePath: string | undefined;\n  /** @internal */\n  moduleTypeClassifier: ModuleTypeClassifier;\n  /** @internal */\n  readonly shouldReplAwait: boolean;\n  /** @internal */\n  addDiagnosticFilter(filter: DiagnosticFilter): void;\n  /** @internal */\n  installSourceMapSupport(): void;\n  /** @internal */\n  enableExperimentalEsmLoaderInterop(): void;\n  /** @internal */\n  transpileOnly: boolean;\n  /** @internal */\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  /** @internal */\n  getNodeEsmResolver: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-esm-resolve').createResolve\n  >;\n  /** @internal */\n  getNodeEsmGetFormat: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-esm-get_format').createGetFormat\n  >;\n  /** @internal */\n  getNodeCjsLoader: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-cjs-loader').createCjsLoader\n  >;\n  /** @internal */\n  extensions: Extensions;\n}\n\n/**\n * Re-export of `Service` interface for backwards-compatibility\n * @deprecated use `Service` instead\n * @see {Service}\n */\nexport type Register = Service;\n\n/** @internal */\nexport interface DiagnosticFilter {\n  /** if true, filter applies to all files */\n  appliesToAllFiles: boolean;\n  /** Filter applies onto to these filenames.  Only used if appliesToAllFiles is false */\n  filenamesAbsolute: string[];\n  /** these diagnostic codes are ignored */\n  diagnosticsIgnored: number[];\n}\n\n/**\n * Create a new TypeScript compiler instance and register it onto node.js\n *\n * @category Basic\n */\nexport function register(opts?: RegisterOptions): Service;\n/**\n * Register TypeScript compiler instance onto node.js\n\n * @category Basic\n */\nexport function register(service: Service): Service;\nexport function register(\n  serviceOrOpts: Service | RegisterOptions | undefined\n): Service {\n  // Is this a Service or a RegisterOptions?\n  let service = serviceOrOpts as Service;\n  if (!(serviceOrOpts as Service)?.[TS_NODE_SERVICE_BRAND]) {\n    // Not a service; is options\n    service = create((serviceOrOpts ?? {}) as RegisterOptions);\n  }\n\n  const originalJsHandler = require.extensions['.js'];\n\n  // Expose registered instance globally.\n  process[REGISTER_INSTANCE] = service;\n\n  // Register the extensions.\n  registerExtensions(\n    service.options.preferTsExts,\n    service.extensions.compiled,\n    service,\n    originalJsHandler\n  );\n\n  installCommonjsResolveHooksIfNecessary(service);\n\n  // Require specified modules before start-up.\n  (Module as ModuleConstructorWithInternals)._preloadModules(\n    service.options.require\n  );\n\n  return service;\n}\n\n/**\n * Create TypeScript compiler instance.\n *\n * @category Basic\n */\nexport function create(rawOptions: CreateOptions = {}): Service {\n  const foundConfigResult = findAndReadConfig(rawOptions);\n  return createFromPreloadedConfig(foundConfigResult);\n}\n\n/** @internal */\nexport function createFromPreloadedConfig(\n  foundConfigResult: ReturnType<typeof findAndReadConfig>\n): Service {\n  const {\n    configFilePath,\n    cwd,\n    options,\n    config,\n    compiler,\n    projectLocalResolveDir,\n    optionBasePaths,\n  } = foundConfigResult;\n\n  const projectLocalResolveHelper = createProjectLocalResolveHelper(\n    projectLocalResolveDir\n  );\n\n  const ts = loadCompiler(compiler);\n\n  // Experimental REPL await is not compatible targets lower than ES2018\n  const targetSupportsTla = config.options.target! >= ts.ScriptTarget.ES2018;\n  if (options.experimentalReplAwait === true && !targetSupportsTla) {\n    throw new Error(\n      'Experimental REPL await is not compatible with targets lower than ES2018'\n    );\n  }\n  // Top-level await was added in TS 3.8\n  const tsVersionSupportsTla = versionGteLt(ts.version, '3.8.0');\n  if (options.experimentalReplAwait === true && !tsVersionSupportsTla) {\n    throw new Error(\n      'Experimental REPL await is not compatible with TypeScript versions older than 3.8'\n    );\n  }\n\n  const shouldReplAwait =\n    options.experimentalReplAwait !== false &&\n    tsVersionSupportsTla &&\n    targetSupportsTla;\n\n  // swc implies two other options\n  // typeCheck option was implemented specifically to allow overriding tsconfig transpileOnly from the command-line\n  // So we should allow using typeCheck to override swc\n  if (options.swc && !options.typeCheck) {\n    if (options.transpileOnly === false) {\n      throw new Error(\n        \"Cannot enable 'swc' option with 'transpileOnly: false'.  'swc' implies 'transpileOnly'.\"\n      );\n    }\n    if (options.transpiler) {\n      throw new Error(\n        \"Cannot specify both 'swc' and 'transpiler' options.  'swc' uses the built-in swc transpiler.\"\n      );\n    }\n  }\n\n  const readFile = options.readFile || ts.sys.readFile;\n  const fileExists = options.fileExists || ts.sys.fileExists;\n  // typeCheck can override transpileOnly, useful for CLI flag to override config file\n  const transpileOnly =\n    (options.transpileOnly === true || options.swc === true) &&\n    options.typeCheck !== true;\n  let transpiler: RegisterOptions['transpiler'] | undefined = undefined;\n  let transpilerBasePath: string | undefined = undefined;\n  if (options.transpiler) {\n    transpiler = options.transpiler;\n    transpilerBasePath = optionBasePaths.transpiler;\n  } else if (options.swc) {\n    transpiler = require.resolve('./transpilers/swc.js');\n    transpilerBasePath = optionBasePaths.swc;\n  }\n  const transformers = options.transformers || undefined;\n  const diagnosticFilters: Array<DiagnosticFilter> = [\n    {\n      appliesToAllFiles: true,\n      filenamesAbsolute: [],\n      diagnosticsIgnored: [\n        6059, // \"'rootDir' is expected to contain all source files.\"\n        18002, // \"The 'files' list in config file is empty.\"\n        18003, // \"No inputs were found in config file.\"\n        ...(options.experimentalTsImportSpecifiers\n          ? [\n              2691, // \"An import path cannot end with a '.ts' extension. Consider importing '<specifier without ext>' instead.\"\n            ]\n          : []),\n        ...(options.ignoreDiagnostics || []),\n      ].map(Number),\n    },\n  ];\n\n  const configDiagnosticList = filterDiagnostics(\n    config.errors,\n    diagnosticFilters\n  );\n  const outputCache = new Map<\n    string,\n    {\n      content: string;\n    }\n  >();\n\n  const configFileDirname = configFilePath ? dirname(configFilePath) : null;\n  const scopeDir =\n    options.scopeDir ?? config.options.rootDir ?? configFileDirname ?? cwd;\n  const ignoreBaseDir = configFileDirname ?? cwd;\n  const isScoped = options.scope\n    ? (fileName: string) => relative(scopeDir, fileName).charAt(0) !== '.'\n    : () => true;\n  const shouldIgnore = createIgnore(\n    ignoreBaseDir,\n    options.skipIgnore\n      ? []\n      : (options.ignore || ['(?:^|/)node_modules/']).map(\n          (str) => new RegExp(str)\n        )\n  );\n\n  const diagnosticHost: _ts.FormatDiagnosticsHost = {\n    getNewLine: () => ts.sys.newLine,\n    getCurrentDirectory: () => cwd,\n    // TODO switch to getCanonicalFileName we already create later in scope\n    getCanonicalFileName: ts.sys.useCaseSensitiveFileNames\n      ? (x) => x\n      : (x) => x.toLowerCase(),\n  };\n\n  if (options.transpileOnly && typeof transformers === 'function') {\n    throw new TypeError(\n      'Transformers function is unavailable in \"--transpile-only\"'\n    );\n  }\n  let createTranspiler = initializeTranspilerFactory();\n  function initializeTranspilerFactory() {\n    if (transpiler) {\n      if (!transpileOnly)\n        throw new Error(\n          'Custom transpiler can only be used when transpileOnly is enabled.'\n        );\n      const transpilerName =\n        typeof transpiler === 'string' ? transpiler : transpiler[0];\n      const transpilerOptions =\n        typeof transpiler === 'string' ? {} : transpiler[1] ?? {};\n      const transpilerConfigLocalResolveHelper = transpilerBasePath\n        ? createProjectLocalResolveHelper(transpilerBasePath)\n        : projectLocalResolveHelper;\n      const transpilerPath = transpilerConfigLocalResolveHelper(\n        transpilerName,\n        true\n      );\n      const transpilerFactory = require(transpilerPath)\n        .create as TranspilerFactory;\n      return createTranspiler;\n\n      function createTranspiler(\n        compilerOptions: TSCommon.CompilerOptions,\n        nodeModuleEmitKind?: NodeModuleEmitKind\n      ) {\n        return transpilerFactory?.({\n          service: {\n            options,\n            config: {\n              ...config,\n              options: compilerOptions,\n            },\n            projectLocalResolveHelper,\n          },\n          transpilerConfigLocalResolveHelper,\n          nodeModuleEmitKind,\n          ...transpilerOptions,\n        });\n      }\n    }\n  }\n\n  /**\n   * True if require() hooks should interop with experimental ESM loader.\n   * Enabled explicitly via a flag since it is a breaking change.\n   */\n  let experimentalEsmLoader = false;\n  function enableExperimentalEsmLoaderInterop() {\n    experimentalEsmLoader = true;\n  }\n\n  // Install source map support and read from memory cache.\n  installSourceMapSupport();\n  function installSourceMapSupport() {\n    const sourceMapSupport =\n      require('@cspotcode/source-map-support') as typeof _sourceMapSupport;\n    sourceMapSupport.install({\n      environment: 'node',\n      retrieveFile(pathOrUrl: string) {\n        let path = pathOrUrl;\n        // If it's a file URL, convert to local path\n        // Note: fileURLToPath does not exist on early node v10\n        // I could not find a way to handle non-URLs except to swallow an error\n        if (experimentalEsmLoader && path.startsWith('file://')) {\n          try {\n            path = fileURLToPath(path);\n          } catch (e) {\n            /* swallow error */\n          }\n        }\n        path = normalizeSlashes(path);\n        return outputCache.get(path)?.content || '';\n      },\n      redirectConflictingLibrary: true,\n      onConflictingLibraryRedirect(\n        request,\n        parent,\n        isMain,\n        options,\n        redirectedRequest\n      ) {\n        debug(\n          `Redirected an attempt to require source-map-support to instead receive @cspotcode/source-map-support.  \"${\n            (parent as NodeJS.Module).filename\n          }\" attempted to require or resolve \"${request}\" and was redirected to \"${redirectedRequest}\".`\n        );\n      },\n    });\n  }\n\n  const shouldHavePrettyErrors =\n    options.pretty === undefined ? process.stdout.isTTY : options.pretty;\n\n  const formatDiagnostics = shouldHavePrettyErrors\n    ? ts.formatDiagnosticsWithColorAndContext || ts.formatDiagnostics\n    : ts.formatDiagnostics;\n\n  function createTSError(diagnostics: ReadonlyArray<_ts.Diagnostic>) {\n    const diagnosticText = formatDiagnostics(diagnostics, diagnosticHost);\n    const diagnosticCodes = diagnostics.map((x) => x.code);\n    return new TSError(diagnosticText, diagnosticCodes, diagnostics);\n  }\n\n  function reportTSError(configDiagnosticList: _ts.Diagnostic[]) {\n    const error = createTSError(configDiagnosticList);\n    if (options.logError) {\n      // Print error in red color and continue execution.\n      console.error('\\x1b[31m%s\\x1b[0m', error);\n    } else {\n      // Throw error and exit the script.\n      throw error;\n    }\n  }\n\n  // Render the configuration errors.\n  if (configDiagnosticList.length) reportTSError(configDiagnosticList);\n\n  const jsxEmitPreserve = config.options.jsx === ts.JsxEmit.Preserve;\n  /**\n   * Get the extension for a transpiled file.\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  function getEmitExtension(path: string) {\n    const lastDotIndex = path.lastIndexOf('.');\n    if (lastDotIndex >= 0) {\n      const ext = path.slice(lastDotIndex);\n      switch (ext) {\n        case '.js':\n        case '.ts':\n          return '.js';\n        case '.jsx':\n        case '.tsx':\n          return jsxEmitPreserve ? '.jsx' : '.js';\n        case '.mjs':\n        case '.mts':\n          return '.mjs';\n        case '.cjs':\n        case '.cts':\n          return '.cjs';\n      }\n    }\n    return '.js';\n  }\n\n  type GetOutputFunction = (code: string, fileName: string) => SourceOutput;\n  /**\n   * Get output from TS compiler w/typechecking.  `undefined` in `transpileOnly`\n   * mode.\n   */\n  let getOutput: GetOutputFunction | undefined;\n  let getTypeInfo: (\n    _code: string,\n    _fileName: string,\n    _position: number\n  ) => TypeInfo;\n\n  const getCanonicalFileName = (\n    ts as unknown as TSInternal\n  ).createGetCanonicalFileName(ts.sys.useCaseSensitiveFileNames);\n\n  const moduleTypeClassifier = createModuleTypeClassifier({\n    basePath: options.optionBasePaths?.moduleTypes,\n    patterns: options.moduleTypes,\n  });\n\n  const extensions = getExtensions(config, options, ts.version);\n\n  // Use full language services when the fast option is disabled.\n  if (!transpileOnly) {\n    const fileContents = new Map<string, string>();\n    const rootFileNames = new Set(config.fileNames);\n    const cachedReadFile = cachedLookup(debugFn('readFile', readFile));\n\n    // Use language services by default\n    if (!options.compilerHost) {\n      let projectVersion = 1;\n      const fileVersions = new Map(\n        Array.from(rootFileNames).map((fileName) => [fileName, 0])\n      );\n\n      const getCustomTransformers = () => {\n        if (typeof transformers === 'function') {\n          const program = service.getProgram();\n          return program ? transformers(program) : undefined;\n        }\n\n        return transformers;\n      };\n\n      // Create the compiler host for type checking.\n      const serviceHost: _ts.LanguageServiceHost &\n        Required<Pick<_ts.LanguageServiceHost, 'fileExists' | 'readFile'>> = {\n        getProjectVersion: () => String(projectVersion),\n        getScriptFileNames: () => Array.from(rootFileNames),\n        getScriptVersion: (fileName: string) => {\n          const version = fileVersions.get(fileName);\n          return version ? version.toString() : '';\n        },\n        getScriptSnapshot(fileName: string) {\n          // TODO ordering of this with getScriptVersion?  Should they sync up?\n          let contents = fileContents.get(fileName);\n\n          // Read contents into TypeScript memory cache.\n          if (contents === undefined) {\n            contents = cachedReadFile(fileName);\n            if (contents === undefined) return;\n\n            fileVersions.set(fileName, 1);\n            fileContents.set(fileName, contents);\n            projectVersion++;\n          }\n\n          return ts.ScriptSnapshot.fromString(contents);\n        },\n        readFile: cachedReadFile,\n        readDirectory: ts.sys.readDirectory,\n        getDirectories: cachedLookup(\n          debugFn('getDirectories', ts.sys.getDirectories)\n        ),\n        fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n        directoryExists: cachedLookup(\n          debugFn('directoryExists', ts.sys.directoryExists)\n        ),\n        realpath: ts.sys.realpath\n          ? cachedLookup(debugFn('realpath', ts.sys.realpath))\n          : undefined,\n        getNewLine: () => ts.sys.newLine,\n        useCaseSensitiveFileNames: () => ts.sys.useCaseSensitiveFileNames,\n        getCurrentDirectory: () => cwd,\n        getCompilationSettings: () => config.options,\n        getDefaultLibFileName: () => ts.getDefaultLibFilePath(config.options),\n        getCustomTransformers: getCustomTransformers,\n        trace: options.tsTrace,\n      };\n      const {\n        resolveModuleNames,\n        getResolvedModuleWithFailedLookupLocationsFromCache,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host: serviceHost,\n        getCanonicalFileName,\n        ts,\n        cwd,\n        config,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      serviceHost.resolveModuleNames = resolveModuleNames;\n      serviceHost.getResolvedModuleWithFailedLookupLocationsFromCache =\n        getResolvedModuleWithFailedLookupLocationsFromCache;\n      serviceHost.resolveTypeReferenceDirectives =\n        resolveTypeReferenceDirectives;\n\n      const registry = ts.createDocumentRegistry(\n        ts.sys.useCaseSensitiveFileNames,\n        cwd\n      );\n      const service = ts.createLanguageService(serviceHost, registry);\n\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        // Add to `rootFiles` as necessary, either to make TS include a file it has not seen,\n        // or to trigger a re-classification of files from external to internal.\n        if (\n          !rootFileNames.has(fileName) &&\n          !isFileKnownToBeInternal(fileName)\n        ) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          // Increment project version for every change to rootFileNames.\n          projectVersion++;\n        }\n\n        const previousVersion = fileVersions.get(fileName) || 0;\n        const previousContents = fileContents.get(fileName);\n        // Avoid incrementing cache when nothing has changed.\n        if (contents !== previousContents) {\n          fileVersions.set(fileName, previousVersion + 1);\n          fileContents.set(fileName, contents);\n          // Increment project version for every file change.\n          projectVersion++;\n        }\n      };\n\n      let previousProgram: _ts.Program | undefined = undefined;\n\n      getOutput = (code: string, fileName: string) => {\n        updateMemoryCache(code, fileName);\n\n        const programBefore = service.getProgram();\n        if (programBefore !== previousProgram) {\n          debug(\n            `compiler rebuilt Program instance when getting output for ${fileName}`\n          );\n        }\n\n        const output = service.getEmitOutput(fileName);\n\n        // Get the relevant diagnostics - this is 3x faster than `getPreEmitDiagnostics`.\n        const diagnostics = service\n          .getSemanticDiagnostics(fileName)\n          .concat(service.getSyntacticDiagnostics(fileName));\n\n        const programAfter = service.getProgram();\n\n        debug(\n          'invariant: Is service.getProject() identical before and after getting emit output and diagnostics? (should always be true) ',\n          programBefore === programAfter\n        );\n\n        previousProgram = programAfter;\n\n        const diagnosticList = filterDiagnostics(\n          diagnostics,\n          diagnosticFilters\n        );\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        if (output.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring `.d.ts` files.\n        if (output.outputFiles.length === 0) {\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [output.outputFiles[1].text, output.outputFiles[0].text, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const info = service.getQuickInfoAtPosition(\n          normalizedFileName,\n          position\n        );\n        const name = ts.displayPartsToString(info ? info.displayParts : []);\n        const comment = ts.displayPartsToString(info ? info.documentation : []);\n\n        return { name, comment };\n      };\n    } else {\n      const sys: _ts.System & _ts.FormatDiagnosticsHost = {\n        ...ts.sys,\n        ...diagnosticHost,\n        readFile: (fileName: string) => {\n          const cacheContents = fileContents.get(fileName);\n          if (cacheContents !== undefined) return cacheContents;\n          const contents = cachedReadFile(fileName);\n          if (contents) fileContents.set(fileName, contents);\n          return contents;\n        },\n        readDirectory: ts.sys.readDirectory,\n        getDirectories: cachedLookup(\n          debugFn('getDirectories', ts.sys.getDirectories)\n        ),\n        fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n        directoryExists: cachedLookup(\n          debugFn('directoryExists', ts.sys.directoryExists)\n        ),\n        resolvePath: cachedLookup(debugFn('resolvePath', ts.sys.resolvePath)),\n        realpath: ts.sys.realpath\n          ? cachedLookup(debugFn('realpath', ts.sys.realpath))\n          : undefined,\n      };\n\n      const host: _ts.CompilerHost = ts.createIncrementalCompilerHost\n        ? ts.createIncrementalCompilerHost(config.options, sys)\n        : {\n            ...sys,\n            getSourceFile: (fileName, languageVersion) => {\n              const contents = sys.readFile(fileName);\n              if (contents === undefined) return;\n              return ts.createSourceFile(fileName, contents, languageVersion);\n            },\n            getDefaultLibLocation: () => normalizeSlashes(dirname(compiler)),\n            getDefaultLibFileName: () =>\n              normalizeSlashes(\n                join(\n                  dirname(compiler),\n                  ts.getDefaultLibFileName(config.options)\n                )\n              ),\n            useCaseSensitiveFileNames: () => sys.useCaseSensitiveFileNames,\n          };\n      host.trace = options.tsTrace;\n      const {\n        resolveModuleNames,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host,\n        cwd,\n        config,\n        ts,\n        getCanonicalFileName,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      host.resolveModuleNames = resolveModuleNames;\n      host.resolveTypeReferenceDirectives = resolveTypeReferenceDirectives;\n\n      // Fallback for older TypeScript releases without incremental API.\n      let builderProgram = ts.createIncrementalProgram\n        ? ts.createIncrementalProgram({\n            rootNames: Array.from(rootFileNames),\n            options: config.options,\n            host,\n            configFileParsingDiagnostics: config.errors,\n            projectReferences: config.projectReferences,\n          })\n        : ts.createEmitAndSemanticDiagnosticsBuilderProgram(\n            Array.from(rootFileNames),\n            config.options,\n            host,\n            undefined,\n            config.errors,\n            config.projectReferences\n          );\n\n      // Read and cache custom transformers.\n      const customTransformers =\n        typeof transformers === 'function'\n          ? transformers(builderProgram.getProgram())\n          : transformers;\n\n      // Set the file contents into cache manually.\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        const previousContents = fileContents.get(fileName);\n        const contentsChanged = previousContents !== contents;\n        if (contentsChanged) {\n          fileContents.set(fileName, contents);\n        }\n\n        // Add to `rootFiles` when discovered by compiler for the first time.\n        let addedToRootFileNames = false;\n        if (\n          !rootFileNames.has(fileName) &&\n          !isFileKnownToBeInternal(fileName)\n        ) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          addedToRootFileNames = true;\n        }\n\n        // Update program when file changes.\n        if (addedToRootFileNames || contentsChanged) {\n          builderProgram = ts.createEmitAndSemanticDiagnosticsBuilderProgram(\n            Array.from(rootFileNames),\n            config.options,\n            host,\n            builderProgram,\n            config.errors,\n            config.projectReferences\n          );\n        }\n      };\n\n      getOutput = (code: string, fileName: string) => {\n        let outText = '';\n        let outMap = '';\n\n        updateMemoryCache(code, fileName);\n\n        const sourceFile = builderProgram.getSourceFile(fileName);\n        if (!sourceFile)\n          throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const program = builderProgram.getProgram();\n        const diagnostics = ts.getPreEmitDiagnostics(program, sourceFile);\n        const diagnosticList = filterDiagnostics(\n          diagnostics,\n          diagnosticFilters\n        );\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        const result = builderProgram.emit(\n          sourceFile,\n          (path, file, writeByteOrderMark) => {\n            if (path.endsWith('.map')) {\n              outMap = file;\n            } else {\n              outText = file;\n            }\n\n            if (options.emit) sys.writeFile(path, file, writeByteOrderMark);\n          },\n          undefined,\n          undefined,\n          customTransformers\n        );\n\n        if (result.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring files that cannot be compiled.\n        if (outText === '') {\n          if (program.isSourceFileFromExternalLibrary(sourceFile)) {\n            throw new TypeError(\n              `Unable to compile file from external library: ${relative(\n                cwd,\n                fileName\n              )}`\n            );\n          }\n\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [outText, outMap, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const sourceFile = builderProgram.getSourceFile(normalizedFileName);\n        if (!sourceFile)\n          throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const node = getTokenAtPosition(ts, sourceFile, position);\n        const checker = builderProgram.getProgram().getTypeChecker();\n        const symbol = checker.getSymbolAtLocation(node);\n\n        if (!symbol) return { name: '', comment: '' };\n\n        const type = checker.getTypeOfSymbolAtLocation(symbol, node);\n        const signatures = [\n          ...type.getConstructSignatures(),\n          ...type.getCallSignatures(),\n        ];\n\n        return {\n          name: signatures.length\n            ? signatures.map((x) => checker.signatureToString(x)).join('\\n')\n            : checker.typeToString(type),\n          comment: ts.displayPartsToString(\n            symbol ? symbol.getDocumentationComment(checker) : []\n          ),\n        };\n      };\n\n      // Write `.tsbuildinfo` when `--build` is enabled.\n      if (options.emit && config.options.incremental) {\n        process.on('exit', () => {\n          // Emits `.tsbuildinfo` to filesystem.\n          (builderProgram.getProgram() as any).emitBuildInfo();\n        });\n      }\n    }\n  } else {\n    getTypeInfo = () => {\n      throw new TypeError(\n        'Type information is unavailable in \"--transpile-only\"'\n      );\n    };\n  }\n\n  function createTranspileOnlyGetOutputFunction(\n    overrideModuleType?: _ts.ModuleKind,\n    nodeModuleEmitKind?: NodeModuleEmitKind\n  ): GetOutputFunction {\n    const compilerOptions = { ...config.options };\n    if (overrideModuleType !== undefined)\n      compilerOptions.module = overrideModuleType;\n    let customTranspiler = createTranspiler?.(\n      compilerOptions,\n      nodeModuleEmitKind\n    );\n    let tsTranspileModule = versionGteLt(ts.version, '4.7.0')\n      ? createTsTranspileModule(ts, {\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        })\n      : undefined;\n    return (code: string, fileName: string): SourceOutput => {\n      let result: _ts.TranspileOutput;\n      if (customTranspiler) {\n        result = customTranspiler.transpile(code, {\n          fileName,\n        });\n      } else if (tsTranspileModule) {\n        result = tsTranspileModule(\n          code,\n          {\n            fileName,\n          },\n          nodeModuleEmitKind === 'nodeesm' ? 'module' : 'commonjs'\n        );\n      } else {\n        result = ts.transpileModule(code, {\n          fileName,\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        });\n      }\n\n      const diagnosticList = filterDiagnostics(\n        result.diagnostics || [],\n        diagnosticFilters\n      );\n      if (diagnosticList.length) reportTSError(diagnosticList);\n\n      return [result.outputText, result.sourceMapText as string, false];\n    };\n  }\n\n  // When true, these mean that a `moduleType` override will cause a different emit\n  // than the TypeScript compiler, so we *must* overwrite the emit.\n  const shouldOverwriteEmitWhenForcingCommonJS =\n    config.options.module !== ts.ModuleKind.CommonJS;\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const shouldOverwriteEmitWhenForcingEsm = !(\n    config.options.module === ts.ModuleKind.ES2015 ||\n    (ts.ModuleKind.ES2020 && config.options.module === ts.ModuleKind.ES2020) ||\n    (ts.ModuleKind.ES2022 && config.options.module === ts.ModuleKind.ES2022) ||\n    config.options.module === ts.ModuleKind.ESNext\n  );\n  /**\n   * node16 or nodenext\n   * [MUST_UPDATE_FOR_NEW_MODULEKIND]\n   */\n  const isNodeModuleType =\n    (ts.ModuleKind.Node16 && config.options.module === ts.ModuleKind.Node16) ||\n    (ts.ModuleKind.NodeNext &&\n      config.options.module === ts.ModuleKind.NodeNext);\n  const getOutputForceCommonJS = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.CommonJS\n  );\n  const getOutputForceNodeCommonJS = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.NodeNext,\n    'nodecjs'\n  );\n  const getOutputForceNodeESM = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.NodeNext,\n    'nodeesm'\n  );\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const getOutputForceESM = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.ES2022 || ts.ModuleKind.ES2020 || ts.ModuleKind.ES2015\n  );\n  const getOutputTranspileOnly = createTranspileOnlyGetOutputFunction();\n\n  // Create a simple TypeScript compiler proxy.\n  function compile(code: string, fileName: string, lineOffset = 0) {\n    const normalizedFileName = normalizeSlashes(fileName);\n    const classification =\n      moduleTypeClassifier.classifyModuleByModuleTypeOverrides(\n        normalizedFileName\n      );\n    let value: string | undefined = '';\n    let sourceMap: string | undefined = '';\n    let emitSkipped = true;\n    if (getOutput) {\n      // Must always call normal getOutput to throw typechecking errors\n      [value, sourceMap, emitSkipped] = getOutput(code, normalizedFileName);\n    }\n    // If module classification contradicts the above, call the relevant transpiler\n    if (\n      classification.moduleType === 'cjs' &&\n      (shouldOverwriteEmitWhenForcingCommonJS || emitSkipped)\n    ) {\n      [value, sourceMap] = getOutputForceCommonJS(code, normalizedFileName);\n    } else if (\n      classification.moduleType === 'esm' &&\n      (shouldOverwriteEmitWhenForcingEsm || emitSkipped)\n    ) {\n      [value, sourceMap] = getOutputForceESM(code, normalizedFileName);\n    } else if (emitSkipped) {\n      // Happens when ts compiler skips emit or in transpileOnly mode\n      const classification = classifyModule(fileName, isNodeModuleType);\n      [value, sourceMap] =\n        classification === 'nodecjs'\n          ? getOutputForceNodeCommonJS(code, normalizedFileName)\n          : classification === 'nodeesm'\n          ? getOutputForceNodeESM(code, normalizedFileName)\n          : classification === 'cjs'\n          ? getOutputForceCommonJS(code, normalizedFileName)\n          : classification === 'esm'\n          ? getOutputForceESM(code, normalizedFileName)\n          : getOutputTranspileOnly(code, normalizedFileName);\n    }\n    const output = updateOutput(\n      value!,\n      normalizedFileName,\n      sourceMap!,\n      getEmitExtension\n    );\n    outputCache.set(normalizedFileName, { content: output });\n    return output;\n  }\n\n  let active = true;\n  const enabled = (enabled?: boolean) =>\n    enabled === undefined ? active : (active = !!enabled);\n  const ignored = (fileName: string) => {\n    if (!active) return true;\n    const ext = extname(fileName);\n    if (extensions.compiled.includes(ext)) {\n      return !isScoped(fileName) || shouldIgnore(fileName);\n    }\n    return true;\n  };\n\n  function addDiagnosticFilter(filter: DiagnosticFilter) {\n    diagnosticFilters.push({\n      ...filter,\n      filenamesAbsolute: filter.filenamesAbsolute.map((f) =>\n        normalizeSlashes(f)\n      ),\n    });\n  }\n\n  const getNodeEsmResolver = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-esm-resolve') as typeof _nodeInternalModulesEsmResolve\n    ).createResolve({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      tsNodeExperimentalSpecifierResolution:\n        options.experimentalSpecifierResolution,\n    })\n  );\n  const getNodeEsmGetFormat = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-esm-get_format') as typeof _nodeInternalModulesEsmGetFormat\n    ).createGetFormat(\n      options.experimentalSpecifierResolution,\n      getNodeEsmResolver()\n    )\n  );\n  const getNodeCjsLoader = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-cjs-loader') as typeof _nodeInternalModulesCjsLoader\n    ).createCjsLoader({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      nodeEsmResolver: getNodeEsmResolver(),\n    })\n  );\n\n  return {\n    [TS_NODE_SERVICE_BRAND]: true,\n    ts,\n    compilerPath: compiler,\n    config,\n    compile,\n    getTypeInfo,\n    ignored,\n    enabled,\n    options,\n    configFilePath,\n    moduleTypeClassifier,\n    shouldReplAwait,\n    addDiagnosticFilter,\n    installSourceMapSupport,\n    enableExperimentalEsmLoaderInterop,\n    transpileOnly,\n    projectLocalResolveHelper,\n    getNodeEsmResolver,\n    getNodeEsmGetFormat,\n    getNodeCjsLoader,\n    extensions,\n  };\n}\n\n/**\n * Check if the filename should be ignored.\n */\nfunction createIgnore(ignoreBaseDir: string, ignore: RegExp[]) {\n  return (fileName: string) => {\n    const relname = relative(ignoreBaseDir, fileName);\n    const path = normalizeSlashes(relname);\n\n    return ignore.some((x) => x.test(path));\n  };\n}\n\n/**\n * Register the extensions to support when importing files.\n */\nfunction registerExtensions(\n  preferTsExts: boolean | null | undefined,\n  extensions: string[],\n  service: Service,\n  originalJsHandler: (m: NodeModule, filename: string) => any\n) {\n  const exts = new Set(extensions);\n  // Can't add these extensions cuz would allow omitting file extension; node requires ext for .cjs and .mjs\n  // Unless they're already registered by something else (nyc does this):\n  // then we *must* hook them or else our transformer will not be called.\n  for (const cannotAdd of ['.mts', '.cts', '.mjs', '.cjs']) {\n    if (exts.has(cannotAdd) && !hasOwnProperty(require.extensions, cannotAdd)) {\n      // Unrecognized file exts can be transformed via the `.js` handler.\n      exts.add('.js');\n      exts.delete(cannotAdd);\n    }\n  }\n\n  // Register new extensions.\n  for (const ext of exts) {\n    registerExtension(ext, service, originalJsHandler);\n  }\n\n  if (preferTsExts) {\n    const preferredExtensions = new Set([\n      ...exts,\n      ...Object.keys(require.extensions),\n    ]);\n\n    // Re-sort iteration order of Object.keys()\n    for (const ext of preferredExtensions) {\n      const old = Object.getOwnPropertyDescriptor(require.extensions, ext);\n      delete require.extensions[ext];\n      Object.defineProperty(require.extensions, ext, old!);\n    }\n  }\n}\n\n/**\n * Register the extension for node.\n */\nfunction registerExtension(\n  ext: string,\n  service: Service,\n  originalHandler: (m: NodeModule, filename: string) => any\n) {\n  const old = require.extensions[ext] || originalHandler;\n\n  require.extensions[ext] = function (m: any, filename) {\n    if (service.ignored(filename)) return old(m, filename);\n\n    assertScriptCanLoadAsCJS(service, m, filename);\n\n    const _compile = m._compile;\n\n    m._compile = function (code: string, fileName: string) {\n      debug('module._compile', fileName);\n\n      const result = service.compile(code, fileName);\n      return _compile.call(this, result, fileName);\n    };\n\n    return old(m, filename);\n  };\n}\n\n/**\n * Internal source output.\n */\ntype SourceOutput = [string, string, false] | [undefined, undefined, true];\n\n/**\n * Update the output remapping the source map.\n */\nfunction updateOutput(\n  outputText: string,\n  fileName: string,\n  sourceMap: string,\n  getEmitExtension: (fileName: string) => string\n) {\n  const base64Map = Buffer.from(\n    updateSourceMap(sourceMap, fileName),\n    'utf8'\n  ).toString('base64');\n  const sourceMapContent = `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64Map}`;\n  // Expected form: `//# sourceMappingURL=foo bar.js.map` or `//# sourceMappingURL=foo%20bar.js.map` for input file \"foo bar.tsx\"\n  // Percent-encoding behavior added in TS 4.1.1: https://github.com/microsoft/TypeScript/issues/40951\n  const prefix = '//# sourceMappingURL=';\n  const prefixLength = prefix.length;\n  const baseName = /*foo.tsx*/ basename(fileName);\n  const extName = /*.tsx*/ extname(fileName);\n  const extension = /*.js*/ getEmitExtension(fileName);\n  const sourcemapFilename =\n    baseName.slice(0, -extName.length) + extension + '.map';\n  const sourceMapLengthWithoutPercentEncoding =\n    prefixLength + sourcemapFilename.length;\n  /*\n   * Only rewrite if existing directive exists at the location we expect, to support:\n   *   a) compilers that do not append a sourcemap directive\n   *   b) situations where we did the math wrong\n   *     Not ideal, but appending our sourcemap *after* a pre-existing sourcemap still overrides, so the end-user is happy.\n   */\n  if (\n    outputText.substr(-sourceMapLengthWithoutPercentEncoding, prefixLength) ===\n    prefix\n  ) {\n    return (\n      outputText.slice(0, -sourceMapLengthWithoutPercentEncoding) +\n      sourceMapContent\n    );\n  }\n  // If anyone asks why we're not using URL, the URL equivalent is: `u = new URL('http://d'); u.pathname = \"/\" + sourcemapFilename; return u.pathname.slice(1);\n  const sourceMapLengthWithPercentEncoding =\n    prefixLength + encodeURI(sourcemapFilename).length;\n  if (\n    outputText.substr(-sourceMapLengthWithPercentEncoding, prefixLength) ===\n    prefix\n  ) {\n    return (\n      outputText.slice(0, -sourceMapLengthWithPercentEncoding) +\n      sourceMapContent\n    );\n  }\n\n  return `${outputText}\\n${sourceMapContent}`;\n}\n\n/**\n * Update the source map contents for improved output.\n */\nfunction updateSourceMap(sourceMapText: string, fileName: string) {\n  const sourceMap = JSON.parse(sourceMapText);\n  sourceMap.file = fileName;\n  sourceMap.sources = [fileName];\n  delete sourceMap.sourceRoot;\n  return JSON.stringify(sourceMap);\n}\n\n/**\n * Filter diagnostics.\n */\nfunction filterDiagnostics(\n  diagnostics: readonly _ts.Diagnostic[],\n  filters: DiagnosticFilter[]\n) {\n  return diagnostics.filter((d) =>\n    filters.every(\n      (f) =>\n        (!f.appliesToAllFiles &&\n          f.filenamesAbsolute.indexOf(d.file?.fileName!) === -1) ||\n        f.diagnosticsIgnored.indexOf(d.code) === -1\n    )\n  );\n}\n\n/**\n * Get token at file position.\n *\n * Reference: https://github.com/microsoft/TypeScript/blob/fcd9334f57d85b73dd66ad2d21c02e84822f4841/src/services/utilities.ts#L705-L731\n */\nfunction getTokenAtPosition(\n  ts: TSCommon,\n  sourceFile: _ts.SourceFile,\n  position: number\n): _ts.Node {\n  let current: _ts.Node = sourceFile;\n\n  outer: while (true) {\n    for (const child of current.getChildren(sourceFile)) {\n      const start = child.getFullStart();\n      if (start > position) break;\n\n      const end = child.getEnd();\n      if (position <= end) {\n        current = child;\n        continue outer;\n      }\n    }\n\n    return current;\n  }\n}\n\n/**\n * Create an implementation of node's ESM loader hooks.\n *\n * This may be useful if you\n * want to wrap or compose the loader hooks to add additional functionality or\n * combine with another loader.\n *\n * Node changed the hooks API, so there are two possible APIs.  This function\n * detects your node version and returns the appropriate API.\n *\n * @category ESM Loader\n */\nexport const createEsmHooks: typeof createEsmHooksFn = (\n  tsNodeService: Service\n) => (require('./esm') as typeof import('./esm')).createEsmHooks(tsNodeService);\n\n/**\n * When using `module: nodenext` or `module: node12`, there are two possible styles of emit depending in file extension or package.json \"type\":\n *\n * - CommonJS with dynamic imports preserved (not transformed into `require()` calls)\n * - ECMAScript modules with `import foo = require()` transformed into `require = createRequire(); const foo = require()`\n */\nexport type NodeModuleEmitKind = 'nodeesm' | 'nodecjs';\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/util.js":{"lineLengths":[13,7,62,348,35,31,31,16,217,3,71,91,12,3,20,11,77,1,16,3,60,2,12,3,43,35,48,38,36,42,9,5,24,1,24,3,33,53,12,3,23,36,55,20,1,22,3,26,12,3,23,69,1,22,31,30,3,44,12,3,34,62,1,44,3,24,12,3,43,66,1,40,3,31,3,27,28,21,30,30,30,21,9,30,6,1,36,3,12,89,106,3,65,9,63,13,40,9,17,73,9,5,15,36,5,1,76,3,75,78,80,55,12,3,58,84,43,43,45,35,11,6,1,74,3,120,32,12,3,123,11,31,51,171,83,98,62,1,104,16,19,14,20,30,16,25,28,19,21,5,18,1,20,16,63,56,65,37,30,77,20,24,65,14,30,37,81,5,25,33,70,5,1,36,32],"data":{"version":3,"file":"util.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/util.ts"],"names":[],"mappings":";;;;AAAA,mCAGgB;AAEhB,+BAA+B;AAC/B,+BAA+B;AAE/B,gBAAgB;AACH,QAAA,aAAa,GACxB,MAAA,sBAAiB,aAAjB,sBAAiB,cAAjB,sBAAiB,GACjB,8BAAyB,mCACxB,OAAO,CAAC,gBAAgB,CAA2B,CAAC;AAEvD;;;;GAIG;AACH,SAAgB,EAAE,CAAC,KAAyB;;IAC1C,OAAO,MAAA,QAAQ,CAAC,KAAK,CAAC,mCAAI,SAAS,CAAC;AACtC,CAAC;AAFD,gBAEC;AAED;;;;GAIG;AACH,SAAgB,MAAM,CACpB,YAAe,EACf,GAAG,OAAiB;IAEpB,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrC,MAAM,KAAK,GAAI,MAAc,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,KAAK,KAAK,SAAS;gBAAG,YAAoB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SAC7D;KACF;IACD,OAAO,YAAY,CAAC;AACtB,CAAC;AAXD,wBAWC;AAED;;;;GAIG;AACH,SAAgB,KAAK,CAAC,KAAyB;IAC7C,OAAO,OAAO,KAAK,KAAK,QAAQ;QAC9B,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;QAC/C,CAAC,CAAC,SAAS,CAAC;AAChB,CAAC;AAJD,sBAIC;AAED;;;GAGG;AACH,SAAgB,KAAK,CAAC,KAAyB;IAC7C,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AACnE,CAAC;AAFD,sBAEC;AAED,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAC/B,MAAM,eAAe,GAAG,KAAK,CAAC;AAC9B;;;GAGG;AACH,SAAgB,gBAAgB,CAAC,KAAa;IAC5C,OAAO,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;AAC5D,CAAC;AAFD,4CAEC;AAED;;;GAGG;AACH,SAAgB,cAAc,CAAC,MAAW,EAAE,QAAgB;IAC1D,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAChE,CAAC;AAFD,wCAEC;AAED;;GAEG;AACH,SAAgB,YAAY,CAAO,EAAiB;IAClD,MAAM,KAAK,GAAG,IAAI,GAAG,EAAQ,CAAC;IAE9B,OAAO,CAAC,GAAM,EAAK,EAAE;QACnB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACnB,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC;SACV;QACD,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;IACzB,CAAC,CAAC;AACJ,CAAC;AAXD,oCAWC;AAED;;;;GAIG;AACH,SAAgB,gCAAgC,CAC9C,SAAyB,EACzB,SAAiB;IAEjB,IAAI;QACF,MAAM,IAAI,GACR,OAAO,CAAC,sBAAsB,CAC/B,CAAC,OAAO,EAAE,CAAC;QACZ,IAAI;YACF,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC;SAC7B;gBAAS;YACR,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,EAAE,CAAC;SACnB;KACF;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC;KAC7B;AACH,CAAC;AAhBD,4EAgBC;AAED;;;;;;GAMG;AACH,SAAgB,+BAA+B,CAAC,cAAsB;IACpE,OAAO,SAAS,yBAAyB,CACvC,SAAiB,EACjB,wBAAiC;QAEjC,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE;YAChC,KAAK,EAAE,wBAAwB;gBAC7B,CAAC,CAAC,CAAC,cAAc,EAAE,SAAS,CAAC;gBAC7B,CAAC,CAAC,CAAC,cAAc,CAAC;SACrB,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAXD,0EAWC;AAMD;;;;GAIG;AACH,SAAgB,8CAA8C,CAC5D,cAAkC,EAClC,sBAA0C,EAC1C,aAAiC,EACjC,SAAiB;;IAEjB,IAAI,cAAc,IAAI,IAAI;QAAE,OAAO,IAAA,cAAO,EAAC,cAAc,CAAC,CAAC;IAC3D,OAAO,MAAA,sBAAsB,aAAtB,sBAAsB,cAAtB,sBAAsB,GAAI,aAAa,mCAAI,SAAS,CAAC;IAC5D,+EAA+E;IAC/E,8FAA8F;IAC9F,0DAA0D;AAC5D,CAAC;AAXD,wGAWC;AAED,gBAAgB;AAChB,SAAgB,IAAI,CAAqC,EAAM;IAC7D,IAAI,KAAqB,CAAC;IAC1B,IAAI,GAAG,GAAG,KAAK,CAAC;IAChB,SAAS,MAAM,CAAC,GAAG,IAAoB;QACrC,IAAI,GAAG;YAAE,OAAO,KAAK,CAAC;QACtB,KAAK,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;QACpB,GAAG,GAAG,IAAI,CAAC;QACX,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAVD,oBAUC;AAED,gBAAgB;AAChB,SAAgB,YAAY,CAC1B,OAAe,EACf,cAAsB,EACtB,aAAsB;IAEtB,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;IACpD,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;IAC7D,MAAM,KAAK,GACT,KAAK,GAAG,QAAQ;QAChB,CAAC,KAAK,KAAK,QAAQ;YACjB,CAAC,KAAK,GAAG,QAAQ,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,aAAa,EAAE;QACjB,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;QACzD,IAAI;YACF,KAAK,GAAG,OAAO;gBACf,CAAC,KAAK,KAAK,OAAO;oBAChB,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;KAClE;IACD,OAAO,KAAK,IAAI,IAAI,CAAC;IAErB,SAAS,KAAK,CAAC,WAAmB;QAChC,OAAO,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;AACH,CAAC;AAxBD,oCAwBC","sourcesContent":["import {\n  createRequire as nodeCreateRequire,\n  createRequireFromPath as nodeCreateRequireFromPath,\n} from 'module';\nimport type _createRequire from 'create-require';\nimport * as ynModule from 'yn';\nimport { dirname } from 'path';\n\n/** @internal */\nexport const createRequire =\n  nodeCreateRequire ??\n  nodeCreateRequireFromPath ??\n  (require('create-require') as typeof _createRequire);\n\n/**\n * Wrapper around yn module that returns `undefined` instead of `null`.\n * This is implemented by yn v4, but we're staying on v3 to avoid v4's node 10 requirement.\n * @internal\n */\nexport function yn(value: string | undefined) {\n  return ynModule(value) ?? undefined;\n}\n\n/**\n * Like `Object.assign`, but ignores `undefined` properties.\n *\n * @internal\n */\nexport function assign<T extends object>(\n  initialValue: T,\n  ...sources: Array<T>\n): T {\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      const value = (source as any)[key];\n      if (value !== undefined) (initialValue as any)[key] = value;\n    }\n  }\n  return initialValue;\n}\n\n/**\n * Split a string array of values\n * and remove empty strings from the resulting array.\n * @internal\n */\nexport function split(value: string | undefined) {\n  return typeof value === 'string'\n    ? value.split(/ *, */g).filter((v) => v !== '')\n    : undefined;\n}\n\n/**\n * Parse a string as JSON.\n * @internal\n */\nexport function parse(value: string | undefined): object | undefined {\n  return typeof value === 'string' ? JSON.parse(value) : undefined;\n}\n\nconst directorySeparator = '/';\nconst backslashRegExp = /\\\\/g;\n/**\n * Replace backslashes with forward slashes.\n * @internal\n */\nexport function normalizeSlashes(value: string): string {\n  return value.replace(backslashRegExp, directorySeparator);\n}\n\n/**\n * Safe `hasOwnProperty`\n * @internal\n */\nexport function hasOwnProperty(object: any, property: string): boolean {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * Cached fs operation wrapper.\n */\nexport function cachedLookup<T, R>(fn: (arg: T) => R): (arg: T) => R {\n  const cache = new Map<T, R>();\n\n  return (arg: T): R => {\n    if (!cache.has(arg)) {\n      const v = fn(arg);\n      cache.set(arg, v);\n      return v;\n    }\n    return cache.get(arg)!;\n  };\n}\n\n/**\n * @internal\n * Require something with v8-compile-cache, which should make subsequent requires faster.\n * Do lots of error-handling so that, worst case, we require without the cache, and users are not blocked.\n */\nexport function attemptRequireWithV8CompileCache(\n  requireFn: typeof require,\n  specifier: string\n) {\n  try {\n    const v8CC = (\n      require('v8-compile-cache-lib') as typeof import('v8-compile-cache-lib')\n    ).install();\n    try {\n      return requireFn(specifier);\n    } finally {\n      v8CC?.uninstall();\n    }\n  } catch (e) {\n    return requireFn(specifier);\n  }\n}\n\n/**\n * Helper to discover dependencies relative to a user's project, optionally\n * falling back to relative to ts-node.  This supports global installations of\n * ts-node, for example where someone does `#!/usr/bin/env -S ts-node --swc` and\n * we need to fallback to a global install of @swc/core\n * @internal\n */\nexport function createProjectLocalResolveHelper(localDirectory: string) {\n  return function projectLocalResolveHelper(\n    specifier: string,\n    fallbackToTsNodeRelative: boolean\n  ) {\n    return require.resolve(specifier, {\n      paths: fallbackToTsNodeRelative\n        ? [localDirectory, __dirname]\n        : [localDirectory],\n    });\n  };\n}\n/** @internal */\nexport type ProjectLocalResolveHelper = ReturnType<\n  typeof createProjectLocalResolveHelper\n>;\n\n/**\n * Used as a reminder of all the factors we must consider when finding project-local dependencies and when a config file\n * on disk may or may not exist.\n * @internal\n */\nexport function getBasePathForProjectLocalDependencyResolution(\n  configFilePath: string | undefined,\n  projectSearchDirOption: string | undefined,\n  projectOption: string | undefined,\n  cwdOption: string\n) {\n  if (configFilePath != null) return dirname(configFilePath);\n  return projectSearchDirOption ?? projectOption ?? cwdOption;\n  // TODO technically breaks if projectOption is path to a file, not a directory,\n  // and we attempt to resolve relative specifiers.  By the time we resolve relative specifiers,\n  // should have configFilePath, so not reach this codepath.\n}\n\n/** @internal */\nexport function once<Fn extends (...args: any[]) => any>(fn: Fn) {\n  let value: ReturnType<Fn>;\n  let ran = false;\n  function onceFn(...args: Parameters<Fn>): ReturnType<Fn> {\n    if (ran) return value;\n    value = fn(...args);\n    ran = true;\n    return value;\n  }\n  return onceFn;\n}\n\n/** @internal */\nexport function versionGteLt(\n  version: string,\n  gteRequirement: string,\n  ltRequirement?: string\n) {\n  const [major, minor, patch, extra] = parse(version);\n  const [gteMajor, gteMinor, gtePatch] = parse(gteRequirement);\n  const isGte =\n    major > gteMajor ||\n    (major === gteMajor &&\n      (minor > gteMinor || (minor === gteMinor && patch >= gtePatch)));\n  let isLt = true;\n  if (ltRequirement) {\n    const [ltMajor, ltMinor, ltPatch] = parse(ltRequirement);\n    isLt =\n      major < ltMajor ||\n      (major === ltMajor &&\n        (minor < ltMinor || (minor === ltMinor && patch < ltPatch)));\n  }\n  return isGte && isLt;\n\n  function parse(requirement: string) {\n    return requirement.split(/[\\.-]/).map((s) => parseInt(s, 10));\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/configuration.js":{"lineLengths":[13,62,179,31,35,49,43,33,3,86,3,34,20,27,24,23,18,23,2,2,61,3,32,58,30,34,36,41,41,46,53,46,52,5,105,46,55,5,18,1,16,40,27,222,111,55,157,88,74,115,127,23,53,38,6,54,97,78,25,162,148,5,12,16,15,31,24,23,12,17,6,1,46,3,74,54,2,79,73,2,12,3,45,19,59,27,41,23,35,130,206,49,23,22,63,71,68,9,14,77,9,29,57,74,30,40,26,84,38,35,28,39,87,54,44,22,17,40,72,34,30,33,56,19,38,26,96,31,56,29,80,35,60,36,28,39,71,54,44,22,17,55,26,69,13,52,9,5,68,41,31,55,64,92,100,30,84,122,99,9,31,79,9,69,34,51,9,41,50,9,39,48,9,34,43,9,63,5,36,173,97,62,75,19,11,89,28,10,45,47,57,42,38,28,19,38,49,47,30,35,55,30,77,19,17,63,70,63,68,45,12,23,28,34,24,6,1,32,3,78,59,12,3,55,63,38,28,1,56,48,98,75,24,1,16,33,75,1,36,3,96,26,3,60,27,52,365,37,17,21,24,13,30,14,15,26,17,21,15,16,19,22,18,19,14,17,20,12,29,12,40,39,6,93,38,35,65,1,16,46,3,98,68,12,3,76,49,41,26,22,31,91,12,57,5,48,70,72,43,69,75,132,174,27,67,1,50,41],"data":{"version":3,"file":"configuration.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/configuration.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve, dirname, join } from 'path';\nimport type * as _ts from 'typescript';\nimport {\n  CreateOptions,\n  DEFAULTS,\n  OptionBasePaths,\n  RegisterOptions,\n  TSCommon,\n  TsConfigOptions,\n} from './index';\nimport type { TSInternal } from './ts-compiler-types';\nimport { createTsInternals } from './ts-internals';\nimport { getDefaultTsconfigJsonForNodeVersion } from './tsconfigs';\nimport {\n  assign,\n  attemptRequireWithV8CompileCache,\n  createProjectLocalResolveHelper,\n  getBasePathForProjectLocalDependencyResolution,\n} from './util';\n\n/**\n * TypeScript compiler option values required by `ts-node` which cannot be overridden.\n */\nconst TS_NODE_COMPILER_OPTIONS = {\n  sourceMap: true,\n  inlineSourceMap: false,\n  inlineSources: true,\n  declaration: false,\n  noEmit: false,\n  outDir: '.ts-node',\n};\n\n/*\n * Do post-processing on config options to support `ts-node`.\n */\nfunction fixConfig(ts: TSCommon, config: _ts.ParsedCommandLine) {\n  // Delete options that *should not* be passed through.\n  delete config.options.out;\n  delete config.options.outFile;\n  delete config.options.composite;\n  delete config.options.declarationDir;\n  delete config.options.declarationMap;\n  delete config.options.emitDeclarationOnly;\n\n  // Target ES5 output by default (instead of ES3).\n  if (config.options.target === undefined) {\n    config.options.target = ts.ScriptTarget.ES5;\n  }\n\n  // Target CommonJS modules by default (instead of magically switching to ES6 when the target is ES6).\n  if (config.options.module === undefined) {\n    config.options.module = ts.ModuleKind.CommonJS;\n  }\n\n  return config;\n}\n\n/** @internal */\nexport function findAndReadConfig(rawOptions: CreateOptions) {\n  const cwd = resolve(\n    rawOptions.cwd ?? rawOptions.dir ?? DEFAULTS.cwd ?? process.cwd()\n  );\n  const compilerName = rawOptions.compiler ?? DEFAULTS.compiler;\n\n  // Compute minimum options to read the config file.\n  let projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n    undefined,\n    rawOptions.projectSearchDir,\n    rawOptions.project,\n    cwd\n  );\n  let { compiler, ts } = resolveAndLoadCompiler(\n    compilerName,\n    projectLocalResolveDir\n  );\n\n  // Read config file and merge new options between env and CLI options.\n  const { configFilePath, config, tsNodeOptionsFromTsconfig, optionBasePaths } =\n    readConfig(cwd, ts, rawOptions);\n\n  const options = assign<RegisterOptions>(\n    {},\n    DEFAULTS,\n    tsNodeOptionsFromTsconfig || {},\n    { optionBasePaths },\n    rawOptions\n  );\n  options.require = [\n    ...(tsNodeOptionsFromTsconfig.require || []),\n    ...(rawOptions.require || []),\n  ];\n\n  // Re-resolve the compiler in case it has changed.\n  // Compiler is loaded relative to tsconfig.json, so tsconfig discovery may cause us to load a\n  // different compiler than we did above, even if the name has not changed.\n  if (configFilePath) {\n    projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n      configFilePath,\n      rawOptions.projectSearchDir,\n      rawOptions.project,\n      cwd\n    );\n    ({ compiler } = resolveCompiler(\n      options.compiler,\n      optionBasePaths.compiler ?? projectLocalResolveDir\n    ));\n  }\n\n  return {\n    options,\n    config,\n    projectLocalResolveDir,\n    optionBasePaths,\n    configFilePath,\n    cwd,\n    compiler,\n  };\n}\n\n/**\n * Load TypeScript configuration. Returns the parsed TypeScript config and\n * any `ts-node` options specified in the config file.\n *\n * Even when a tsconfig.json is not loaded, this function still handles merging\n * compilerOptions from various sources: API, environment variables, etc.\n *\n * @internal\n */\nexport function readConfig(\n  cwd: string,\n  ts: TSCommon,\n  rawApiOptions: CreateOptions\n): {\n  /**\n   * Path of tsconfig file if one was loaded\n   */\n  configFilePath: string | undefined;\n  /**\n   * Parsed TypeScript configuration with compilerOptions merged from all other sources (env vars, etc)\n   */\n  config: _ts.ParsedCommandLine;\n  /**\n   * ts-node options pulled from `tsconfig.json`, NOT merged with any other sources.  Merging must happen outside\n   * this function.\n   */\n  tsNodeOptionsFromTsconfig: TsConfigOptions;\n  optionBasePaths: OptionBasePaths;\n} {\n  // Ordered [a, b, c] where config a extends b extends c\n  const configChain: Array<{\n    config: any;\n    basePath: string;\n    configPath: string;\n  }> = [];\n  let config: any = { compilerOptions: {} };\n  let basePath = cwd;\n  let configFilePath: string | undefined = undefined;\n  const projectSearchDir = resolve(cwd, rawApiOptions.projectSearchDir ?? cwd);\n\n  const {\n    fileExists = ts.sys.fileExists,\n    readFile = ts.sys.readFile,\n    skipProject = DEFAULTS.skipProject,\n    project = DEFAULTS.project,\n    tsTrace = DEFAULTS.tsTrace,\n  } = rawApiOptions;\n\n  // Read project configuration when available.\n  if (!skipProject) {\n    if (project) {\n      const resolved = resolve(cwd, project);\n      const nested = join(resolved, 'tsconfig.json');\n      configFilePath = fileExists(nested) ? nested : resolved;\n    } else {\n      configFilePath = ts.findConfigFile(projectSearchDir, fileExists);\n    }\n\n    if (configFilePath) {\n      let pathToNextConfigInChain = configFilePath;\n      const tsInternals = createTsInternals(ts);\n      const errors: Array<_ts.Diagnostic> = [];\n\n      // Follow chain of \"extends\"\n      while (true) {\n        const result = ts.readConfigFile(pathToNextConfigInChain, readFile);\n\n        // Return diagnostics.\n        if (result.error) {\n          return {\n            configFilePath,\n            config: { errors: [result.error], fileNames: [], options: {} },\n            tsNodeOptionsFromTsconfig: {},\n            optionBasePaths: {},\n          };\n        }\n\n        const c = result.config;\n        const bp = dirname(pathToNextConfigInChain);\n        configChain.push({\n          config: c,\n          basePath: bp,\n          configPath: pathToNextConfigInChain,\n        });\n\n        if (c.extends == null) break;\n        const resolvedExtendedConfigPath = tsInternals.getExtendsConfigPath(\n          c.extends,\n          {\n            fileExists,\n            readDirectory: ts.sys.readDirectory,\n            readFile,\n            useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n            trace: tsTrace,\n          },\n          bp,\n          errors,\n          (ts as unknown as TSInternal).createCompilerDiagnostic\n        );\n        if (errors.length) {\n          return {\n            configFilePath,\n            config: { errors, fileNames: [], options: {} },\n            tsNodeOptionsFromTsconfig: {},\n            optionBasePaths: {},\n          };\n        }\n        if (resolvedExtendedConfigPath == null) break;\n        pathToNextConfigInChain = resolvedExtendedConfigPath;\n      }\n\n      ({ config, basePath } = configChain[0]);\n    }\n  }\n\n  // Merge and fix ts-node options that come from tsconfig.json(s)\n  const tsNodeOptionsFromTsconfig: TsConfigOptions = {};\n  const optionBasePaths: OptionBasePaths = {};\n  for (let i = configChain.length - 1; i >= 0; i--) {\n    const { config, basePath, configPath } = configChain[i];\n    const options = filterRecognizedTsConfigTsNodeOptions(\n      config['ts-node']\n    ).recognized;\n\n    // Some options are relative to the config file, so must be converted to absolute paths here\n    if (options.require) {\n      // Modules are found relative to the tsconfig file, not the `dir` option\n      const tsconfigRelativeResolver = createProjectLocalResolveHelper(\n        dirname(configPath)\n      );\n      options.require = options.require.map((path: string) =>\n        tsconfigRelativeResolver(path, false)\n      );\n    }\n    if (options.scopeDir) {\n      options.scopeDir = resolve(basePath, options.scopeDir!);\n    }\n\n    // Downstream code uses the basePath; we do not do that here.\n    if (options.moduleTypes) {\n      optionBasePaths.moduleTypes = basePath;\n    }\n    if (options.transpiler != null) {\n      optionBasePaths.transpiler = basePath;\n    }\n    if (options.compiler != null) {\n      optionBasePaths.compiler = basePath;\n    }\n    if (options.swc != null) {\n      optionBasePaths.swc = basePath;\n    }\n\n    assign(tsNodeOptionsFromTsconfig, options);\n  }\n\n  // Remove resolution of \"files\".\n  const files =\n    rawApiOptions.files ?? tsNodeOptionsFromTsconfig.files ?? DEFAULTS.files;\n\n  // Only if a config file is *not* loaded, load an implicit configuration from @tsconfig/bases\n  const skipDefaultCompilerOptions = configFilePath != null;\n  const defaultCompilerOptionsForNodeVersion = skipDefaultCompilerOptions\n    ? undefined\n    : {\n        ...getDefaultTsconfigJsonForNodeVersion(ts).compilerOptions,\n        types: ['node'],\n      };\n\n  // Merge compilerOptions from all sources\n  config.compilerOptions = Object.assign(\n    {},\n    // automatically-applied options from @tsconfig/bases\n    defaultCompilerOptionsForNodeVersion,\n    // tsconfig.json \"compilerOptions\"\n    config.compilerOptions,\n    // from env var\n    DEFAULTS.compilerOptions,\n    // tsconfig.json \"ts-node\": \"compilerOptions\"\n    tsNodeOptionsFromTsconfig.compilerOptions,\n    // passed programmatically\n    rawApiOptions.compilerOptions,\n    // overrides required by ts-node, cannot be changed\n    TS_NODE_COMPILER_OPTIONS\n  );\n\n  const fixedConfig = fixConfig(\n    ts,\n    ts.parseJsonConfigFileContent(\n      config,\n      {\n        fileExists,\n        readFile,\n        // Only used for globbing \"files\", \"include\", \"exclude\"\n        // When `files` option disabled, we want to avoid the fs calls\n        readDirectory: files ? ts.sys.readDirectory : () => [],\n        useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n      },\n      basePath,\n      undefined,\n      configFilePath\n    )\n  );\n\n  return {\n    configFilePath,\n    config: fixedConfig,\n    tsNodeOptionsFromTsconfig,\n    optionBasePaths,\n  };\n}\n\n/**\n * Load the typescript compiler. It is required to load the tsconfig but might\n * be changed by the tsconfig, so we have to do this twice.\n * @internal\n */\nexport function resolveAndLoadCompiler(\n  name: string | undefined,\n  relativeToPath: string\n) {\n  const { compiler } = resolveCompiler(name, relativeToPath);\n  const ts = loadCompiler(compiler);\n  return { compiler, ts };\n}\n\nfunction resolveCompiler(name: string | undefined, relativeToPath: string) {\n  const projectLocalResolveHelper =\n    createProjectLocalResolveHelper(relativeToPath);\n  const compiler = projectLocalResolveHelper(name || 'typescript', true);\n  return { compiler };\n}\n\n/** @internal */\nexport function loadCompiler(compiler: string): TSCommon {\n  return attemptRequireWithV8CompileCache(require, compiler);\n}\n\n/**\n * Given the raw \"ts-node\" sub-object from a tsconfig, return an object with only the properties\n * recognized by \"ts-node\"\n */\nfunction filterRecognizedTsConfigTsNodeOptions(jsonObject: any): {\n  recognized: TsConfigOptions;\n  unrecognized: any;\n} {\n  if (jsonObject == null) return { recognized: {}, unrecognized: {} };\n  const {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    experimentalReplAwait,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n    ...unrecognized\n  } = jsonObject as TsConfigOptions;\n  const filteredTsConfigOptions = {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    experimentalReplAwait,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n  };\n  // Use the typechecker to make sure this implementation has the correct set of properties\n  const catchExtraneousProps: keyof TsConfigOptions =\n    null as any as keyof typeof filteredTsConfigOptions;\n  const catchMissingProps: keyof typeof filteredTsConfigOptions =\n    null as any as keyof TsConfigOptions;\n  return { recognized: filteredTsConfigOptions, unrecognized };\n}\n\n/** @internal */\nexport const ComputeAsCommonRootOfFiles = Symbol();\n\n/**\n * Some TS compiler options have defaults which are not provided by TS's config parsing functions.\n * This function centralizes the logic for computing those defaults.\n * @internal\n */\nexport function getTsConfigDefaults(\n  config: _ts.ParsedCommandLine,\n  basePath: string,\n  _files: string[] | undefined,\n  _include: string[] | undefined,\n  _exclude: string[] | undefined\n) {\n  const { composite = false } = config.options;\n  let rootDir: string | typeof ComputeAsCommonRootOfFiles =\n    config.options.rootDir!;\n  if (rootDir == null) {\n    if (composite) rootDir = basePath;\n    // Return this symbol to avoid computing from `files`, which would require fs calls\n    else rootDir = ComputeAsCommonRootOfFiles;\n  }\n  const { outDir = rootDir } = config.options;\n  // Docs are wrong: https://www.typescriptlang.org/tsconfig#include\n  // Docs say **, but it's actually **/*; compiler throws error for **\n  const include = _files ? [] : ['**/*'];\n  const files = _files ?? [];\n  // Docs are misleading: https://www.typescriptlang.org/tsconfig#exclude\n  // Docs say it excludes node_modules, bower_components, jspm_packages, but actually those are excluded via behavior of \"include\"\n  const exclude = _exclude ?? [outDir]; // TODO technically, outDir is absolute path, but exclude should be relative glob pattern?\n\n  // TODO compute baseUrl\n\n  return { rootDir, outDir, include, files, exclude, composite };\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/ts-internals.js":{"lineLengths":[13,62,131,31,33,16,80,3,82,57,73,2,79,79,36,3,41,19,7,19,104,7,93,70,47,47,48,89,55,67,66,59,99,37,17,13,38,9,77,73,168,29,35,70,58,38,60,9,87,25,5,36,1,84,33,40,1,39,100,1,64,64,57,41,1,34,44,1,32,51,80,1,93,94,9,46,3,12,85,3,45,82,48,1,48,137,24,36,67,43,81,55,68,40,35,5,26,39,33,54,9,14,38,49,13,96,9,35,5,31,27,24,5,22,1,28,41,7,92,88,7,51,121,2,24,41,43,117,2,62,75,1,57,48,53,1,43,26,18,36,49,40,23,21,30,21,33,37,59,34,29,17,13,32,25,9,32,5,19,1,30,50,53,1,37,14,17,35,19,93,39,59,119,19,64,57,5,10,89,39,95,44,30,50,5,10,55,27,69,78,34,70,82,89,97,52,71,36,66,71,96,48,96,112,57,21,61,108,67,51,21,17,13,82,9,69,5,15,13,1,49,47,41,5,16,1,46,90,1,44,106,1,49,46,47,5,16,1,31,35,33,38,96,90,1,51,38,46,25,50,67,46,83,29,5,14,1,33,16,24,36,35,32,17,13,9,14,36,9,5,17,1,43,47,70,46,19,27,1,33,68,1,22,40,35,1,71,24,37,23,20,27,1,3,120,51,3,44,44,1,30,33,34,33,35,120,54,64,72,50,1,64,120,47,11,154,88,30,1,50,40],"data":{"version":3,"file":"ts-internals.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/ts-internals.ts"],"names":[],"mappings":"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","sourcesContent":["import { isAbsolute, resolve } from 'path';\nimport { cachedLookup, normalizeSlashes, versionGteLt } from './util';\nimport type * as _ts from 'typescript';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\n\n/** @internal */\nexport const createTsInternals = cachedLookup(createTsInternalsUncached);\n/**\n * Given a reference to the TS compiler, return some TS internal functions that we\n * could not or did not want to grab off the `ts` object.\n * These have been copy-pasted from TS's source and tweaked as necessary.\n *\n * NOTE: This factory returns *only* functions which need a reference to the TS\n * compiler.  Other functions do not need a reference to the TS compiler so are\n * exported directly from this file.\n */\nfunction createTsInternalsUncached(_ts: TSCommon) {\n  const ts = _ts as TSCommon & TSInternal;\n  /**\n   * Copied from:\n   * https://github.com/microsoft/TypeScript/blob/v4.3.2/src/compiler/commandLineParser.ts#L2821-L2846\n   */\n  function getExtendsConfigPath(\n    extendedConfig: string,\n    host: _ts.ParseConfigHost,\n    basePath: string,\n    errors: _ts.Push<_ts.Diagnostic>,\n    createDiagnostic: (\n      message: _ts.DiagnosticMessage,\n      arg1?: string\n    ) => _ts.Diagnostic\n  ) {\n    extendedConfig = normalizeSlashes(extendedConfig);\n    if (\n      isRootedDiskPath(extendedConfig) ||\n      startsWith(extendedConfig, './') ||\n      startsWith(extendedConfig, '../')\n    ) {\n      let extendedConfigPath = getNormalizedAbsolutePath(\n        extendedConfig,\n        basePath\n      );\n      if (\n        !host.fileExists(extendedConfigPath) &&\n        !endsWith(extendedConfigPath, ts.Extension.Json)\n      ) {\n        extendedConfigPath = `${extendedConfigPath}.json`;\n        if (!host.fileExists(extendedConfigPath)) {\n          errors.push(\n            createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig)\n          );\n          return undefined;\n        }\n      }\n      return extendedConfigPath;\n    }\n    // If the path isn't a rooted or relative path, resolve like a module\n    const tsGte5_3_0 = versionGteLt(ts.version, '5.3.0');\n    const resolved = ts.nodeModuleNameResolver(\n      extendedConfig,\n      combinePaths(basePath, 'tsconfig.json'),\n      { moduleResolution: ts.ModuleResolutionKind.NodeJs },\n      host,\n      /*cache*/ undefined,\n      /*projectRefs*/ undefined,\n      /*conditionsOrIsConfigLookup*/ tsGte5_3_0 ? undefined : true,\n      /*isConfigLookup*/ tsGte5_3_0 ? true : undefined\n    );\n    if (resolved.resolvedModule) {\n      return resolved.resolvedModule.resolvedFileName;\n    }\n    errors.push(\n      createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig)\n    );\n    return undefined;\n  }\n\n  return { getExtendsConfigPath };\n}\n\n// These functions have alternative implementation to avoid copying too much from TS\nfunction isRootedDiskPath(path: string) {\n  return isAbsolute(path);\n}\nfunction combinePaths(path: string, ...paths: (string | undefined)[]): string {\n  return normalizeSlashes(\n    resolve(path, ...(paths.filter((path) => path) as string[]))\n  );\n}\nfunction getNormalizedAbsolutePath(\n  fileName: string,\n  currentDirectory: string | undefined\n) {\n  return normalizeSlashes(\n    currentDirectory != null\n      ? resolve(currentDirectory!, fileName)\n      : resolve(fileName)\n  );\n}\n\nfunction startsWith(str: string, prefix: string): boolean {\n  return str.lastIndexOf(prefix, 0) === 0;\n}\n\nfunction endsWith(str: string, suffix: string): boolean {\n  const expectedPos = str.length - suffix.length;\n  return expectedPos >= 0 && str.indexOf(suffix, expectedPos) === expectedPos;\n}\n// Reserved characters, forces escaping of any non-word (or digit), non-whitespace character.\n// It may be inefficient (we could just match (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g), but this is future\n// proof.\nconst reservedCharacterPattern = /[^\\w\\s\\/]/g;\n\n/**\n * @internal\n * See also: getRegularExpressionForWildcard, which seems to do almost the same thing\n */\nexport function getPatternFromSpec(spec: string, basePath: string) {\n  const pattern = spec && getSubPatternFromSpec(spec, basePath, excludeMatcher);\n  return pattern && `^(${pattern})${'($|/)'}`;\n}\nfunction getSubPatternFromSpec(\n  spec: string,\n  basePath: string,\n  {\n    singleAsteriskRegexFragment,\n    doubleAsteriskRegexFragment,\n    replaceWildcardCharacter,\n  }: WildcardMatcher\n): string {\n  let subpattern = '';\n  let hasWrittenComponent = false;\n  const components = getNormalizedPathComponents(spec, basePath);\n  const lastComponent = last(components);\n\n  // getNormalizedPathComponents includes the separator for the root component.\n  // We need to remove to create our regex correctly.\n  components[0] = removeTrailingDirectorySeparator(components[0]);\n\n  if (isImplicitGlob(lastComponent)) {\n    components.push('**', '*');\n  }\n\n  let optionalCount = 0;\n  for (let component of components) {\n    if (component === '**') {\n      subpattern += doubleAsteriskRegexFragment;\n    } else {\n      if (hasWrittenComponent) {\n        subpattern += directorySeparator;\n      }\n      subpattern += component.replace(\n        reservedCharacterPattern,\n        replaceWildcardCharacter\n      );\n    }\n\n    hasWrittenComponent = true;\n  }\n\n  while (optionalCount > 0) {\n    subpattern += ')?';\n    optionalCount--;\n  }\n\n  return subpattern;\n}\ninterface WildcardMatcher {\n  singleAsteriskRegexFragment: string;\n  doubleAsteriskRegexFragment: string;\n  replaceWildcardCharacter: (match: string) => string;\n}\nconst directoriesMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  /**\n   * Regex for the ** wildcard. Matches any num of subdirectories. When used for including\n   * files or directories, does not match subdirectories that start with a . character\n   */\n  doubleAsteriskRegexFragment: `(/[^/.][^/]*)*?`,\n  replaceWildcardCharacter: (match) =>\n    replaceWildcardCharacter(\n      match,\n      directoriesMatcher.singleAsteriskRegexFragment\n    ),\n};\nconst excludeMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  doubleAsteriskRegexFragment: '(/.+?)?',\n  replaceWildcardCharacter: (match) =>\n    replaceWildcardCharacter(match, excludeMatcher.singleAsteriskRegexFragment),\n};\nfunction getNormalizedPathComponents(\n  path: string,\n  currentDirectory: string | undefined\n) {\n  return reducePathComponents(getPathComponents(path, currentDirectory));\n}\nfunction getPathComponents(path: string, currentDirectory = '') {\n  path = combinePaths(currentDirectory, path);\n  return pathComponents(path, getRootLength(path));\n}\nfunction reducePathComponents(components: readonly string[]) {\n  if (!some(components)) return [];\n  const reduced = [components[0]];\n  for (let i = 1; i < components.length; i++) {\n    const component = components[i];\n    if (!component) continue;\n    if (component === '.') continue;\n    if (component === '..') {\n      if (reduced.length > 1) {\n        if (reduced[reduced.length - 1] !== '..') {\n          reduced.pop();\n          continue;\n        }\n      } else if (reduced[0]) continue;\n    }\n    reduced.push(component);\n  }\n  return reduced;\n}\nfunction getRootLength(path: string) {\n  const rootLength = getEncodedRootLength(path);\n  return rootLength < 0 ? ~rootLength : rootLength;\n}\nfunction getEncodedRootLength(path: string): number {\n  if (!path) return 0;\n  const ch0 = path.charCodeAt(0);\n\n  // POSIX or UNC\n  if (ch0 === CharacterCodes.slash || ch0 === CharacterCodes.backslash) {\n    if (path.charCodeAt(1) !== ch0) return 1; // POSIX: \"/\" (or non-normalized \"\\\")\n\n    const p1 = path.indexOf(\n      ch0 === CharacterCodes.slash ? directorySeparator : altDirectorySeparator,\n      2\n    );\n    if (p1 < 0) return path.length; // UNC: \"//server\" or \"\\\\server\"\n\n    return p1 + 1; // UNC: \"//server/\" or \"\\\\server\\\"\n  }\n\n  // DOS\n  if (isVolumeCharacter(ch0) && path.charCodeAt(1) === CharacterCodes.colon) {\n    const ch2 = path.charCodeAt(2);\n    if (ch2 === CharacterCodes.slash || ch2 === CharacterCodes.backslash)\n      return 3; // DOS: \"c:/\" or \"c:\\\"\n    if (path.length === 2) return 2; // DOS: \"c:\" (but not \"c:d\")\n  }\n\n  // URL\n  const schemeEnd = path.indexOf(urlSchemeSeparator);\n  if (schemeEnd !== -1) {\n    const authorityStart = schemeEnd + urlSchemeSeparator.length;\n    const authorityEnd = path.indexOf(directorySeparator, authorityStart);\n    if (authorityEnd !== -1) {\n      // URL: \"file:///\", \"file://server/\", \"file://server/path\"\n      // For local \"file\" URLs, include the leading DOS volume (if present).\n      // Per https://www.ietf.org/rfc/rfc1738.txt, a host of \"\" or \"localhost\" is a\n      // special case interpreted as \"the machine from which the URL is being interpreted\".\n      const scheme = path.slice(0, schemeEnd);\n      const authority = path.slice(authorityStart, authorityEnd);\n      if (\n        scheme === 'file' &&\n        (authority === '' || authority === 'localhost') &&\n        isVolumeCharacter(path.charCodeAt(authorityEnd + 1))\n      ) {\n        const volumeSeparatorEnd = getFileUrlVolumeSeparatorEnd(\n          path,\n          authorityEnd + 2\n        );\n        if (volumeSeparatorEnd !== -1) {\n          if (path.charCodeAt(volumeSeparatorEnd) === CharacterCodes.slash) {\n            // URL: \"file:///c:/\", \"file://localhost/c:/\", \"file:///c%3a/\", \"file://localhost/c%3a/\"\n            return ~(volumeSeparatorEnd + 1);\n          }\n          if (volumeSeparatorEnd === path.length) {\n            // URL: \"file:///c:\", \"file://localhost/c:\", \"file:///c$3a\", \"file://localhost/c%3a\"\n            // but not \"file:///c:d\" or \"file:///c%3ad\"\n            return ~volumeSeparatorEnd;\n          }\n        }\n      }\n      return ~(authorityEnd + 1); // URL: \"file://server/\", \"http://server/\"\n    }\n    return ~path.length; // URL: \"file://server\", \"http://server\"\n  }\n\n  // relative\n  return 0;\n}\nfunction ensureTrailingDirectorySeparator(path: string) {\n  if (!hasTrailingDirectorySeparator(path)) {\n    return path + directorySeparator;\n  }\n\n  return path;\n}\nfunction hasTrailingDirectorySeparator(path: string) {\n  return (\n    path.length > 0 && isAnyDirectorySeparator(path.charCodeAt(path.length - 1))\n  );\n}\nfunction isAnyDirectorySeparator(charCode: number): boolean {\n  return (\n    charCode === CharacterCodes.slash || charCode === CharacterCodes.backslash\n  );\n}\nfunction removeTrailingDirectorySeparator(path: string) {\n  if (hasTrailingDirectorySeparator(path)) {\n    return path.substr(0, path.length - 1);\n  }\n\n  return path;\n}\nconst directorySeparator = '/';\nconst altDirectorySeparator = '\\\\';\nconst urlSchemeSeparator = '://';\nfunction isVolumeCharacter(charCode: number) {\n  return (\n    (charCode >= CharacterCodes.a && charCode <= CharacterCodes.z) ||\n    (charCode >= CharacterCodes.A && charCode <= CharacterCodes.Z)\n  );\n}\nfunction getFileUrlVolumeSeparatorEnd(url: string, start: number) {\n  const ch0 = url.charCodeAt(start);\n  if (ch0 === CharacterCodes.colon) return start + 1;\n  if (\n    ch0 === CharacterCodes.percent &&\n    url.charCodeAt(start + 1) === CharacterCodes._3\n  ) {\n    const ch2 = url.charCodeAt(start + 2);\n    if (ch2 === CharacterCodes.a || ch2 === CharacterCodes.A) return start + 3;\n  }\n  return -1;\n}\nfunction some<T>(array: readonly T[] | undefined): array is readonly T[];\nfunction some<T>(\n  array: readonly T[] | undefined,\n  predicate: (value: T) => boolean\n): boolean;\nfunction some<T>(\n  array: readonly T[] | undefined,\n  predicate?: (value: T) => boolean\n): boolean {\n  if (array) {\n    if (predicate) {\n      for (const v of array) {\n        if (predicate(v)) {\n          return true;\n        }\n      }\n    } else {\n      return array.length > 0;\n    }\n  }\n  return false;\n}\n/* @internal */\nconst enum CharacterCodes {\n  _3 = 0x33,\n  a = 0x61,\n  z = 0x7a,\n  A = 0x41,\n  Z = 0x5a,\n  asterisk = 0x2a, // *\n  backslash = 0x5c, // \\\n  colon = 0x3a, // :\n  percent = 0x25, // %\n  question = 0x3f, // ?\n  slash = 0x2f, // /\n}\nfunction pathComponents(path: string, rootLength: number) {\n  const root = path.substring(0, rootLength);\n  const rest = path.substring(rootLength).split(directorySeparator);\n  if (rest.length && !lastOrUndefined(rest)) rest.pop();\n  return [root, ...rest];\n}\nfunction lastOrUndefined<T>(array: readonly T[]): T | undefined {\n  return array.length === 0 ? undefined : array[array.length - 1];\n}\nfunction last<T>(array: readonly T[]): T {\n  // Debug.assert(array.length !== 0);\n  return array[array.length - 1];\n}\nfunction replaceWildcardCharacter(\n  match: string,\n  singleAsteriskRegexFragment: string\n) {\n  return match === '*'\n    ? singleAsteriskRegexFragment\n    : match === '?'\n    ? '[^/]'\n    : '\\\\' + match;\n}\n/**\n * An \"includes\" path \"foo\" is implicitly a glob \"foo/** /*\" (without the space) if its last component has no extension,\n * and does not contain any glob characters itself.\n */\nfunction isImplicitGlob(lastPathComponent: string): boolean {\n  return !/[.*?]/.test(lastPathComponent);\n}\n\nconst ts_ScriptTarget_ES5 = 1;\nconst ts_ScriptTarget_ES2022 = 9;\nconst ts_ScriptTarget_ESNext = 99;\nconst ts_ModuleKind_Node16 = 100;\nconst ts_ModuleKind_NodeNext = 199;\n// https://github.com/microsoft/TypeScript/blob/fc418a2e611c88cf9afa0115ff73490b2397d311/src/compiler/utilities.ts#L8761\nexport function getUseDefineForClassFields(compilerOptions: _ts.CompilerOptions): boolean {\n  return compilerOptions.useDefineForClassFields === undefined\n    ? getEmitScriptTarget(compilerOptions) >= ts_ScriptTarget_ES2022\n    : compilerOptions.useDefineForClassFields;\n}\n\n// https://github.com/microsoft/TypeScript/blob/fc418a2e611c88cf9afa0115ff73490b2397d311/src/compiler/utilities.ts#L8556\nexport function getEmitScriptTarget(compilerOptions: {\n  module?: _ts.CompilerOptions['module'];\n  target?: _ts.CompilerOptions['target'];\n}): _ts.ScriptTarget {\n  return (\n    compilerOptions.target ??\n    ((compilerOptions.module === ts_ModuleKind_Node16 && ts_ScriptTarget_ES2022) ||\n      (compilerOptions.module === ts_ModuleKind_NodeNext && ts_ScriptTarget_ESNext) ||\n      ts_ScriptTarget_ES5)\n  );\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/tsconfigs.js":{"lineLengths":[13,62,54,68,3,79,28,12,3,51,26,26,65,37,26,5,26,65,37,26,5,26,65,37,26,5,53,90,39,99,30,86,5,1,84,37],"data":{"version":3,"file":"tsconfigs.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/tsconfigs.ts"],"names":[],"mappings":";;;AAEA,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACpE;;;;GAIG;AACH,SAAgB,oCAAoC,CAAC,EAAY;IAC/D,MAAM,UAAU,GAAG,EAAuB,CAAC;IAC3C,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,OAAO,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAEjD,sFAAsF;IACtF,SAAS,gBAAgB,CAAC,MAKzB;QACC,OAAO,CACL,OAAQ,EAAE,CAAC,YAAoB,CAC7B,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,EAAE,CAC5C,KAAK,QAAQ;YACd,UAAU,CAAC,IAAI;YACf,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,IAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAC1E,CAAC;IACJ,CAAC;AACH,CAAC;AA/BD,oFA+BC","sourcesContent":["import type { TSCommon, TSInternal } from './ts-compiler-types';\n\nconst nodeMajor = parseInt(process.versions.node.split('.')[0], 10);\n/**\n * return parsed JSON of the bundled @tsconfig/bases config appropriate for the\n * running version of nodejs\n * @internal\n */\nexport function getDefaultTsconfigJsonForNodeVersion(ts: TSCommon): any {\n  const tsInternal = ts as any as TSInternal;\n  if (nodeMajor >= 16) {\n    const config = require('@tsconfig/node16/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 14) {\n    const config = require('@tsconfig/node14/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 12) {\n    const config = require('@tsconfig/node12/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  return require('@tsconfig/node10/tsconfig.json');\n\n  // Verify that tsconfig target and lib options are compatible with TypeScript compiler\n  function configCompatible(config: {\n    compilerOptions: {\n      lib: string[];\n      target: string;\n    };\n  }) {\n    return (\n      typeof (ts.ScriptTarget as any)[\n        config.compilerOptions.target.toUpperCase()\n      ] === 'number' &&\n      tsInternal.libs &&\n      config.compilerOptions.lib.every((lib) => tsInternal.libs!.includes(lib))\n    );\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/module-type-classifier.js":{"lineLengths":[13,62,44,49,33,3,12,89,14,69,3,46,54,44,68,20,129,63,66,7,29,18,31,10,14,30,10,14,30,10,6,41,38,44,80,20,49,20,5,77,39,20,5,12,68,28,33,6,1,64,48,84,64,1,56,51,34,43,88,26,9,5,1,50],"data":{"version":3,"file":"module-type-classifier.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/module-type-classifier.ts"],"names":[],"mappings":";;;AACA,iDAAoD;AACpD,iCAAwD;AAwBxD;;;;;GAKG;AACH,SAAgB,0BAA0B,CACxC,OAAoC;IAEpC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;IAClD,MAAM,QAAQ,GACZ,SAAS,KAAK,SAAS;QACrB,CAAC,CAAC,IAAA,uBAAgB,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAChD,CAAC,CAAC,SAAS,CAAC;IAEhB,MAAM,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,EAAE,CAAC,CAAC,GAAG,CACzD,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE;QACnB,MAAM,OAAO,GAAG,IAAA,uBAAgB,EAAC,QAAQ,CAAC,CAAC;QAC3C,OAAO,EAAE,OAAO,EAAE,YAAY,CAAC,QAAS,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC;IAC7D,CAAC,CACF,CAAC;IAEF,MAAM,eAAe,GACnB;QACE,OAAO,EAAE;YACP,UAAU,EAAE,MAAM;SACnB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,KAAK;SAClB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,KAAK;SAClB;KACF,CAAC;IACJ,MAAM,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC;IAErC,kCAAkC;IAClC,SAAS,uBAAuB,CAAC,IAAY;QAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxE,IAAI,OAAO;YAAE,OAAO,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,cAAc,GAAG,IAAA,mBAAY,EAAC,uBAAuB,CAAC,CAAC;IAE7D,SAAS,kBAAkB,CAAC,IAAY;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO;QACL,mCAAmC,EAAE,gBAAgB,CAAC,MAAM;YAC1D,CAAC,CAAC,cAAc;YAChB,CAAC,CAAC,kBAAkB;KACvB,CAAC;AACJ,CAAC;AAhDD,gEAgDC;AAED,SAAS,YAAY,CAAC,QAAgB,EAAE,aAAqB;IAC3D,MAAM,OAAO,GAAG,IAAA,iCAAkB,EAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC5D,OAAO,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC9D,CAAC;AAED,SAAS,aAAa,CACpB,OAAY,EACZ,UAA4B,EAC5B,SAAiB;IAEjB,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5C,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnC,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,SAAS,CAAC,EAAE;YAC5B,OAAO,MAAM,CAAC;SACf;KACF;AACH,CAAC","sourcesContent":["import type { ModuleTypeOverride, ModuleTypes } from '.';\nimport { getPatternFromSpec } from './ts-internals';\nimport { cachedLookup, normalizeSlashes } from './util';\n\n// Logic to support our `moduleTypes` option, which allows overriding node's default ESM / CJS\n// classification of `.js` files based on package.json `type` field.\n\n/**\n * Seperate internal type because `auto` is clearer than `package`, but changing\n * the public API is a breaking change.\n * @internal\n */\nexport type InternalModuleTypeOverride = 'cjs' | 'esm' | 'auto';\n/** @internal */\nexport interface ModuleTypeClassification {\n  moduleType: InternalModuleTypeOverride;\n}\n/** @internal */\nexport interface ModuleTypeClassifierOptions {\n  basePath?: string;\n  patterns?: ModuleTypes;\n}\n/** @internal */\nexport type ModuleTypeClassifier = ReturnType<\n  typeof createModuleTypeClassifier\n>;\n/**\n * @internal\n * May receive non-normalized options -- basePath and patterns -- and will normalize them\n * internally.\n * However, calls to `classifyModule` must pass pre-normalized paths!\n */\nexport function createModuleTypeClassifier(\n  options: ModuleTypeClassifierOptions\n) {\n  const { patterns, basePath: _basePath } = options;\n  const basePath =\n    _basePath !== undefined\n      ? normalizeSlashes(_basePath).replace(/\\/$/, '')\n      : undefined;\n\n  const patternTypePairs = Object.entries(patterns ?? []).map(\n    ([_pattern, type]) => {\n      const pattern = normalizeSlashes(_pattern);\n      return { pattern: parsePattern(basePath!, pattern), type };\n    }\n  );\n\n  const classifications: Record<ModuleTypeOverride, ModuleTypeClassification> =\n    {\n      package: {\n        moduleType: 'auto',\n      },\n      cjs: {\n        moduleType: 'cjs',\n      },\n      esm: {\n        moduleType: 'esm',\n      },\n    };\n  const auto = classifications.package;\n\n  // Passed path must be normalized!\n  function classifyModuleNonCached(path: string): ModuleTypeClassification {\n    const matched = matchPatterns(patternTypePairs, (_) => _.pattern, path);\n    if (matched) return classifications[matched.type];\n    return auto;\n  }\n\n  const classifyModule = cachedLookup(classifyModuleNonCached);\n\n  function classifyModuleAuto(path: String) {\n    return auto;\n  }\n\n  return {\n    classifyModuleByModuleTypeOverrides: patternTypePairs.length\n      ? classifyModule\n      : classifyModuleAuto,\n  };\n}\n\nfunction parsePattern(basePath: string, patternString: string): RegExp {\n  const pattern = getPatternFromSpec(patternString, basePath);\n  return pattern !== undefined ? new RegExp(pattern) : /(?:)/;\n}\n\nfunction matchPatterns<T>(\n  objects: T[],\n  getPattern: (t: T) => RegExp,\n  candidate: string\n): T | undefined {\n  for (let i = objects.length - 1; i >= 0; i--) {\n    const object = objects[i];\n    const pattern = getPattern(object);\n\n    if (pattern?.test(candidate)) {\n      return object;\n    }\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/resolver-functions.js":{"lineLengths":[13,62,41,31,3,12,95,3,42,116,108,45,84,38,96,124,138,70,40,51,17,27,18,5,78,53,55,5,47,62,5,48,52,5,7,77,7,53,52,43,19,48,55,36,53,49,55,53,60,53,60,60,60,59,9,54,57,9,6,6,12,73,123,7,153,51,23,45,136,28,158,76,65,84,26,83,120,207,43,34,21,17,13,33,52,13,34,11,6,84,113,117,40,52,9,19,6,181,10,86,62,62,42,71,37,27,84,40,35,59,171,82,142,45,21,107,17,99,47,95,57,93,46,38,55,17,13,49,68,13,50,11,6,12,27,60,39,32,37,6,1,58,46],"data":{"version":3,"file":"resolver-functions.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/resolver-functions.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve } from 'path';\nimport type { CreateOptions } from '.';\nimport type { Extensions } from './file-extensions';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport type { ProjectLocalResolveHelper } from './util';\n\n/**\n * @internal\n * In a factory because these are shared across both CompilerHost and LanguageService codepaths\n */\nexport function createResolverFunctions(kwargs: {\n  ts: TSCommon;\n  host: TSCommon.ModuleResolutionHost;\n  cwd: string;\n  getCanonicalFileName: (filename: string) => string;\n  config: TSCommon.ParsedCommandLine;\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  options: CreateOptions;\n  extensions: Extensions;\n}) {\n  const {\n    host,\n    ts,\n    config,\n    cwd,\n    getCanonicalFileName,\n    projectLocalResolveHelper,\n    options,\n    extensions,\n  } = kwargs;\n  const moduleResolutionCache = ts.createModuleResolutionCache(\n    cwd,\n    getCanonicalFileName,\n    config.options\n  );\n  const knownInternalFilenames = new Set<string>();\n  /** \"Buckets\" (module directories) whose contents should be marked \"internal\" */\n  const internalBuckets = new Set<string>();\n\n  // Get bucket for a source filename.  Bucket is the containing `./node_modules/*/` directory\n  // For '/project/node_modules/foo/node_modules/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/bar/'\n  // For '/project/node_modules/foo/node_modules/@scope/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/@scope/bar/'\n  const moduleBucketRe = /.*\\/node_modules\\/(?:@[^\\/]+\\/)?[^\\/]+\\//;\n  function getModuleBucket(filename: string) {\n    const find = moduleBucketRe.exec(filename);\n    if (find) return find[0];\n    return '';\n  }\n\n  // Mark that this file and all siblings in its bucket should be \"internal\"\n  function markBucketOfFilenameInternal(filename: string) {\n    internalBuckets.add(getModuleBucket(filename));\n  }\n\n  function isFileInInternalBucket(filename: string) {\n    return internalBuckets.has(getModuleBucket(filename));\n  }\n\n  function isFileKnownToBeInternal(filename: string) {\n    return knownInternalFilenames.has(filename);\n  }\n\n  /**\n   * If we need to emit JS for a file, force TS to consider it non-external\n   */\n  const fixupResolvedModule = (\n    resolvedModule:\n      | TSCommon.ResolvedModule\n      | TSCommon.ResolvedTypeReferenceDirective\n  ) => {\n    const { resolvedFileName } = resolvedModule;\n    if (resolvedFileName === undefined) return;\n    // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n    // .ts,.mts,.cts is always switched to internal\n    // .js is switched on-demand\n    if (\n      resolvedModule.isExternalLibraryImport &&\n      ((resolvedFileName.endsWith('.ts') &&\n        !resolvedFileName.endsWith('.d.ts')) ||\n        (resolvedFileName.endsWith('.cts') &&\n          !resolvedFileName.endsWith('.d.cts')) ||\n        (resolvedFileName.endsWith('.mts') &&\n          !resolvedFileName.endsWith('.d.mts')) ||\n        isFileKnownToBeInternal(resolvedFileName) ||\n        isFileInInternalBucket(resolvedFileName))\n    ) {\n      resolvedModule.isExternalLibraryImport = false;\n    }\n    if (!resolvedModule.isExternalLibraryImport) {\n      knownInternalFilenames.add(resolvedFileName);\n    }\n  };\n  /*\n   * NOTE:\n   * Older ts versions do not pass `redirectedReference` nor `options`.\n   * We must pass `redirectedReference` to newer ts versions, but cannot rely on `options`, hence the weird argument name\n   */\n  const resolveModuleNames: TSCommon.LanguageServiceHost['resolveModuleNames'] =\n    (\n      moduleNames: string[],\n      containingFile: string,\n      reusedNames: string[] | undefined,\n      redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n      optionsOnlyWithNewerTsVersions: TSCommon.CompilerOptions,\n      containingSourceFile?: TSCommon.SourceFile\n    ): (TSCommon.ResolvedModule | undefined)[] => {\n      return moduleNames.map((moduleName, i) => {\n        const mode = containingSourceFile\n          ? (ts as any as TSInternal).getModeForResolutionAtIndex?.(\n              containingSourceFile,\n              i\n            )\n          : undefined;\n        let { resolvedModule } = ts.resolveModuleName(\n          moduleName,\n          containingFile,\n          config.options,\n          host,\n          moduleResolutionCache,\n          redirectedReference,\n          mode\n        );\n        if (!resolvedModule && options.experimentalTsImportSpecifiers) {\n          const lastDotIndex = moduleName.lastIndexOf('.');\n          const ext = lastDotIndex >= 0 ? moduleName.slice(lastDotIndex) : '';\n          if (ext) {\n            const replacements = extensions.tsResolverEquivalents.get(ext);\n            for (const replacementExt of replacements ?? []) {\n              ({ resolvedModule } = ts.resolveModuleName(\n                moduleName.slice(0, -ext.length) + replacementExt,\n                containingFile,\n                config.options,\n                host,\n                moduleResolutionCache,\n                redirectedReference,\n                mode\n              ));\n              if (resolvedModule) break;\n            }\n          }\n        }\n        if (resolvedModule) {\n          fixupResolvedModule(resolvedModule);\n        }\n        return resolvedModule;\n      });\n    };\n\n  // language service never calls this, but TS docs recommend that we implement it\n  const getResolvedModuleWithFailedLookupLocationsFromCache: TSCommon.LanguageServiceHost['getResolvedModuleWithFailedLookupLocationsFromCache'] =\n    (\n      moduleName,\n      containingFile,\n      resolutionMode?: TSCommon.ModuleKind.CommonJS | TSCommon.ModuleKind.ESNext\n    ): TSCommon.ResolvedModuleWithFailedLookupLocations | undefined => {\n      const ret = ts.resolveModuleNameFromCache(\n        moduleName,\n        containingFile,\n        moduleResolutionCache,\n        resolutionMode\n      );\n      if (ret && ret.resolvedModule) {\n        fixupResolvedModule(ret.resolvedModule);\n      }\n      return ret;\n    };\n\n  const resolveTypeReferenceDirectives: TSCommon.LanguageServiceHost['resolveTypeReferenceDirectives'] =\n    (\n      typeDirectiveNames: string[] | readonly TSCommon.FileReference[],\n      containingFile: string,\n      redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n      options: TSCommon.CompilerOptions,\n      containingFileMode?: TSCommon.SourceFile['impliedNodeFormat'] | undefined // new impliedNodeFormat is accepted by compilerHost\n    ): (TSCommon.ResolvedTypeReferenceDirective | undefined)[] => {\n      // Note: seems to be called with empty typeDirectiveNames array for all files.\n      // TODO consider using `ts.loadWithTypeDirectiveCache`\n      return typeDirectiveNames.map((typeDirectiveName) => {\n        // Copy-pasted from TS source:\n        const nameIsString = typeof typeDirectiveName === 'string';\n        const mode = nameIsString\n          ? undefined\n          : (ts as any as TSInternal).getModeForFileReference!(\n              typeDirectiveName,\n              containingFileMode\n            );\n        const strName = nameIsString\n          ? typeDirectiveName\n          : typeDirectiveName.fileName.toLowerCase();\n        let { resolvedTypeReferenceDirective } =\n          ts.resolveTypeReferenceDirective(\n            strName,\n            containingFile,\n            config.options,\n            host,\n            redirectedReference,\n            undefined,\n            mode\n          );\n        if (typeDirectiveName === 'node' && !resolvedTypeReferenceDirective) {\n          // Resolve @types/node relative to project first, then __dirname (copy logic from elsewhere / refactor into reusable function)\n          let typesNodePackageJsonPath: string | undefined;\n          try {\n            typesNodePackageJsonPath = projectLocalResolveHelper(\n              '@types/node/package.json',\n              true\n            );\n          } catch {} // gracefully do nothing when @types/node is not installed for any reason\n          if (typesNodePackageJsonPath) {\n            const typeRoots = [resolve(typesNodePackageJsonPath, '../..')];\n            ({ resolvedTypeReferenceDirective } =\n              ts.resolveTypeReferenceDirective(\n                typeDirectiveName,\n                containingFile,\n                {\n                  ...config.options,\n                  typeRoots,\n                },\n                host,\n                redirectedReference\n              ));\n          }\n        }\n        if (resolvedTypeReferenceDirective) {\n          fixupResolvedModule(resolvedTypeReferenceDirective);\n        }\n        return resolvedTypeReferenceDirective;\n      });\n    };\n\n  return {\n    resolveModuleNames,\n    getResolvedModuleWithFailedLookupLocationsFromCache,\n    resolveTypeReferenceDirectives,\n    isFileKnownToBeInternal,\n    markBucketOfFilenameInternal,\n  };\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/cjs-resolve-hooks.js":{"lineLengths":[13,62,56,3,12,3,64,37,60,46,73,28,93,51,37,78,41,101,96,9,30,41,63,58,9,5,1,88,45],"data":{"version":3,"file":"cjs-resolve-hooks.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/cjs-resolve-hooks.ts"],"names":[],"mappings":";;;AAoBA;;GAEG;AACH,SAAgB,sCAAsC,CAAC,aAAsB;IAC3E,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAmC,CAAC;IACnE,MAAM,uBAAuB,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACxD,MAAM,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC;IAC1C,MAAM,iBAAiB,GAAG,aAAa,CAAC,OAAO,CAAC,oBAAoB,CAAC;IACrE,IAAI,iBAAiB,EAAE;QACrB,MAAM,EAAE,eAAe,EAAE,sBAAsB,EAAE,GAC/C,aAAa,CAAC,gBAAgB,EAAE,CAAC;QACnC,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAC3C,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,SAAS,gBAAgB,CAEvB,OAAe,EACf,MAAe,EACf,MAAgB,EAChB,OAAsC,EACtC,GAAG,IAAQ;YAEX,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAC1B,OAAO,uBAAuB,CAAC,IAAI,CACjC,IAAI,EACJ,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,GAAG,IAAI,CACR,CAAC;YAEJ,OAAO,sBAAsB,CAAC,IAAI,CAChC,IAAI,EACJ,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,GAAG,IAAI,CACR,CAAC;QACJ,CAAC;QACD,SAAS,SAAS;YAChB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAC1B,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAgB,CAAC,CAAC;YACxD,OAAO,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,SAAgB,CAAC,CAAC;QACvD,CAAC;KACF;AACH,CAAC;AA3CD,wFA2CC","sourcesContent":["import type Module = require('module');\nimport type { Service } from '.';\n\n/** @internal */\nexport type ModuleConstructorWithInternals = typeof Module & {\n  _resolveFilename(\n    request: string,\n    parent?: Module,\n    isMain?: boolean,\n    options?: ModuleResolveFilenameOptions,\n    ...rest: any[]\n  ): string;\n  _preloadModules(requests?: string[]): void;\n  _findPath(request: string, paths: string[], isMain: boolean): string;\n};\n\ninterface ModuleResolveFilenameOptions {\n  paths?: Array<string>;\n}\n\n/**\n * @internal\n */\nexport function installCommonjsResolveHooksIfNecessary(tsNodeService: Service) {\n  const Module = require('module') as ModuleConstructorWithInternals;\n  const originalResolveFilename = Module._resolveFilename;\n  const originalFindPath = Module._findPath;\n  const shouldInstallHook = tsNodeService.options.experimentalResolver;\n  if (shouldInstallHook) {\n    const { Module_findPath, Module_resolveFilename } =\n      tsNodeService.getNodeCjsLoader();\n    Module._resolveFilename = _resolveFilename;\n    Module._findPath = _findPath;\n    function _resolveFilename(\n      this: any,\n      request: string,\n      parent?: Module,\n      isMain?: boolean,\n      options?: ModuleResolveFilenameOptions,\n      ...rest: []\n    ): string {\n      if (!tsNodeService.enabled())\n        return originalResolveFilename.call(\n          this,\n          request,\n          parent,\n          isMain,\n          options,\n          ...rest\n        );\n\n      return Module_resolveFilename.call(\n        this,\n        request,\n        parent,\n        isMain,\n        options,\n        ...rest\n      );\n    }\n    function _findPath(this: any): string {\n      if (!tsNodeService.enabled())\n        return originalFindPath.apply(this, arguments as any);\n      return Module_findPath.apply(this, arguments as any);\n    }\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/node-module-type-classifier.js":{"lineLengths":[13,62,32,99,3,84,2,78,53,2,26,8,8,94,78,12,3,59,44,57,76,18,20,20,56,20,20,56,5,27,102,64,29,25,5,21,1,40,55],"data":{"version":3,"file":"node-module-type-classifier.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/node-module-type-classifier.ts"],"names":[],"mappings":";;;AAAA,mGAAgF;AAEhF;;;;;;;;;;;;GAYG;AACH,SAAgB,cAAc,CAC5B,cAAsB,EACtB,gBAAyB;IAEzB,wCAAwC;IACxC,MAAM,YAAY,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,GAAG,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxE,QAAQ,GAAG,EAAE;QACX,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACT,OAAO,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACT,OAAO,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;KAC/C;IACD,IAAI,gBAAgB,EAAE;QACpB,MAAM,YAAY,GAAG,IAAA,mDAAgB,EAAC,cAAc,CAAC,CAAC;QACtD,IAAI,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ;YAAE,OAAO,SAAS,CAAC;QAC1E,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AArBD,wCAqBC","sourcesContent":["import { readPackageScope } from '../dist-raw/node-internal-modules-cjs-loader';\n\n/**\n * Determine how to emit a module based on tsconfig \"module\" and package.json \"type\"\n *\n * Supports module=nodenext/node16 with transpileOnly, where we cannot ask the\n * TS typechecker to tell us if a file is CJS or ESM.\n *\n * Return values indicate:\n * - cjs\n * - esm\n * - nodecjs == node-flavored cjs where dynamic imports are *not* transformed into `require()`\n * - undefined == emit according to tsconfig `module` config, whatever that is\n * @internal\n */\nexport function classifyModule(\n  nativeFilename: string,\n  isNodeModuleType: boolean\n): 'nodecjs' | 'cjs' | 'esm' | 'nodeesm' | undefined {\n  // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n  const lastDotIndex = nativeFilename.lastIndexOf('.');\n  const ext = lastDotIndex >= 0 ? nativeFilename.slice(lastDotIndex) : '';\n  switch (ext) {\n    case '.cjs':\n    case '.cts':\n      return isNodeModuleType ? 'nodecjs' : 'cjs';\n    case '.mjs':\n    case '.mts':\n      return isNodeModuleType ? 'nodeesm' : 'esm';\n  }\n  if (isNodeModuleType) {\n    const packageScope = readPackageScope(nativeFilename);\n    if (packageScope && packageScope.data.type === 'module') return 'nodeesm';\n    return 'nodecjs';\n  }\n  return undefined;\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/file-extensions.js":{"lineLengths":[13,62,31,33,33,19,20,20,21,21,3,39,21,30,23,23,3,44,31,10,12,12,11,11,2,65,17,98,22,73,28,31,10,11,11,11,11,2,3,40,12,3,52,82,78,47,30,77,72,63,33,33,8,39,35,27,41,29,48,33,39,31,45,33,52,5,77,109,104,7,109,67,72,51,44,7,146,94,81,81,81,115,102,68,124,64,105,12,107,17,95,30,64,38,11,80,44,11,24,11,79,64,10,85,84,39,10,83,84,41,11,30,11,88,35,11,40,11,78,11,53,11,76,11,39,27,27,27,26,6,1,38,43],"data":{"version":3,"file":"file-extensions.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/file-extensions.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as _ts from 'typescript';\nimport type { RegisterOptions } from '.';\nimport { versionGteLt } from './util';\n\n/**\n * Centralized specification of how we deal with file extensions based on\n * project options:\n * which ones we do/don't support, in what situations, etc.  These rules drive\n * logic elsewhere.\n * @internal\n * */\nexport type Extensions = ReturnType<typeof getExtensions>;\n\nconst nodeEquivalents = new Map<string, string>([\n  ['.ts', '.js'],\n  ['.tsx', '.js'],\n  ['.jsx', '.js'],\n  ['.mts', '.mjs'],\n  ['.cts', '.cjs'],\n]);\n\nconst tsResolverEquivalents = new Map<string, readonly string[]>([\n  ['.ts', ['.js']],\n  ['.tsx', ['.js', '.jsx']],\n  ['.mts', ['.mjs']],\n  ['.cts', ['.cjs']],\n]);\n\n// All extensions understood by vanilla node\nconst vanillaNodeExtensions: readonly string[] = [\n  '.js',\n  '.json',\n  '.node',\n  '.mjs',\n  '.cjs',\n];\n\n// Extensions added by vanilla node's require() if you omit them:\n// js, json, node\n// Extensions added by vanilla node if you omit them with --experimental-specifier-resolution=node\n// js, json, node, mjs\n// Extensions added by ESM codepath's legacy package.json \"main\" resolver\n// js, json, node (not mjs!)\n\nconst nodeDoesNotUnderstand: readonly string[] = [\n  '.ts',\n  '.tsx',\n  '.jsx',\n  '.cts',\n  '.mts',\n];\n\n/**\n * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n * @internal\n */\nexport function getExtensions(\n  config: _ts.ParsedCommandLine,\n  options: RegisterOptions,\n  tsVersion: string\n) {\n  // TS 4.5 is first version to understand .cts, .mts, .cjs, and .mjs extensions\n  const tsSupportsMtsCtsExts = versionGteLt(tsVersion, '4.5.0');\n\n  const requiresHigherTypescriptVersion: string[] = [];\n  if (!tsSupportsMtsCtsExts)\n    requiresHigherTypescriptVersion.push('.cts', '.cjs', '.mts', '.mjs');\n\n  const allPossibleExtensionsSortedByPreference = Array.from(\n    new Set([\n      ...(options.preferTsExts ? nodeDoesNotUnderstand : []),\n      ...vanillaNodeExtensions,\n      ...nodeDoesNotUnderstand,\n    ])\n  );\n\n  const compiledJsUnsorted: string[] = ['.ts'];\n  const compiledJsxUnsorted: string[] = [];\n\n  if (config.options.jsx) compiledJsxUnsorted.push('.tsx');\n  if (tsSupportsMtsCtsExts) compiledJsUnsorted.push('.mts', '.cts');\n  if (config.options.allowJs) {\n    compiledJsUnsorted.push('.js');\n    if (config.options.jsx) compiledJsxUnsorted.push('.jsx');\n    if (tsSupportsMtsCtsExts) compiledJsUnsorted.push('.mjs', '.cjs');\n  }\n\n  const compiledUnsorted = [...compiledJsUnsorted, ...compiledJsxUnsorted];\n  const compiled = allPossibleExtensionsSortedByPreference.filter((ext) =>\n    compiledUnsorted.includes(ext)\n  );\n\n  const compiledNodeDoesNotUnderstand = nodeDoesNotUnderstand.filter((ext) =>\n    compiled.includes(ext)\n  );\n\n  /**\n   * TS's resolver can resolve foo.js to foo.ts, by replacing .js extension with several source extensions.\n   * IMPORTANT: Must preserve ordering according to preferTsExts!\n   *            Must include the .js/.mjs/.cjs extension in the array!\n   *            This affects resolution behavior!\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  const r = allPossibleExtensionsSortedByPreference.filter((ext) =>\n    [...compiledUnsorted, '.js', '.mjs', '.cjs', '.mts', '.cts'].includes(ext)\n  );\n  const replacementsForJs = r.filter((ext) =>\n    ['.js', '.jsx', '.ts', '.tsx'].includes(ext)\n  );\n  const replacementsForJsx = r.filter((ext) => ['.jsx', '.tsx'].includes(ext));\n  const replacementsForMjs = r.filter((ext) => ['.mjs', '.mts'].includes(ext));\n  const replacementsForCjs = r.filter((ext) => ['.cjs', '.cts'].includes(ext));\n  const replacementsForJsOrMjs = r.filter((ext) =>\n    ['.js', '.jsx', '.ts', '.tsx', '.mjs', '.mts'].includes(ext)\n  );\n\n  // Node allows omitting .js or .mjs extension in certain situations (CJS, ESM w/experimental flag)\n  // So anything that compiles to .js or .mjs can also be omitted.\n  const experimentalSpecifierResolutionAddsIfOmitted = Array.from(\n    new Set([...replacementsForJsOrMjs, '.json', '.node'])\n  );\n  // Same as above, except node curiuosly doesn't do .mjs here\n  const legacyMainResolveAddsIfOmitted = Array.from(\n    new Set([...replacementsForJs, '.json', '.node'])\n  );\n\n  return {\n    /** All file extensions we transform, ordered by resolution preference according to preferTsExts */\n    compiled,\n    /** Resolved extensions that vanilla node will not understand; we should handle them */\n    nodeDoesNotUnderstand,\n    /** Like the above, but only the ones we're compiling */\n    compiledNodeDoesNotUnderstand,\n    /**\n     * Mapping from extensions understood by tsc to the equivalent for node,\n     * as far as getFormat is concerned.\n     */\n    nodeEquivalents,\n    /**\n     * Mapping from extensions rejected by TSC in import specifiers, to the\n     * possible alternatives that TS's resolver will accept.\n     *\n     * When we allow users to opt-in to .ts extensions in import specifiers, TS's\n     * resolver requires us to replace the .ts extensions with .js alternatives.\n     * Otherwise, resolution fails.\n     *\n     * Note TS's resolver is only used by, and only required for, typechecking.\n     * This is separate from node's resolver, which we hook separately and which\n     * does not require this mapping.\n     */\n    tsResolverEquivalents,\n    /**\n     * Extensions that we can support if the user upgrades their typescript version.\n     * Used when raising hints.\n     */\n    requiresHigherTypescriptVersion,\n    /**\n     * --experimental-specifier-resolution=node will add these extensions.\n     */\n    experimentalSpecifierResolutionAddsIfOmitted,\n    /**\n     * ESM loader will add these extensions to package.json \"main\" field\n     */\n    legacyMainResolveAddsIfOmitted,\n    replacementsForMjs,\n    replacementsForCjs,\n    replacementsForJsx,\n    replacementsForJs,\n  };\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/ts-transpile-module.js":{"lineLengths":[13,62,41,16,56,340,42,52,92,13,29,55,39,77,47,9,5,63,59,5,144,43,35,40,49,81,26,104,36,48,115,37,13,18,101,34,13,10,48,46,53,38,34,97,106,36,33,6,22,28,25,19,19,22,27,86,54,23,41,89,34,35,80,43,61,58,121,56,79,11,43,65,9,52,104,9,17,31,34,78,63,49,21,32,66,83,9,15,21,40,33,41,71,37,58,58,5,1,58,47],"data":{"version":3,"file":"ts-transpile-module.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/ts-transpile-module.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  CompilerHost,\n  CompilerOptions,\n  Diagnostic,\n  SourceFile,\n  TranspileOptions,\n  TranspileOutput,\n} from 'typescript';\nimport type { TSCommon } from './ts-compiler-types';\n\n/** @internal */\nexport function createTsTranspileModule(\n  ts: TSCommon,\n  transpileOptions: Pick<\n    TranspileOptions,\n    'compilerOptions' | 'reportDiagnostics' | 'transformers'\n  >\n) {\n  const {\n    createProgram,\n    createSourceFile,\n    getDefaultCompilerOptions,\n    getImpliedNodeFormatForFile,\n    fixupCompilerOptions,\n    transpileOptionValueCompilerOptions,\n    getNewLineCharacter,\n    fileExtensionIs,\n    normalizePath,\n    Debug,\n    toPath,\n    getSetExternalModuleIndicator,\n    getEntries,\n    addRange,\n    hasProperty,\n    getEmitScriptTarget,\n    getDirectoryPath,\n  } = ts as any;\n\n  const compilerOptionsDiagnostics: Diagnostic[] = [];\n\n  const options: CompilerOptions = transpileOptions.compilerOptions\n    ? fixupCompilerOptions(\n        transpileOptions.compilerOptions,\n        compilerOptionsDiagnostics\n      )\n    : {};\n\n  // mix in default options\n  const defaultOptions = getDefaultCompilerOptions();\n  for (const key in defaultOptions) {\n    if (hasProperty(defaultOptions, key) && options[key] === undefined) {\n      options[key] = defaultOptions[key];\n    }\n  }\n\n  for (const option of transpileOptionValueCompilerOptions) {\n    options[option.name] = option.transpileOptionValue;\n  }\n\n  // transpileModule does not write anything to disk so there is no need to verify that there are no conflicts between input and output paths.\n  options.suppressOutputPathCheck = true;\n\n  // Filename can be non-ts file.\n  options.allowNonTsExtensions = true;\n\n  const newLine = getNewLineCharacter(options);\n  // Create a compilerHost object to allow the compiler to read and write files\n  const compilerHost: CompilerHost = {\n    getSourceFile: (fileName) =>\n      fileName === normalizePath(inputFileName) ? sourceFile : undefined,\n    writeFile: (name, text) => {\n      if (fileExtensionIs(name, '.map')) {\n        Debug.assertEqual(\n          sourceMapText,\n          undefined,\n          'Unexpected multiple source map outputs, file:',\n          name\n        );\n        sourceMapText = text;\n      } else {\n        Debug.assertEqual(\n          outputText,\n          undefined,\n          'Unexpected multiple outputs, file:',\n          name\n        );\n        outputText = text;\n      }\n    },\n    getDefaultLibFileName: () => 'lib.d.ts',\n    useCaseSensitiveFileNames: () => true,\n    getCanonicalFileName: (fileName) => fileName,\n    getCurrentDirectory: () => '',\n    getNewLine: () => newLine,\n    fileExists: (fileName): boolean =>\n      fileName === inputFileName || fileName === packageJsonFileName,\n    readFile: (fileName) =>\n      fileName === packageJsonFileName ? `{\"type\": \"${_packageJsonType}\"}` : '',\n    directoryExists: () => true,\n    getDirectories: () => [],\n  };\n\n  let inputFileName: string;\n  let packageJsonFileName: string;\n  let _packageJsonType: 'module' | 'commonjs';\n  let sourceFile: SourceFile;\n  let outputText: string | undefined;\n  let sourceMapText: string | undefined;\n\n  return transpileModule;\n\n  function transpileModule(\n    input: string,\n    transpileOptions2: Pick<\n      TranspileOptions,\n      'fileName' | 'moduleName' | 'renamedDependencies'\n    >,\n    packageJsonType: 'module' | 'commonjs' = 'commonjs'\n  ): TranspileOutput {\n    // if jsx is specified then treat file as .tsx\n    inputFileName =\n      transpileOptions2.fileName ||\n      (transpileOptions.compilerOptions && transpileOptions.compilerOptions.jsx\n        ? 'module.tsx'\n        : 'module.ts');\n    packageJsonFileName = getDirectoryPath(inputFileName) + '/package.json';\n    _packageJsonType = packageJsonType;\n\n    sourceFile = createSourceFile(inputFileName, input, {\n      languageVersion: getEmitScriptTarget(options),\n      impliedNodeFormat: getImpliedNodeFormatForFile(\n        toPath(inputFileName, '', compilerHost.getCanonicalFileName),\n        /*cache*/ undefined,\n        compilerHost,\n        options\n      ),\n      setExternalModuleIndicator: getSetExternalModuleIndicator(options),\n    });\n    if (transpileOptions2.moduleName) {\n      sourceFile.moduleName = transpileOptions2.moduleName;\n    }\n\n    if (transpileOptions2.renamedDependencies) {\n      (sourceFile as any).renamedDependencies = new Map(\n        getEntries(transpileOptions2.renamedDependencies)\n      );\n    }\n\n    // Output\n    outputText = undefined;\n    sourceMapText = undefined;\n\n    const program = createProgram([inputFileName], options, compilerHost);\n\n    const diagnostics = compilerOptionsDiagnostics.slice();\n\n    if (transpileOptions.reportDiagnostics) {\n      addRange(\n        /*to*/ diagnostics,\n        /*from*/ program.getSyntacticDiagnostics(sourceFile)\n      );\n      addRange(/*to*/ diagnostics, /*from*/ program.getOptionsDiagnostics());\n    }\n    // Emit\n    program.emit(\n      /*targetSourceFile*/ undefined,\n      /*writeFile*/ undefined,\n      /*cancellationToken*/ undefined,\n      /*emitOnlyDtsFiles*/ undefined,\n      transpileOptions.transformers\n    );\n\n    if (outputText === undefined) return Debug.fail('Output generation failed');\n\n    return { outputText, diagnostics, sourceMapText };\n  }\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/dist/repl.js":{"lineLengths":[13,62,242,27,31,31,27,35,27,37,33,35,15,26,36,46,10,56,61,5,33,1,9,25,29,31,5,26,1,16,36,16,29,16,38,16,31,16,36,16,29,3,34,2,81,82,14,2,17,2,40,69,32,20,2,17,3,35,27,81,34,23,76,95,16,142,108,86,89,89,75,17,48,25,139,19,17,25,17,29,14,22,14,15,15,26,6,23,35,27,64,41,41,48,37,25,25,25,85,18,15,9,5,29,50,29,18,24,20,40,11,55,28,5,40,63,42,29,18,24,32,20,11,5,59,58,32,27,19,9,13,49,21,42,24,15,51,30,25,70,21,42,50,21,21,13,18,49,13,9,23,31,9,84,53,73,37,23,87,94,41,51,68,65,60,27,17,22,42,50,104,63,21,35,17,13,18,35,46,52,118,25,82,74,176,21,29,17,33,13,9,41,236,9,5,42,26,32,5,42,37,123,87,53,27,19,17,38,13,25,36,103,32,13,9,72,66,69,90,40,25,37,39,158,37,60,27,28,31,11,30,31,67,55,26,24,85,74,34,53,13,37,66,38,35,52,111,62,113,93,72,62,42,69,81,35,13,9,16,32,36,62,43,34,41,27,17,66,107,23,25,57,28,60,37,14,11,73,32,126,53,25,27,36,32,15,9,20,5,1,32,3,57,3,17,23,25,24,24,24,25,24,25,24,23,5,1,30,57,29,32,31,91,46,13,56,9,21,25,9,5,31,32,24,93,48,13,51,52,9,21,25,9,5,36,1,64,67,3,29,2,115,34,3,45,112,28,75,68,68,114,27,69,38,26,5,30,134,49,15,114,36,76,75,71,5,9,66,5,17,15,25,84,101,26,13,35,46,27,32,15,9,23,29,18,5,37,46,79,81,81,40,85,81,90,57,100,23,15,5,10,30,93,60,107,96,97,33,51,23,11,5,22,38,85,35,27,38,42,53,71,65,80,45,49,35,40,92,23,29,17,13,27,83,15,9,5,82,29,32,16,34,40,26,49,52,60,17,29,17,10,5,10,16,41,73,10,5,1,3,44,3,48,55,54,41,5,10,44,5,1,3,59,3,42,34,38,36,34,25,36,20,24,32,34,36,32,6,1,3,29,3,27,18,31,28,20,9,5,17,1,3,109,108,123,22,3,32,17,17,17,17,5,13,121,6,17,17,17,17,5,13,110,6,3,3,54,56,89,3,38,9,9,9,168,2,3,46,3,31,50,46,32,76,7,1,3,12,71,3,60,29,32,55,5,28,37,50,1,36,32],"data":{"version":3,"file":"repl.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/ts-node@10.9.2_@types+node@20.17.30_typescript@5.8.3/node_modules/ts-node/src/repl.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as _diff from 'diff';\nimport { homedir } from 'os';\nimport { join } from 'path';\nimport {\n  Recoverable,\n  ReplOptions,\n  REPLServer,\n  start as nodeReplStart,\n} from 'repl';\nimport { Context, createContext, Script } from 'vm';\nimport { Service, CreateOptions, TSError, env } from './index';\nimport { readFileSync, statSync } from 'fs';\nimport { Console } from 'console';\nimport * as assert from 'assert';\nimport type * as tty from 'tty';\nimport type * as Module from 'module';\nimport { builtinModules } from 'module';\n\n// Lazy-loaded.\nlet _processTopLevelAwait: (src: string) => string | null;\nfunction getProcessTopLevelAwait() {\n  if (_processTopLevelAwait === undefined) {\n    ({\n      processTopLevelAwait: _processTopLevelAwait,\n    } = require('../dist-raw/node-internal-repl-await'));\n  }\n  return _processTopLevelAwait;\n}\nlet diff: typeof _diff;\nfunction getDiffLines() {\n  if (diff === undefined) {\n    diff = require('diff');\n  }\n  return diff.diffLines;\n}\n\n/** @internal */\nexport const EVAL_FILENAME = `[eval].ts`;\n/** @internal */\nexport const EVAL_NAME = `[eval]`;\n/** @internal */\nexport const STDIN_FILENAME = `[stdin].ts`;\n/** @internal */\nexport const STDIN_NAME = `[stdin]`;\n/** @internal */\nexport const REPL_FILENAME = '<repl>.ts';\n/** @internal */\nexport const REPL_NAME = '<repl>';\n\nexport interface ReplService {\n  readonly state: EvalState;\n  /**\n   * Bind this REPL to a ts-node compiler service.  A compiler service must be bound before `eval`-ing code or starting the REPL\n   */\n  setService(service: Service): void;\n  /**\n   * Append code to the virtual <repl> source file, compile it to JavaScript, throw semantic errors if the typechecker is enabled,\n   * and execute it.\n   *\n   * Note: typically, you will want to call `start()` instead of using this method.\n   *\n   * @param code string of TypeScript.\n   */\n  evalCode(code: string): any;\n  /** @internal */\n  evalCodeInternal(opts: {\n    code: string;\n    enableTopLevelAwait?: boolean;\n    context?: Context;\n  }):\n    | {\n        containsTopLevelAwait: true;\n        valuePromise: Promise<any>;\n      }\n    | {\n        containsTopLevelAwait: false;\n        value: any;\n      };\n  /**\n   * `eval` implementation compatible with node's REPL API\n   *\n   * Can be used in advanced scenarios if you want to manually create your own\n   * node REPL instance and delegate eval to this `ReplService`.\n   *\n   * Example:\n   *\n   *     import {start} from 'repl';\n   *     const replService: tsNode.ReplService = ...; // assuming you have already created a ts-node ReplService\n   *     const nodeRepl = start({eval: replService.eval});\n   */\n  nodeEval(\n    code: string,\n    // TODO change to `Context` in a future release?  Technically a breaking change\n    context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ): void;\n  evalAwarePartialHost: EvalAwarePartialHost;\n  /** Start a node REPL */\n  start(): void;\n  /**\n   * Start a node REPL, evaling a string of TypeScript before it starts.\n   * @deprecated\n   */\n  start(code: string): void;\n  /** @internal */\n  startInternal(opts?: ReplOptions): REPLServer;\n  /** @internal */\n  readonly stdin: NodeJS.ReadableStream;\n  /** @internal */\n  readonly stdout: NodeJS.WritableStream;\n  /** @internal */\n  readonly stderr: NodeJS.WritableStream;\n  /** @internal */\n  readonly console: Console;\n}\n\n/** @category REPL */\nexport interface CreateReplOptions {\n  service?: Service;\n  state?: EvalState;\n  stdin?: NodeJS.ReadableStream;\n  stdout?: NodeJS.WritableStream;\n  stderr?: NodeJS.WritableStream;\n  /** @internal */\n  composeWithEvalAwarePartialHost?: EvalAwarePartialHost;\n  /**\n   * @internal\n   * Ignore diagnostics that are annoying when interactively entering input line-by-line.\n   */\n  ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl?: boolean;\n}\n\n/**\n * Create a ts-node REPL instance.\n *\n * Pay close attention to the example below.  Today, the API requires a few lines\n * of boilerplate to correctly bind the `ReplService` to the ts-node `Service` and\n * vice-versa.\n *\n * Usage example:\n *\n *     const repl = tsNode.createRepl();\n *     const service = tsNode.create({...repl.evalAwarePartialHost});\n *     repl.setService(service);\n *     repl.start();\n *\n * @category REPL\n */\nexport function createRepl(options: CreateReplOptions = {}) {\n  const { ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl = true } = options;\n  let service = options.service;\n  let nodeReplServer: REPLServer;\n  // If `useGlobal` is not true, then REPL creates a context when started.\n  // This stores a reference to it or to `global`, whichever is used, after REPL has started.\n  let context: Context | undefined;\n  const state =\n    options.state ?? new EvalState(join(process.cwd(), REPL_FILENAME));\n  const evalAwarePartialHost = createEvalAwarePartialHost(\n    state,\n    options.composeWithEvalAwarePartialHost\n  );\n  const stdin = options.stdin ?? process.stdin;\n  const stdout = options.stdout ?? process.stdout;\n  const stderr = options.stderr ?? process.stderr;\n  const _console =\n    stdout === process.stdout && stderr === process.stderr\n      ? console\n      : new Console(stdout, stderr);\n\n  const replService: ReplService = {\n    state: options.state ?? new EvalState(join(process.cwd(), EVAL_FILENAME)),\n    setService,\n    evalCode,\n    evalCodeInternal,\n    nodeEval,\n    evalAwarePartialHost,\n    start,\n    startInternal,\n    stdin,\n    stdout,\n    stderr,\n    console: _console,\n  };\n\n  return replService;\n\n  function setService(_service: Service) {\n    service = _service;\n    if (ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl) {\n      service.addDiagnosticFilter({\n        appliesToAllFiles: false,\n        filenamesAbsolute: [state.path],\n        diagnosticsIgnored: [\n          2393, // Duplicate function implementation: https://github.com/TypeStrong/ts-node/issues/729\n          6133, // <identifier> is declared but its value is never read. https://github.com/TypeStrong/ts-node/issues/850\n          7027, // Unreachable code detected. https://github.com/TypeStrong/ts-node/issues/469\n          ...(service.shouldReplAwait ? topLevelAwaitDiagnosticCodes : []),\n        ],\n      });\n    }\n  }\n\n  function evalCode(code: string) {\n    const result = appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      context,\n      overrideIsCompletion: false,\n    });\n    assert(result.containsTopLevelAwait === false);\n    return result.value;\n  }\n\n  function evalCodeInternal(options: {\n    code: string;\n    enableTopLevelAwait?: boolean;\n    context: Context;\n  }) {\n    const { code, enableTopLevelAwait, context } = options;\n    return appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      enableTopLevelAwait,\n      context,\n    });\n  }\n\n  function nodeEval(\n    code: string,\n    context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ) {\n    // TODO: Figure out how to handle completion here.\n    if (code === '.scope') {\n      callback(null);\n      return;\n    }\n\n    try {\n      const evalResult = evalCodeInternal({\n        code,\n        enableTopLevelAwait: true,\n        context,\n      });\n\n      if (evalResult.containsTopLevelAwait) {\n        (async () => {\n          try {\n            callback(null, await evalResult.valuePromise);\n          } catch (promiseError) {\n            handleError(promiseError);\n          }\n        })();\n      } else {\n        callback(null, evalResult.value);\n      }\n    } catch (error) {\n      handleError(error);\n    }\n\n    // Log TSErrors, check if they're recoverable, log helpful hints for certain\n    // well-known errors, and invoke `callback()`\n    // TODO should evalCode API get the same error-handling benefits?\n    function handleError(error: unknown) {\n      // Don't show TLA hint if the user explicitly disabled repl top level await\n      const canLogTopLevelAwaitHint =\n        service!.options.experimentalReplAwait !== false &&\n        !service!.shouldReplAwait;\n      if (error instanceof TSError) {\n        // Support recoverable compilations using >= node 6.\n        if (Recoverable && isRecoverable(error)) {\n          callback(new Recoverable(error));\n          return;\n        } else {\n          _console.error(error);\n\n          if (\n            canLogTopLevelAwaitHint &&\n            error.diagnosticCodes.some((dC) =>\n              topLevelAwaitDiagnosticCodes.includes(dC)\n            )\n          ) {\n            _console.error(getTopLevelAwaitHint());\n          }\n          callback(null);\n        }\n      } else {\n        let _error = error as Error | undefined;\n        if (\n          canLogTopLevelAwaitHint &&\n          _error instanceof SyntaxError &&\n          _error.message?.includes('await is only valid')\n        ) {\n          try {\n            // Only way I know to make our hint appear after the error\n            _error.message += `\\n\\n${getTopLevelAwaitHint()}`;\n            _error.stack = _error.stack?.replace(\n              /(SyntaxError:.*)/,\n              (_, $1) => `${$1}\\n\\n${getTopLevelAwaitHint()}`\n            );\n          } catch {}\n        }\n        callback(_error as Error);\n      }\n    }\n    function getTopLevelAwaitHint() {\n      return `Hint: REPL top-level await requires TypeScript version 3.8 or higher and target ES2018 or higher. You are using TypeScript ${\n        service!.ts.version\n      } and target ${\n        service!.ts.ScriptTarget[service!.config.options.target!]\n      }.`;\n    }\n  }\n\n  // Note: `code` argument is deprecated\n  function start(code?: string) {\n    startInternal({ code });\n  }\n\n  // Note: `code` argument is deprecated\n  function startInternal(\n    options?: ReplOptions & { code?: string; forceToBeModule?: boolean }\n  ) {\n    const { code, forceToBeModule = true, ...optionsOverride } = options ?? {};\n    // TODO assert that `service` is set; remove all `service!` non-null assertions\n\n    // Eval incoming code before the REPL starts.\n    // Note: deprecated\n    if (code) {\n      try {\n        evalCode(`${code}\\n`);\n      } catch (err) {\n        _console.error(err);\n        // Note: should not be killing the process here, but this codepath is deprecated anyway\n        process.exit(1);\n      }\n    }\n\n    // In case the typescript compiler hasn't compiled anything yet,\n    // make it run though compilation at least one time before\n    // the REPL starts for a snappier user experience on startup.\n    service?.compile('', state.path);\n\n    const repl = nodeReplStart({\n      prompt: '> ',\n      input: replService.stdin,\n      output: replService.stdout,\n      // Mimicking node's REPL implementation: https://github.com/nodejs/node/blob/168b22ba073ee1cbf8d0bcb4ded7ff3099335d04/lib/internal/repl.js#L28-L30\n      terminal:\n        (stdout as tty.WriteStream).isTTY &&\n        !parseInt(env.NODE_NO_READLINE!, 10),\n      eval: nodeEval,\n      useGlobal: true,\n      ...optionsOverride,\n    });\n\n    nodeReplServer = repl;\n    context = repl.context;\n\n    // Bookmark the point where we should reset the REPL state.\n    const resetEval = appendToEvalState(state, '');\n\n    function reset() {\n      resetEval();\n\n      // Hard fix for TypeScript forcing `Object.defineProperty(exports, ...)`.\n      runInContext('exports = module.exports', state.path, context);\n      if (forceToBeModule) {\n        state.input += 'export {};void 0;\\n';\n      }\n\n      // Declare node builtins.\n      // Skip the same builtins as `addBuiltinLibsToObject`:\n      //   those starting with _\n      //   those containing /\n      //   those that already exist as globals\n      // Intentionally suppress type errors in case @types/node does not declare any of them, and because\n      // `declare import` is technically invalid syntax.\n      // Avoid this when in transpileOnly, because third-party transpilers may not handle `declare import`.\n      if (!service?.transpileOnly) {\n        state.input += `// @ts-ignore\\n${builtinModules\n          .filter(\n            (name) =>\n              !name.startsWith('_') &&\n              !name.includes('/') &&\n              !['console', 'module', 'process'].includes(name)\n          )\n          .map((name) => `declare import ${name} = require('${name}')`)\n          .join(';')}\\n`;\n      }\n    }\n\n    reset();\n    repl.on('reset', reset);\n\n    repl.defineCommand('type', {\n      help: 'Check the type of a TypeScript identifier',\n      action: function (identifier: string) {\n        if (!identifier) {\n          repl.displayPrompt();\n          return;\n        }\n\n        const undo = appendToEvalState(state, identifier);\n        const { name, comment } = service!.getTypeInfo(\n          state.input,\n          state.path,\n          state.input.length\n        );\n\n        undo();\n\n        if (name) repl.outputStream.write(`${name}\\n`);\n        if (comment) repl.outputStream.write(`${comment}\\n`);\n        repl.displayPrompt();\n      },\n    });\n\n    // Set up REPL history when available natively via node.js >= 11.\n    if (repl.setupHistory) {\n      const historyPath =\n        env.TS_NODE_HISTORY || join(homedir(), '.ts_node_repl_history');\n\n      repl.setupHistory(historyPath, (err) => {\n        if (!err) return;\n\n        _console.error(err);\n        process.exit(1);\n      });\n    }\n\n    return repl;\n  }\n}\n\n/**\n * Eval state management. Stores virtual `[eval].ts` file\n */\nexport class EvalState {\n  /** @internal */\n  input = '';\n  /** @internal */\n  output = '';\n  /** @internal */\n  version = 0;\n  /** @internal */\n  lines = 0;\n\n  __tsNodeEvalStateBrand: unknown;\n\n  constructor(public path: string) {}\n}\n\n/**\n * Filesystem host functions which are aware of the \"virtual\" `[eval].ts`, `<repl>`, or `[stdin].ts` file used to compile REPL inputs.\n * Must be passed to `create()` to create a ts-node compiler service which can compile REPL inputs.\n */\nexport type EvalAwarePartialHost = Pick<\n  CreateOptions,\n  'readFile' | 'fileExists'\n>;\n\nexport function createEvalAwarePartialHost(\n  state: EvalState,\n  composeWith?: EvalAwarePartialHost\n): EvalAwarePartialHost {\n  function readFile(path: string) {\n    if (path === state.path) return state.input;\n\n    if (composeWith?.readFile) return composeWith.readFile(path);\n\n    try {\n      return readFileSync(path, 'utf8');\n    } catch (err) {\n      /* Ignore. */\n    }\n  }\n  function fileExists(path: string) {\n    if (path === state.path) return true;\n\n    if (composeWith?.fileExists) return composeWith.fileExists(path);\n\n    try {\n      const stats = statSync(path);\n      return stats.isFile() || stats.isFIFO();\n    } catch (err) {\n      return false;\n    }\n  }\n  return { readFile, fileExists };\n}\n\nconst sourcemapCommentRe = /\\/\\/# ?sourceMappingURL=\\S+[\\s\\r\\n]*$/;\n\ntype AppendCompileAndEvalInputResult =\n  | { containsTopLevelAwait: true; valuePromise: Promise<any> }\n  | { containsTopLevelAwait: false; value: any };\n/**\n * Evaluate the code snippet.\n *\n * Append it to virtual .ts file, compile, handle compiler errors, compute a diff of the JS, and eval any code that\n * appears as \"added\" in the diff.\n */\nfunction appendCompileAndEvalInput(options: {\n  service: Service;\n  state: EvalState;\n  input: string;\n  wrappedErr?: unknown;\n  /** Enable top-level await but only if the TSNode service allows it. */\n  enableTopLevelAwait?: boolean;\n  context: Context | undefined;\n  /**\n   * Added so that `evalCode` can be guaranteed *not* to trigger the `isCompletion`\n   * codepath.  However, the `isCompletion` logic is ancient and maybe should be removed entirely.\n   * Nobody's looked at it in a long time.\n   */\n  overrideIsCompletion?: boolean;\n}): AppendCompileAndEvalInputResult {\n  const {\n    service,\n    state,\n    wrappedErr,\n    enableTopLevelAwait = false,\n    context,\n    overrideIsCompletion,\n  } = options;\n  let { input } = options;\n\n  // It's confusing for `{ a: 1 }` to be interpreted as a block statement\n  // rather than an object literal. So, we first try to wrap it in\n  // parentheses, so that it will be interpreted as an expression.\n  // Based on https://github.com/nodejs/node/blob/c2e6822153bad023ab7ebd30a6117dcc049e475c/lib/repl.js#L413-L422\n  let wrappedCmd = false;\n  if (!wrappedErr && /^\\s*{/.test(input) && !/;\\s*$/.test(input)) {\n    input = `(${input.trim()})\\n`;\n    wrappedCmd = true;\n  }\n\n  const lines = state.lines;\n  const isCompletion = overrideIsCompletion ?? !/\\n$/.test(input);\n  const undo = appendToEvalState(state, input);\n  let output: string;\n\n  // Based on https://github.com/nodejs/node/blob/92573721c7cff104ccb82b6ed3e8aa69c4b27510/lib/repl.js#L457-L461\n  function adjustUseStrict(code: string) {\n    // \"void 0\" keeps the repl from returning \"use strict\" as the result\n    // value for statements and declarations that don't return a value.\n    return code.replace(/^\"use strict\";/, '\"use strict\"; void 0;');\n  }\n\n  try {\n    output = service.compile(state.input, state.path, -lines);\n  } catch (err) {\n    undo();\n\n    if (wrappedCmd) {\n      if (err instanceof TSError && err.diagnosticCodes[0] === 2339) {\n        // Ensure consistent and more sane behavior between { a: 1 }['b'] and ({ a: 1 }['b'])\n        throw err;\n      }\n      // Unwrap and try again\n      return appendCompileAndEvalInput({\n        ...options,\n        wrappedErr: err,\n      });\n    }\n\n    if (wrappedErr) throw wrappedErr;\n    throw err;\n  }\n\n  output = adjustUseStrict(output);\n\n  // Note: REPL does not respect sourcemaps!\n  // To properly do that, we'd need to prefix the code we eval -- which comes\n  // from `diffLines` -- with newlines so that it's at the proper line numbers.\n  // Then we'd need to ensure each bit of eval-ed code, if there are multiples,\n  // has the sourcemap appended to it.\n  // We might also need to integrate with our sourcemap hooks' cache; I'm not sure.\n  const outputWithoutSourcemapComment = output.replace(sourcemapCommentRe, '');\n  const oldOutputWithoutSourcemapComment = state.output.replace(\n    sourcemapCommentRe,\n    ''\n  );\n\n  // Use `diff` to check for new JavaScript to execute.\n  const changes = getDiffLines()(\n    oldOutputWithoutSourcemapComment,\n    outputWithoutSourcemapComment\n  );\n\n  if (isCompletion) {\n    undo();\n  } else {\n    state.output = output;\n\n    // Insert a semicolon to make sure that the code doesn't interact with the next line,\n    // for example to prevent `2\\n+ 2` from producing 4.\n    // This is safe since the output will not change since we can only get here with successful inputs,\n    // and adding a semicolon to the end of a successful input won't ever change the output.\n    state.input = state.input.replace(\n      /([^\\n\\s])([\\n\\s]*)$/,\n      (all, lastChar, whitespace) => {\n        if (lastChar !== ';') return `${lastChar};${whitespace}`;\n        return all;\n      }\n    );\n  }\n\n  let commands: Array<{ mustAwait?: true; execCommand: () => any }> = [];\n  let containsTopLevelAwait = false;\n\n  // Build a list of \"commands\": bits of JS code in the diff that must be executed.\n  for (const change of changes) {\n    if (change.added) {\n      if (\n        enableTopLevelAwait &&\n        service.shouldReplAwait &&\n        change.value.indexOf('await') > -1\n      ) {\n        const processTopLevelAwait = getProcessTopLevelAwait();\n\n        // Newline prevents comments to mess with wrapper\n        const wrappedResult = processTopLevelAwait(change.value + '\\n');\n        if (wrappedResult !== null) {\n          containsTopLevelAwait = true;\n          commands.push({\n            mustAwait: true,\n            execCommand: () => runInContext(wrappedResult, state.path, context),\n          });\n          continue;\n        }\n      }\n      commands.push({\n        execCommand: () => runInContext(change.value, state.path, context),\n      });\n    }\n  }\n\n  // Execute all commands asynchronously if necessary, returning the result or a\n  // promise of the result.\n  if (containsTopLevelAwait) {\n    return {\n      containsTopLevelAwait,\n      valuePromise: (async () => {\n        let value;\n        for (const command of commands) {\n          const r = command.execCommand();\n          value = command.mustAwait ? await r : r;\n        }\n        return value;\n      })(),\n    };\n  } else {\n    return {\n      containsTopLevelAwait: false,\n      value: commands.reduce<any>((_, c) => c.execCommand(), undefined),\n    };\n  }\n}\n\n/**\n * Low-level execution of JS code in context\n */\nfunction runInContext(code: string, filename: string, context?: Context) {\n  const script = new Script(code, { filename });\n\n  if (context === undefined || context === global) {\n    return script.runInThisContext();\n  } else {\n    return script.runInContext(context);\n  }\n}\n\n/**\n * Append to the eval instance and return an undo function.\n */\nfunction appendToEvalState(state: EvalState, input: string) {\n  const undoInput = state.input;\n  const undoVersion = state.version;\n  const undoOutput = state.output;\n  const undoLines = state.lines;\n\n  state.input += input;\n  state.lines += lineCount(input);\n  state.version++;\n\n  return function () {\n    state.input = undoInput;\n    state.output = undoOutput;\n    state.version = undoVersion;\n    state.lines = undoLines;\n  };\n}\n\n/**\n * Count the number of lines.\n */\nfunction lineCount(value: string) {\n  let count = 0;\n\n  for (const char of value) {\n    if (char === '\\n') {\n      count++;\n    }\n  }\n\n  return count;\n}\n\n/**\n * TS diagnostic codes which are recoverable, meaning that the user likely entered an incomplete line of code\n * and should be prompted for the next.  For example, starting a multi-line for() loop and not finishing it.\n * null value means code is always recoverable.  `Set` means code is only recoverable when occurring alongside at least one\n * of the other codes.\n */\nconst RECOVERY_CODES: Map<number, Set<number> | null> = new Map([\n  [1003, null], // \"Identifier expected.\"\n  [1005, null], // \"')' expected.\", \"'}' expected.\"\n  [1109, null], // \"Expression expected.\"\n  [1126, null], // \"Unexpected end of text.\"\n  [\n    1136, // \"Property assignment expected.\"\n    new Set([1005]), // happens when typing out an object literal or block scope across multiple lines: '{ foo: 123,'\n  ],\n  [1160, null], // \"Unterminated template literal.\"\n  [1161, null], // \"Unterminated regular expression literal.\"\n  [2355, null], // \"A function whose declared type is neither 'void' nor 'any' must return a value.\"\n  [2391, null], // \"Function implementation is missing or not immediately following the declaration.\"\n  [\n    7010, // \"Function, which lacks return-type annotation, implicitly has an 'any' return type.\"\n    new Set([1005]), // happens when fn signature spread across multiple lines: 'function a(\\nb: any\\n) {'\n  ],\n]);\n\n/**\n * Diagnostic codes raised when using top-level await.\n * These are suppressed when top-level await is enabled.\n * When it is *not* enabled, these trigger a helpful hint about enabling top-level await.\n */\nconst topLevelAwaitDiagnosticCodes = [\n  1375, // 'await' expressions are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1378, // Top-level 'await' expressions are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n  1431, // 'for await' loops are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1432, // Top-level 'for await' loops are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n];\n\n/**\n * Check if a function can recover gracefully.\n */\nfunction isRecoverable(error: TSError) {\n  return error.diagnosticCodes.every((code) => {\n    const deps = RECOVERY_CODES.get(code);\n    return (\n      deps === null ||\n      (deps && error.diagnosticCodes.some((code) => deps.has(code)))\n    );\n  });\n}\n\n/**\n * @internal\n * Set properties on `context` before eval-ing [stdin] or [eval] input.\n */\nexport function setupContext(\n  context: any,\n  module: Module,\n  filenameAndDirname: 'eval' | 'stdin' | null\n) {\n  if (filenameAndDirname) {\n    context.__dirname = '.';\n    context.__filename = `[${filenameAndDirname}]`;\n  }\n  context.module = module;\n  context.exports = module.exports;\n  context.require = module.require.bind(module);\n}\n"]},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js":{"lineLengths":[29,161,137,156,72,0,118,0,77,0,35,72,79,134,40,24,59,5,0,7,67,7,34,18,22,44,40,5,0,21,28,26,28,26,33,35,0,41,67,46,28,106,68,19,40,104,59,9,24,5,55,55,39,25,9,31,5,29,47,56,29,13,9,20,5,40,19,32,41,5,35,37,5,0,22,7,81,100,101,22,6,12,28,24,82,6,30,42,42,10,7,56,29,50,55,28,29,27,13,26,30,13,18,31,13,9,22,23,5,50,68,47,22,9,21,5,50,55,47,22,9,21,5,30,16,24,27,26,10,5,7,100,87,7,65,57,20,39,30,40,83,33,13,39,76,55,13,18,33,13,9,28,34,77,5,0,103,32,45,50,50,36,51,36,37,29,55,52,56,60,103,48,107,105,109,66,137,99,13,9,23,5,42,52,36,9,29,5,104,101,104,99,40,31,35,5,0,43,71,36,48,28,27,34,25,36,18,46,46,106,9,34,106,9,24,23,30,18,20,27,21,10,51,6,106,48,74,45,41,53,40,41,97,33,110,59,30,98,99,49,44,56,39,36,107,26,89,108,54,55,51,36,53,108,33,56,26,39,39,29,17,72,52,56,39,79,29,17,107,13,9,5,33,46,31,5,101,101,99,58,38,34,37,37,30,5,0,52,21,19,21,19,7,53,19,21,7,82,102,33,35,7,79,7,37,7,95,7,37,7,97,84,7,34,7,96,101,28,7,41,7,104,93,6,103,87,7,42,7,57,7,33,7,103,12,7,41,7,104,41,7,32,7,104,41,7,32,20,34,48,40,44,53,58,27,62,89,35,29,31,41,35,49,39,78,82,13,18,67,13,40,47,41,42,13,18,42,62,13,9,5,12,44,19,127,10,44,90,10,55,57,88,85,39,28,109,10,72,19,25,47,27,49,57,88,85,39,48,126,32,48,36,48,51,20,64,47,47,80,14,10,81,19,25,47,27,49,53,54,35,62,35,49,165,45,58,33,49,123,32,49,20,54,54,14,10,44,57,51,54,40,55,40,48,51,38,44,46,36,43,57,50,48,21,41,45,24,38,40,31,37,39,29,23,17,13,10,56,49,32,55,43,26,10,39,20,27,31,33,43,37,51,55,14,10,39,20,27,31,33,43,37,51,55,14,10,9,71,71,20,100,9,44,20,54,24,31,5,0,28,56,50,32,0,66,0,4,45,0],"data":{"version":3,"file":"trace-mapping.umd.js","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/resolve.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/strip-filename.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/sourcemap-segment.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/sort.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/binary-search.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/by-source.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/any-map.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.9/node_modules/@jridgewell/src/trace-mapping.ts"],"sourcesContent":[null,null,null,null,null,null,null,null],"names":["resolveUri","presortedDecodedMap","decodedMappings","encodedMappings","traceSegment","originalPositionFor","generatedPositionFor","eachMapping","decodedMap","encodedMap","encode","decode","bsFound"],"mappings":"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","sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.0/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":{"lineLengths":[29,85,79,116,44,0,36,40,85,63,63,44,38,25,25,5,46,22,22,24,12,36,35,45,23,31,39,21,27,41,9,32,5,52,35,59,12,43,25,26,36,46,28,19,5,38,30,25,39,5,0,32,49,49,43,39,15,29,88,42,18,13,15,29,33,58,59,21,31,18,14,24,23,25,26,52,9,18,36,35,41,46,29,13,9,17,46,76,9,5,24,29,25,33,9,16,54,9,16,52,9,23,41,50,52,9,5,0,21,42,33,47,26,25,21,51,47,52,46,41,31,33,25,13,50,52,44,120,29,45,26,20,63,41,53,13,30,31,30,9,22,5,43,42,45,62,9,30,5,66,36,96,22,32,62,46,39,55,41,31,47,31,40,9,47,39,40,67,22,13,72,9,28,60,44,21,5,43,33,47,26,25,24,39,37,37,29,31,28,30,12,45,30,53,61,48,45,38,40,29,17,56,54,52,49,36,37,26,36,90,136,61,94,17,22,55,17,43,34,57,50,87,72,88,121,84,17,42,47,34,24,46,50,74,45,52,76,73,59,81,114,76,96,29,25,30,68,25,56,55,17,42,35,34,13,22,34,38,22,5,44,32,22,42,45,81,9,30,5,67,36,111,35,53,33,25,9,29,32,9,61,108,41,33,62,44,29,13,69,68,9,23,83,44,29,29,13,45,29,13,69,65,67,9,23,45,39,62,49,53,49,53,58,48,92,96,58,17,13,9,47,39,40,67,22,13,73,9,33,51,31,25,9,14,32,9,62,21,5,50,12,36,36,5,0,31,36,50,27,26,29,27,29,27,12,45,28,30,28,26,39,24,61,40,35,36,47,71,67,71,51,71,94,21,26,82,21,17,22,38,17,31,29,13,24,27,31,34,39,23,5,25,34,5,35,27,5,30,42,29,27,29,27,50,36,22,40,34,25,30,51,40,26,40,73,41,29,79,75,79,41,29,75,13,9,30,5,0,28,58,56,28,58,56,0,66,0,4,47,0],"data":{"version":3,"file":"sourcemap-codec.umd.js","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.0/node_modules/@jridgewell/sourcemap-codec/src/vlq.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.0/node_modules/@jridgewell/sourcemap-codec/src/strings.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.0/node_modules/@jridgewell/sourcemap-codec/src/scopes.ts","file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.0/node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts"],"sourcesContent":["import type { StringReader, StringWriter } from './strings';\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport function decodeInteger(reader: StringReader, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  return relative + value;\n}\n\nexport function encodeInteger(builder: StringWriter, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n\n  return num;\n}\n\nexport function hasMoreVlq(reader: StringReader, max: number) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n","const bufLength = 1024 * 16;\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array): string {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array): string {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport class StringWriter {\n  pos = 0;\n  private out = '';\n  private buffer = new Uint8Array(bufLength);\n\n  write(v: number): void {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n\n  flush(): string {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n}\n\nexport class StringReader {\n  pos = 0;\n  private declare buffer: string;\n\n  constructor(buffer: string) {\n    this.buffer = buffer;\n  }\n\n  next(): number {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n\n  peek(): number {\n    return this.buffer.charCodeAt(this.pos);\n  }\n\n  indexOf(char: string): number {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n}\n","import { StringReader, StringWriter } from './strings';\nimport { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\n\nconst EMPTY: any[] = [];\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\ntype Mix<A, B, O> = (A & O) | (B & O);\n\nexport type OriginalScope = Mix<\n  [Line, Column, Line, Column, Kind],\n  [Line, Column, Line, Column, Kind, Name],\n  { vars: Var[] }\n>;\n\nexport type GeneratedRange = Mix<\n  [Line, Column, Line, Column],\n  [Line, Column, Line, Column, SourcesIndex, ScopesIndex],\n  {\n    callsite: CallSite | null;\n    bindings: Binding[];\n    isScope: boolean;\n  }\n>;\nexport type CallSite = [SourcesIndex, Line, Column];\ntype Binding = BindingExpressionRange[];\nexport type BindingExpressionRange = [Name] | [Name, Line, Column];\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n  let line = 0;\n\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 0b0001;\n\n    const scope: OriginalScope = (\n      hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]\n    ) as OriginalScope;\n\n    let vars: Var[] = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n\n    scopes.push(scope);\n    stack.push(scope);\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  const writer = new StringWriter();\n\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeOriginalScopes(\n  scopes: OriginalScope[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenColumn\n  ],\n): number {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n\n  if (index > 0) writer.write(comma);\n\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n\n  const fields = scope.length === 6 ? 0b0001 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n\n  return index;\n}\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    let genColumn = 0;\n\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop()!;\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 0b0001;\n      const hasCallsite = fields & 0b0010;\n      const hasScope = fields & 0b0100;\n\n      let callsite: CallSite | null = null;\n      let bindings: Binding[] = EMPTY;\n      let range: GeneratedRange;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0,\n        );\n\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex] as GeneratedRange;\n      } else {\n        range = [genLine, genColumn, 0, 0] as GeneratedRange;\n      }\n\n      range.isScope = !!hasScope;\n\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0,\n        );\n\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges: BindingExpressionRange[];\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n\n      ranges.push(range);\n      stack.push(range);\n    }\n\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  if (ranges.length === 0) return '';\n\n  const writer = new StringWriter();\n\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeGeneratedRanges(\n  ranges: GeneratedRange[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenLine\n    number, // GenColumn\n    number, // DefSourcesIndex\n    number, // DefScopesIndex\n    number, // CallSourcesIndex\n    number, // CallLine\n    number, // CallColumn\n  ],\n): number {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings,\n  } = range;\n\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n\n  state[1] = encodeInteger(writer, range[1], state[1]);\n\n  const fields =\n    (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);\n  encodeInteger(writer, fields, 0);\n\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1]!, bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2]!, bindingStartColumn);\n        encodeInteger(writer, expRange[0]!, 0);\n      }\n    }\n  }\n\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n\n  return index;\n}\n\nfunction catchupLine(writer: StringWriter, lastLine: number, line: number) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n","import { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\nimport { StringWriter, StringReader } from './strings';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    while (reader.pos < semi) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n      reader.pos++;\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n\n    let genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n\n  return writer.flush();\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+resolve-uri@3.1.2/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":{"lineLengths":[29,95,66,110,37,0,48,41,7,34,44,49,27,40,40,41,40,7,96,7,101,102,6,25,50,41,40,7,88,35,39,5,41,38,5,36,37,5,31,41,5,32,36,5,38,43,124,5,34,44,30,130,5,67,16,19,17,17,17,17,18,17,35,10,5,30,41,58,28,46,23,9,36,67,28,26,44,23,9,29,39,33,43,64,24,22,24,35,31,39,34,42,28,19,5,38,100,56,33,24,44,40,5,36,39,105,17,31,33,9,14,86,63,9,5,7,96,66,7,39,49,43,101,40,24,104,100,25,105,101,93,37,49,36,96,25,40,25,13,86,37,61,30,25,104,74,33,31,44,31,30,17,31,112,101,46,17,25,13,108,49,38,23,9,22,43,36,9,67,24,9,24,5,7,63,7,35,28,22,36,33,53,43,42,32,35,44,31,34,46,31,35,42,45,31,42,98,44,44,44,31,44,103,48,13,37,37,9,38,47,28,92,34,30,31,33,40,81,47,26,44,69,108,104,87,51,17,40,13,38,44,20,97,9,5,0,19,0,4,43,0],"data":{"version":3,"file":"resolve-uri.umd.js","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@jridgewell+resolve-uri@3.1.2/node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/integration/mcp-integration.test.ts":{"lineLengths":[25,30,67,81,76,43,68,58,45,24,44,15,18,24,51,46,28,36,11,29,32,28,12,28,11,13,44,9,23,69,24,9,7,23,21,33,9,7,51,51,58,49,49,53,54,50,7,53,46,33,25,11,51,59,49,7,54,46,34,25,11,51,59,79,7,50,46,30,84,11,51,59,49,7,62,52,53,65,7,60,50,51,63,7,51,46,31,36,11,51,49,7,55,46,35,78,11,51,49,7,58,46,38,24,68,30,13,11,51,49,7,54,46,34,24,72,70,29,13,11,51,49,7,50,46,30,24,72,70,29,13,11,51,49,7,63,46,43,25,11,51,49,7,56,46,36,25,11,51,49,7,50,91,3,15808],"data":{"version":3,"file":"/Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/integration/mcp-integration.test.ts","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/integration/mcp-integration.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport { expect } from 'chai';\nimport { Client } from \"@modelcontextprotocol/sdk/client/index.js\";\nimport { StdioClientTransport } from \"@modelcontextprotocol/sdk/client/stdio.js\";\nimport * as path from 'path';\n\n// Only run these tests if .env file exists (contains necessary credentials)\nconst dotenvExists = fs.existsSync('.env');\nconst conditionalDescribe = dotenvExists ? describe : describe.skip;\n\nconditionalDescribe('MCP Integration Tests', function() {\n  // Use long timeout for integration tests\n  this.timeout(15000);\n\n  // Use the real MCP client and transport\n  let client: Client;\n  let transport: StdioClientTransport;\n\n  before(async () => {\n    // Use real StdioClientTransport - no mocks\n    transport = new StdioClientTransport({\n      command: 'node',\n      args: ['dist/index.js'],\n    });\n\n    client = new Client(\n      {\n        name: 'test-client',\n        version: '1.0.0'\n      },\n      {\n        capabilities: {}\n      }\n    );\n\n    try {\n      await client.connect(transport);\n    } catch (error) {\n      console.error('Failed to connect to MCP server:', error);\n      throw error;\n    }\n  });\n\n  after(async () => {\n    if (client) {\n      await client.close();\n    }\n  });\n\n  it('should list available tools', async () => {\n    const { tools } = await client.listTools();\n    expect(tools).to.be.an('array').that.is.not.empty;\n\n    // Verify expected tool names are present\n    const toolNames = tools.map(t => t.name);\n    expect(toolNames).to.include('get_balances');\n    expect(toolNames).to.include('get_portfolio');\n    expect(toolNames).to.include('get_price');\n  });\n\n  it('should call get_balances tool', async () => {\n    const result = await client.callTool({\n      name: 'get_balances',\n      arguments: {}\n    });\n\n    expect(result).to.have.property('isError');\n    // Will be isError: true because of missing API key\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should call get_portfolio tool', async () => {\n    const result = await client.callTool({\n      name: 'get_portfolio',\n      arguments: {}\n    });\n\n    expect(result).to.have.property('isError');\n    // Will be isError: true because of missing API key\n    expect(result.content).to.be.an('array'); // Or appropriate error shape\n  });\n\n  it('should call get_price tool', async () => {\n    const result = await client.callTool({\n      name: 'get_price',\n      arguments: { tokenSymbol: 'SOL', vsTokenSymbol: 'USDC' } // Example args\n    });\n\n    expect(result).to.have.property('isError');\n    // Will be isError: true because of missing API key\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should return empty list for resources', async () => {\n    const result = await client.listResources();\n    expect(result).to.have.property('resources');\n    expect(result.resources).to.be.an('array').that.is.empty;\n  });\n\n  it('should return empty list for prompts', async () => {\n    const result = await client.listPrompts();\n    expect(result).to.have.property('prompts');\n    expect(result.prompts).to.be.an('array').that.is.empty;\n  });\n\n  it('should call get_trades tool', async () => {\n    const result = await client.callTool({\n      name: 'get_trades',\n      arguments: { limit: 10 }\n    });\n\n    expect(result).to.have.property('isError');\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should call get_token_info tool', async () => {\n    const result = await client.callTool({\n      name: 'get_token_info',\n      arguments: { token: '0x1234567890123456789012345678901234567890' }\n    });\n\n    expect(result).to.have.property('isError');\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should call get_price_history tool', async () => {\n    const result = await client.callTool({\n      name: 'get_price_history',\n      arguments: {\n        token: '0x1234567890123456789012345678901234567890',\n        interval: '1h'\n      }\n    });\n\n    expect(result).to.have.property('isError');\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should call execute_trade tool', async () => {\n    const result = await client.callTool({\n      name: 'execute_trade',\n      arguments: {\n        fromToken: '0x1234567890123456789012345678901234567890',\n        toToken: '0x0987654321098765432109876543210987654321',\n        amount: '1.0'\n      }\n    });\n\n    expect(result).to.have.property('isError');\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should call get_quote tool', async () => {\n    const result = await client.callTool({\n      name: 'get_quote',\n      arguments: {\n        fromToken: '0x1234567890123456789012345678901234567890',\n        toToken: '0x0987654321098765432109876543210987654321',\n        amount: '1.0'\n      }\n    });\n\n    expect(result).to.have.property('isError');\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should call get_competition_status tool', async () => {\n    const result = await client.callTool({\n      name: 'get_competition_status',\n      arguments: {}\n    });\n\n    expect(result).to.have.property('isError');\n    expect(result.content).to.be.an('array');\n  });\n\n  it('should call get_leaderboard tool', async () => {\n    const result = await client.callTool({\n      name: 'get_leaderboard',\n      arguments: {}\n    });\n\n    expect(result).to.have.property('isError');\n    expect(result.content).to.be.an('array');\n  });\n\n  // Add tests for each tool only if .env exists\n  // These will fail without valid API credentials as expected by our \"no mocks\" approach\n});"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/client/stdio.js":{"lineLengths":[43,35,66,3,90,3,70,7,18,20,19,23,15,33,22,21,15,19,22,5,64,61,3,100,3,41,19,51,39,34,21,9,37,57,21,9,25,5,15,1,3,127,2,60,3,35,25,54,44,36,5,7,69,7,19,28,141,9,49,39,131,108,117,29,53,74,15,50,27,50,55,91,27,17,30,94,15,45,26,15,50,23,42,87,15,103,23,94,15,103,47,41,15,104,23,94,15,11,5,7,115,6,65,7,18,19,128,5,25,19,22,17,63,39,26,17,98,13,27,94,13,9,5,19,38,34,33,5,19,41,19,88,49,13,51,50,26,13,18,59,13,11,5,1,23,29,1,33],"data":{"version":3,"file":"stdio.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts"],"names":[],"mappings":"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"},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/client/index.js":{"lineLengths":[50,330,3,49,2,104,2,112,2,16,20,58,68,56,2,18,59,69,57,2,25,79,26,21,5,6,3,38,7,75,7,39,23,39,50,5,42,15,101,94,9,5,30,39,13,47,37,25,61,53,49,18,39,39,84,13,80,105,13,59,52,37,52,15,9,23,50,30,24,9,5,7,106,7,29,40,5,7,119,7,24,35,5,39,31,25,36,105,96,17,22,31,32,105,96,17,22,34,44,34,39,41,107,98,17,55,68,111,17,22,30,30,103,94,17,22,39,105,96,17,22,30,65,22,24,59,22,9,5,42,15,25,52,109,121,17,22,45,66,22,43,64,22,42,60,22,9,5,44,25,42,51,108,17,22,30,48,105,17,22,24,59,22,9,5,25,76,5,37,102,5,43,107,5,38,95,5,40,98,5,42,102,5,50,120,5,41,101,5,46,99,5,48,101,5,74,85,5,38,94,5,34,81,5,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/src/client/index.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,QAAQ,GAGT,MAAM,uBAAuB,CAAC;AAE/B,OAAO,EAEL,oBAAoB,EAOpB,oBAAoB,EACpB,iBAAiB,EAEjB,qBAAqB,EAErB,sBAAsB,EACtB,uBAAuB,EAEvB,uBAAuB,EAEvB,yBAAyB,EAEzB,iCAAiC,EAEjC,qBAAqB,EAIrB,wBAAwB,EAKxB,2BAA2B,GAE5B,MAAM,aAAa,CAAC;AASrB;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,MAAM,OAAO,MAIX,SAAQ,QAIT;IAKC;;OAEG;IACH,YACU,WAA2B,EACnC,OAAsB;QAEtB,KAAK,CAAC,OAAO,CAAC,CAAC;QAHP,gBAAW,GAAX,WAAW,CAAgB;QAInC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC;IAC5C,CAAC;IAES,gBAAgB,CACxB,UAAoC,EACpC,MAAc;;QAEd,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,mBAAmB,0CAAG,UAAU,CAAC,CAAA,EAAE,CAAC;YAC5C,MAAM,IAAI,KAAK,CACb,2BAA2B,UAAU,kBAAkB,MAAM,GAAG,CACjE,CAAC;QACJ,CAAC;IACH,CAAC;IAEQ,KAAK,CAAC,OAAO,CAAC,SAAoB;QACzC,MAAM,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAE/B,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAC/B;gBACE,MAAM,EAAE,YAAY;gBACpB,MAAM,EAAE;oBACN,eAAe,EAAE,uBAAuB;oBACxC,YAAY,EAAE,IAAI,CAAC,aAAa;oBAChC,UAAU,EAAE,IAAI,CAAC,WAAW;iBAC7B;aACF,EACD,sBAAsB,CACvB,CAAC;YAEF,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;gBACzB,MAAM,IAAI,KAAK,CAAC,0CAA0C,MAAM,EAAE,CAAC,CAAC;YACtE,CAAC;YAED,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC;gBAClE,MAAM,IAAI,KAAK,CACb,+CAA+C,MAAM,CAAC,eAAe,EAAE,CACxE,CAAC;YACJ,CAAC;YAED,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,YAAY,CAAC;YAC/C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC;YAExC,MAAM,IAAI,CAAC,YAAY,CAAC;gBACtB,MAAM,EAAE,2BAA2B;aACpC,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,sCAAsC;YACtC,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,qBAAqB;QACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAES,yBAAyB,CAAC,MAA0B;;QAC5D,QAAQ,MAAiC,EAAE,CAAC;YAC1C,KAAK,kBAAkB;gBACrB,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,mBAAmB,0CAAE,OAAO,CAAA,EAAE,CAAC;oBACvC,MAAM,IAAI,KAAK,CACb,iDAAiD,MAAM,GAAG,CAC3D,CAAC;gBACJ,CAAC;gBACD,MAAM;YAER,KAAK,aAAa,CAAC;YACnB,KAAK,cAAc;gBACjB,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,mBAAmB,0CAAE,OAAO,CAAA,EAAE,CAAC;oBACvC,MAAM,IAAI,KAAK,CACb,iDAAiD,MAAM,GAAG,CAC3D,CAAC;gBACJ,CAAC;gBACD,MAAM;YAER,KAAK,gBAAgB,CAAC;YACtB,KAAK,0BAA0B,CAAC;YAChC,KAAK,gBAAgB,CAAC;YACtB,KAAK,qBAAqB,CAAC;YAC3B,KAAK,uBAAuB;gBAC1B,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,mBAAmB,0CAAE,SAAS,CAAA,EAAE,CAAC;oBACzC,MAAM,IAAI,KAAK,CACb,mDAAmD,MAAM,GAAG,CAC7D,CAAC;gBACJ,CAAC;gBAED,IACE,MAAM,KAAK,qBAAqB;oBAChC,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,EAC7C,CAAC;oBACD,MAAM,IAAI,KAAK,CACb,gEAAgE,MAAM,GAAG,CAC1E,CAAC;gBACJ,CAAC;gBAED,MAAM;YAER,KAAK,YAAY,CAAC;YAClB,KAAK,YAAY;gBACf,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,mBAAmB,0CAAE,KAAK,CAAA,EAAE,CAAC;oBACrC,MAAM,IAAI,KAAK,CACb,+CAA+C,MAAM,GAAG,CACzD,CAAC;gBACJ,CAAC;gBACD,MAAM;YAER,KAAK,qBAAqB;gBACxB,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,mBAAmB,0CAAE,OAAO,CAAA,EAAE,CAAC;oBACvC,MAAM,IAAI,KAAK,CACb,iDAAiD,MAAM,GAAG,CAC3D,CAAC;gBACJ,CAAC;gBACD,MAAM;YAER,KAAK,YAAY;gBACf,iDAAiD;gBACjD,MAAM;YAER,KAAK,MAAM;gBACT,2CAA2C;gBAC3C,MAAM;QACV,CAAC;IACH,CAAC;IAES,4BAA4B,CACpC,MAA+B;;QAE/B,QAAQ,MAAsC,EAAE,CAAC;YAC/C,KAAK,kCAAkC;gBACrC,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,aAAa,CAAC,KAAK,0CAAE,WAAW,CAAA,EAAE,CAAC;oBAC3C,MAAM,IAAI,KAAK,CACb,0EAA0E,MAAM,GAAG,CACpF,CAAC;gBACJ,CAAC;gBACD,MAAM;YAER,KAAK,2BAA2B;gBAC9B,kDAAkD;gBAClD,MAAM;YAER,KAAK,yBAAyB;gBAC5B,gDAAgD;gBAChD,MAAM;YAER,KAAK,wBAAwB;gBAC3B,4CAA4C;gBAC5C,MAAM;QACV,CAAC;IACH,CAAC;IAES,8BAA8B,CAAC,MAAc;QACrD,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,wBAAwB;gBAC3B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;oBACjC,MAAM,IAAI,KAAK,CACb,6DAA6D,MAAM,GAAG,CACvE,CAAC;gBACJ,CAAC;gBACD,MAAM;YAER,KAAK,YAAY;gBACf,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAC9B,MAAM,IAAI,KAAK,CACb,0DAA0D,MAAM,GAAG,CACpE,CAAC;gBACJ,CAAC;gBACD,MAAM;YAER,KAAK,MAAM;gBACT,2CAA2C;gBAC3C,MAAM;QACV,CAAC;IACH,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAwB;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,MAAiC,EAAE,OAAwB;QACxE,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,qBAAqB,EAAE,MAAM,EAAE,EACzC,oBAAoB,EACpB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,KAAmB,EAAE,OAAwB;QACjE,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,kBAAkB,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,EACjD,iBAAiB,EACjB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,SAAS,CACb,MAAkC,EAClC,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,EACjC,qBAAqB,EACrB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,WAAW,CACf,MAAqC,EACrC,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,EAClC,uBAAuB,EACvB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,aAAa,CACjB,MAAuC,EACvC,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,EAAE,EACpC,yBAAyB,EACzB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,qBAAqB,CACzB,MAA+C,EAC/C,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,0BAA0B,EAAE,MAAM,EAAE,EAC9C,iCAAiC,EACjC,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,YAAY,CAChB,MAAqC,EACrC,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,EAAE,EACpC,wBAAwB,EACxB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,iBAAiB,CACrB,MAAkC,EAClC,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,qBAAqB,EAAE,MAAM,EAAE,EACzC,iBAAiB,EACjB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,mBAAmB,CACvB,MAAoC,EACpC,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,uBAAuB,EAAE,MAAM,EAAE,EAC3C,iBAAiB,EACjB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,MAAiC,EACjC,eAE+C,oBAAoB,EACnE,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,EAChC,YAAY,EACZ,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,SAAS,CACb,MAAmC,EACnC,OAAwB;QAExB,OAAO,IAAI,CAAC,OAAO,CACjB,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,EAChC,qBAAqB,EACrB,OAAO,CACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,oBAAoB;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,kCAAkC,EAAE,CAAC,CAAC;IAC3E,CAAC;CACF"},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/shared/stdio.js":{"lineLengths":[51,3,69,3,25,19,83,5,19,28,24,9,49,27,24,9,61,56,40,5,13,33,5,1,42,56,1,43,42,1,33],"data":{"version":3,"file":"stdio.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/src/shared/stdio.ts"],"names":[],"mappings":"AAAA,OAAO,EAAkB,oBAAoB,EAAE,MAAM,aAAa,CAAC;AAEnE;;GAEG;AACH,MAAM,OAAO,UAAU;IAGrB,MAAM,CAAC,KAAa;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC7E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAChD,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3B,CAAC;CACF;AAED,MAAM,UAAU,kBAAkB,CAAC,IAAY;IAC7C,OAAO,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,OAAuB;IACtD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AACxC,CAAC"},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/shared/protocol.js":{"lineLengths":[127,3,47,3,50,3,77,71,3,23,27,33,35,42,57,47,43,43,84,103,113,11,83,43,11,50,37,28,5,7,85,6,192,7,30,36,41,28,10,46,33,10,50,41,42,13,39,41,13,18,46,13,10,38,5,16,15,56,43,39,36,79,84,58,27,9,5,21,15,86,5,35,15,149,56,36,19,9,94,25,46,108,5,25,19,134,36,81,31,31,24,51,48,18,104,19,9,54,78,94,25,77,31,19,49,23,13,88,23,31,31,15,23,23,49,23,13,88,31,31,24,61,39,50,100,18,15,10,92,28,68,11,5,31,71,74,36,127,19,9,37,5,27,38,70,36,115,19,9,57,57,35,30,9,14,105,27,9,5,21,31,5,7,29,7,19,15,87,5,7,47,6,80,7,45,49,31,35,51,23,13,116,63,13,141,55,36,27,31,30,14,87,74,41,38,56,18,13,38,65,23,46,44,17,142,27,17,48,44,17,21,71,36,17,31,34,17,15,40,23,57,57,85,35,40,29,45,47,22,103,31,14,157,23,46,44,17,143,15,163,109,24,26,67,46,44,17,30,15,11,5,7,88,7,38,31,45,9,63,37,28,27,10,56,5,7,104,6,84,7,47,56,52,125,5,7,56,7,34,45,5,7,109,6,89,7,57,162,5,7,61,7,39,50,5,1,36],"data":{"version":3,"file":"protocol.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts"],"names":[],"mappings":"AACA,OAAO,EACL,2BAA2B,EAC3B,SAAS,EAKT,QAAQ,EAER,iBAAiB,EAGjB,0BAA0B,GAI3B,MAAM,aAAa,CAAC;AAsBrB;;GAEG;AACH,MAAM,CAAC,MAAM,4BAA4B,GAAG,KAAK,CAAC;AAkClD;;;GAGG;AACH,MAAM,OAAgB,QAAQ;IAkD5B,YAAoB,QAA0B;QAA1B,aAAQ,GAAR,QAAQ,CAAkB;QA5CtC,sBAAiB,GAAG,CAAC,CAAC;QACtB,qBAAgB,GAMpB,IAAI,GAAG,EAAE,CAAC;QACN,oCAA+B,GACrC,IAAI,GAAG,EAAE,CAAC;QACJ,0BAAqB,GAGzB,IAAI,GAAG,EAAE,CAAC;QACN,sBAAiB,GAGrB,IAAI,GAAG,EAAE,CAAC;QACN,sBAAiB,GAAkC,IAAI,GAAG,EAAE,CAAC;QA2BnE,IAAI,CAAC,sBAAsB,CAAC,2BAA2B,EAAE,CAAC,YAAY,EAAE,EAAE;YACxE,MAAM,UAAU,GAAG,IAAI,CAAC,+BAA+B,CAAC,GAAG,CACzD,YAAY,CAAC,MAAM,CAAC,SAAS,CAC9B,CAAC;YACF,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,CAAC,0BAA0B,EAAE,CAAC,YAAY,EAAE,EAAE;YACvE,IAAI,CAAC,WAAW,CAAC,YAA+C,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CACpB,iBAAiB;QACjB,6BAA6B;QAC7B,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,EAAE,CAAgB,CAClC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,OAAO,CAAC,SAAoB;QAChC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,EAAE;YAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,KAAY,EAAE,EAAE;YACzC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE;YACtC,IAAI,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,EAAE,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC;iBAAM,IAAI,IAAI,IAAI,OAAO,EAAE,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAChC,CAAC;QACH,CAAC,CAAC;QAEF,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAEO,QAAQ;;QACd,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,IAAI,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,MAAA,IAAI,CAAC,OAAO,oDAAI,CAAC;QAEjB,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;QAC5E,KAAK,MAAM,OAAO,IAAI,gBAAgB,CAAC,MAAM,EAAE,EAAE,CAAC;YAChD,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC;IACH,CAAC;IAEO,QAAQ,CAAC,KAAY;;QAC3B,MAAA,IAAI,CAAC,OAAO,qDAAG,KAAK,CAAC,CAAC;IACxB,CAAC;IAEO,eAAe,CAAC,YAAiC;;QACvD,MAAM,OAAO,GACX,MAAA,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,mCACnD,IAAI,CAAC,2BAA2B,CAAC;QAEnC,gDAAgD;QAChD,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;YAC1B,OAAO;QACT,CAAC;QAED,sFAAsF;QACtF,OAAO,CAAC,OAAO,EAAE;aACd,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aACjC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CACf,IAAI,CAAC,QAAQ,CACX,IAAI,KAAK,CAAC,2CAA2C,KAAK,EAAE,CAAC,CAC9D,CACF,CAAC;IACN,CAAC;IAEO,UAAU,CAAC,OAAuB;;QACxC,MAAM,OAAO,GACX,MAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,mCAAI,IAAI,CAAC,sBAAsB,CAAC;QAE3E,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;YAC1B,MAAA,IAAI,CAAC,UAAU,0CACX,IAAI,CAAC;gBACL,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,KAAK,EAAE;oBACL,IAAI,EAAE,SAAS,CAAC,cAAc;oBAC9B,OAAO,EAAE,kBAAkB;iBAC5B;aACF,EACA,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CACf,IAAI,CAAC,QAAQ,CACX,IAAI,KAAK,CAAC,qCAAqC,KAAK,EAAE,CAAC,CACxD,CACF,CAAC;YACJ,OAAO;QACT,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;QAC9C,IAAI,CAAC,+BAA+B,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;QAEtE,sFAAsF;QACtF,OAAO,CAAC,OAAO,EAAE;aACd,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;aAChE,IAAI,CACH,CAAC,MAAM,EAAE,EAAE;;YACT,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACnC,OAAO;YACT,CAAC;YAED,OAAO,MAAA,IAAI,CAAC,UAAU,0CAAE,IAAI,CAAC;gBAC3B,MAAM;gBACN,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,OAAO,CAAC,EAAE;aACf,CAAC,CAAC;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;;YACR,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACnC,OAAO;YACT,CAAC;YAED,OAAO,MAAA,IAAI,CAAC,UAAU,0CAAE,IAAI,CAAC;gBAC3B,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,KAAK,EAAE;oBACL,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBACvC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;wBACf,CAAC,CAAC,SAAS,CAAC,aAAa;oBAC3B,OAAO,EAAE,MAAA,KAAK,CAAC,OAAO,mCAAI,gBAAgB;iBAC3C;aACF,CAAC,CAAC;QACL,CAAC,CACF;aACA,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CACf,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,4BAA4B,KAAK,EAAE,CAAC,CAAC,CAC9D;aACA,OAAO,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,WAAW,CAAC,YAAkC;QACpD,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,CACX,IAAI,KAAK,CACP,0DAA0D,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CACzF,CACF,CAAC;YACF,OAAO;QACT,CAAC;QAED,OAAO,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/B,CAAC;IAEO,WAAW,CAAC,QAAwC;QAC1D,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC;QAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9D,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,CACX,IAAI,KAAK,CACP,kDAAkD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAC7E,CACF,CAAC;YACF,OAAO;QACT,CAAC;QAED,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QACjD,IAAI,QAAQ,IAAI,QAAQ,EAAE,CAAC;YACzB,OAAO,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC;aAAM,CAAC;YACN,MAAM,KAAK,GAAG,IAAI,QAAQ,CACxB,QAAQ,CAAC,KAAK,CAAC,IAAI,EACnB,QAAQ,CAAC,KAAK,CAAC,OAAO,EACtB,QAAQ,CAAC,KAAK,CAAC,IAAI,CACpB,CAAC;YACF,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC;IACH,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,KAAK;;QACT,MAAM,CAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,KAAK,EAAE,CAAA,CAAC;IACjC,CAAC;IA2BD;;;;OAIG;IACH,OAAO,CACL,OAAqB,EACrB,YAAe,EACf,OAAwB;QAExB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;;YACrC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;gBACrB,MAAM,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;gBACnC,OAAO;YACT,CAAC;YAED,IAAI,CAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,yBAAyB,MAAK,IAAI,EAAE,CAAC;gBACtD,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACjD,CAAC;YAED,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,cAAc,EAAE,CAAC;YAElC,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3C,MAAM,cAAc,GAAmB;gBACrC,GAAG,OAAO;gBACV,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,SAAS;aACd,CAAC;YAEF,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU,EAAE,CAAC;gBACxB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC1D,cAAc,CAAC,MAAM,GAAG;oBACtB,GAAG,OAAO,CAAC,MAAM;oBACjB,KAAK,EAAE,EAAE,aAAa,EAAE,SAAS,EAAE;iBACpC,CAAC;YACJ,CAAC;YAED,IAAI,SAAS,GAA8C,SAAS,CAAC;YAErE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,EAAE;;gBACjD,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;oBAC5B,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC1B,CAAC;gBAED,IAAI,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,OAAO,EAAE,CAAC;oBAC7B,OAAO;gBACT,CAAC;gBAED,IAAI,QAAQ,YAAY,KAAK,EAAE,CAAC;oBAC9B,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC1B,CAAC;gBAED,IAAI,CAAC;oBACH,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACnD,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClB,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,CAAC,MAAe,EAAE,EAAE;;gBACjC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACzC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAEzC,MAAA,IAAI,CAAC,UAAU,0CACX,IAAI,CAAC;oBACL,OAAO,EAAE,KAAK;oBACd,MAAM,EAAE,WAAW;oBACnB,MAAM,EAAE;wBACN,SAAS,EAAE,SAAS;wBACpB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;qBACvB;iBACF,EACA,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CACf,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,gCAAgC,KAAK,EAAE,CAAC,CAAC,CAClE,CAAC;gBAEJ,MAAM,CAAC,MAAM,CAAC,CAAC;YACjB,CAAC,CAAC;YAEF,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;;gBAC9C,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;oBAC5B,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC1B,CAAC;gBAED,MAAM,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,MAAM,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,4BAA4B,CAAC;YACjE,SAAS,GAAG,UAAU,CACpB,GAAG,EAAE,CACH,MAAM,CACJ,IAAI,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,mBAAmB,EAAE;gBAC1D,OAAO;aACR,CAAC,CACH,EACH,OAAO,CACR,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACnD,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;oBAC5B,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC1B,CAAC;gBAED,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAAC,YAA+B;QAChD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAEvD,MAAM,mBAAmB,GAAwB;YAC/C,GAAG,YAAY;YACf,OAAO,EAAE,KAAK;SACf,CAAC;QAEF,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAClD,CAAC;IAED;;;;OAIG;IACH,iBAAiB,CAKf,aAAgB,EAChB,OAGuC;QAEvC,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CACnD,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,CAC9D,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,MAAc;QACjC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,sBAAsB,CAKpB,kBAAqB,EACrB,OAA2D;QAE3D,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAC5B,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EACrC,CAAC,YAAY,EAAE,EAAE,CACf,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CACnE,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,yBAAyB,CAAC,MAAc;QACtC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;CACF"},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/dist/types.js":{"lineLengths":[24,52,44,28,17,2,20,37,3,88,3,75,3,61,3,39,33,13,23,17,11,309,11,55,6,24,2,19,39,23,48,3,38,13,7,128,7,50,2,19,44,23,53,3,29,13,7,134,7,50,2,19,3,55,3,71,3,37,3,37,13,40,24,2,25,14,3,51,3,42,13,40,2,30,14,3,50,3,38,13,40,24,25,2,14,3,74,3,21,23,22,71,67,36,63,71,71,69,69,34,3,60,3,35,13,40,24,21,11,40,11,31,11,104,11,28,11,155,11,38,7,2,14,45,25,30,26,23,3,18,3,57,3,55,18,3,110,2,171,2,105,2,64,3,70,49,49,11,43,10,95,11,35,11,118,11,38,7,3,20,3,59,3,37,13,21,24,2,19,3,176,3,41,13,7,72,7,57,7,59,7,53,7,52,7,23,17,11,91,11,45,6,24,2,19,3,112,3,61,36,44,11,142,11,36,47,41,7,3,3,181,3,41,13,7,72,7,57,7,73,7,52,7,57,7,25,17,11,93,11,45,6,24,7,58,7,27,17,11,80,11,43,11,95,11,45,6,24,7,54,7,23,17,11,91,11,45,6,24,2,19,3,89,3,59,7,199,7,32,43,37,3,3,93,3,72,51,3,10,3,164,3,55,30,3,28,31,13,7,109,7,25,7,79,7,34,2,19,3,107,3,69,48,71,11,142,11,43,7,3,16,60,44,11,72,84,11,41,18,3,58,7,91,55,7,41,3,15,3,55,3,39,13,7,32,7,20,7,48,7,37,2,19,73,7,117,7,21,3,73,7,72,7,30,3,3,58,3,31,13,7,32,7,20,7,47,6,59,7,21,7,54,6,142,7,40,7,48,7,37,2,19,3,64,3,39,13,7,90,7,28,7,78,6,59,7,21,7,50,6,142,7,40,7,153,7,37,2,19,3,70,3,73,40,3,3,69,3,71,39,3,3,79,3,81,50,3,3,79,3,79,55,3,3,71,3,63,40,44,11,117,11,24,7,3,3,69,3,61,89,3,3,209,3,80,62,3,3,122,3,60,45,44,11,125,11,24,7,3,3,158,3,62,47,44,11,55,11,24,7,3,3,206,3,76,57,49,11,137,11,24,7,3,13,3,50,3,37,13,7,32,7,21,7,52,7,40,7,46,7,38,2,19,3,54,3,29,13,7,49,7,21,7,59,7,40,7,60,7,57,2,19,3,89,3,71,38,3,3,67,3,69,35,3,3,61,3,60,37,44,11,53,11,25,11,54,11,52,7,3,3,35,3,34,13,28,7,39,7,21,2,19,3,39,3,35,13,29,7,37,7,30,7,89,7,25,2,19,3,74,3,39,13,32,80,2,19,3,52,3,36,13,40,22,26,27,31,7,2,19,3,66,3,58,7,46,7,40,43,3,3,200,3,78,60,3,11,3,45,3,27,13,7,28,7,21,7,48,7,40,7,74,7,18,17,34,59,6,23,2,19,3,66,3,69,36,3,3,65,3,67,31,3,3,40,3,57,95,51,3,3,93,3,94,28,4,3,62,3,59,36,44,25,53,7,3,3,198,3,76,58,3,13,3,33,3,42,12,11,13,14,12,15,12,16,3,3,72,3,59,42,44,11,206,11,34,7,3,3,184,3,75,47,49,11,44,11,34,11,63,11,39,11,116,11,26,7,3,14,3,36,3,32,13,7,31,7,32,2,19,3,89,3,39,13,7,49,7,48,7,58,7,55,7,78,7,56,7,83,7,63,2,19,3,61,3,38,13,40,62,2,19,3,277,3,64,48,44,49,11,117,11,45,11,158,11,81,44,11,139,11,36,55,11,115,11,57,11,62,11,61,7,3,3,258,3,62,7,56,7,22,7,39,7,92,40,43,26,27,7,3,18,3,61,3,40,13,36,7,47,7,20,2,19,3,23,3,38,13,34,7,48,7,21,2,19,3,74,3,59,45,44,71,11,37,11,19,21,15,39,15,29,15,72,15,30,10,27,7,3,3,57,3,57,17,17,11,68,11,45,11,128,11,44,11,151,11,41,6,23,3,11,3,70,3,27,13,7,76,7,42,7,37,7,33,2,19,3,71,3,60,36,3,3,65,3,58,31,3,3,97,3,77,58,3,21,44,22,28,26,26,27,29,31,39,30,27,29,26,27,3,49,32,31,34,39,3,43,22,30,26,3,21,44,22,31,27,3,49,32,31,37,38,42,38,40,3,43,22,27,25,26,28,30,38,29,25,26,3,37,38,47,25,25,5,1,33],"data":{"version":3,"file":"types.js","sourceRoot":"","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/node_modules/.pnpm/@modelcontextprotocol+sdk@1.0.1/node_modules/@modelcontextprotocol/sdk/src/types.ts"],"names":[],"mappings":"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"},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/api-client.test.ts":{"lineLengths":[30,29,46,26,80,67,17,25,42,15,18,22,46,78,34,48,7,21,33,28,7,35,59,44,114,11,65,44,116,11,7,33,74,62,77,68,101,63,58,61,61,46,56,11,59,62,46,56,11,72,72,98,70,80,11,7,35,59,47,61,28,46,30,28,15,44,72,29,55,40,61,11,74,84,72,43,59,11,50,81,41,59,11,67,89,39,37,11,7,46,62,39,34,25,81,14,45,57,64,74,52,84,11,56,33,58,72,17,53,59,13,27,99,13,11,52,38,34,26,28,87,14,45,72,17,53,59,13,27,62,13,11,59,41,34,25,48,14,45,72,17,53,59,13,27,88,13,11,7,35,26,51,34,25,67,14,45,11,73,104,52,52,59,47,47,50,48,11,72,43,52,52,77,11,68,82,52,52,50,50,48,56,11,72,86,52,52,61,50,48,56,11,80,61,52,52,85,11,75,42,31,40,38,31,42,48,15,52,52,58,50,59,57,50,48,56,11,77,39,72,70,29,15,52,24,52,73,36,56,52,50,90,88,48,68,66,11,72,39,35,33,30,41,46,44,53,54,15,52,56,50,53,51,48,59,51,49,59,61,11,73,59,52,52,56,54,52,49,11,60,48,52,52,78,11,77,42,52,52,83,11,74,52,52,52,106,11,59,47,52,52,77,11,53,41,52,52,76,11,53,41,52,52,77,11,65,38,34,26,28,85,14,45,17,45,59,13,27,60,13,11,65,38,34,26,28,88,14,45,17,45,59,13,27,63,13,11,7,3,39300],"data":{"version":3,"file":"/Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/api-client.test.ts","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/api-client.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport * as chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport sinon from 'sinon';\nimport { TradingSimulatorClient, tradingClient } from '../../src/api-client.js';\nimport { BlockchainType, SpecificChain } from '../../src/types.js';\n\n// Configure chai\nchai.use(chaiAsPromised);\n\ndescribe('TradingSimulatorClient', () => {\n  let client: TradingSimulatorClient;\n  let fetchStub: sinon.SinonStub;\n\n  beforeEach(() => {\n    // Create a fresh client for each test\n    client = new TradingSimulatorClient('test-key', 'http://example.com');\n\n    // Create a stub for fetch\n    fetchStub = sinon.stub(global, 'fetch');\n  });\n\n  afterEach(() => {\n    // Restore original fetch\n    fetchStub.restore();\n  });\n\n  describe('detectChain', () => {\n    it('should detect EVM addresses correctly', () => {\n      // Test with real implementation\n      expect(client.detectChain('0x1234567890123456789012345678901234567890')).to.equal(BlockchainType.EVM);\n    });\n\n    it('should default to SVM for non-EVM addresses', () => {\n      // Test with real implementation\n      expect(client.detectChain('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v')).to.equal(BlockchainType.SVM);\n    });\n  });\n\n  describe('API calls', () => {\n    // Note: These tests will fail without a real API key and endpoint\n    // This is INTENTIONAL to enforce our \"no mocks\" rule.\n    // The tests should be skipped in CI unless credentials are provided.\n\n    // Check that environment has necessary values for API tests\n    const hasApiCredentials = process.env.TRADING_SIM_API_KEY && process.env.TRADING_SIM_API_URL;\n    const conditionalIt = hasApiCredentials ? it : it.skip;\n\n    conditionalIt('should get balances', async () => {\n      // Using real API client with real implementation\n      const result = await tradingClient.getBalances();\n      expect(result).to.be.an('object');\n      // Further assertions on real response shape\n    });\n\n    conditionalIt('should get portfolio', async () => {\n      const result = await tradingClient.getPortfolio();\n      expect(result).to.be.an('object');\n      // Further assertions on real response shape\n    });\n\n    conditionalIt('should handle API errors properly', async () => {\n      // Create client with invalid API key to test error handling\n      const invalidClient = new TradingSimulatorClient('invalid-key', 'http://example.com');\n\n      // Expect real API error to be thrown and handled properly\n      await expect(invalidClient.getBalances()).to.be.rejectedWith(Error);\n    });\n  });\n\n  describe('constructor', () => {\n    it('should warn if no API key is provided', () => {\n      // Capture stderr to verify warning\n      const originalStderrWrite = process.stderr.write;\n      let output = '';\n\n      process.stderr.write = ((str: string) => {\n        output += str;\n        return true;\n      }) as any;\n\n      // Create client with no API key\n      new TradingSimulatorClient(undefined, 'http://example.com');\n\n      // Restore stderr\n      process.stderr.write = originalStderrWrite;\n\n      // Verify warning was logged\n      expect(output).to.include('No API key provided');\n    });\n\n    it('should normalize base URL by removing trailing slash', () => {\n      const client = new TradingSimulatorClient('key', 'http://example.com/');\n\n      // Access private property using any cast (only for testing)\n      const baseUrl = (client as any).baseUrl;\n\n      expect(baseUrl).to.equal('http://example.com');\n    });\n\n    it('should trim provided API key', () => {\n      const client = new TradingSimulatorClient('  key-with-whitespace  ');\n      const apiKey = (client as any).apiKey;\n      expect(apiKey).to.equal('key-with-whitespace');\n    });\n\n    it('should initialize with debug flag from config', () => {\n      const client = new TradingSimulatorClient('key', 'http://example.com', true);\n      const debug = (client as any).debug;\n      expect(debug).to.be.true;\n    });\n  });\n\n  describe('private request method', () => {\n    it('should handle successful responses', async () => {\n      // Mock successful response\n      const mockResponse = {\n        ok: true,\n        text: async () => JSON.stringify({ success: true, data: 'test' })\n      };\n      fetchStub.resolves(mockResponse as any);\n\n      // Call private request method using any cast\n      const result = await (client as any).request('GET', '/test');\n\n      expect(result).to.deep.equal({ success: true, data: 'test' });\n      expect(fetchStub.calledOnce).to.be.true;\n      expect(fetchStub.firstCall.args[0]).to.equal('http://example.com/test');\n    });\n\n    it('should handle network errors', async () => {\n      // Mock network error\n      fetchStub.rejects(new Error('Network error'));\n\n      // Call private request method and expect error to be thrown\n      try {\n        await (client as any).request('GET', '/test');\n        expect.fail('Should have thrown an error');\n      } catch (error: any) {\n        expect(error.message).to.equal('Network error occurred while making API request.');\n      }\n    });\n\n    it('should handle API errors', async () => {\n      // Mock API error response\n      const mockResponse = {\n        ok: false,\n        status: 400,\n        text: async () => JSON.stringify({ error: { message: 'Bad request' } })\n      };\n      fetchStub.resolves(mockResponse as any);\n\n      // Call private request method and expect error to be thrown\n      try {\n        await (client as any).request('GET', '/test');\n        expect.fail('Should have thrown an error');\n      } catch (error: any) {\n        expect(error.message).to.equal('Bad request');\n      }\n    });\n\n    it('should handle JSON parse errors', async () => {\n      // Mock invalid JSON response\n      const mockResponse = {\n        ok: true,\n        text: async () => 'Invalid JSON'\n      };\n      fetchStub.resolves(mockResponse as any);\n\n      // Call private request method and expect error to be thrown\n      try {\n        await (client as any).request('GET', '/test');\n        expect.fail('Should have thrown an error');\n      } catch (error: any) {\n        expect(error.message).to.include('Failed to parse successful response');\n      }\n    });\n  });\n\n  describe('API methods', () => {\n    beforeEach(() => {\n      // Create stub for successful responses\n      const mockResponse = {\n        ok: true,\n        text: async () => JSON.stringify({ success: true })\n      };\n      fetchStub.resolves(mockResponse as any);\n    });\n\n    it('should call getTrades with correct parameters', async () => {\n      await client.getTrades({ limit: 10, offset: 5, token: '0x123', chain: BlockchainType.EVM });\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.include('/api/account/trades?');\n      expect(url).to.include('limit=10');\n      expect(url).to.include('offset=5');\n      expect(url).to.include('token=0x123');\n      expect(url).to.include('chain=evm');\n    });\n\n    it('should call getPrice with minimal parameters', async () => {\n      await client.getPrice('0x123');\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/price?token=0x123');\n    });\n\n    it('should call getPrice with all parameters', async () => {\n      await client.getPrice('0x123', BlockchainType.EVM, SpecificChain.ETH);\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.include('/api/price?');\n      expect(url).to.include('token=0x123');\n      expect(url).to.include('chain=evm');\n      expect(url).to.include('specificChain=eth');\n    });\n\n    it('should call getTokenInfo with all parameters', async () => {\n      await client.getTokenInfo('0x123', BlockchainType.EVM, SpecificChain.ETH);\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.include('/api/price/token-info?');\n      expect(url).to.include('token=0x123');\n      expect(url).to.include('chain=evm');\n      expect(url).to.include('specificChain=eth');\n    });\n\n    it('should call getPriceHistory with required parameters', async () => {\n      await client.getPriceHistory({ token: '0x123' });\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/price/history?token=0x123');\n    });\n\n    it('should call getPriceHistory with all parameters', async () => {\n      await client.getPriceHistory({\n        token: '0x123',\n        startTime: '2023-01-01',\n        endTime: '2023-02-01',\n        interval: '1h',\n        chain: BlockchainType.EVM,\n        specificChain: SpecificChain.ETH\n      });\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.include('/api/price/history?');\n      expect(url).to.include('token=0x123');\n      expect(url).to.include('startTime=2023-01-01');\n      expect(url).to.include('endTime=2023-02-01');\n      expect(url).to.include('interval=1h');\n      expect(url).to.include('chain=evm');\n      expect(url).to.include('specificChain=eth');\n    });\n\n    it('should call executeTrade with required parameters', async () => {\n      await client.executeTrade({\n        fromToken: '0x1234567890123456789012345678901234567890',\n        toToken: '0x0987654321098765432109876543210987654321',\n        amount: '1.0'\n      });\n\n      expect(fetchStub.calledOnce).to.be.true;\n\n      // Check URL\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/trade/execute');\n\n      // Check method and body\n      const options = fetchStub.firstCall.args[1];\n      expect(options.method).to.equal('POST');\n\n      const body = JSON.parse(options.body);\n      expect(body.fromToken).to.equal('0x1234567890123456789012345678901234567890');\n      expect(body.toToken).to.equal('0x0987654321098765432109876543210987654321');\n      expect(body.amount).to.equal('1.0');\n      expect(body.fromChain).to.equal('evm'); // Auto-detected\n      expect(body.toChain).to.equal('evm'); // Auto-detected\n    });\n\n    it('should call executeTrade with all parameters', async () => {\n      await client.executeTrade({\n        fromToken: '0x123',\n        toToken: '0x456',\n        amount: '1.0',\n        slippageTolerance: '0.5',\n        fromChain: BlockchainType.EVM,\n        toChain: BlockchainType.EVM,\n        fromSpecificChain: SpecificChain.ETH,\n        toSpecificChain: SpecificChain.POLYGON\n      });\n\n      expect(fetchStub.calledOnce).to.be.true;\n\n      const options = fetchStub.firstCall.args[1];\n      const body = JSON.parse(options.body);\n      expect(body.fromToken).to.equal('0x123');\n      expect(body.toToken).to.equal('0x456');\n      expect(body.amount).to.equal('1.0');\n      expect(body.slippageTolerance).to.equal('0.5');\n      expect(body.fromChain).to.equal('evm');\n      expect(body.toChain).to.equal('evm');\n      expect(body.fromSpecificChain).to.equal('eth');\n      expect(body.toSpecificChain).to.equal('polygon');\n    });\n\n    it('should call getQuote with required parameters', async () => {\n      await client.getQuote('0x123', '0x456', '1.0');\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.include('/api/trade/quote?');\n      expect(url).to.include('fromToken=0x123');\n      expect(url).to.include('toToken=0x456');\n      expect(url).to.include('amount=1.0');\n    });\n\n    it('should call getCompetitionStatus', async () => {\n      await client.getCompetitionStatus();\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/competition/status');\n    });\n\n    it('should call getLeaderboard without competition ID', async () => {\n      await client.getLeaderboard();\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/competition/leaderboard');\n    });\n\n    it('should call getLeaderboard with competition ID', async () => {\n      await client.getLeaderboard('comp-123');\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/competition/leaderboard?competitionId=comp-123');\n    });\n\n    it('should call getCompetitionRules', async () => {\n      await client.getCompetitionRules();\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/competition/rules');\n    });\n\n    it('should call findCoinLists', async () => {\n      await client.findCoinLists();\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/admin/coin-lists');\n    });\n\n    it('should call getTokenRates', async () => {\n      await client.getTokenRates();\n\n      expect(fetchStub.calledOnce).to.be.true;\n      const url = fetchStub.firstCall.args[0];\n      expect(url).to.equal('http://example.com/api/price/token-rates');\n    });\n\n    it('should handle errors in findCoinLists', async () => {\n      // Mock API error response\n      const mockResponse = {\n        ok: false,\n        status: 403,\n        text: async () => JSON.stringify({ error: { message: 'Forbidden' } })\n      };\n      fetchStub.resolves(mockResponse as any);\n\n      try {\n        await client.findCoinLists();\n        expect.fail('Should have thrown an error');\n      } catch (error: any) {\n        expect(error.message).to.equal('Forbidden');\n      }\n    });\n\n    it('should handle errors in getTokenRates', async () => {\n      // Mock API error response\n      const mockResponse = {\n        ok: false,\n        status: 500,\n        text: async () => JSON.stringify({ error: { message: 'Server error' } })\n      };\n      fetchStub.resolves(mockResponse as any);\n\n      try {\n        await client.getTokenRates();\n        expect.fail('Should have thrown an error');\n      } catch (error: any) {\n        expect(error.message).to.equal('Server error');\n      }\n    });\n  });\n});"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/api-client.ts":{"lineLengths":[3,31,2,80,78,27,2,21,3,42,75,3,31,2,62,34,3,37,37,11,48,12,26,10,7,60,6,46,63,51,7,85,68,65,60,80,44,27,89,9,61,78,27,5,7,59,6,70,6,57,7,23,25,51,47,46,10,25,56,79,78,9,23,5,7,32,6,74,6,54,40,44,59,76,7,46,45,67,47,25,41,20,29,10,25,56,55,49,92,9,21,13,49,9,30,82,80,9,51,27,83,38,21,63,34,86,17,23,48,17,13,42,9,13,50,24,9,28,82,9,5,7,55,6,83,6,37,57,7,24,75,48,38,9,78,34,5,7,65,6,68,6,93,45,7,25,60,5,7,44,6,83,6,64,45,7,26,61,5,7,42,6,52,6,81,69,45,7,30,23,22,49,30,65,31,67,30,54,30,54,44,9,66,5,7,40,6,62,6,58,76,98,61,65,7,49,58,53,20,39,9,67,28,55,9,57,5,7,62,6,51,6,37,76,66,66,65,7,53,58,53,20,39,9,50,28,55,9,68,5,7,44,6,94,6,61,69,71,7,35,48,48,29,60,27,56,28,58,25,52,33,68,49,65,5,7,70,6,77,41,6,45,79,7,31,27,32,86,68,44,32,54,61,26,21,17,13,9,27,32,86,68,72,32,54,57,26,21,17,13,9,20,5,7,53,6,75,6,84,71,71,7,32,37,25,40,36,34,10,48,37,65,29,49,27,45,37,65,35,61,67,32,67,9,30,63,9,31,67,5,7,40,6,85,6,44,47,49,61,71,7,48,144,63,5,7,48,6,66,6,74,45,7,34,62,5,7,54,6,65,6,102,67,45,7,41,34,75,45,41,5,7,48,6,69,6,73,45,7,33,61,5,7,43,6,59,6,66,71,7,27,13,64,9,23,59,24,9,5,7,31,6,54,6,67,45,7,27,13,65,9,23,59,24,9,5,1,3,53,2,72,3,58,33824],"data":{"version":3,"file":"/Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/api-client.ts","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/api-client.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Trading Simulator API Client\n *\n * This module provides a client for interacting with the Trading Simulator API.\n * It handles authentication, request formatting, and response parsing for all\n * supported API endpoints.\n *\n * @module api-client\n */\n\nimport { config, logger } from \"./env.js\";\nimport {\n  BalancesResponse,\n  BlockchainType,\n  COMMON_TOKENS,\n  CompetitionRulesResponse,\n  CompetitionStatusResponse,\n  LeaderboardResponse,\n  PortfolioResponse,\n  PriceHistoryParams,\n  PriceHistoryResponse,\n  PriceResponse,\n  QuoteResponse,\n  SpecificChain,\n  TokenInfoResponse,\n  TradeExecutionResponse,\n  TradeHistoryParams,\n  TradeParams,\n  TradesResponse,\n} from \"./types.js\";\n\n/**\n * Trading Simulator API Client\n *\n * Handles authentication and provides methods for interacting\n * with the Trading Simulator API.\n */\nexport class TradingSimulatorClient {\n  /** API key for authentication */\n  private apiKey: string;\n  /** Base URL of the Trading Simulator API */\n  private baseUrl: string;\n  /** Debug mode flag */\n  private debug: boolean;\n\n  /**\n   * Create a new instance of the Trading Simulator client\n   *\n   * @param apiKey The API key for your team\n   * @param baseUrl The base URL of the Trading Simulator API\n   * @param debug Whether to enable debug logging\n   */\n  constructor(\n    apiKey?: string | undefined,\n    baseUrl: string = config.TRADING_SIM_API_URL,\n    debug: boolean = config.DEBUG,\n  ) {\n    // Trim the API key to avoid whitespace issues (if provided)\n    const providedKey = apiKey || config.TRADING_SIM_API_KEY;\n    this.apiKey = providedKey ? providedKey.trim() : \"\";\n\n    // Check for empty API key but don't throw - this allows client creation\n    // but will fail on actual API calls\n    if (!this.apiKey) {\n      logger.error(\n        \"No API key provided. API calls will fail until a key is set.\",\n      );\n    }\n\n    // Normalize the base URL to ensure no trailing slash\n    this.baseUrl = baseUrl.endsWith(\"/\") ? baseUrl.slice(0, -1) : baseUrl;\n    this.debug = debug;\n  }\n\n  /**\n   * Generate the required headers for API authentication\n   *\n   * Creates authorization and content-type headers for API requests\n   *\n   * @returns An object containing the required headers\n   */\n  private generateHeaders(): Record<string, string> {\n    const headers: Record<string, string> = {\n      Authorization: `Bearer ${this.apiKey}`,\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": \"TradingSimMCP/1.0\",\n    };\n\n    if (this.debug) {\n      logger.info(\"[ApiClient] Request headers:\");\n      logger.info(\"[ApiClient] Authorization: Bearer xxxxx... (masked)\");\n      logger.info(\"[ApiClient] Content-Type:\", headers[\"Content-Type\"]);\n    }\n\n    return headers;\n  }\n\n  /**\n   * Make a request to the API\n   *\n   * Generic method to handle HTTP requests to the Trading Simulator API\n   *\n   * @param method The HTTP method (GET, POST, etc.)\n   * @param path The API endpoint path\n   * @param body The request body (if any)\n   * @returns A promise that resolves to the API response\n   * @throws Error if the network request fails or returns an error status\n   */\n  private async request<T>(\n    method: string,\n    path: string,\n    body: any = null,\n  ): Promise<T> {\n    const url = `${this.baseUrl}${path}`;\n    const bodyString = body ? JSON.stringify(body) : undefined;\n    const headers = this.generateHeaders();\n\n    const options: RequestInit = {\n      method: method.toUpperCase(),\n      headers,\n      body: bodyString,\n    };\n\n    if (this.debug) {\n      logger.info(\"[ApiClient] Request details:\");\n      logger.info(\"[ApiClient] Method:\", method);\n      logger.info(\"[ApiClient] URL:\", url);\n      logger.info(\n        \"[ApiClient] Body:\",\n        body ? JSON.stringify(body, null, 2) : \"none\",\n      );\n    }\n\n    let response: Response;\n    try {\n      response = await fetch(url, options);\n    } catch (networkError) {\n      logger.error(\"[ApiClient] Network error during fetch:\", networkError);\n      throw new Error(\"Network error occurred while making API request.\");\n    }\n\n    const responseText = await response.text();\n\n    if (!response.ok) {\n      let errorMessage = `API request failed with status ${response.status}`;\n      if (responseText.trim()) {\n        try {\n          const errorData = JSON.parse(responseText);\n          errorMessage =\n            errorData.error?.message || errorData.message || errorMessage;\n        } catch {\n          errorMessage = responseText;\n        }\n      }\n      throw new Error(errorMessage);\n    }\n\n    try {\n      const data = JSON.parse(responseText);\n      return data as T;\n    } catch (parseError) {\n      throw new Error(`Failed to parse successful response: ${parseError}`);\n    }\n  }\n\n  /**\n   * Detect blockchain type from token address format\n   *\n   * Analyzes the token address format to determine if it's an EVM or SVM address\n   *\n   * @param token The token address\n   * @returns The detected blockchain type (SVM or EVM)\n   */\n  public detectChain(token: string): BlockchainType {\n    // Ethereum addresses start with '0x' followed by 40 hex characters\n    if (/^0x[a-fA-F0-9]{40}$/.test(token)) {\n      return BlockchainType.EVM;\n    }\n    // Solana addresses are base58 encoded, typically around 44 characters\n    return BlockchainType.SVM;\n  }\n\n  /**\n   * Get your team's token balances across all supported chains\n   *\n   * Retrieves balance information for all tokens held by the team\n   *\n   * @returns A promise that resolves to balance information including tokens on all chains\n   * @throws Error if the API request fails\n   */\n  async getBalances(): Promise<BalancesResponse> {\n    return this.request<BalancesResponse>(\"GET\", \"/api/account/balances\");\n  }\n\n  /**\n   * Get your team's portfolio information\n   *\n   * Retrieves detailed portfolio information including positions and total value\n   *\n   * @returns A promise that resolves to portfolio information\n   * @throws Error if the API request fails\n   */\n  async getPortfolio(): Promise<PortfolioResponse> {\n    return this.request<PortfolioResponse>(\"GET\", \"/api/account/portfolio\");\n  }\n\n  /**\n   * Get the trade history for your team\n   *\n   * Retrieves past trades with optional filtering\n   *\n   * @param options Optional filtering parameters (limit, offset, token, chain)\n   * @returns A promise that resolves to the trade history response\n   * @throws Error if the API request fails\n   */\n  async getTrades(options?: TradeHistoryParams): Promise<TradesResponse> {\n    let query = \"\";\n\n    if (options) {\n      const params = new URLSearchParams();\n      if (options.limit) params.append(\"limit\", options.limit.toString());\n      if (options.offset) params.append(\"offset\", options.offset.toString());\n      if (options.token) params.append(\"token\", options.token);\n      if (options.chain) params.append(\"chain\", options.chain);\n      query = `?${params.toString()}`;\n    }\n\n    return this.request<TradesResponse>(\"GET\", `/api/account/trades${query}`);\n  }\n\n  /**\n   * Get the current price for a token\n   *\n   * Retrieves the current market price for a specific token\n   *\n   * @param token The token address to get the price for\n   * @param chain Optional blockchain type (auto-detected if not provided)\n   * @param specificChain Optional specific chain for EVM tokens (like eth, polygon, base, etc.)\n   * @returns A promise that resolves to the price response\n   * @throws Error if the API request fails or token is invalid\n   */\n  async getPrice(\n    token: string,\n    chain?: BlockchainType,\n    specificChain?: SpecificChain,\n  ): Promise<PriceResponse> {\n    let query = `?token=${encodeURIComponent(token)}`;\n\n    // Add chain parameter if explicitly provided\n    if (chain) {\n      query += `&chain=${chain}`;\n    }\n\n    // Add specificChain parameter if provided (for EVM tokens)\n    if (specificChain) {\n      query += `&specificChain=${specificChain}`;\n    }\n\n    return this.request<PriceResponse>(\"GET\", `/api/price${query}`);\n  }\n\n  /**\n   * Get detailed token information including specific chain\n   *\n   * Retrieves extended information about a token\n   *\n   * @param token The token address\n   * @param chain Optional blockchain type (auto-detected if not provided)\n   * @param specificChain Optional specific chain for EVM tokens\n   * @returns A promise that resolves to the token info response\n   * @throws Error if the API request fails or token is invalid\n   */\n  async getTokenInfo(\n    token: string,\n    chain?: BlockchainType,\n    specificChain?: SpecificChain,\n  ): Promise<TokenInfoResponse> {\n    let query = `?token=${encodeURIComponent(token)}`;\n\n    // Add chain parameter if explicitly provided\n    if (chain) {\n      query += `&chain=${chain}`;\n    }\n\n    // Add specificChain parameter if provided\n    if (specificChain) {\n      query += `&specificChain=${specificChain}`;\n    }\n\n    return this.request<TokenInfoResponse>(\n      \"GET\",\n      `/api/price/token-info${query}`,\n    );\n  }\n\n  /**\n   * Get historical price data for a token\n   *\n   * Retrieves price history for a specific token with customizable time range and intervals\n   *\n   * @param params Parameters for the price history request\n   * @returns A promise that resolves to the price history response\n   * @throws Error if the API request fails or parameters are invalid\n   */\n  async getPriceHistory(\n    params: PriceHistoryParams,\n  ): Promise<PriceHistoryResponse> {\n    const urlParams = new URLSearchParams();\n    urlParams.append(\"token\", params.token);\n\n    if (params.startTime) urlParams.append(\"startTime\", params.startTime);\n    if (params.endTime) urlParams.append(\"endTime\", params.endTime);\n    if (params.interval) urlParams.append(\"interval\", params.interval);\n    if (params.chain) urlParams.append(\"chain\", params.chain);\n    if (params.specificChain)\n      urlParams.append(\"specificChain\", params.specificChain);\n\n    const query = `?${urlParams.toString()}`;\n    return this.request<PriceHistoryResponse>(\n      \"GET\",\n      `/api/price/history${query}`,\n    );\n  }\n\n  /**\n   * Find token in COMMON_TOKENS and determine its chain information\n   *\n   * Looks up a token in the predefined COMMON_TOKENS list to determine its\n   * blockchain type and specific chain\n   *\n   * @param token The token address to find\n   * @returns An object with chain and specificChain if found, null otherwise\n   */\n  private findTokenChainInfo(\n    token: string,\n  ): { chain: BlockchainType; specificChain: SpecificChain } | null {\n    // Check SVM tokens\n    if (COMMON_TOKENS.SVM) {\n      for (const [specificChain, tokens] of Object.entries(COMMON_TOKENS.SVM)) {\n        for (const [_, address] of Object.entries(tokens)) {\n          if (address === token) {\n            return {\n              chain: BlockchainType.SVM,\n              specificChain: SpecificChain.SVM,\n            };\n          }\n        }\n      }\n    }\n\n    // Check EVM tokens\n    if (COMMON_TOKENS.EVM) {\n      for (const [specificChain, tokens] of Object.entries(COMMON_TOKENS.EVM)) {\n        for (const [_, address] of Object.entries(tokens)) {\n          if (address.toLowerCase() === token.toLowerCase()) {\n            return {\n              chain: BlockchainType.EVM,\n              specificChain: specificChain as SpecificChain,\n            };\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Execute a token trade on the trading simulator\n   *\n   * Performs a trade from one token to another with the specified amount\n   *\n   * @param params Trade parameters including source/destination tokens and amount\n   * @returns A promise that resolves to the trade execution response\n   * @throws Error if the API request fails or parameters are invalid\n   */\n  async executeTrade(params: TradeParams): Promise<TradeExecutionResponse> {\n    // Create the request payload\n    const payload: any = {\n      fromToken: params.fromToken,\n      toToken: params.toToken,\n      amount: params.amount,\n    };\n\n    // Add optional parameters if they exist\n    if (params.slippageTolerance)\n      payload.slippageTolerance = params.slippageTolerance;\n    if (params.fromChain) payload.fromChain = params.fromChain;\n    if (params.toChain) payload.toChain = params.toChain;\n    if (params.fromSpecificChain)\n      payload.fromSpecificChain = params.fromSpecificChain;\n    if (params.toSpecificChain)\n      payload.toSpecificChain = params.toSpecificChain;\n\n    // If chain parameters are not provided, try to detect them\n    if (!params.fromChain) {\n      payload.fromChain = this.detectChain(params.fromToken);\n    }\n\n    if (!params.toChain) {\n      payload.toChain = this.detectChain(params.toToken);\n    }\n\n    // Make the API request\n    return this.request<TradeExecutionResponse>(\n      \"POST\",\n      \"/api/trade/execute\",\n      payload,\n    );\n  }\n\n  /**\n   * Get a quote for a potential trade\n   *\n   * Retrieves an estimate of the resulting amount for a trade without executing it\n   *\n   * @param fromToken Source token address\n   * @param toToken Destination token address\n   * @param amount Amount of fromToken to trade\n   * @returns A promise that resolves to the quote response\n   * @throws Error if the API request fails or parameters are invalid\n   */\n  async getQuote(\n    fromToken: string,\n    toToken: string,\n    amount: string,\n  ): Promise<QuoteResponse> {\n    const query = `?fromToken=${encodeURIComponent(fromToken)}&toToken=${encodeURIComponent(toToken)}&amount=${encodeURIComponent(amount)}`;\n\n    return this.request<QuoteResponse>(\"GET\", `/api/trade/quote${query}`);\n  }\n\n  /**\n   * Get the status of the current competition\n   *\n   * Retrieves information about the current trading competition\n   *\n   * @returns A promise that resolves to the competition status response\n   * @throws Error if the API request fails\n   */\n  async getCompetitionStatus(): Promise<CompetitionStatusResponse> {\n    return this.request<CompetitionStatusResponse>(\n      \"GET\",\n      \"/api/competition/status\",\n    );\n  }\n\n  /**\n   * Get the leaderboard for the current competition\n   *\n   * Retrieves the current standings in the trading competition\n   *\n   * @param competitionId Optional ID of a specific competition (uses active competition by default)\n   * @returns A promise that resolves to the leaderboard response\n   * @throws Error if the API request fails\n   */\n  async getLeaderboard(competitionId?: string): Promise<LeaderboardResponse> {\n    const path = competitionId\n      ? `/api/competition/leaderboard?competitionId=${competitionId}`\n      : \"/api/competition/leaderboard\";\n\n    return this.request<LeaderboardResponse>(\"GET\", path);\n  }\n\n  /**\n   * Get the rules for the current competition\n   *\n   * Retrieves the rules and parameters for the current competition\n   *\n   * @returns A promise that resolves to the competition rules response\n   * @throws Error if the API request fails\n   */\n  async getCompetitionRules(): Promise<CompetitionRulesResponse> {\n    return this.request<CompetitionRulesResponse>(\n      \"GET\",\n      \"/api/competition/rules\",\n    );\n  }\n\n  /**\n   * Get the list of supported coin lists\n   *\n   * Admin-only endpoint to retrieve available coin lists\n   *\n   * @returns A promise that resolves to the coin lists response\n   * @throws Error if the API request fails or user lacks permissions\n   */\n  async findCoinLists(): Promise<any> {\n    try {\n      return this.request(\"GET\", \"/api/admin/coin-lists\");\n    } catch (error) {\n      logger.error(\"Error in findCoinLists:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get token exchange rates\n   *\n   * Retrieves current exchange rates between tokens\n   *\n   * @returns A promise that resolves to the token rates response\n   * @throws Error if the API request fails\n   */\n  async getTokenRates(): Promise<any> {\n    try {\n      return this.request(\"GET\", \"/api/price/token-rates\");\n    } catch (error) {\n      logger.error(\"Error in getTokenRates:\", error);\n      throw error;\n    }\n  }\n}\n\n/**\n * Singleton instance of the Trading Simulator client\n *\n * This is the default client instance to use throughout the application\n */\nexport const tradingClient = new TradingSimulatorClient();\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/types.ts":{"lineLengths":[3,34,2,88,78,2,16,3,19,26,28,33,34,35,34,44,22,25,27,27,33,43,41,30,33,19,43,15,35,19,43,20,45,16,37,17,33,42,25,30,20,10,14,65,63,10,6,22,10,14,63,63,10,15,63,62,10,6,2,10384],"data":{"version":3,"file":"/Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/types.ts","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/types.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,mBAAmB;AACnB,MAAM,CAAN,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,6BAA6B;IAC7B,6BAAW,CAAA;IACX,+BAA+B;IAC/B,6BAAW,CAAA;AACb,CAAC,EALW,cAAc,KAAd,cAAc,QAKzB;AAED,sBAAsB;AACtB,MAAM,CAAN,IAAY,aAmBX;AAnBD,WAAY,aAAa;IACvB,uBAAuB;IACvB,4BAAW,CAAA;IACX,uCAAuC;IACvC,oCAAmB,CAAA;IACnB,0BAA0B;IAC1B,4BAAW,CAAA;IACX,eAAe;IACf,sCAAqB,CAAA;IACrB,WAAW;IACX,8BAAa,CAAA;IACb,eAAe;IACf,sCAAqB,CAAA;IACrB,gBAAgB;IAChB,wCAAuB,CAAA;IACvB,YAAY;IACZ,gCAAe,CAAA;IACf,aAAa;IACb,4BAAW,CAAA;AACb,CAAC,EAnBW,aAAa,KAAb,aAAa,QAmBxB;AAED,yBAAyB;AACzB,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,gBAAgB;IAChB,GAAG,EAAE;QACH,GAAG,EAAE;YACH,IAAI,EAAE,8CAA8C;YACpD,GAAG,EAAE,6CAA6C;SACnD;KACF;IACD,kBAAkB;IAClB,GAAG,EAAE;QACH,GAAG,EAAE;YACH,IAAI,EAAE,4CAA4C;YAClD,IAAI,EAAE,4CAA4C;SACnD;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,4CAA4C;YAClD,GAAG,EAAE,4CAA4C;SAClD;KACF;CACF,CAAC","sourcesContent":["/**\n * Types for Trading Simulator MCP\n *\n * This file contains type definitions used throughout the Trading Simulator MCP server.\n * It includes blockchain types, API response types, and parameter interfaces.\n *\n * @module types\n */\n\n// Blockchain types\nexport enum BlockchainType {\n  /** Solana Virtual Machine */\n  SVM = \"svm\",\n  /** Ethereum Virtual Machine */\n  EVM = \"evm\",\n}\n\n// Specific EVM chains\nexport enum SpecificChain {\n  /** Ethereum Mainnet */\n  ETH = \"eth\",\n  /** Polygon (formerly Matic) Network */\n  POLYGON = \"polygon\",\n  /** Binance Smart Chain */\n  BSC = \"bsc\",\n  /** Arbitrum */\n  ARBITRUM = \"arbitrum\",\n  /** Base */\n  BASE = \"base\",\n  /** Optimism */\n  OPTIMISM = \"optimism\",\n  /** Avalanche */\n  AVALANCHE = \"avalanche\",\n  /** Linea */\n  LINEA = \"linea\",\n  /** Solana */\n  SVM = \"svm\",\n}\n\n// Common token addresses\nexport const COMMON_TOKENS = {\n  // Solana tokens\n  SVM: {\n    SVM: {\n      USDC: \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n      SOL: \"So11111111111111111111111111111111111111112\",\n    },\n  },\n  // Ethereum tokens\n  EVM: {\n    ETH: {\n      USDC: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n      WETH: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n    },\n    BASE: {\n      USDC: \"0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913\",\n      ETH: \"0x4200000000000000000000000000000000000006\",\n    },\n  },\n};\n\n// Trade Parameters\nexport interface TradeParams {\n  /** Source token address */\n  fromToken: string;\n  /** Destination token address */\n  toToken: string;\n  /** Amount of fromToken to trade */\n  amount: string;\n  /** Optional slippage tolerance percentage (e.g., '0.5' for 0.5%) */\n  slippageTolerance?: string;\n  /** Blockchain type of the source token */\n  fromChain?: BlockchainType;\n  /** Blockchain type of the destination token */\n  toChain?: BlockchainType;\n  /** Specific chain for EVM source token */\n  fromSpecificChain?: SpecificChain;\n  /** Specific chain for EVM destination token */\n  toSpecificChain?: SpecificChain;\n}\n\n// Trade History Query Parameters\nexport interface TradeHistoryParams {\n  /** Maximum number of trades to return (for pagination) */\n  limit?: number;\n  /** Offset for pagination */\n  offset?: number;\n  /** Filter by specific token address */\n  token?: string;\n  /** Filter by blockchain type */\n  chain?: BlockchainType;\n}\n\n// Price History Parameters\nexport interface PriceHistoryParams {\n  /** Token address to get price history for */\n  token: string;\n  /** Start time as ISO timestamp */\n  startTime?: string;\n  /** End time as ISO timestamp */\n  endTime?: string;\n  /** Time interval for price points */\n  interval?: \"1m\" | \"5m\" | \"15m\" | \"1h\" | \"4h\" | \"1d\";\n  /** Blockchain type */\n  chain?: BlockchainType;\n  /** Specific chain for EVM tokens */\n  specificChain?: SpecificChain;\n}\n\n// API Response Types\nexport interface ApiResponse {\n  success: boolean;\n  error?: {\n    code: string;\n    message: string;\n  };\n}\n\nexport interface BalancesResponse extends ApiResponse {\n  teamId: string;\n  balances: Array<{\n    token: string;\n    amount: number;\n    chain: BlockchainType;\n    specificChain: string | null;\n  }>;\n}\n\nexport interface PortfolioResponse extends ApiResponse {\n  teamId: string;\n  totalValue: number;\n  tokens: Array<{\n    token: string;\n    amount: number;\n    price: number;\n    value: number;\n    chain: BlockchainType;\n    specificChain: string | null;\n  }>;\n  snapshotTime: string;\n  source: \"snapshot\" | \"live-calculation\";\n}\n\nexport interface TradeResponse {\n  id: string;\n  teamId: string;\n  competitionId: string;\n  fromToken: string;\n  toToken: string;\n  fromAmount: number;\n  toAmount: number;\n  price: number;\n  success: boolean;\n  error: string | null;\n  timestamp: string;\n  fromChain: BlockchainType;\n  toChain: BlockchainType;\n  fromSpecificChain: string | null;\n  toSpecificChain: string | null;\n}\n\nexport interface TradesResponse extends ApiResponse {\n  teamId: string;\n  trades: TradeResponse[];\n}\n\nexport interface PriceResponse extends ApiResponse {\n  price: number | null;\n  token: string;\n  chain: BlockchainType;\n  specificChain: string | null;\n}\n\nexport interface TokenInfoResponse extends ApiResponse {\n  price: number | null;\n  token: string;\n  chain: BlockchainType;\n  specificChain: string | null;\n  name?: string;\n  symbol?: string;\n  decimals?: number;\n}\n\nexport interface PriceHistoryResponse extends ApiResponse {\n  priceHistory: Array<{\n    token: string;\n    usdPrice: number;\n    timestamp: string;\n    chain: BlockchainType;\n  }>;\n}\n\nexport interface TradeExecutionResponse extends ApiResponse {\n  transaction: {\n    id: string;\n    teamId: string;\n    competitionId: string;\n    fromToken: string;\n    toToken: string;\n    fromAmount: number;\n    toAmount: number;\n    price: number;\n    success: boolean;\n    timestamp: string;\n    fromChain: BlockchainType;\n    toChain: BlockchainType;\n    fromSpecificChain: string | null;\n    toSpecificChain: string | null;\n  };\n}\n\nexport interface QuoteResponse extends ApiResponse {\n  fromToken: string;\n  toToken: string;\n  fromAmount: number;\n  toAmount: number;\n  exchangeRate: number;\n  slippage: number;\n  prices: {\n    fromToken: number;\n    toToken: number;\n  };\n  chains: {\n    fromChain: BlockchainType;\n    toChain: BlockchainType;\n  };\n}\n\nexport interface CompetitionStatusResponse extends ApiResponse {\n  active: boolean;\n  competition: {\n    id: string;\n    name: string;\n    description: string | null;\n    startDate: string;\n    endDate: string | null;\n    status: string;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  message?: string;\n}\n\nexport interface LeaderboardResponse extends ApiResponse {\n  competition: {\n    id: string;\n    name: string;\n    description: string | null;\n    startDate: string;\n    endDate: string | null;\n    status: string;\n    createdAt: string;\n    updatedAt: string;\n  };\n  leaderboard: Array<{\n    rank: number;\n    teamId: string;\n    teamName: string;\n    portfolioValue: number;\n  }>;\n}\n\nexport interface CompetitionRulesResponse extends ApiResponse {\n  rules: {\n    tradingRules: string[];\n    supportedChains: string[];\n    rateLimits:\n      | string[]\n      | {\n          tradeRequestsPerMinute: number;\n          priceRequestsPerMinute: number;\n          accountRequestsPerMinute: number;\n          totalRequestsPerMinute: number;\n          totalRequestsPerHour: number;\n        };\n    slippageFormula: string;\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/env.ts":{"lineLengths":[3,35,2,81,40,2,14,3,26,3,51,2,73,67,3,23,92,93,91,2,3,63,2,83,3,23,84,70,40,2,41,47,73,1,3,41,2,61,80,2,18,3,31,61,67,29,93,5,38,128,15,5,1,24,19,49,1,6448],"data":{"version":3,"file":"/Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/env.ts","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/src/env.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AA8B1B;;;;;GAKG;AACH,MAAM,CAAC,MAAM,MAAM,GAAW;IAC5B,KAAK,EAAE,CAAC,GAAG,IAAW,EAAE,EAAE,CACxB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;IACrE,IAAI,EAAE,CAAC,GAAG,IAAW,EAAE,EAAE,CACvB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;IACvE,IAAI,EAAE,CAAC,GAAG,IAAW,EAAE,EAAE,CACvB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;CACtE,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,MAAM,GAAW;IAC5B,mBAAmB,EACjB,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,uBAAuB;IAC5D,mBAAmB,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,SAAS;IACjE,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,MAAM;CACpC,CAAC;AAEF,yCAAyC;AACzC,IAAI,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;IAC7C,MAAM,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,WAAW;IACzB,MAAM,eAAe,GAAqB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;IAC3E,MAAM,OAAO,GAAa,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACvB,MAAM,CAAC,IAAI,CACT,kCAAkC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CACxE,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAChC,MAAM,CAAC,KAAK,CACV,yGAAyG,CAC1G,CAAC;QACF,OAAO;IACT,CAAC;AACH,CAAC;AAED,wBAAwB;AACxB,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;AAC/C,CAAC","sourcesContent":["/**\n * Environment Configuration Module\n *\n * This module handles environment variables, configuration settings, and logging\n * for the Trading Simulator MCP server.\n *\n * @module env\n */\n\nimport chalk from \"chalk\";\n\n/**\n * Configuration interface for environment variables\n *\n * Defines the structure of configuration variables used throughout the application.\n */\ninterface Config {\n  /** API URL for the Trading Simulator */\n  TRADING_SIM_API_URL: string;\n  /** API Key for authentication with the Trading Simulator */\n  TRADING_SIM_API_KEY: string | undefined;\n  /** Debug mode flag to enable additional logging */\n  DEBUG: boolean;\n}\n\n/**\n * Logger interface for consistent logging\n *\n * Provides standardized logging methods with different severity levels.\n */\ninterface Logger {\n  /** Log error messages */\n  error: (...args: any[]) => void;\n  /** Log warning messages */\n  warn: (...args: any[]) => void;\n  /** Log informational messages */\n  info: (...args: any[]) => void;\n}\n\n/**\n * Custom logger implementation with colored output\n *\n * Uses chalk for colorized terminal output and writes to stderr to avoid\n * interfering with stdout which is used for MCP protocol messages.\n */\nexport const logger: Logger = {\n  error: (...args: any[]) =>\n    process.stderr.write(`${chalk.red(\"[ERROR]\")} ${args.join(\" \")}\\n`),\n  warn: (...args: any[]) =>\n    process.stderr.write(`${chalk.yellow(\"[WARN]\")} ${args.join(\" \")}\\n`),\n  info: (...args: any[]) =>\n    process.stderr.write(`${chalk.blue(\"[INFO]\")} ${args.join(\" \")}\\n`),\n};\n\n/**\n * Configuration object with environment variables and defaults\n *\n * Loads configuration from environment variables with fallbacks to default values.\n */\nexport const config: Config = {\n  TRADING_SIM_API_URL:\n    process.env.TRADING_SIM_API_URL || \"http://localhost:3000\",\n  TRADING_SIM_API_KEY: process.env.TRADING_SIM_API_KEY || undefined,\n  DEBUG: process.env.DEBUG === \"true\",\n};\n\n// Ensure URL doesn't have trailing slash\nif (config.TRADING_SIM_API_URL.endsWith(\"/\")) {\n  config.TRADING_SIM_API_URL = config.TRADING_SIM_API_URL.slice(0, -1);\n}\n\n/**\n * Validate the environment configuration\n *\n * Checks for required and recommended environment variables.\n * Logs warnings for missing recommended variables and errors for required ones.\n *\n * @returns {void}\n */\nexport function validateEnv(): void {\n  const recommendedVars: (keyof Config)[] = [\"TRADING_SIM_API_URL\", \"DEBUG\"];\n  const missing: string[] = recommendedVars.filter((v) => !process.env[v]);\n  if (missing.length > 0) {\n    logger.warn(\n      `Missing recommended variables: ${missing.join(\", \")}. Using defaults.`,\n    );\n  }\n\n  if (!config.TRADING_SIM_API_KEY) {\n    logger.error(\n      \"Missing required API key (TRADING_SIM_API_KEY). Please provide an API key to use the trading simulator.\",\n    );\n    return;\n  }\n}\n\n// Debug startup message\nif (config.DEBUG) {\n  logger.info(\"Starting environment setup...\");\n}\n"],"sourceRoot":""},"url":null},"file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/env.test.ts":{"lineLengths":[30,63,45,59,43,53,20,22,32,20,46,42,26,24,11,7,21,57,41,51,7,45,48,63,61,7,40,49,48,7,59,55,55,56,51,55,81,9,71,27,49,7,65,54,47,33,44,22,36,67,57,43,7,54,36,47,44,22,34,62,53,46,7,61,28,48,35,63,53,39,64,27,42,7,3,7904],"data":{"version":3,"file":"/Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/env.test.ts","sources":["file:///Users/andrewhill/Intern/mcp/trading-simulator-mcp/test/unit/env.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport { config, validateEnv, logger } from '../../src/env.js';\n\ndescribe('Environment Configuration', () => {\n  // Save original environment variables and stderr.write\n  const originalEnv = { ...process.env };\n  const originalStderrWrite = process.stderr.write;\n  let output = '';\n\n  beforeEach(() => {\n    // Reset captured output\n    output = '';\n\n    // Mock stderr.write to capture output\n    process.stderr.write = ((str: string) => {\n      output += str;\n      return true;\n    }) as any;\n  });\n\n  afterEach(() => {\n    // Restore environment variables and stderr.write\n    process.env = { ...originalEnv };\n    process.stderr.write = originalStderrWrite;\n  });\n\n  it('should have default API URL', () => {\n    // Test real configuration without mocks\n    expect(config).to.have.property('TRADING_SIM_API_URL');\n    expect(config.TRADING_SIM_API_URL).to.be.a('string');\n  });\n\n  it('should have debug flag', () => {\n    expect(config).to.have.property('DEBUG');\n    expect(config.DEBUG).to.be.a('boolean');\n  });\n\n  it('should remove trailing slash from API URL', () => {\n    // Test directly by modifying the config object\n    const originalUrl = config.TRADING_SIM_API_URL;\n    config.TRADING_SIM_API_URL = 'http://test.com/';\n\n    // Manually trigger the slash removal logic\n    if (config.TRADING_SIM_API_URL.endsWith('/')) {\n      config.TRADING_SIM_API_URL = config.TRADING_SIM_API_URL.slice(0, -1);\n    }\n\n    expect(config.TRADING_SIM_API_URL).to.equal('http://test.com');\n\n    // Restore original\n    config.TRADING_SIM_API_URL = originalUrl;\n  });\n\n  it('should log warning for missing recommended vars', () => {\n    // Temporarily unset env vars to test warnings\n    delete process.env.TRADING_SIM_API_URL;\n    delete process.env.DEBUG;\n\n    // Call the real validation function\n    validateEnv();\n\n    // Verify warning was logged\n    expect(output).to.include('Missing recommended variables');\n    expect(output).to.include('TRADING_SIM_API_URL');\n    expect(output).to.include('DEBUG');\n  });\n\n  it('should log error for missing API key', () => {\n    // Ensure API key is not set\n    delete process.env.TRADING_SIM_API_KEY;\n\n    // Call the real validation function\n    validateEnv();\n\n    // Verify error was logged\n    expect(output).to.include('Missing required API key');\n    // Verify function returned (implicitly void)\n    expect(validateEnv()).to.be.undefined;\n  });\n\n  it('should log debug message when DEBUG is true', () => {\n    // Set debug to true\n    const originalDebug = process.env.DEBUG;\n    process.env.DEBUG = 'true';\n\n    // Call a function that would trigger the debug message\n    logger.info('Starting environment setup...');\n\n    // Check output has the message\n    expect(output).to.include('Starting environment setup');\n\n    // Restore original\n    process.env.DEBUG = originalDebug;\n  });\n});"],"sourceRoot":""},"url":null}}}